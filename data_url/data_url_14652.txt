Based on recent updates of pulse program representation (especially, schedule block #5679 and frame #5977), a pulse program needs a chain of data processing, i.e. transformation, to conform to the OpenPulse API. This transformation level depends on how the backend compiler is implemented, thus porting concept of passmanager from the circuit transpiler seems to be reasonable approach.
The first attempt has already made by @taalexander:
https://github.com/taalexander/qiskit-terra/tree/pulse-compiler
Now it is good timing to reconsider this great work, while keeping connectivity to the transpiler passmanager.
Necessary transformation chain may look like
This issue is relevant to #6079, but currently transpiler accepts only circuit and schedule attached to it can be internally processed. I see what I wrote above is still different passes .. not necessary to create circuit for transformation. For example
We can create the circuit behind the scene, but creating a junk circuit just for transformation seems to be redundant though schedule execution pass may be deprecated in future. Am I missing something or creating such junk circuit is in the correct direction? Can we directly input schedule to transpiler?
If this can be covered by #6079 I'll close this issue. @ajavadia ?
I agree @nkanazawa1989, now is a great time to reconsider this. If it can be covered by #6079 that would be great, but I believe a lot of infrastructure is missing for pulse transformations from the current DAGCircuit representation.
