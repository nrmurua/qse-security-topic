OpenQASM paper defines builtin math functions: sin, cos, tan, exp, ln, and sqrt.
But an example (rus.qasm) and README uses arccos.
I guess that OpenQASM3.0 extends builtin math functions and provide trigonometric-functions (and others). https://numpy.org/doc/stable/reference/routines.math.html#trigonometric-functions
I think I would rather go the other way and remove most of these from the language. We can always pull them back in through kernel functions.
Other opinions?
I think this makes sense for simplicity right now. We could define a stdclmath.qasm file with these kernels later on, or alternatively readd them to the language at that point?
@hhorii perhaps you can add arccos to address this issue?
I think we should add all three inverse trigonometric functions. This would also address #25.
Since we're talking Specification here instead of Implementation, and since arccos and its pals are algebraically derivable from the base trig functions using operators already admitted in OpenQASM 3 expression syntax, we could punt as follows:
We discussed this at the TSC meeting on September 3rd. Summarizing the discussion below:
There are two places where these functions can appear: in compile-time positions and run-time positions. Compile-time positions include gate definitions and consts. Run-time positions include classical statements that are based on the output of measurement operations.
It is important to have many of these functions built-in to the language, especially given their utility in defining gates. So for compile-time positions, we should include the inverse trig functions like arccos.
For run-time positions we follow the same philosophy as the rest of OpenQASM: it may be implemented by the vendor, or it may not be. Keep in mind that control hardware in some cases is quite elementary - I've worked in the past with control hardware that didn't even implement multiplication.
tl;dr - we will welcome a PR that adds the inverse trigonometric functions to the list of built-in functions in the OpenQASM grammar.
