Both the NA code and NAwidget code are impossible. Its not surprising the NA is too slow. The code between current point and prepare next point looks like someone made some random tests and then left it as-is, hoping that unittests will fix it. I lost nearly half a day debugging issues that were caused by some unmotivated and uncommented script in the acquisition loop of na (for example, what is so special about point ''-2" that it receives its own 5 lines of code?). I remind you that the NA algorithm can be well-written in 10 lines (especially since the current version has less functionality than it used to). A priori there is also no need to employ a generator spanning over two functions if the code needed to implement it is 5 times as long as it would be without it, especially since it is employed like a normal function. Please make at least an attempt to clean up a bit so debugging and customizing becomes feasible for everyone.
didnt look into the code. despite the recent cleanup of NA code (not much changed in the NA loop, does this mean the code is clean in your opinion?), I still get a lot of 'NA was not ready' warnings in unittests, and last time this came from point '-2'. Have you looked at this warning? Last time it was because point -2 was read out too soon. We have to be careful with this because it may lead to an error (the warning is there to warn you).
OK, I will look into that this week, one thing that might help with readability is to move all the code inside the na module instead of having it spread between the module and the signal_launcher (maybe this should be a general policy to keep the signal_launcher just implement signals, init, kill_timers, and connect_signals)
