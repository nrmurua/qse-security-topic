The recent 0.25 release broke passing in initial_layout as a range in the transpile function. This used to work in previous versions.
Running this code raises an exception
In 0.24 this code would run as expected.
Recent changes to the SetLayout pass to support integer layouts look to have missed the case of range inputs.
This line
Should be
If there is a reason I'm not aware of that you dont want to allow general Sequence-like objects it should be (list, tuple, range)
Strictly this should have been an error to do this ever since #3821 - the initial_layout argument to transpile has never been typed as accepting a range but in practice it worked.  Fwiw, I'd keep SetLayout with a restrictive input format, and just modify _parse_initial_layout in transpile to normalise the input, rather than spreading more normalisation code that would need to be kept in sync further afield.
Also, isinstance(x, collections.abc.Sequence) is almost never correct - subclassing / registering as the ABC Sequence implies the existence of several methods that ABC mixes in to implementors that are almost never required, and many custom things like numpy.ndarray don't implement (index and count are big ones).  If anything, it would be Iterable with immediate normalisation, but really using runtime type-checking that something implements an interface in Python is rarely fully correct because it's fighting how the language was designed and works.  Better just to see if it quacks like a duck; list(initial_layout) is the only that's actually required to work, and that will raise a very understandable error if something is badly typed.
I can take a look at this bug, if someone can assign it to me :)
