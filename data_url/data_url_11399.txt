Function description:
The random classical hamiltonian accepts as input the qubit_register as a List to define a random cost hamiltonian on those qubits. The function's logic randomly either creates an edge between possible pairs of qubits in the qubit_register or omits it.
Unexpected behavior:
For some runs, stochastically, the final hamiltonian ends up having fewer qubits in total than the specified qubit_register. However, if, the mixer_hamiltonian is defined on the original qubit_register it leads to a mismatch in the number of qubits in the QAOA circuit leading to index out of bounds error.
The following is an example of the traceback messages resulting from this error:
Resulting from the following qaoa_circuit_params (Notice the different number of qubits in the cost hamiltonian and mixer hamiltonian) :
Having thought more about this, I realized that the behavior of random_classical_hamiltonian is expected. Since the function necessarily creates a random hamiltonian, it may or may not contain terms containing all qubits in the specified register.
To avoid getting errors like above, users or any defined workflows should carefully set the register of mixer Hamiltonian to match that of Cost Hamiltonian constructed using random_classical_hamiltonian
