Here's a tricky one.
Currently, there's not a good place in the documentation for tasks like:
It would be very beneficial if we could include this kind of information in the documentation. But the nature of this information is not great for manual tracking; it would be far better if it was added programmatically. For example, the documentation generation code could notice that a class has a decompose method and include a blurb saying that cirq.decompose will work on this class.
More importantly, the documentation generation code could iterate over all classes that end with "Protocol" in the protocols module, and make a protocols page that described each of their signatures.
The goal here is a bit fuzzy. We want to make good looking documentation using the information we are already specifying about protocols. The less manual work the better, but where looking-good really requires manual work we should consider putting in the manual work. Finding the right tradeoff is part of this issue.
I think there are many issues here.  Let's make this one about the first issue which is adding to classes that implement protocols the docstrings related to protocols.  This seems pretty reasonable.
The other idea here about giving lists of the protocols seems a bit harder to do automatically and really the api documentation should be doing some of this.  A documentation page that describes all of the protocols however, would be very useful.  I'm going to open a separate issue for that and let's make this one about the first idea (automatically adding protocols to documentations)
My only real worry is that this information would be hidden from people who read the source as documentation.  We could alternatively make a test that checks that the doc string lists all the protocols that are supported and then verifies all of these are covered.
