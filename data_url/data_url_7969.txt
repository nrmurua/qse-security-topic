I have a big matrix which is a QuTiP object. I am trying to run this line of code:
But I am getting the following error:
Here, m_ops is a list with len(m_ops) = 27 and every m_ops[i] is a quantum object of shape
Ok, I can see that I am trying to convert a QuTiP object into a numpy array but this object is so big that I have a memory issue. My question is simple: is there any way to overcome this issue? can I 'cut' the object in smaller pieces to convert it and then put the "pieces back together"?
I really have no idea. Maybe I am not doing in the optimal way but I was working with really smaller matrix until this one and I didn't foresaw this problem.
Any help or reference will be highly appreciated. This is really important for me.
EDIT with the full code:
Another EDIT:
The measurement_settings.txt is a .txt file with the following:

NumPy uses dense array. You simply need such a big memory to store those NumPy matrices. There is no way around it.
It is important to understand what you want to do with those matrices afterwards. Keeping them as dense matrices is just infeasible. Maybe you can try to get the sparse data by Qobj.data and work with that.
I understand there is no way around it. They are 10⁶ x 10⁶  matrices after all =//
But I was hoping I could use the sparse data in some way, but scipy.sparse seems not to work (or maybe I am using it wrong). My matrices are sparse, they contain mostly zeros, I believe 90% of them are zeros, but I need to be able to do some operations like taking traces. If scipy.sparse works, there will be awesome
Qobj also supports tr(). It would be nice for performance reasons to stay in QuTiP if possible. But if you do want to get the raw data, Qobj.data returns you a custom version of scipy's sparse matrix (at least for qutip 4.7). qobj.data.trace() already works for me. You need to use scipy.sparse.csr_matrix(qobj.data) to make it compatible with the default scipy csr matrix before using anything in scipy.sparse.linalg I think.
@BoxiLi has kindly showed how to achieve the desired result. Closing this for now.
