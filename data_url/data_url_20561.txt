In 2019, the ITU-T standardised the multiple algorithms certificates (i.e. hybrid) directly in the X.509 standard. It is based on the expired Internet draft by Truskovsky et al..
I was wondering if you plan on implementing this or if this is the implementation that already exists?
In 2019, the ITU-T standardised the multiple algorithms certificates (i.e. hybrid) directly in the X.509 standard.
At first glance (admittedly without reading all 236 pages...), I didn't find reference to hybrid certs: Can you please point out where this exactly is specified/standardized so we can answer? Also, why is this then not part of a (valid) IETF RFC? For all I know --but I may be wrong-- OpenSSL follows primarily IETF RFCs, not ITU documents per-se, but only when referenced in an RFC. Thanks in advance for specific references.
The only roughly applicable area (9.8) is AFAIK neither implemented in OpenSSL nor oqs-openssl as this seems like a substantial deviation from the current OpenSSL (X.509) code base. In any case, this functionality is not QSC/PQC-specific, so I would not understand why this should be implemented in our project/openssl-fork; this instead should be in the upstream code base.
I was wondering if you plan on implementing this or if this is the implementation that already exists?
Given my questions above, I'm rather certain that this is not existing -- and plans to implement this are not high on our agenda -- certainly not for openssl1.1.1 as that is not gaining new functionality (such as this) upstream.
If you'd like to contribute this, by all means, please do so: we'd surely welcome a PR, please do consider doing this directly in OpenSSL3 (which does move forward with respect to new functionality such as this); if you further know of use cases (applications), please add them in our future directions discussion.
The ITU-T were a bit sneaky, as you said, it's in Section 9.8 called "Alternative cryptographic algorithms and digital signature extensions" (there is also some more relevant info scattered, such as in Section 9.2.2.4 or 9.3.2.1).
Instead of referring to hybrid certificates, they call them "multiple algorithm certificates" and instead of "post-quantum signature", they call it "alternative signature". This all corresponds exactly with the expired Internet-Draft I linked to in my first comment, which is to address the current classical->post-quantum migration.
A timeline published by the ITU-T is found here. In the second to last slide, they specifically say:
New extensions have been added to migrate to quantum safe algorithms
I'll also ask the OpenSSL people! I would definitely love to contribute but my C code is definitely not up to scratch.
I'll also ask the OpenSSL people!
By all means, do so. But be aware that X.509/certs are only a part of this "hybrid"/"composite" signature story: As @dstebila pointed out in #396 there's more (use of) such signatures in OpenSSL (and other protocols) making the topic a bit more convoluted than "just" getting this implemented in X.509 certs (which already will be quite an effort). OK to close the issue?
I've been asking around a little bit and the sense I've gotten is that momentum has somewhat shifted away from this ITU version of composite certificates and that there may be more momentum around the IETF LAMPS drafts under development.
Interesting, thanks for all the feedback! I greatly appreciate it :)
In 2019, the ITU-T standardised the multiple algorithms certificates (i.e. hybrid) directly in the X.509 standard.
At first glance (admittedly without reading all 236 pages...), I didn't find reference to hybrid certs: Can you please point out where this exactly is specified/standardized so we can answer? Also, why is this then not part of a (valid) IETF RFC? For all I know --but I may be wrong-- OpenSSL follows primarily IETF RFCs, not ITU documents per-se, but only when referenced in an RFC. Thanks in advance for specific references.
The only roughly applicable area (9.8) is AFAIK neither implemented in OpenSSL nor oqs-openssl as this seems like a substantial deviation from the current OpenSSL (X.509) code base. In any case, this functionality is not QSC/PQC-specific, so I would not understand why this should be implemented in our project/openssl-fork; this instead should be in the upstream code base.
I was wondering if you plan on implementing this or if this is the implementation that already exists?
Given my questions above, I'm rather certain that this is not existing -- and plans to implement this are not high on our agenda -- certainly not for openssl1.1.1 as that is not gaining new functionality (such as this) upstream.
If you'd like to contribute this, by all means, please do so: we'd surely welcome a PR, please do consider doing this directly in OpenSSL3 (which does move forward with respect to new functionality such as this); if you further know of use cases (applications), please add them in our future directions discussion.
Hi,
I was thinking about addin hybrid certificate support to this repository as part of my master thesis and further research. If anyone was already working on this or if you want to contribute as well, please let me know. I will create a PR for this in the end.
Regards
Fabian
I was thinking about addin hybrid certificate support to this repository as part of my master thesis and further research.
This would be great. Please consider in the back of your mind (and/or to fill the lines in the thesis write-up :) a separation between changes required for the OpenSSL core code and those to "pure" (hybrid/QSC) signature/certificate logic: It would be nice if your work/experience gained (at least on the core logic) in this repo could thus possibly find its way into the upstream OpenSSL logic. Adding the pure sig logic of your work to oqs-provider would then be something I'd be glad to take on if you wouldn't find the time for that.
@fabort Out of curiousity: Are you working (on) the topic above? If so, what's the target date for your thesis?
@baentsch I am starting to work on it every day now. The target date will be mid-July.
@baentsch I am starting to work on it every day now. The target date will be mid-July.
Thanks for letting us know. Feel free to share thoughts/designs/questions any time: This would ease review/integration (if that'd be a goal for you).
