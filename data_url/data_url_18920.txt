There is no description about evaluation order in classical instructions. I believe it is as most of programming languages (such as python)
Parenthesized forms (with ( and )) are necessary for users to control evaluation order.
If assignment is allowed in variable declaration (as shown in many examples), ordering of qubit specifications and variable specifications need to be defined.
Example:  int a = sub(a, b, c) q0, q1;
If sub takes two qubits, q0 and q1 may be its arguments. However, q1 can be recognized a declared variable as int.
I guess that qubit specifications should be weakest. A parenthesized form will be necessary if two qubit arguments are taken as  int a = (sub(a, b, c) q0, q1);.
I agree a section on evaluation order is necessary. What you propose makes sense. We should follow the C evaluation order where it aligns.
The latest ANTLR file supports ordering of classical instructions.
