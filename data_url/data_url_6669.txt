Hi there, I'm trying to use LiQUID to realise the simulation of the 1D Schr√∂dinger equation with the algorithm for example described in  http://arxiv.org/pdf/0709.1704v2.pdf . I have already implemented the time-evolution circuit. As I want to test the time-evolution on different starting states it is important to prepare an initial state  (for example a gaussian wave packet). So far I have not found a way in Liquid to prepare an entangled state, so I wanted to ask whether there is a way to create an entangled state by for example supplying the CVec of such a state, or if the only way is to start at the 0 ket and then convert it to my intended initial state using gate decompositions?
@MinimAI The best way to do this is to create your Ket with as many qubits as you need, and then call Ket.Single(), which will return the CVec that underlies the Ket. You can then prepare the state by modifying the CVec entries, using the Safe property:
cv.Safe(bitPattern) <- Complex(0,7,0,1)
The "carefully" part is that you have to make sure you call Normalize when you're done:
cv.Normalize()
Also, don't do anything with the Ket directly until you're done manipulating the CVec.
Thanks a lot @alan-geller .
