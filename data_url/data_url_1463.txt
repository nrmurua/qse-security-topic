Is your design idea/issue related to a use case or problem? Please describe.
StateVectorStepResult.set_state() and DensityMatrixStepResult.set_state() allow replacing the running simulation state with a new one. This ends up requiring a fair amount of code overhead to maintain. But I'm not sure this if this is a useful function, as it seems a user could just start a new simulation on the remaining circuit and the existing state. I'm guessing this function is just an artifact of an old design. If so, I think we should remove it.
Describe your design idea/issue
Deprecate this function, take advantage of cleanups it allows (StateVectorStepResult would no longer have to contain a simulator. SimulatorBase.core_iterator should no longer have to set sim_state after yielding the step result).
Obviously if we decide to do #4771 (remove the StepResult classes completely), then this is no longer relevant.
From cirq sync:
Looks like an artefact of old times and should be deprecated. Let's ask around and see if anyone is still using this.
cc @Strilanc @mpharrigan
I don't know anything about this
