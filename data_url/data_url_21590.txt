Documentations in mirny.py about clock selection differs from what is mentioned in the schematics of Mirny v1.1.
The comments in question:
According to the schematics for Mirny v1.1, both 1 and 3 should refer internal MMCX, 2 should corresponds to the front-panel SMA.
Follow-up: #1530 @airwoodix
Thanks. This apparently changed between v1.0 and v1.1. #1530 was developed against v1.0 and I don't have a v1.1 to test. I guess v1.0 support should be phased out anyway, since it won't be compatible with new mezzanine boards. Once tested on hardware, do you want to prepare a PR for this issue?
@jordens: related to quartiq/mirny#3.
The price of hardware changes is software complexity or compatibility. @occheung if you want to fix this, please devise a way that does not break v1.0.
I am only saying the comment is a bit incorrect, especially for Mirny v1.1.
Can we fix it by specifying the versions? Just like the one on Urukul?

@jordens would you be fine to pass clk_sel as a string (e.g. "xo", "mmcx", "sma") that's interpreted according to hw_rev read in init? This would make the interface much friendlier and also applies to Urukul (although for Urukul, one may need to increase the status register width to accomodate for 7 bits of proto_rev and 4 bits of hw_rev). We can of course make this change backwards compatible by checking the argument's type.
Sure. It's going to break if hw_rev isn't updated. With that and the other obvious caveats (forward, backward compatibility), you also need to look at the clocking population options especially on v1.1, different clocks for different channels, etc.
Also probably wise to choose 0b11 and not 0b10 for "mmcx" to disable the XO (c.f. quartiq/mirny#3). Otherwise we have the same issue as on Urukul v1.0.
