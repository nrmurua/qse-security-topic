The functionality of bind_parameters is already available in assign_parameters. Having both methods around is confusing and makes users wonder what the difference is between them.
Adding some historical context from an offline discussion on how we got to this point and what should be decided before moving forward:
Initially bind_ and assign_ were distinct in that bind_ required numeric values and did not support in-place. The thinking at the time was that bind_ should indicate the set of things needed to be done before sending a parameterized circuit for execution on hardware (similarly, execute(…, parameter_binds=[…]) , where as assign_ was more flexible (but mechanically, was entirely a superset of what could be done with bind_).
We had discussed removing bind_ since then, but decided to leave it as there were upcoming changes on the horizon  to both parametric execution on hardware and representation of classical data on the QuantumCircuit that might impact whether or not this was still a distinction we wanted to keep (and if there was any potential interface continuity that could be preserved there).
That said, both of those threads are happening in the now-to-next-handful-of-months timeframe, so I think it’s a good idea to revisit this discussion since in their current state, I agree it’s not especially apparent to users why they would want one over another, or why both exist.
