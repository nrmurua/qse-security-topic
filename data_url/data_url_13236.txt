Dear Mitiq team,
I was wondering if anyone has successfully used Mitiq and batched execute using the Execute function on the qiskit backend. I have a IBMQ account and whenever I use batched Execute according to the following guide https://mitiq.readthedocs.io/en/stable/guide/executors.html. Qiskit interprets this not as a batched job but as multiple single jobs that are being sent, with the next job only being sent when the previous one is done. Given I have 900+ circuits in one job, the bottleneck becomes the queue not so much the computation.  This also makes retrieval of the jobs from the IBMQ backend difficult since I have many separate job IDs that I need to call and this quickly becomes unfeasible.
In this regard, I would like to ask if anyone has successfully managed to batch execute on the qiskit backend with all specified circuits in a qc_list being sent at one go rather than one by one with Mitiq; and if there is a workaround for this. If the answer is yes, I was wondering if there is any documentation available because I can't seem to find any.
As a minimal example, just to illustrate the problem, suppose we have the following sets of executors)
It is difficult to provide a working example since that requires an api key for the backend
Thanks in advance!!! üëç
https://www.loom.com/share/09bd99dc7e1c4453a15a0379945f6314
Hello @Amai-RusseMitsu, thank you for your interest in Mitiq!
If this is a bug report, please provide screenshots and/or minimum viable code to reproduce your issue, so we can do our best to help get it fixed. If you have any questions in the meantime, you can also ask us on the Unitary Fund Discord.
Thanks @Amai-RusseMitsu  for reporting this issue in a very detailed way. The loom link is cool!
I think what is going on here is that the Executor object is indeed calling batch_run_zne a single time as expected but, since in the code of batch_run_zne all the circuits are executed one-by-one, batching is lost from a practical point of view.
This is a sketch of a valid unmitigated batched executor that should work:
However, as you can see, I had to remove the ZNE layer.
The reason is that zne.execute_with_zne() can take as input just a single circuit. I.e. zne.execute_with_zne() doesn't  currently support the application of ZNE to a batch of circuits, it just mitigates a single circuit by running a batch of auxiliary circuits under the hood.
If you want to apply ZNE to a batch of circuits, you probably need to generalize to many circuits the low-level workflow discussed here, in which circuits are first folded, then executed (possibly with batching) and finally the noise scaled expectation values are extrapolated.
