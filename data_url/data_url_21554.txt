Numerically Controlled Oscillator (NCO) is not working.
The NCO upconversion set_nco_frequency() does not change the generated frequency. Instead the frequency remains as it were with set_nco_frequency(0). No error is raised.
tone at 320 MHz
tone at 120 MHz
Using Artiq master & Phaser master gateware / firmware.
ARTIQ version: ARTIQ v6.0.dev+66.ga8c5ad3b
The nco and multipliers need to be enabled and the dac configured correctly. See the datasheet.
The nco and multipliers need to be enabled and the dac configured correctly. See the datasheet.
Thank you for the reply. Could you circulate the correct dictionary that needs to be passed in the device_db in order to enable the nco/ multipliers and to configure the dac?
@jordens can you post the code you used to test the NCO operation?
@ibes-26 it looks like we need, at a minimum:
we may want to also add 3dB gain in the QMC
The nco and multipliers need to be enabled and the dac configured correctly. See the datasheet.
After some time reading the source, am I understanding correctly that:
If so, we may avoid future support questions by mentioning this in the docs.
Comparing to the programming example in the data-sheet, there seems to be an error in the NCO register programming.
This NCO frequency...

... is programmed as ...

In the coredevice driver, the most and least significant 16 bits seem to be swapped.

Beyond the swapped bits in set_nco_frequency_mu(), the NCO freqeuncy does not update when set via set_nco_frequency(). However, the NCO does work when set via the device_db.
Fixing #1650, I'm now able to test the set_nco_frequency() method. It seems like the bit-swap may be an error in the data-sheet. The current method works as intended (after clearing sif_sync manually).
@jordens I assume the phaser gateware does not swap the NCO registers behind the scenes?
Comparing to the programming example in the data-sheet, there seems to be an error in the NCO register programming.
This NCO frequency...

... is programmed as ...

In the coredevice driver, the most and least significant 16 bits seem to be swapped.

What a weird suspicion. Why would you think that?
The code looks correct. phase_addab MSBs are in 0x15. See the datasheet in multiple locations:


