Hi I wrote a code to run 5 quantum circuits in parallel but it doesn't compile because of some error thrown by backend.run() function. I am copying the code and the error stack. The issue is that there is a complex number where there should be a real number. It is not a precision issue since I printed the complex numbers and the imaginary parts were quite big (of the order of 1e-1). Attaching the code snippet and the error stack
Attaching the code in the zip file. The file contains the code. Just unzip all of them in the same directory and call the 'run_quantum()' function in forwar_prop_WBC.py to replicate the error
The qc.initialize function should initialize the quantum bits having complex co-efficients without any problem. However an error is raised. The error stack is as follows:
File "", line 1, in 
run_quantum()
File "/home/siddharth/windows stuff/siddharth/drive D/quantum_circuit_WBC/forward_prop_WBC", line 211, in run_quantum
instant.test()
File "/home/siddharth/windows stuff/siddharth/drive D/quantum_circuit_WBC/forward_prop_WBC", line 202, in test
test_loss = self.one_forward_pass(5);
File "/home/siddharth/windows stuff/siddharth/drive D/quantum_circuit_WBC/forward_prop_WBC", line 107, in one_forward_pass
error_class_0 += self.forward_pass_test(t0_qubits[batch_sizei:batch_size(i+1),:])
File "/home/siddharth/windows stuff/siddharth/drive D/quantum_circuit_WBC/forward_prop_WBC", line 172, in forward_pass_test
jobs = backend.run(qobjs)
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/qiskit/providers/aer/backends/aerbackend.py", line 87, in run
aer_job.submit()
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/qiskit/providers/aer/aerjob.py", line 74, in submit
validate_qobj_against_schema(self._qobj)
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/qiskit/qobj/utils.py", line 41, in validate_qobj_against_schema
qobj.as_dict(), 'qobj',
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/qiskit/validation/base.py", line 358, in as_dict
return self.to_dict()
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/qiskit/validation/base.py", line 334, in to_dict
data, _ = self.schema.dump(self)
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/schema.py", line 521, in dump
**kwargs
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/marshalling.py", line 138, in serialize
index=(index if index_errors else None)
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/marshalling.py", line 62, in call_and_store
value = getter_func(data)
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/marshalling.py", line 132, in 
getter = lambda d: field_obj.serialize(attr_name, d, accessor=accessor)
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/fields.py", line 252, in serialize
return self._serialize(value, attr, obj)
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/fields.py", line 452, in _serialize
update_fields=not self.__updated_fields)
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/schema.py", line 521, in dump
**kwargs
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/marshalling.py", line 115, in serialize
for idx, d in enumerate(obj)]
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/marshalling.py", line 115, in 
for idx, d in enumerate(obj)]
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/marshalling.py", line 138, in serialize
index=(index if index_errors else None)
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/marshalling.py", line 62, in call_and_store
value = getter_func(data)
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/marshalling.py", line 132, in 
getter = lambda d: field_obj.serialize(attr_name, d, accessor=accessor)
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/fields.py", line 252, in serialize
return self._serialize(value, attr, obj)
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/fields.py", line 452, in _serialize
update_fields=not self.__updated_fields)
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/schema.py", line 521, in dump
**kwargs
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/marshalling.py", line 115, in serialize
for idx, d in enumerate(obj)]
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/marshalling.py", line 115, in 
for idx, d in enumerate(obj)]
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/marshalling.py", line 138, in serialize
index=(index if index_errors else None)
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/marshalling.py", line 62, in call_and_store
value = getter_func(data)
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/marshalling.py", line 132, in 
getter = lambda d: field_obj.serialize(attr_name, d, accessor=accessor)
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/fields.py", line 252, in serialize
return self._serialize(value, attr, obj)
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/fields.py", line 569, in _serialize
return [self.container._serialize(each, attr, obj) for each in value]
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/marshmallow/fields.py", line 569, in 
return [self.container._serialize(each, attr, obj) for each in value]
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/qiskit/validation/fields/custom.py", line 96, in _serialize
return float(value.evalf())
File "/home/siddharth/anaconda3/lib/python3.6/site-packages/sympy/core/expr.py", line 283, in float
raise TypeError("can't convert complex to float")
TypeError: can't convert complex to float
It's not a precision issue for sure. I checked for that. Quite clueless otherwise. Kindly suggest some solutions. [codes.zip](https://github.com/Qiskit/qiskit-terra/files/3812773/codes.zip) 
The codes are in the file 'codes.zip' . Link at the bottom of the 'suggested solutions' section.
This looks related to #3282
Which version of qiskit are you running? I ran the code you provided against the current master branch and I did not get any error.
These are the versions of all the qiskit elements that are present in my system:
'qiskit': '0.11.1',
'qiskit-terra': '0.8.2',
'qiskit-ignis': '0.1.1',
'qiskit-aer': '0.2.3',
'qiskit-ibmq-provider': '0.3.1',
'qiskit-aqua': '0.5.3'
Please try running pip install --upgrade qiskit to update your modules to the most recent versions.
ping @siddharthdangwal ?
I'm closing this issue because inactivity. Please reopen if still valid!
