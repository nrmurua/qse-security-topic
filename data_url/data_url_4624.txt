If you try to control a gate by the same qubit twice, the kernel dies. Maybe a check can be implemented that raises an error instead.
A very forced example, but the same happens if there are 2 repetitions. (The code seems to handle 1 repetition with no problem which shouldn't be the case.)
register_1 = [i for i in range(5)]
register_2 = [i for i in range(5)]
ancilla = 5
circuit = Circuit(6)
circuit.add(gates.X(ancilla).controlled_by(*(register_1+register_2)))
circuit()
Maybe an error can be raised if there are repetitions inside the controlled_by() gate. Maybe even better at the level of circuit creation instead of circuit execution.
Thanks for spotting this. I will open a PR that improves invalid qubit errors in general as there might be other places where similar problems occur (eg. using the same target qubit twice). The errors will be raised during gate creation.
If you notice any other segmentation faults / kernel dying please let as know as this shouldn't happen. Errors should be raised instead.
