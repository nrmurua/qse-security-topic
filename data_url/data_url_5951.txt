During Rabi experiment using FakeValencia() as backend, got error during function "calculate_channel_frequencies()" in pulse_system_model.py script. It fails when checking channel of type "U".  u_channel_lo (UchannelLO(1, [1.0, 0.0])) for example.
FakeArmonk() does not have Uchannel so the error is not visible when executing the tutorial Qiskit Aer: Pulse simulation of a backend model.
Run tutorial Qiskit Aer: Pulse simulation of a backend model using FakeValencia() as backend or any other fakeBackend() with Uchannels
"u_channel_lo" values for Real backends are complex ..compared to  "u_channel_lo" values for FakeBackend() that are not. The code cannot handle list when there is no complex value
The model from real backend ibmq-valencia gives :
[UchannelLO(1, (1+0j))]
[UchannelLO(0, (1+0j))]
[UchannelLO(2, (1+0j))]
[UchannelLO(3, (1+0j))]
[UchannelLO(1, (1+0j))]
[UchannelLO(1, (1+0j))]
[UchannelLO(4, (1+0j))]
model from FakeValencia() gives
[[UchannelLO(1, [1.0, 0.0])],
[UchannelLO(0, [1.0, 0.0])],
[UchannelLO(2, [1.0, 0.0])],
[UchannelLO(3, [1.0, 0.0])],
[UchannelLO(1, [1.0, 0.0])],
[UchannelLO(1, [1.0, 0.0])],
[UchannelLO(4, [1.0, 0.0])],
[UchannelLO(3, [1.0, 0.0])]]
[UchannelLO(3, (1+0j))]
This looks like it could be a bug with terra's fakebackend. The BackendConfiguration object expects the UchannelLO objects to be complex. The list of [real, imag] is how IQX sends the information over the wire in json, but the fake backends should be converting that from their in-repo json snapshots to complex before constructing the UchannelLO objects. Which version of terra are you using 0.15.1?
Yep, i use terra 0.15.1.
Qiskit/qiskit#5410 fix the wrong instantiation of UchannelLO objects in FakeBackends.
Closing as has already been merged into master.
