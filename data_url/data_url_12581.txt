There is much duplication between layer input checks, would simplify testing if this was abstracted to a separate function
Should also iterate over backends in the layer input tests
Basically, this should change layers to enforce the appropriate data shapes, rather than relying on backend error messages propagating upwards
Could you try and nail down what the core issue is here ? I'm having some trouble following what each of these things have to do with one another.
Re your points:
We probably could have seperate functions that do keras init sanity checks and type checks etc.
We don't need to iterate over backends in the layer input tests since the errors and functionality we are testing should not depend on the backend at all (We do this at the op level, which is what keras layers turn into once they get crawled by the autographer).
Shape checking is something that belongs at the op level. Shape inference contexts use these when linking tf.functions together. There is no need for us to have duplicate shape error checks (nor can these checks be completely done at the keras level since the graph is still missing some information at this point. Only once it starts running do you have ALL the needed shape information), but I agree sometimes discerning whether or not an error is supposed to come from the keras level or the op level can sometimes be tricky.
Separate functions make sense here because the boilerplate on the circuit executor layers is not simply error checking, but expansion of various possible inputs to common types and shapes.  Since this code should be identical for all 4 executor layers for their inputs, symbol_names, and symbol_values arguments, it would be better practice to have the code stand-alone.
Currently the sampled_expectation layer tests have error tests that are specific to the python backend here.  Currently it does depend on the backend, not just the op, for example the "bytes-like" regex.
I agree the full shape checking belongs in the op.
Offline discussion that cleared things up:
Has this been resolved now that we have input_checks.py in layers ?
This issue has not had any activity in a month. Is it stale ?
