Since JAX wrapper is not so straight-forward, @quantshah has suggested writing our own light-weight JAX-compatible custom functions. We have started off with basic fidelity function already. I am opening this issue to discuss what other functions we may be needing. I think we can probably write our JAX compatible versions of matrix exponentials, to begin with, followed by the displace operator?
In the meantime, it seems that Pytorch shall be easier to interface with, rather than JAX. So, I shall be exploring that in the meanwhile.
Starting QuTiP functions we would need for most hamiltonians to get started:
Fidelity between two density matrices
And expect function
@quantshah, for displace function, are we going to make our own class-based API here, or move on with the functional paradigm that Jake suggested on the core repo?
Further functions to add following the discussion with @quantshah
Closing this on #22
