Currently, Windows support in ARTIQ relies on Conda and Visual Studio. These two software packages are very problematic:
By comparison:
The main drawbacks of MSYS2, as far as I can tell, is some packages are missing (e.g. quamash, pyqtgraph) and there is no environment support (but do those actually work reliably with Conda anyway?).
It seems to me that a saner strategy is to fix whatever MSYS2 issues there are instead of continuing to invest resources into Conda/Visual Studio. Lots of money has been poured already into Conda (Continuum Analytics, NumFocus) and VS (Microsoft) with such a shoddy final result, so those tools seem like a dead-end to me.
So what I would like to support as installation methods is:
Oof.  As horrible as it may be in various ways, Conda is definitely a de-facto "standard" for a lot of people using Python for scientific work.  This is not saying that this is the best or "right" way to do it, but that I think a large share of physicists using Python are doing so through Conda.  It's kind of like Powerpoint, or Word.  They are not the best, and they have irritating features, but they are pretty much universal.  One has to be careful not to throw out the baby with the bathwater.
I agree that there are lots of issues with Conda, and plenty with Visual Studio too.  However, before we decide to change over to something else, I would want to know exactly how things would work.  For example, having environments in Conda is useful for being able to install a new version of ARTIQ to test without having to remove/destroy the current working version.  Is this something that would be addressed?  I think this is a very standard occurrence.  How much time is going to be spent re-inventing various wheels, bringing in packages that are missing, dealing with all the yak-shaving that inevitably will occur with MSYS2 as well?  MSYS2 has almost 400 open issues on Github right now -- the point being, it's being developed and debugged and has its own idiosyncracies that need fixing, and so it's not a priori clear to me that one won't end up facing problems there too (albeit different ones from Conda or Visual Studio).
NIST pays a maintenance contract that specifically calls out maintaining Conda packages for Windows.  The rationale behind this is that, despite that fact that Conda is frustrating and complex for the people packaging ARTIQ, it generally works fine on the user end, and it makes it much easier for users to get going and to operate.  Because it is a feature for users, but a problematic/time-consuming process for those doing the development and CI work, it makes sense for the users to pay the developers for their time and effort in this direction.  If the state of Conda has become dramatically worse (doesn't seem like it's worse, just more of the same?) then the terms of such a maintenance contract can be renegotiated.
To be clear: I am open to the MSYS2 proposal for Windows.  I am just hesitant to throw all our effort into a new method of doing things until there is more information about what the roadblocks will be, and most importantly how it will impact ARTIQ users.  I think it will require some further thought and demonstrations to show that it would in fact do all the things we would like it to do, and more reliably than the current solution.  Again, for sad IT policy reasons, it's important to maintain a Windows version of ARTIQ.
A few bits of information:
MSYS also has straightforward benefits for users, such as speed and reliability.
A bit hacky but this works (mostly):
https://gist.github.com/bparker06/260209ff3260c9b78b6ea2769ed13a69
followed with https://wiki.archlinux.org/index.php/offline_installation_of_packages
ARTIQ browser running in MSYS without Conda:

(IIRC the "uncaught exception" error is a Python 3.8 problem)
A few questions:
The main drawbacks of MSYS2, as far as I can tell, is some packages are missing (e.g. quamash, pyqtgraph)
How hard is it to add them?
Yes.
With WSL if you want a GUI you need to install a X server on the native Windows side, which is cumbersome, slow, buggy, and with poor usability. AFAIK this has not been addressed in WSL2.
The main drawbacks of MSYS2, as far as I can tell, is some packages are missing (e.g. quamash, pyqtgraph)
How hard is it to add them?
Those two are straightforward.
Could you just run through, in lay terms, what the following would look like in this future MSYS2 utopia:
With WSL if you want a GUI you need to install a X server on the native Windows side
Or leave the GUI on windows and just run the Master in WSL?  Sounds hacky though.
We could probably make a modified MSYS installer that includes the ARTIQ packages. Then it's a traditional Windows GUI installer; it would also be self-contained and not require an internet connection.
If you already have MSYS, add our package source and then pacman -S artiq.
pacman -Syu in a MSYS shell.
MSYS can be uninstalled from the Windows control panel.
It also seems you can make and restore backups of the MSYS state: https://www.msys2.org/wiki/MSYS2-reinstallation/ (see "Reversing the procedure")
MSYS also has straightforward benefits for users, such as speed and reliability.
Regarding reliability: for example, pacman does not break with useless error messages such as the one below, which are very common with conda and also non-reproducible and unpredictable due to conda's free-for-all reliance on anaconda.org.
Here is also one of many examples of nonsense from the Conda dependency solver. This kind of scenario is also likely to occur on user machines. Pacman does not do that.
I understand that there are many issues with Conda.  I am not wedded to Conda as the solution.  My concerns are basically along the lines of what David has said:
conda's free-for-all reliance on anaconda.org.
Is this not fixed by just keeping an appropriate set of packages in the m-labs channel so that they are not randomly broken by changes elsewhere?  And when installing ARTIQ, one puts the m-labs channel at highest priority?  I may be misunderstanding something here.  But if MSYS is going to require M-Labs providing additional missing packages already...
Is this not fixed by just keeping an appropriate set of packages in the m-labs channel so that they are not randomly broken by changes elsewhere? And when installing ARTIQ, one puts the m-labs channel at highest priority?
No, for example, there would be a problem if the user wants to install something that depends partially on packages found in the m-labs channel and partially on others.
I may be misunderstanding something here. But if MSYS is going to require M-Labs providing additional missing packages already...
We have already been providing additional missing packages for Conda, and even more so in the past (pyqtgraph, levenshtein, pygit2, etc.)
And it looks like packaging and maintaining something for MSYS2 would be 1000x less trouble than for Conda anyway.
Thanks for answering the dumb questions @sbourdeauducq
The main drawbacks of MSYS2, as far as I can tell, is some packages are missing (e.g. quamash, pyqtgraph)
We could probably make a modified MSYS installer that includes the ARTIQ packages.
What would a proof of principle that all this works as advertised take?  Is it reasonable to give it a go and see if people like it, or would it require new contracts and/or significant development time before we'd have the whole picture?
https://packages.msys2.org/search
They are updated and maintained.
For dirty installations, pip is available.
For making a Pacman package, consider that the student won't be dealing with a constant stream of toolchain bugs as they would with Conda, and instead will use a much more solid and consistent packaging system.
@sbourdeauducq thanks for your answers.  I am willing to give MSYS2 a try as the new method for installation on Windows.  I suggest we do a trial run (public beta?) and have people test it to make sure it meets their needs.  If it works and we decide to officially shift away from conda, then we can update the maintenance contract language accordingly.
Do you have a sense of the breadth of the Windows ARTIQ user base, and/or a good method of contacting groups?  Making sure that current Windows ARTIQ users have a chance to weigh in, and to participate in a beta test, will be crucial.
I just spotted this Mamba business: https://medium.com/@QuantStack/open-software-packaging-for-science-61cecee7fc23
It seems to address some of the issues with Conda mentioned in the top post (tagline: "making Conda fast again").  No idea if it's suitable for us or if you've already taken a look @sbourdeauducq.
Looks good! I just think they're giving conda too much credit - the conda dependency solver is anything but "very efficient", and it's not even correct - but at least they're using the halfway-decent RPM solver in Mamba now.
I would still like a way to get rid of Visual Studio which is really one nasty piece of junk; and ideally we could cross-compile everything on Linux using mingw (MSYS2 also does not allow that, sadly)...
Dashboard, master and applets working... (The errors in the log are due to the yet incomplete NAC3 port of ARTIQ and are not specific to Windows)

NAC3 itself is cross-compiled with mingw from Linux; no more VS at all. Installation is fairly messy at the moment but it looks fixable.
Cool!  Keep us updated as things continue to progress.
Just ran into this issue. We actually use mamba on some windows machines (and linux conda CI testing) for a few months, it seems to work fine and solves environments much faster than conda. We have not yet seen any dependency solve issues.
ARTIQ with NAC3 can now be installed automatically with MSYS2 (just add the https://lab.m-labs.hk/msys2 repos and then pacman -S mingw-w64-x86_64-artiq). From a cursory test, major ARTIQ features are OK.
One major advantage of MSYS2 is it is entirely free from Visual Studio trashware, and software can even be compiled and tested in Wine without roadblocks. This makes development a lot quicker and much less frustrating.
