Would it be worthwhile to write something to decompose a matrix into planar rotations? This would allow you to express a matrix
as a product of a diagonal matrix and a set of unitary rotation matrices.
Unless I misunderstand your purpose, I think the built-in function Eigensystem basically does this already. Every unitary matrix is normal and well-conditioned, so it should be a pretty well behaved decomposition.
D'Alessandro talks about it in Section 5.2 of Intro to Quantum Control. Planar rotations are matrices of the form below.
In SU(2), only one of these matrices exists, but there are more rotations possible in SU(n). I was looking for something that would take any unitary and express it as a product of these matrices.
I've tried to code something like this, and it would take work. I don't need it for my project, and I'm not sure what the returns would be for coding this in.
