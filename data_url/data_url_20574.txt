I have a question about the "user time" in s_time command:
When I was testing TLS handshake with certificate signed by RSA3072 and certificate signed by ECDSAP256, I found that handshake with RSA certificate has a better performance than handshake with ECDSAP256 certificate. While this result is not as my expect because ECDSA should have better performance than RSA in theory. I check the result and I found that handshake with RSA in fact connect less times than handshake with P256 but they have a smaller "user time". Here is an example:
For P256:
19230 connections in 16.70s; 1151.50 connections/user sec, bytes read 0
19230 connections in 31 real seconds, 0 bytes read per connection
For RSA:
7247 connections in 5.31s; 1364.78 connections/user sec, bytes read 0
7247 connections in 31 real seconds, 0 bytes read per connection
That is why RSA seems perform better than P256
I suspect that this user time is inaccurate so I conduct a further test
I set two Groups of server-client:
Group1 contain a Server1 with a RSA3072 certificate and a Client1 with a ECDSAP256 certificate
Group2 contain a Server2 with a ECDSAP256 certificate and a Client2 with a RSA3072 certificate
The test commands are here:
Both group will be doing mutual authentication, the test result is shown here:
Group1:
5696 connections in 5.46s; 1043.22 connections/user sec, bytes read 0
5696 connections in 31 real seconds, 0 bytes read per connection
Group2:
5652 connections in 23.03s; 245.42 connections/user sec, bytes read 0
5652 connections in 31 real seconds, 0 bytes read per connection
If I looking at the total connection times I think it is correct. These two groups should have a similar performance. However, Group1 has much smaller user time than Group2 and I think that does not make sense.
I am not sure if there is any error in my test so I just post my question here. If the user time measurement is indeed inaccurate, I wonder how should I change the code to make it correct.
Thanks a lot if anyone could help me!
Thanks for this report and analysis. This really seems to be an OpenSSL issue... Suggest to close the issue here and resolve it "upstream".
Yeah sure. Actually the link your provided is also opened by me. I will close this issue and provide more details in that post
Thanks for this report and analysis. This really seems to be an OpenSSL issue... Suggest to close the issue here and resolve it "upstream".
