It's not clear why this is happening since other Bazel/Sanitizer tests (basic, sse, avx) pass. The test failes even on PR that don't touch the C++ code.
Example: https://github.com/quantumlib/qsim/actions/runs/5914985907/job/16076067845?pr=621
Unlike Cirq, qsim runs its entire CI suite on all PRs. This is mostly a function of qsim having far fewer active contributors than Cirq, rather than any technical limitation; if someone is interested in segmenting qsim CI, they are welcome to take it on (though bear in mind that it is not as friendly as Cirq CI).
As for why msan fails and the others don't: msan is a "memory sanitizer test". It's not testing the tests themselves - although it will fail if the tests fail - it's testing whether the memory management in the tests is sound.
@95-martin-orion  so this CI fails because there is an open PR that modifies the C++ code?
@95-martin-orion so this CI fails because there is an open PR that modifies the C++ code?
No - the CI for each PR is self-contained, and should not be affected by other open, unmerged PRs. Given that the PR in question doesn't affect the test, the issue is most likely due to unpinned dependencies advancing to a version which qsim is not compatible with, or which has internal memory leaks. "Dependencies" here could include python dependencies, the C++ compiler, or the sanitizers themselves.
Searching for the error (lsan_init_is_running) finds google/sanitizers#682, which suggests that it may be an LLVM bug.
qsim is no longer my main project, so I don't have the availability to root-cause this. @sergeisakov Do you have bandwidth to investigate this? Otherwise, we would happily accept outside contributions to fix the issue.
I don't really know how to fix this issue. It's not related to the C++ code.
The test breaks at compilation step due to an update to the LLVM library https://bugs.llvm.org/show_bug.cgi?id=27310. fix is to update libc-bin which I added to my PR #623
