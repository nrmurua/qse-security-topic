Hi, I'd like to look at contributing to this project. Any issues I could take up as a newcomer?
Hey @ethankoch4 welcome! There's lots to do, I can give you a short list of issues/projects that are going on right now:
We are currently adding more math ops in here: [Discussion] Adding quantum math features¬†#380 there are lots of unclaimed math ops that we would love to see placed in the codebase. This does require a fair amount of TF knowledge as well as quantum knowledge, but would be really big impact. Would also be great to add the C++ gradient code for pre-existing tfq.math.inner_product etc. In general, one could expect a lot of new library features (outside of tutorials and datasets) to come in the form of new ops.
You could join the existing discussions on quantum datasets here: [Discussion] Dataset integrations¬†#277 .
If you're looking for things a little less quantum intensive:
We are looking to see if we can boost the performance of tfq.convert_to_tensor to leverage multi processing here: [Performance] Boost tfq.convert_to_tensor speed¬†#336
If you enjoy cleaning up code, you might enjoy Cleanup ParameterShift C++ code.¬†#92 .
Hope this helps.
Thanks @MichaelBroughton ! I'm not super familiar with Quantum but I'm here because I want to learn. I'm a stats & ML guy, so hopefully the ramp-up won't be too bad. I'll take a look through these to see what feel most naturally to jump in on first. üôá‚Äç‚ôÇÔ∏è
@MichaelBroughton I am kind of in a different boat, with a sizeable background in quantum physics but with coding experience limited to small chunks of code to satisfy my research needs. Any suggestions on issues to tackle? The issue on math ops seems attractive but there seems to be a lot of people working on it already.
