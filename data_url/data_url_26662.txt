Does anybody has an idea what could cause the following error?
It seems that node_env in your pre-commit cache uses a system-installed node (it says "node_env-system" rather than "node_env-default" as in my case where I don't have any node command) which is most likely an older version (v8 maybe), you could check with node --version.
markdownlint-cli requires node 10 or newer since a couple of month. My guess is that the pre-commit module was updated but it didn't update the node-env itself (since it should then have detected that the required node version is missing and fetched one).
PR #1298 fixes the version of the markdownlint-cli tool and will trigger a reinstall of the required repo.
Can you test after the PR gets merged with pre-commit run -a markdownlint on the master?
@dev-zero There is indeed a system node v8.17.0 installed as /usr/bin/node. Thanks for the patch. Unfortunately, the error persists. I tried to rebuild the pre-commit from scratch, but it creates still a node_env-system folder in ~/.cache.
ok, found the culprit, reported issues against involved projects as linked above, let's see what they say, otherwise we can introduce language_version: ... on our own on the hook configuration which on my system triggered the installation of the specific node version.
In my case, node v8.17.0 comes with openSUSE Leap 15.2 which is the latest release.
ok, but openSUSE also provides node 14, specifically when I do zypper install nodejs on our systems I get:
My guess is node was installed some time ago never updated on system-upgrades.
Thanks! Indeed, version 10, 12, and 14 are available. After the installation of these newer packages, it works (v14.15.0), but it seems that these packages are not installed automatically or by default.
I know, there are some packages where openSUSE provides the old package versions almost indefinitely to avoid breaking consumers (like postgresql major versions since every major version requires a database dump & load), eventually they'll fade out -devel packages of those to avoid people still using them in development before moving them to a separate repo (where they provide support when using SLES or SLED). Also, for SLES/SLED SUSE provides corresponding release notes while for openSUSE they don't necessarily mention it (except for the removal of SUSEFirewall and some other breaking changes).
And the dependency for the nodejs meta-package (without version in its name) is probably such that once one a major version is installed then that one will be preferred, so you have to force the installation of a newer version.
What do you think, should we still add our own language_version: ... with a specific node version if upstream doesn't want to add it or should we leave it at this?
Anything which would produce a more informative error message would be fine. The installation of newer package versions requires admin rights and not all users have such rights, but based on a better error message they know at least what they have to ask their admins for.
Alternatively, you could switch to the cloud powered version where you don't have to worry about package installation.
ok, upstream agreed to solve it by specifying the nodejs language version in their hook config, meaning that from the next update on it will always install (without requiring root permissions) a compatible node version
