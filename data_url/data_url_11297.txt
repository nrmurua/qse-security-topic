I think some reorganization is in order:
If people agree with these changes it would be best to make them before the next version release, and any help would be appreciated.
Fine with me
+1. My only concern is about this breaking some code (looks like only stuff in _conversion.py will be affected though really - is that right?)
Yes this is a breaking change in the sense that you'd need to import stuff from utils instead of ops now, which is why we should do it before the next version.
Indeed, I worry quite a lot about this.
It also might be good to leave in isclose with a DeprecationWarning for the next version (it was eliminated in #265 ).
+1 to all. Honestly though I would recommend leaving the deprecation warnings even longer than a single version - perhaps until we actually need to change them to something else.
But also along these lines we should be careful about how we handle warnings in other contexts (e.g. the h5py import warning from earlier in #175 - we have to make sure to follow proper solutions like @babbush's there).
Moving core functions seems to be pretty tricky. Take normal_ordered for instance. Right now it's in ops and I want to move it to utils. If we want to keep a deprecated version in ops, that version should also be named normal_ordered, which makes the behavior of something like from openfermion import * unpredictable (is it going to import the one from ops or the one from utils?) It might be possible to make this work by doing something complicated in the __init__.py files, but I don't know how.
It seems that what we really want to raise a warning for is simply the statement from openfermion.ops import normal_ordered. I don't know if it's possible to have this behavior though.
Another possibility is to just have the function available from both modules. What do people think of that?
I'm not sure I actually see the issue here - why can't openfermion.ops.normal_ordered just alias to openfermion.utils.normal_ordered? You'd have to remove normal_ordered from ops's init but it should be OK otherwise, shouldn't it?
e: I might've underthought this a little but think it should be resolvable. What I imagine is having normal_ordered in ops call the one in utils after raising the relevant warning.
If we remove it from ops/__init__.py, then openfermion.ops.normal_ordered is no longer valid.
What I'm proposing is that we add to ops/__init__.py the statement from openfermion.utils import normal_ordered. But now that I think of it, that would cause a circular dependency!
My opinion is that we should leave these things where they are for now. If it isn't broken, let's not fix it. Especially not while we're making a bunch of other breaking changes. This is going to drive users crazy.
Sure, let's keep the core functions in place. Is it okay if I just move prune_unused_indices, freeze_orbitals, and linearize_decoder though?
Sure
