While the VMD derivation works nicely so far, could we think about also adding the binary distribution as opt-in? Some plugins are missing (I am missing especially solvate and autopsf) and there is no Optix in memory GPU ray tracing. We are often using VMD with the movie maker plugin to render videos and doing all the ray tracing on the CPU is so much slower. So the correct Tachyon version is missing here and the version of tachyon, where the source code is available, does not support GPU ray tracing.
As all this requires an Nvidia-GPU, Cuda, Optix, AVX2 support and more, is there a way how Nix can detect if a compatible GPU is used on the system?
While the VMD derivation works nicely so far, could we think about also adding the binary distribution as opt-in?
Yes, give it a try. I haven't used VMD much at all.
As all this requires an Nvidia-GPU, Cuda, Optix, AVX2 support and more, is there a way how Nix can detect if a compatible GPU is used on the system?
You mean at runtime?
You mean at runtime?
Preferably while evaluating the derivation. So something besides stdenv.system for the GPU?
No, I don't think there is such a thing. That would have to be a built-in function. I also don't think we really need that feature.
There is 'optAVX' in the config for example, which you could just read from the environment (or have a host specific 'qchem-config'). Then you will get the right derivation on an AVX2 enabled (or not enabled) host.
Adding a enableCUDA field to the config could do the same thing for GPUs.
Closed by #64
