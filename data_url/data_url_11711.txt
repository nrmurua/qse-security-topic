In qmolecule.py, there is a line:
ints_aa = numpy.einsum('ijkl->ljik', mohijkl)
I think this is misleading, because in the fermionic operator construction, it is mentioned two_body_integrals should be in chemist notation [ij|kl].
In fact, this permutation only gives correct results for real molecular orbitals.
The h1 and h2 inputs to FermionicOperator are expected to be in a block spin format i.e. spin up and then spin down. You can see there in the QMolecule how the various integrals coming from the chemistry libraries/programs are converted to this format. So where it talks about h1 being a 2D NxN here N is 2 times the number of molecular orbitals since spin up and spin down are separate. Also the two body ints in this spin form are premultiplied by 0.5 - this is because ultimately h1 and h2 are used for the coefficients of the 2nd quantized Hamiltionan that will be built out.
Does the explanation help? - is the issue here mainly that the docstring in FermionicOperator could be better?
The index rearranging has been there all the time. Here is the earliest version of QMolecule from the first public release in May 2018. https://github.com/Qiskit/qiskit-chemistry/blob/f3dd12a0db9e077b79b373deeb0567d41a42c48f/qiskit_aqua_chemistry/qmolecule.py where you can see this on line 77 (it was rather simpler code back then as we only had closed shell support) Chemistry was in then (now archived) qiskit-chemistry repo which was merged into the aqua repo some time back.
The re-arranging is required by the FermionicOperator - if it's not done then the result when computing the ground state energy (after conversion to qubit operator) is incorrect
