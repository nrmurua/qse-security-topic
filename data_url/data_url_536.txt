We need a general and extensible for Accelerator backends to supply users with custom execution-related information. A simple example of this may be the quantum state from a simulation Accelerator implementation, or perhaps to run a simulation and then to request specific local expectation values. I would still like to keep the interfaces in xacc/ somewhat co-processor type-agnostic, so I propose we provide a new method to Accelerator that enables one to query this type of execution-related information.
Maybe something like
This would let us also return generators of information
This functionality is pertinent to ORNL-QCI/tnqvm#82 and ORNL-QCI/tnqvm#83
@tnguyen-ornl @DmitryLyakh
Yeah, this is a fully dynamic approach how this can done, which looks fine to me. Essentially, each Accelerator implementation is expected to fill in its ExecutionInfo HetMap with the specific execution results. The only thing we need to be careful is what is returned by T to avoid copying large objects, like WaveFunction. As long as we store execution info in the HetMap with shared pointers, it should be OK.
