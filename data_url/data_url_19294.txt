Copying a circuit with the .copy() method alters the attribute .queue.moments which results in a different depths.
Also, when using the copy.deepcopy python module, the copied circuit has the same problem, but the circuit itself was not altered:
Only when setting circuit.copy(deep = True) the copy process works.
In randomized benchmarking (implemented in qibocal) the depth of the circuit is crucial to store, but if the circuit is copied the depth changes, which is bad. And the copy is necessary because the circuit has to be stored via dumping into a pickle file which is only possible if it was not executed. Unfortunately, another bug (see issue #784) also prevents this, which could be linked to this issue.
For now I have solved this problem by removing the shallow copying procedure from circuit.copy(deep=False) and by doing the shallow copies of the queue elements inside the self._shallow_copy function:
This solution is certainly not very elegant, plus I would like you to confirm that it performs a shallow copy of the _Queue class @wilkensJ, @stavros11.
I will also add two more details about the copy error that occurs using copy.copy(self.queue):
If you agree with my solution, I can open a PR.
I am sorry @stavros11, I have only just seen your PR #805!
