Often, people will want to run circuits repeatedly to measure the expectation value of a particular Pauli string. For instance, they might want to measure <X2 Y3 Z4>. Of course, one can use phase estimation to measure that operator directly and obtain 1 / eps scaling but that's not very NISQ. Typically, people will repeat the circuit 1 / eps^2 times and sample the expectation value. To do this, one needs a sequence of single qubit rotations. For instance, to measure X2 Y3 Z4, one must rotate qubit 2 around Y by pi / 2 and rotate qubit 3 around X by pi / 2, then measure qubits 1, 2 and 3.
I am tempted to make something like a "MeasurementRotationGate" which would take as input some specification of a Pauli string and then output the appropriate gates to perform rotations that allow one to sample in that basis. Thus, it would take X2 Y3 Z4 as input, and output a gate which performs the rotations and measurements mentioned above.
First, do people think this is a good idea? I think it would be very frequently used in the context of VQE. If so, how should the Pauli string input be specified? I would be partial to allowing either of the ways that we initialize QubitOperators in OpenFermion; i.e. we either allow them to provide an actual string like "X2 Y3 Z4" or they can give a tuple like ((2, "X"), (3, "Y"), (4, "Z")).
Craig and I have talked about something like this in the past. #941 will need something like this.  There are two places we need to discuss how this would work
Another thing to note is that one can already create such a gate in Cirq that does this, by creating the appropriate composite gate.  @Strilanc comments?
I think this falls under the purview of "displays", which would be special inspection gates that basically say "tell me an expectation value at this point in the circuit". Naively, every display requires its own set of runs of the circuit. But in a simulator you can fill them all in in one pass, assuming there are no measurements present.
Since we've abandoned displays, we should revisit the main gist of this request, which is an easy way to measure in different Pauli eigenstate basis.
This could be
The advantage of 2 is that it allows very compact code
whereas for 3 there is another step of indirection
Of course these are not exclusive, the real question is whether we want to think of PauliString in a way that can be turned into a gate.  I think that is probably good, so would recommend 3 with the helper 2.
Other suggestions?
It would be nice if this produced parameterized rotation gates for the basis change, so that one could potentially measure many different pauli strings as part of a sweep over parameters. There's also #2781 that tries to tackle this in a more general way.
Yes would suggest something like measure_paulis which could take in multiple pauli string like and then produce the circuit along with the parameters.
Chatted on Cirq Cync.
Requirements:
So here's what I'm picturing as the general design:
So has the functionality for measuring Pauli operators been added to Cirq?
Measuring a single observable using a PauliMeasurementGate has been done as part of #4444
Measuring multiple observables using sweeps of parameters has been done as part of #2781
Closing this issue now.
