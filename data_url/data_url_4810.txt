We'd like to add the possibility for users to prepare arbitrary states in the Fock basis. Currently we allow a single mode pure state. We will now extend this to allow the following cases:
I've added three new methods to backends/fockbackend/backend.py that specify the API:
prepare_dm_state
prepare_multimode_ket_state
prepare_multimode_dm_state
@cgogolin can you modify the corresponding Fock circuit simulator in backends/fockbackend/circuit.py so that it implements these functions?
Also you should add new tests for these (see `tests/test_state_preparations.py:test_prepare_ket_state for an example to follow)
I would suggest combining the _multimode_ functions with the corresponding single mode functions, since the 'mode' parameter can uniquely determine the intent. E.g. mode=4 (or mode=[4]) for a single-mode preparation, and mode=[0,4,3] for a multimode preparation.
Yep, that is the plan for the final API. The multimode state preps will probably require new methods in the circuit simulators, which is what @cgogolin will implement. But the final user-facing API will likely combine all functionalities into one method
Resolved by pull request #19
