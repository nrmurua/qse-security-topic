This issue flags the importance of improving how Instrument._all_instruments and Instrument._instances are implemented.
There are cases where closing instrument is important not to forget, otherwise some warning like the ones mentioned in this PR #1875 can start showing up for no good reason.
Anyway, Insrtument._all_instruments is intended to hold weak references to instrument instances in order to prevent multiple connections to the same hardware instrument. It is now implemented via simple dict which requires methods like Instrument.exists and Instrument.find_instance to account for the fact that some of those weak references can be None because instruments may have gotten closed in the meantime. And this seems to be causing weird unnecessary bugs and dirty code.
My suggestion is to consider using the right tools for the job - use weakref.WeakValueDictionary for _all_instruments which will automatically take care of the case where a weakref is "dead". For a usage example see DllWrapper for Alazar driver https://github.com/QCoDeS/Qcodes/blob/master/qcodes/instrument_drivers/AlazarTech/dll_wrapper.py#L95.
This sounds good. For me the main userfaceing bug to solve here would the fact that an instrument is registered even when the setup fails e.g.
this is an important bug, let's see if this weakdict stuff fixes it. Otherwise I'll make a separate issue for this bug.
Another related potential improvement would be to use weakref.finalize rather than __del__ to close an instrument when it goes out of scope
This will be fully fixed by #3699
