Doing ctrl-c, or equivalently kernel->interrupt in a Jupyter notebook does not stop the local_qasm_simulator.  Instead, you must restart the whole Python interpreter to kill the process.
It should be possible to ctrl-c, or equiv kernel->interrupt, a local_qasm_simulator, and have the underlying process terminate.
Are you running with the cpp or python local qasm simulator? Looking at the code for the python version I don't see any reason why it would ignore SIGINT:
https://github.com/Qiskit/qiskit-terra/blob/master/qiskit/backends/local/qasm_simulator_py.py
But looking at the cpp version:
https://github.com/Qiskit/qiskit-terra/blob/master/qiskit/backends/local/qasm_simulator_cpp.py
It subprocess out to run the compiled simulator executable. We probably can work around that by setting our own signal handler (https://docs.python.org/3/library/signal.html#signal.signal ) to exit gracefully on SIGINT (or whatever signal jupyter sends).
This is really more of issue that needs to be cleared up in aer once it is out (@chriseclectic, @atilag).  Probably low priority for terra before then.
I'm hoping that by switching from subprocesses to cython in Aer this will be automatically handled by cython...
@nonhermitian can you give mtreinish@dea9f72 a try? I'm not sure if that will fix what you were observing or not. I was having a hard time reproducing this locally with or without the patch (I might just not have the cpp simulator setup properly or something).
I am actually not sure if it was the cpp sim anymore.  It may have been the py one.  But regardless, the process was still running in the background.  Let me investigate a bit further.
@nonhermitian is this still an issue or can we close
Done.
