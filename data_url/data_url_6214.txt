The simulation of noise becomes extremely slow for a 20-qubit circuit, even though only 3 qubits are active.
Edit: the 3 qubit one is equally slow. That's probably a separate bug.
Aer should be more efficient in simulating sparse circuits. With some recent changes, Terra now embeds a small circuit on the full device and returns a circuit the size of that device. So this is a real example I got trying to simulate the behavior of a small circuit on Tokyo.
This isn't a bug, but rather a limitation of the statevector simulation method. It's also the main reason for why we will be adding a density matrix simulator in the future for small numbers of qubits: you only need a single shot with measure sampling for noisy simulations. With statevector based methods (without branching) you are limited by ideal_time * constant factor * shots / parallel_shot_threads where the factor depends on how many additional noise instructions are inserted into the circuit for each shot, and the type (kraus noise is around 2-3 times as expensive as unitary noise for example). This constant factor could be able to be improved in a couple of ways:
And for the original issue of unused qubits having an optimization pass that
I think we should open separate issues to track each of these for after the current release is done.
A more long term optimization that would be a much larger undertaking is implementing caching and branching for each stochastic operation.
