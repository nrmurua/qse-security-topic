Courtesy of @fionahanington
Say what a sampler is.
Say what a composite is.
'dimod' is not defined anywhere. Suggest you add it to the Glossary.
a D-Wave Micro Client > the D-Wave Micro Client
Id > ID
Note inconsistent casing of "URL" here (here, make both uppercase. Lowercase OK when parm):
URL of the SAPI server. None will return the default url (see configuration). > URL of the SAPI server. None will return the default URL (see configuration).  [and see suggestion below, which affects the second sentence]
Change all "None will return..." to "If unspecified, returns..."
sapi > SAPI  (more than 1 instance)
Can you give an example of an adjacency structure?
bqm is undefined. What is this?  In the definition, case as BQM. Add to Glossary.
Embedding Composite
============================
Can you explain what unstructured samplers are vs. structured?
Contains one key �child_properties� which has a copy of the child sampler�s properties. > Contains one key, child_properties, which has a copy of the child sampler�s properties. [format so redenders as literal - compare with how you've formatted "children" under Composite Properties]
Same point about BQM (this is probably shared content, right?)
Typo: accross
chimera > Chimera
D-WAVE > D-Wave
sub Chimera > sub-Chimera (more than one instance)
shore ?  What is this? I've not heard this term before. Add to glossary
Same point about wording/formatting of the child_properties definition (this is probably shared content, right?)
sub Chimera > sub-Chimera
Do you need to include the sample_Ising methods that other samplers have?
Same comments made elsewhere re methods apply here too (assuming shared content)
Should briefly give context - what is virtual graph and why would you want to use it.
Something like:
The D-Wave virtual graph tools simplify the process of minor-embedding by enabling you to more easily create, optimize, use, and reuse an embedding for a given working graph. When you submit an embedding and specify a chain strength using these tools, they automatically calibrate the qubits in a chain to compensate for the effects of biases that may be introduced as a result of strong couplings.
Also, it's not clear how you will reuse an existing embedding. How is this done?
Parameters:
Problem with the link here (dimod_):
sampler (DWaveSampler) � A dimod_ sampler.
typo in flux_biases description: the the
In this sentence, I think "samplers" should be "samples."  Also, hyphenate flux-bias value:  The number of samplers to collect per flux bias value
Same point re formatting of key names and param names.
same points as above
Note casing of PyPI (see https://pypi.python.org/pypi)
PyPi > PyPI
Suggest change wording re license:
Please note that this package depends on a package dwave-system-tuning which has a proprietary license. To view the license details: >
Downloaded with this package is a dependency called dwave-system-tuning that has a restricted license. To view the license details:
Bad link: D-Wave Ocean. Looks like goes to "todo" page? remove the link for now.
Awkward sentence (verb form reads awkwardly even if grammatically correct). Suggest simplify to:
The field of quantum computing has many domain-specific terms.
I know this is very much a work in progress, so these suggestions are just the minimum to cover the supported tools and features mentioned in this release:
'dimod'
'Ocean tools'
'BQM' ?
'shore' ?
'virtual graph tools' -- Tools that simplify the process of minor-embedding.
'flux biases' -- Offset values with which to calibrate a chain.
Also the glossary should have an entry for "sampler", saying that it's equivalent to a solver, since both terms are used more or less interchangably
For issues that extend outside of the dwave-system scope:
dwavesystems/dimod#129
dwavesystems/docs#8
https://github.com/dwavesystems/ADTT_styleguide/issues/32
https://github.com/dwavesystems/ADTT_styleguide/issues/31
merged changes
