The code
prints out 1 instead of 2?  Actually any number of CNOTs in a row like this seems to not count them?
Oh I see, it combines the CNOTS into one op, CX 0 1 2 1.  So not really a bug, just slightly unexpected.
This is because of automatic fusion of the instructions. If you print the circuit you'll see CNOT 0 1 2 1 which is considered to be one instruction. If you access c[0] you will get that one instruction with the four targets. And c[1] is an error.
Yes, agree it's surprising... there are actually some nice performance gains during simulation from reducing the amount of parsing and the virtual function follows when looking up an instruction, which is why it's done.
