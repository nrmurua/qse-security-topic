want to transpile the same circuits over different initial layouts, and combine all the circuits into one assemble and run.
problem: same circuits on different layout gives same answer in result.get_counts()
my circuits:
they should give different results since they are different experiments
maybe I am doing something wrong, not familiar with transpile.
What are you expecting the results to be? I tried running your experiment on the unitary simulator, and both circuits give the same unitary matrix, and so it is expected that their results are the same.
If the initial layout you have provided isn't compatible with the coupling map, then it will be changed. Also the transpiler may also permute the layout during its processing. If you would like to have more control over what the transpiler is doing, you can use a PassManager, there is a tutorial about it here
This is also possibly related to #2503
Hi, I also include the device coupling map, which is compatible with the initial layout
the circuit is the same but is acting on different pairs of physical qubits, so the results should be different. Also the transpiled circuits look different


but they have the same name, is this intended?
In those images the circuits both measure a qubit that has had the same operations applied to it into a register of the same size, so it makes sense that their output is the same.
I don't think that the names should collide, but I don't run into that issue when I run your code, all my circuit names are unique. Is this something that has happened multiple times?
I am using the circuit as a way to test the physical 2q gates between different pairs on the device. Since the gate fidelities are not the same, they should not give identical answers.
the circuit names are repeated after every 36 elements
The fact you are seeing the same result is due to the circuit names colliding. You are generating 36 circuits in mqc_circuits, and then for each you are generating two circuits with identical names (pair_transpile) and executing them.
When you do
pair_result.get_counts(transpile_list[0]) and pair_result.get_counts(transpile_list[36]) it looks up the circuits by name in the result datastructure returned from backend, so it collides.
So this isn't a bug. You should do either of these:
1- look up by index:
pair_result.get_counts(0) and pair_result.get_counts(36)
or
2- assign unique names to your experiment circuits  by modifying circuit.name
