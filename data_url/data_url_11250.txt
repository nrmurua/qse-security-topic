I'm running some simulations now that involve simulating feedback. I need to do this in a hacky way that involves running a circuit which involves a measurement, getting the output state, and reinitializing the system register again and continuing. If I do enough iterations I eventually get the error "ValueError: State is not normalized instead had norm 1.0000141". This is definitely due to the single precision simulator.
But more generally the single precision is frustrating because numpy defaults to double precision arrays. So whenever I feed the simulator an initial state I need to manually write ".astype(numpy.complex64)". This is showing up all over my code. Furthermore, I find it a bit annoying to see normalizations and expectation values that are things like 1.00000006 instead of just "1".
In short, single precision is just not what users expect, and I think it makes the experience worse. I imagine this is a fairly straightforward fix.
Oh my, this was meant for another open source project. Issue closed!
