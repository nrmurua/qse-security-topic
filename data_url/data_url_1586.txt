Description of the issue
Now with state separation, large number of qubits are possible in simulators. However some checks use np.prod(qid_shape), which can now overflow.
How to reproduce the issue
Run a density matrix simulator on an empty circuit with 59 qubits (on Windows; varies by environment). This should complete, but overflow causes an error when validating the initial state: (assert initial_state < np.prod(qid_shape) --> assert 0 < -1)
The error is in https://github.com/quantumlib/Cirq/blob/master/cirq-core/cirq/qis/states.py, though similar code can be found elsewhere.
Note I haven't found anywhere yet that this is an urgent problem. So far the only times I've encountered it are when I'm testing without the split_untangled_states flag. And the only problem it actually causes is that it throws the overflow error before throwing the out-of-memory error my test was expecting. Still, seems like something worth looking into.
@daxfohl says the solution is to use python bigints
