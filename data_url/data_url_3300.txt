The CompilerClient is pyQuils abstraction around RPCQ and the quilc server. We've already replaced some of it's functionality with the Rust SDK. Namely, get_version_info and compile_to_native_quil.
Two more methods remain to be replaced: conjugate_pauli_by_clifford and generate_randomized_benchmarking_sequence. Once this functionality is added to the Rust SDK, we need to replace them here. At that point, it will likely make sense to refactor or remove the CompilerClient.
These methods have been replaced, and pyquil should no longer create or use a rpcq client directly (only through qcs-sdk-python).
There's opportunity for refactoring and cleanup since we still rely on the rpcq module for message classes, though since qcs-sdk-python is still technically using rpcq itself there may not be a lot of value in removing the dependency.
