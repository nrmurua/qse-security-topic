For non mining nodes state of transactions in mempool are not validated, resulting an invalid transaction to stay in the memory pool. This bug is not observed on the mining nodes, as the code validating the mempool is being triggered on them before creating the next block template.
Rather than continuously checking state of mempool transactions, perhaps it makes sense to poll this periodically?
Or even more simply just modify the stale transaction ruleset to check state and drop rather than recirculating forever? Wouldn't that be more elegant given this is a very rare occurrence (once in 34k blocks so far)?
Fixed in PR #1539
