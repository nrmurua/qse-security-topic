This is not expected to be in scope for 3.0, it's just a tracking issue.
Based on comment chain #340 (comment), in the TSC meeting on 2022-06-10 we discussed limitations of the current/proposed scoping system, which only defines a single flat namespace.  This poses problems for library authors.
Consider two files library_a.qasm:
and library_b.qasm:
So far this is ok, but now if I have my program:
Currently, the way around this is for neither library to actually include its dependencies, and to rely on the user to do that exactly once.  That requires that include statements start with all the outer identifiers in scope (which is the rules as defined by #340).
There's a few other potential ways around that, including:
We briefly discussed these in the TSC meeting on 2022-06-10, but there was no immediate consensus on the direction we would prefer to go.  The problems with multiple libraries are not expected to be so severe in the near term of language usage, and a workaround exists in the form of the user performing the dependency injection by manually writing the necessary includes in their program file.  For these reasons, we elected not to move forwards to a solution to this issue until after the 3.0 release.
