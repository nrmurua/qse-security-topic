The documentation of DAGCircuit still references tuples instead of the QuantumRegisters as input type for wires and qargs. This does not work any more.
An excerpt from the current documentation:
which lists tuples as expected type.
I just took a look at the current master docstring for apply_operation_back() and it is correctly listing the input type as a list of Qubit objects and Clbit objects: https://github.com/Qiskit/qiskit-terra/blob/master/qiskit/dagcircuit/dagcircuit.py#L239-L254 @eddieschoute what do you think we need here? We can update the docstring to include more exposition on the docstring to try and make it clearer (it's a bit terse now). But nothing there looks wrong to me.
If it's just a matter of the hosted documentation and pip release not being up to date, that will get corrected automatically after we release 0.9 with the bit classes. They didn't exist in 0.8.x so the published documentation is correct for the released version.
I checked out the latest version and you're right about apply_operation_back, however, apply_operation_front still has the old description, see https://github.com/Qiskit/qiskit-terra/blob/master/qiskit/dagcircuit/dagcircuit.py#L285.
It also looks like compose_back still uses the old language, see https://github.com/Qiskit/qiskit-terra/blob/master/qiskit/dagcircuit/dagcircuit.py#L437. I suspect this should be qubits or quantum registers that are being connected by edge_map.
Sorry for the slow response. On taking another look at this the edge_map case is actually a bit weird. Looking at the code which actually consumes the argument _check_edgemap_registers() and _check_wiremap_validity() in It looks like the key is still a tuple of (register, index) (although they can be bit classes too because the access patterns from tuples were preserved with deprecated functions on the new classes) but the values are the bit classes (either Qubit or Clbit). I'll update the docs for both compose_back() and apply_operation_front() shortly.
