The MeasurementResult class in Mitiq represents the measured bitstrings obtained in a quantum computation.
At the moment it can only be initialized with an explicit list of bitstrings (one for each shot).
Another compact way of representing measurement results is via a dictionary of counts.
E.g.  ["01", "11", "11", "11"]   can be represented as  --->  {"01": 1, "11": 3 }
This method is used by most quantum software libraries.
It would be good if the MeasurementResult class could be initialized also by a dictionary (instead of a list of bitstrings).
It would be good if the MeasurementResult class could return results as a dicitonar (e.g. with a self.as_dict() method).
It would be good if the MeasurementResult class used always a dictionary for storing data independently from the initialization input type. Storing a dictionary is typically more efficient than storing raw bitstrings and, for a large number of shots, it can make a big  difference.
