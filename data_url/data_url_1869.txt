Is your feature request related to a use case or problem? Please describe.
We need clarity around what python versions we support. As python evolves, we get issues for incompatibility. (see issues labeled with python3.8), and we should have CI tests for the supported python versions.
Describe the solution you'd like
As we depend on NumPy, we could follow their support process of 42 months window: https://numpy.org/neps/nep-0029-deprecation_policy.html
What is the urgency from your perspective for this issue? Is it blocking important work?
P2 - we should do it in the next couple of quarters
No objections at Cirq Cynq!
We have to revisit this policy, as we are committed to be able to run on Google Colab. This forces us to support 3.6 at the moment as their hosted runtime is lagging behind. Eventually that constraint will be lifted, but until then we'll have to take it into consideration.
Also Google internally is running on python 3.6 for now. So at minimum we are tied to support these two systems: Google3 + colab.
@dabacon, does the before-1.0 label mean we plan to drop support for 3.6 before releasing 1.0?
@dabacon, does the before-1.0 label mean we plan to drop support for 3.6 before releasing 1.0?
+1 to this, Google internals were upgraded recently (to Python 3.9, I think) and there's a number of cleanup actions we can take once 3.6 support is dropped.
Colab is now using 3.7.13 AFAICT. Are there any other blockers to dropping 3.6 support?
Now we should be 3.8+ (but blocked by colab, probably). What does the before-1.0 tag mean here?
Bump!
We're still blocked on colab, so I think the only thing we can really do here is write down our intended policy in the docs, something like "cirq supports python versions specified by numpy NEP-29, in addition to the current version used by google colab (3.7)". Other than that I don't think there's much we can do before 1.0.
Let's just document as @maffoo suggested.
