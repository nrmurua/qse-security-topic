I have ran across a circuit called "InnerProduct" in the Qiskit documentation, here: https://qiskit.org/documentation/stubs/qiskit.circuit.library.InnerProduct.html
According to the documentation, this circuit "computes the inner product of two registers". However, I believe this to be blatantly wrong. Is this implementation wrong, or am I missing something?
This circuit is a Boolean function, i.e. it is defined over elements of the field F_2. It computes the inner product of two n-bit arrays. So over F2, the output is either 0 or 1. Since in quantum the circuit has to be unitary (same number of inputs as outputs), you have to choose how to encode this output. This particular circuit is a "phase oracle", i.e. it induces a -1 phase on the amplitude when the output is 1, and no phase when the output is 0. (i.e. the unitary is a diagonal).
You can see that a cascade of CZ gates do these, as this circuit is implemented.

ZZ has the following transfer function:
i.e. when the inner product of two bits is 1, it induces a -1 phase. So this circuit does bit-wise inner product, leaving the original input intact, except inducing a -1 phase when the total inner product is 1. (The total inner product is a Boolean sum over the bit-wise inner products).

Thanks for bringing this up. The documentation of the class needs more explanation. Right now you have to figure this out based on the fact that it is under qiskit.circuit.library.boolean_logic.
