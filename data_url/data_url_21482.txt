llvmlite package version is 0.37.0 after updating artiq through conda. However, llvmlite >=0.38 is needed for calling IRBuilder.call with arg_attrs keyword argument (introduced in #1778).
This bug appears after updating artiq and its dependences using conda install artiq --update-deps. llvmlite 0.37 does not support arg_attrs (https://github.com/numba/llvmlite/blob/release0.37/llvmlite/ir/builder.py#L874-L884).
It prevents experiments using kernel to run, as simple as
The error message when running the above experiment is:
A temporary workaround is to install llvmlite using conda install -c numba llvmlite which installs llvmlite-0.38.0rc1. I am not sure how this affects future updates.
The ARTIQ-7 branch currently does not support Windoze and will not do until the llvmlite 0.38 release and publication of upstream packages, which thankfully should happen next month.
I'm sick to death of a constant stream of Windoze problems such as:
Please consider installing an operating system and kicking Microsoft filthware out of your lab.
NB: MinGW/MSYS2 may be able to create a small bubble of relative sanity on Windoze (#1471).
@sbourdeauducq for all its many and well-documented failings -- and I hear and understand your frustration here -- Windows is the operating system for roughly half of ARTIQ installations, and many users do not have the easy option of using Linux because of various other constraints (including institutional IT policies, which are very hard to change).  NIST has a service contract with M-Labs to pay for Windows-related yak shaving (among other things) to ensure that ARTIQ runs and is supported on Windows with conda installation.  If there are major new problems with ARTIQ on Windows that require much more involved work, please reach out so we can discuss appropriate avenues to have them addressed.  For better or worse, it is critical to maintain Windows support for ARTIQ.
Relatedly, we are running the Zynq branch of ARTIQ 7 on Windows and at last check it was still working.  Does this issue mean there will be challenges upstreaming this into the main ARTIQ repo and master branch?
The llvmlite patches are all merged upstream and will be available in the next release, which is planned soon along with conda packages (in conda-forge and numba channels).
Considering this situation and the problems above which flared up again when attempting to update LLVM or use an updated pre-built LLVM to compile llvmlite, it doesn't seem like a good use of our time to persist in attempting to rebuild llvmlite ourselves.
Eventually the plan is to have NAC3 cross-compiled from Linux using mingw, so we won't have to deal with any of this Visual Studio nonsense anymore. I'm not sure if it could be loaded into official Python and conda Python which are compiled with VS, but with the MSYS2 Python (which they patched to build without VS) it works fine. MSYS2/pacman is a superior package management solution anyway.
Proof-of-concept: https://nixbld.m-labs.hk/build/72484 - entirely cross-compiled on Linux using Nix flakes and without Visual Studio or other particularly low-quality software.
Using it currently requires manual fiddling with libstdc++/libffi/zlib/mcfgthreads DLLs (copying them from the Nix store into where Windows will find them), but otherwise it seems to work. The Python module loads into MSYS2 Python and produces machine code through LLVM.
@fanmingyu212 it works now, but you need to use the numba conda channel to get the latest llvmlite (0.38rc).
In case the conda dependency "solver" craps out on you, these lists of packages work:
https://git.m-labs.hk/M-Labs/nix-scripts/src/branch/master/artiq-fast/windows/conda_noarch_packages-7.nix
https://git.m-labs.hk/M-Labs/nix-scripts/src/branch/master/artiq-fast/windows/conda_win-64_packages-7.nix
