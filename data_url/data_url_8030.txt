Currently the most time consuming part of making releases is managing the change log (#1055 , #1108, #1533). In addition to the time taken, the release manager is often poorly placed to write change log entries for the PRs involved (the PRs might have been merged some time ago, and the release manager might not have been the author).
Towncrier is a Python package used by Python itself and many other libraries to manage the change log.
I propose that we configure towncrier and ensure that each PR adds a towncrier entry.
This includes:
There are a few other tools that do similar things to towncrier, and we could use one of those instead if they are better.
I would recommend that we not roll our own solution. The problem is fairly simple, but writing and documenting our own solution and fixing the inevitable bugs is a lot of work. Plus, I would prefer to have a solution that has already made choices that work, rather than us having to make all of those choices ourselves.
No response
Hey, I can try working on this issue.
@divshacker Thanks! You are welcome to give it a try. The UnitaryHack starts on 3 June, so I might not review anything before then, but you are welcome to start looking at it.
Hi - I think I might have a solution for this issue in #1927.  Setting up the utility was pretty straightforward, but I am not sure on how best to shape the process around using it. There are two issues that I foresee:
A way around this extra step is to reference the issue number, but you may not want that.
I'm not sure what the intended flow is for this and I didn't feel comfortable changing the release process, so perhaps someone can advise?
@trentfridey Thank you for opening the PR. I will review it a bit later, and attempt to answer your first question here once I have.
In answer to your second question, I think the minimal approach, and the one we should take now, is to add running towncrier build to the steps in creating or updating the release branch (i.e. the human doing the release would run it and push the result). Later once we have some experience using it, we can consider automating the release process a bit more somehow.
@trentfridey I merged #1927. Thank you for taking this on and for putting up with out backwards and forwards about what we wanted the solution to look like.
