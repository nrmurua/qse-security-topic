Hello! First of all, very nice package!
One issue I found on Mac OS is ctrl+click on a Mac is mapped to a right mouse click.
In the editor mode this results in boxes appearing when defining vertices and unconnected edges, that don't attach to vertices, see attached snapshots. Any idea of what is the problem here?  I tried several browsers but still same problem :/ Thanks!



A workaround that seems to work for me is to replace ctrlKey for altKey in the file zx_editor_widget.js
I don't have a mac so I can't test for myself, can you see if the following fix works.
Lines 81-85 of zx_editor_widget.js are
.on("keydown.brush", function() {shiftKey = d3.event.shiftKey || d3.event.metaKey; ctrlKey  = d3.event.ctrlKey;}) .on("keyup.brush", function() {shiftKey = d3.event.shiftKey || d3.event.metaKey; ctrlKey  = d3.event.ctrlKey;})
Change this to:
.on("keydown.brush", function() {shiftKey = d3.event.shiftKey; ctrlKey  = d3.event.ctrlKey || d3.event.metaKey;}) .on("keyup.brush", function() {shiftKey = d3.event.shiftKey; ctrlKey  = d3.event.ctrlKey || d3.event.metaKey;})
(i.e. make metaKey a synonym for ctrl)
Then you should be able to use Command+Click on Mac to do the thing that requires ctrl+click on Windows.
Hmm, although looking at other parts of the code in that file, it seems that I would have to restructure it to actually use those local variables shiftKey and ctrlKey, instead of relying on the d3.event.ctrlKey thing.
I don't have a mac so I can't test for myself, can you see if the following fix works.
Lines 81-85 of zx_editor_widget.js are
.on("keydown.brush", function() {shiftKey = d3.event.shiftKey || d3.event.metaKey; ctrlKey = d3.event.ctrlKey;}) .on("keyup.brush", function() {shiftKey = d3.event.shiftKey || d3.event.metaKey; ctrlKey = d3.event.ctrlKey;})
Change this to:
.on("keydown.brush", function() {shiftKey = d3.event.shiftKey; ctrlKey = d3.event.ctrlKey || d3.event.metaKey;}) .on("keyup.brush", function() {shiftKey = d3.event.shiftKey; ctrlKey = d3.event.ctrlKey || d3.event.metaKey;})
(i.e. make metaKey a synonym for ctrl)
Then you should be able to use Command+Click on Mac to do the thing that requires ctrl+click on Windows.
Unfortunately, this didn't seem to work for me, but I did try again what I suggested but this time replacing all ctrlKey with metaKey and it worked now with Command+click, as one would expect. But maybe this is not ideal in other parts of the code.
Great! I can work with that. I can just make all ctrlKey a ctrlKey || metaKey (and update the docs).
Great thanks! A tangentially related observation: In the iPad (which I sometimes use to code quick stuff) is kind of hard to press a key and click at the same time. I checked and the widget ctrl+click works with a trackpad, but not when you press ctrl and touch on the screen (which should in principle be equivalent to a ctrl+click in general). Not sure if there is a quick solution for this.
So it looks like javascript makes a difference between 'click' events and 'touch' events that might be causing this behaviour.
https://stackoverflow.com/questions/11397028/document-click-function-for-touch-device
But it also says that most browsers should fire a click event when you touch the screen.
I see. I am using an app called Juno Connect to run a notebook on a remote server, so it is not precisely a browser.
Perhaps if I try to forward it to the browser it might work. It would be nice to get the app compatibility though! but I understand maybe not a priority.
I also tried to run pyzx in the Juno app (different from Juno Connect) which allows a local version of a code to run, but I couldn't get the package to import


Hmm, the error originates from a call in typing.py, which makes me think that Juno is perhaps expecting an older version of python or doesn't have fully compatibility with mypy?
I just installed mypy 0.782, which runs on Juno (I can import the package).
Juno runs on Python 3.6.6 so maybe there is some incompatibility?
Although Juno only works with pure python packages though (at least this is what they say ), could this be an issue?
I've just pushed a commit that should allow you to use command-click in the editor. Can you test whether it works for you?
Indeed it works. The file wasn't updated downloading from the pip (not sure how pip updates upon new commits), but when I added the file it worked :) Thanks!
Yeah for pip I have to make a separate release for which I want to bunch up a bit more stuff than just pushing a single commit at once.
