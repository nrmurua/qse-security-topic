Description
Trying to run two algorithms in two threads, I found a pernicious performance issue.
To Reproduce
Run this code...
Expected behavior
The "threading" example should run approximately 2x faster than "nothreading".  Right now, it's slower.
Environment:
There's no bug here, unless you consider GIL to be a bug in Python. :)
In short, since both threads are compute-intensive (and reference counting is protected by a global lock), you're seeing no significant improvement in running them in parallel.
Try using multiprocessing.Process instead (drop-in replacement for threading.Thread) -- you'll notice roughly double speed-up (as expected, minus Amdahl's serial overhead).
grumble grumble yeah nevermind
