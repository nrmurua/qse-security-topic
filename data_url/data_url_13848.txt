About the method simplify.to_rg(g, select=None), documentation says that, by default, it minimise the number of Hadamard gates.
How can I personalise the selection criteria?
In particular, I am interested to extract a circuit from a ZX-diagrams obtained from random Cliffords. In such a scenario, if I'm not getting this wrong, I can linearly choose the order of execution of the edges (by first transforming them into CNOT, following the proper rule), so that to get a standard circuit in {CX,H,S}.
I explain this here.
Looking at the code one can see that it works with a lambda function calling graph methods.
I implemented my own function as follows
parity_diagram = lambda v:  set( g.neighbors(v) ).intersection( g.outputs() )
