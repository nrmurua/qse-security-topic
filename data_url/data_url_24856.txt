Dear scQubits Team,
How can I implement a creation and annihilation operator for custom circuits?
I would like to use the composite Hilbert Space feature with my own qubit design implemented in the custom circuits feature. I intend to build semiclassical models of multiple custom qubits and interact with them using QuTiP.
I already posted anÂ [issue related to the same project](#190), which was successfully resolved :-).
Is it correct that this feature is not implemented?
Is there a workaround?
Do you plan to implement such compatibility?
Thank you very much,
Chris
If the bug manifests in unexpected behaviour (as opposed to a crash), confirm that you have consulted the
[API documentation](https://scqubits.readthedocs.io/en/latest/api-doc/apidoc.html)
I checked the read-the-docs and the examples without finding a helpful reference for the problem. Looking deep into the code did not reveal how to solve the issue eighter.
For both options of creating the operators, I get the following error messages:
I would like to implement a coupling between the two qubits in the composite Hilbertspace and drive the system later with QuTiP. Therefore I need the creation and annihilation operators in the custom circuit class.
Hi Chris,
The operator names are not the same for Circuit objects like the other qubit objects in scqubits. To see the list of operators available for a circuit object. You can look at csfq4jj1.operators_by_name.keys() to give you a list of operator names that are available.
And each of that operator can be called like a method to the Circuit object. For example:
Do note that these correspond to the symbols which are used in the Hamiltonian expression printed out by the method sym_hamiltonian().
Hi Chris,
If you are looking for operators that connects different eigenstates of a circuit (e.g. a matrix where only the 01 and 10 entries are nonzero when represented under the eigenbasis, otherwise zero), the current Circuit module does not support this. However you can add this type of interaction by explicitly constructing the matrix and use the Qobj interface as described in the Option 3 here: https://scqubits.readthedocs.io/en/latest/guide/ipynb/hilbertspace.html#Option-3:-Qobj-interface
Thank you very much! You are absolutely right. It was a conceptual error on my side and not a problem with scQubits. Thank you for your constructive advice. I am sorry for cluttering your issues with conceptual questions. Please point me to a better place if there is any.
