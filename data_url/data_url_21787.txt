Status quo:
Synchronization steps and components:
Implementation roadmap:
 1. SYNC_IN pulse generator in Kasli, f_RTIO/f_SYNC integer ratios, align SYNC generator to user defined timestamp, AD9910 register interface to synchronization registers, Urukul SYNC_SEL setting, AD9910 sync RTIO/kernel API, user defined (device_db) SYNC_IN input delays
 2. Automatic SYNC_IN delay tuning from user defined (device_db) starting value (using SMP_ERR, and delay scans)
 3. automatic IO UPDATE delay tuning (either using IO_UPDATE_RET or indirectly with the DRG/IO_UPDATE/"Read effective FTW") and delay application (either to "Sync state preset value" or IO_UPDATE ODELAY)
 4. Phase modes (absolute, relative, coherent) as defined by the existing AD9914 implementation (optional)
 6. Development of unit tests and set up of continuous integration system (optional)
 7. Maintainance of continuous integration system (optional)
the is some proof of principle code of a sync generator (part of 1) in https://github.com/cjbe/artiq/ for driving SYNC from Kasli
We have code for this in production use (minus automatic phase tracking); I'll try and push this somewhere once I have a chance to catch my breath. Anyone interested in this, please feel free to contact me in the meantime.
Funded by multiple groups at Uni Hannover and PTB.
Some example code to show the functionality:
Or:
