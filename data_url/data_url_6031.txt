'qiskit-terra': '0.13.0'
'qiskit-aer': '0.5.0'
'qiskit-ignis': '0.3.0'
'qiskit-ibmq-provider': '0.6.0'
'qiskit-aqua': '0.6.5'
'qiskit': '0.18.0'
I am trying to simulate a 6 qubit circuit which includes a diagonal unitary. The execution throws the error
RuntimeError: Unable to cast Python instance to C++ type (compile in debug mode for details)
Try to run the qasm
OPENQASM 2.0; include "qelib1.inc"; qreg qn[6]; creg c600[6]; u3(1.5612451446602793,-4.907969031244756,1.1905252433360132) qn[0]; u3(2.660763898140738,1.4502461085531029,2.4538734175215016) qn[1]; u3(1.361837461668693,3.25020697912755,0.21207493259282084) qn[2]; u3(1.283744111622058,-1.4575927184184827,-0.7537847686450478) qn[3]; u3(1.876999146887874,4.0772912201476625,1.1831791362348878) qn[4]; u3(2.637846880580308,0.008736918830878793,4.124323339536586) qn[5]; barrier qn[0],qn[1],qn[2],qn[3],qn[4],qn[5]; cx qn[0],qn[1]; cx qn[3],qn[4]; id qn[2]; id qn[5]; barrier qn[0],qn[1],qn[2],qn[3],qn[4],qn[5]; diagonal((1+0j),(1+0j),(1+0j),(0.9998851645343577-0.015154462844337462j),(1+0j),(1+0j),(0.9999668458922691-0.008142918166515927j),(0.9997286126830953-0.023295943482360304j),(1+0j),(1+0j),(1+0j),(0.9998851645343577-0.015154462844337462j),(0.9999813507693169-0.006107218153321957j),(0.9999813507693169-0.006107218153321957j),(0.9998984667022371-0.014249781981309972j),(0.9995676951046427-0.029401069762709897j),(1+0j),(1+0j),(1+0j),(0.9998851645343577-0.015154462844337462j),(1+0j),(1+0j),(0.9999668458922691-0.008142918166515927j),(0.9997286126830953-0.023295943482360304j),(0.9999334619179047-0.011535672363333669j),(0.9999334619179047-0.011535672363333669j),(0.9999334619179047-0.011535672363333669j),(0.9996438171749794-0.026687802154470943j),(0.9998443630604376-0.017642269022657777j),(0.9998443630604376-0.017642269022657777j),(0.9996675545597874-0.025783334936623367j),(0.9991620246793719-0.0409297989076161j),(1+0j),(0.9999754157846933-0.007011977340927129j),(1+0j),(0.9997543203921124-0.022165262401004148j),(1+0j),(0.9999754157846933-0.007011977340927129j),(0.9999668458922691-0.008142918166515927j),(0.999540684511799-0.030305445149080342j),(1+0j),(0.9999754157846933-0.007011977340927129j),(1+0j),(0.9997543203921124-0.022165262401004148j),(0.9999813507693169-0.006107218153321957j),(0.9999139433371798-0.013118914585100106j),(0.9998984667022371-0.014249781981309972j),(0.9993369618822374-0.036409292989277114j),(0.9992607708724149-0.03844361839716994j),(0.9989666390493721-0.045449467174012846j),(0.9992607708724149-0.03844361839716994j),(0.998163159988632-0.060583050777493104j),(0.9992607708724149-0.03844361839716994j),(0.9989666390493721-0.045449467174012846j),(0.9989145980345333-0.046579242517527736j),(0.997636743954934-0.06870900312911933j),(0.9987508089909172-0.0499682052908494j),(0.9983758795627249-0.056970194903608995j),(0.9987508089909172-0.0499682052908494j),(0.9973978779018079-0.07209350287626554j),(0.9984270163262442-0.05606686249357643j),(0.998009331212125-0.06306643174880643j),(0.997937366496245-0.06419511313596046j),(0.9962692921078271-0.08629888529389325j)) qn[0],qn[1],qn[2],qn[3],qn[4],qn[5]; barrier qn[0],qn[1],qn[2],qn[3],qn[4],qn[5]; cx qn[0],qn[1]; cx qn[3],qn[4]; id qn[2]; id qn[5]; barrier qn[0],qn[1],qn[2],qn[3],qn[4],qn[5]; diagonal((1+0j),(1+0j),(1+0j),(0.9998851645343577-0.015154462844337462j),(1+0j),(1+0j),(0.9999668458922691-0.008142918166515927j),(0.9997286126830953-0.023295943482360304j),(1+0j),(1+0j),(1+0j),(0.9998851645343577-0.015154462844337462j),(0.9999813507693169-0.006107218153321957j),(0.9999813507693169-0.006107218153321957j),(0.9998984667022371-0.014249781981309972j),(0.9995676951046427-0.029401069762709897j),(1+0j),(1+0j),(1+0j),(0.9998851645343577-0.015154462844337462j),(1+0j),(1+0j),(0.9999668458922691-0.008142918166515927j),(0.9997286126830953-0.023295943482360304j),(0.9999334619179047-0.011535672363333669j),(0.9999334619179047-0.011535672363333669j),(0.9999334619179047-0.011535672363333669j),(0.9996438171749794-0.026687802154470943j),(0.9998443630604376-0.017642269022657777j),(0.9998443630604376-0.017642269022657777j),(0.9996675545597874-0.025783334936623367j),(0.9991620246793719-0.0409297989076161j),(1+0j),(0.9999754157846933-0.007011977340927129j),(1+0j),(0.9997543203921124-0.022165262401004148j),(1+0j),(0.9999754157846933-0.007011977340927129j),(0.9999668458922691-0.008142918166515927j),(0.999540684511799-0.030305445149080342j),(1+0j),(0.9999754157846933-0.007011977340927129j),(1+0j),(0.9997543203921124-0.022165262401004148j),(0.9999813507693169-0.006107218153321957j),(0.9999139433371798-0.013118914585100106j),(0.9998984667022371-0.014249781981309972j),(0.9993369618822374-0.036409292989277114j),(0.9992607708724149-0.03844361839716994j),(0.9989666390493721-0.045449467174012846j),(0.9992607708724149-0.03844361839716994j),(0.998163159988632-0.060583050777493104j),(0.9992607708724149-0.03844361839716994j),(0.9989666390493721-0.045449467174012846j),(0.9989145980345333-0.046579242517527736j),(0.997636743954934-0.06870900312911933j),(0.9987508089909172-0.0499682052908494j),(0.9983758795627249-0.056970194903608995j),(0.9987508089909172-0.0499682052908494j),(0.9973978779018079-0.07209350287626554j),(0.9984270163262442-0.05606686249357643j),(0.998009331212125-0.06306643174880643j),(0.997937366496245-0.06419511313596046j),(0.9962692921078271-0.08629888529389325j)) qn[0],qn[1],qn[2],qn[3],qn[4],qn[5]; barrier qn[0],qn[1],qn[2],qn[3],qn[4],qn[5]; u3(0.6163743254536814,0.8580294605967873,3.0144916492011555) qn[0]; u3(0.9595560604642764,1.795127666767371,-1.4294433510321167) qn[1]; u3(1.372718792663945,-2.25701807389648,0.41106186002380074) qn[2]; u3(1.693172705952502,1.719113104786089,2.594973453478657) qn[3]; u3(2.332844534314445,2.5704468297512713,2.6809962895186703) qn[4]; u3(2.5398184543818507,1.5964670139884671,3.915402872507207) qn[5]; barrier qn[0],qn[1],qn[2],qn[3],qn[4],qn[5]; cx qn[1],qn[2]; cx qn[4],qn[5]; id qn[3]; id qn[0]; barrier qn[0],qn[1],qn[2],qn[3],qn[4],qn[5]; diagonal((1+0j),(1+0j),(1+0j),(0.9998851645343577-0.015154462844337462j),(1+0j),(1+0j),(0.9999668458922691-0.008142918166515927j),(0.9997286126830953-0.023295943482360304j),(1+0j),(1+0j),(1+0j),(0.9998851645343577-0.015154462844337462j),(0.9999813507693169-0.006107218153321957j),(0.9999813507693169-0.006107218153321957j),(0.9998984667022371-0.014249781981309972j),(0.9995676951046427-0.029401069762709897j),(1+0j),(1+0j),(1+0j),(0.9998851645343577-0.015154462844337462j),(1+0j),(1+0j),(0.9999668458922691-0.008142918166515927j),(0.9997286126830953-0.023295943482360304j),(0.9999334619179047-0.011535672363333669j),(0.9999334619179047-0.011535672363333669j),(0.9999334619179047-0.011535672363333669j),(0.9996438171749794-0.026687802154470943j),(0.9998443630604376-0.017642269022657777j),(0.9998443630604376-0.017642269022657777j),(0.9996675545597874-0.025783334936623367j),(0.9991620246793719-0.0409297989076161j),(1+0j),(0.9999754157846933-0.007011977340927129j),(1+0j),(0.9997543203921124-0.022165262401004148j),(1+0j),(0.9999754157846933-0.007011977340927129j),(0.9999668458922691-0.008142918166515927j),(0.999540684511799-0.030305445149080342j),(1+0j),(0.9999754157846933-0.007011977340927129j),(1+0j),(0.9997543203921124-0.022165262401004148j),(0.9999813507693169-0.006107218153321957j),(0.9999139433371798-0.013118914585100106j),(0.9998984667022371-0.014249781981309972j),(0.9993369618822374-0.036409292989277114j),(0.9992607708724149-0.03844361839716994j),(0.9989666390493721-0.045449467174012846j),(0.9992607708724149-0.03844361839716994j),(0.998163159988632-0.060583050777493104j),(0.9992607708724149-0.03844361839716994j),(0.9989666390493721-0.045449467174012846j),(0.9989145980345333-0.046579242517527736j),(0.997636743954934-0.06870900312911933j),(0.9987508089909172-0.0499682052908494j),(0.9983758795627249-0.056970194903608995j),(0.9987508089909172-0.0499682052908494j),(0.9973978779018079-0.07209350287626554j),(0.9984270163262442-0.05606686249357643j),(0.998009331212125-0.06306643174880643j),(0.997937366496245-0.06419511313596046j),(0.9962692921078271-0.08629888529389325j)) qn[0],qn[1],qn[2],qn[3],qn[4],qn[5]; barrier qn[0],qn[1],qn[2],qn[3],qn[4],qn[5]; cx qn[1],qn[2]; cx qn[4],qn[5]; id qn[3]; id qn[0]; barrier qn[0],qn[1],qn[2],qn[3],qn[4],qn[5]; diagonal((1+0j),(1+0j),(1+0j),(0.9998851645343577-0.015154462844337462j),(1+0j),(1+0j),(0.9999668458922691-0.008142918166515927j),(0.9997286126830953-0.023295943482360304j),(1+0j),(1+0j),(1+0j),(0.9998851645343577-0.015154462844337462j),(0.9999813507693169-0.006107218153321957j),(0.9999813507693169-0.006107218153321957j),(0.9998984667022371-0.014249781981309972j),(0.9995676951046427-0.029401069762709897j),(1+0j),(1+0j),(1+0j),(0.9998851645343577-0.015154462844337462j),(1+0j),(1+0j),(0.9999668458922691-0.008142918166515927j),(0.9997286126830953-0.023295943482360304j),(0.9999334619179047-0.011535672363333669j),(0.9999334619179047-0.011535672363333669j),(0.9999334619179047-0.011535672363333669j),(0.9996438171749794-0.026687802154470943j),(0.9998443630604376-0.017642269022657777j),(0.9998443630604376-0.017642269022657777j),(0.9996675545597874-0.025783334936623367j),(0.9991620246793719-0.0409297989076161j),(1+0j),(0.9999754157846933-0.007011977340927129j),(1+0j),(0.9997543203921124-0.022165262401004148j),(1+0j),(0.9999754157846933-0.007011977340927129j),(0.9999668458922691-0.008142918166515927j),(0.999540684511799-0.030305445149080342j),(1+0j),(0.9999754157846933-0.007011977340927129j),(1+0j),(0.9997543203921124-0.022165262401004148j),(0.9999813507693169-0.006107218153321957j),(0.9999139433371798-0.013118914585100106j),(0.9998984667022371-0.014249781981309972j),(0.9993369618822374-0.036409292989277114j),(0.9992607708724149-0.03844361839716994j),(0.9989666390493721-0.045449467174012846j),(0.9992607708724149-0.03844361839716994j),(0.998163159988632-0.060583050777493104j),(0.9992607708724149-0.03844361839716994j),(0.9989666390493721-0.045449467174012846j),(0.9989145980345333-0.046579242517527736j),(0.997636743954934-0.06870900312911933j),(0.9987508089909172-0.0499682052908494j),(0.9983758795627249-0.056970194903608995j),(0.9987508089909172-0.0499682052908494j),(0.9973978779018079-0.07209350287626554j),(0.9984270163262442-0.05606686249357643j),(0.998009331212125-0.06306643174880643j),(0.997937366496245-0.06419511313596046j),(0.9962692921078271-0.08629888529389325j)) qn[0],qn[1],qn[2],qn[3],qn[4],qn[5]; barrier qn[0],qn[1],qn[2],qn[3],qn[4],qn[5]; measure qn[0] -> c600[0]; measure qn[1] -> c600[1]; measure qn[2] -> c600[2]; measure qn[3] -> c600[3]; measure qn[4] -> c600[4]; measure qn[5] -> c600[5]; 
Doing
simulator = Aer.get_backend('qasm_simulator')
result_zz = execute(zz_circuits_m, simulator).result()
where zz_circuits_m is the qasm above
Expected it to actually work :)
?
@adcorcol This is the same issue as #692
For now if you are building circuits in qiskit (not qasm), make sure you add the diagonal as a list, not as a Numpy array eg. circ.diagonal([a, b, c, d], [0, 1]) or circ.diagonal(array.tolist(), [0, 1])
Hmmm... This is what I was actually doing in my circuit building
circ.diagonal(list(ZZ_diag),qr)
It does work when I do circ.diagonal(ZZ_diag.tolist(),qr) thanks!
