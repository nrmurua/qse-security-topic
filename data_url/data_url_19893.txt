Hi all, looking at the comments on lines 75 and 77 of liboqs/.CMake/alg_support.cmake  leads me to believe that BIKE should be supported on x86 architectures, yet line 76 disables them when ARCH_X86 is detected:
Removing NOT ARCH_X86; from line 76 allowed me to build BIKE without issue, so I'm wondering if this is merely a typo.
This might be an obsolete line; at one point in time the BIKE implementation only worked on x86_64, but perhaps that no longer holds. @dkostic do you have any insight?
Relatedly, does BIKE support Windows 64 bits? Considering it specifically says 'NOT WIN32' right now. If so, I need to update this in the Rust wrapper.
Relatedly, does BIKE support Windows 64 bits? Considering it specifically says 'NOT WIN32' right now. If so, I need to update this in the Rust wrapper.
Just looking at a Windows CI run from yesterday the answer seems to be "Yes" for cygwin and "No" for MSVC (head scratching... I always thought cygwin also sets "WIN32"...).
I tested enabling BIKE on x86, and it triggered multiple CI failures—all at runtime as opposed to build errors. I'm going to assume, then, that we want to keep BIKE switched OFF by default for x86.
I tested enabling BIKE on x86, and it triggered multiple CI failures—all at runtime as opposed to build errors. I'm going to assume, then, that we want to keep BIKE switched OFF by default for x86.
Thanks for the test -- but in this case the liboqs documentation for BIKE seems wrong: It states support for "little endian" architectures --> Change doc (to state BIKE only works for "x64") to really close the issue for good?
