I just started looking into that.
The current version of the tutorial is focusing on the Redpitaya class. I wonder if we are not diverting the user's attention from the Pyrpl class that he is encouraged to use instead ?
In particular, there would be a little work involved if we want to bring the Redpitaya class alone up-and-running (some problems right now with the function returning the list of inputs of dsp modules that looks for the root pyrpl instance).
Since all unittests are performed with the full pyrpl instance, I would advocate to use this within the tutorial....
--> I am doing that right now.
agreed. also, i suggest that all installation stuff is moved to the documentation such that the tutorial can focus more on doing actual stuff. also, the tutorial could be separated into several parts by now.
OK, so I should probably touch at the same time the documentation and the tutorial. I think I just succesfully ran the make html for the autodoc. For the moment, do you have anything that is not autogenerated in the documentation ?
documentation is currently distributed over the wiki, the tutorial (former installation section), the readme.md, and the autodoc files.
OK, I guess we want the autodoc to look a bit more organized right ?
The steps towards making the actual documentation are
see also #170
@SamuelDeleglise
in principle the choice between google-style () and numpy-style (http://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_numpy.html#example-numpy) is a matter of taste, even though the google-style is "recommended by Khan's academy", whatever that means. I would go with google-style because i find it easier to write (and I believe pycharm can be customized), but i would also be okay with numpy-style if you see any advantages there
Concerning the checklist item "modify the source files for autodoc to get a reasonable organization of the documentation":
This is the main decision to make now. I believe the structure of the documentation can be inspired by other pages, such as this one: https://docs.scipy.org/doc/numpy-1.13.0/user/
I believe the other points can be postponed after that..
Sorry, I was drifting in the various links of your posts...
I am fine with Google style, as long as it is properly formatted by the sphynx extension
To start the discussion, the structure could be (I am not sure where the autodoc goes by the way...):
OK, they seem to have a User's guide and a Reference... The user's guide is basically what I sketched above and the 'Reference' is basically the autogenerated doc.
Also, I see that they have actually put the Developer's guide in a 3rd section. Actually the root of their sphynx doc is there;
https://docs.scipy.org/doc/numpy-1.13.0/index.html
So, we could probably have:
Are you working on it or should I start ?
go ahead if you like, the structure sounds good
just pull my latest commit with the sphinx configuration
are you workking on it now?
otherwise ill go ahead and test the structure
I was waiting for your answer and trying to implement the validate_and_normalize unit_test in the mean time. Just let me know when I can start the doc
ok go ahead with the unit test, ill try to generate the doc structure for now
i have to go no, continue if you like on the last commit
Alright, you haven't created the structure yet right ?
its there, dont you see it?
in doc/sphinx/source/index and references
go to doc/sphinx, type 'make html' and check the build directory
Did you push it to develop-0.9.3 ?
sry, there was a conflict. now its pushed
Got it thanks
I believe the right solution is that you eventually create an account there:
http://dont-be-afraid-to-commit.readthedocs.io/en/latest/documentation.html
it will compile automatically the documentation for us (and of course, host the website).
We also need to find a solution to store the redpitaya image files and/or list of files. I am not sure if this is supported by readthedocs
There is a largr file storage on github we can use fir that..
pyrpl.readthedocs.io will host the docs
however, im already running into trouble with that website to correctly get pyrpl imported because of the pyqt dependency...
for the sd card (4 GB, should be possible to get down to 1 GB), we can store it on http://www.filedropper.com/ (testing right now)...
readthedocs is working and the content of the documentation is slowly improving.
Still, our website is not very welcoming at the moment. I suggest we try to get our documentation to look more similar to https://automl.github.io/auto-sklearn/stable/
im leaving this open until we have
I was trying to add the execution of the tutorial notebook in the unittests (by hardcoding its location in pyrpl/test/test_ipython_notebook/test_ipython_kernel.py). However, I didn't find the tutorial notebook location. Is it this one: pyrpl/docs/old_files/tutorial.ipynb ?
I think that is the right location. I think in the meantime there was the idea to convert the tutorial into the module documentation on the website, so i had regarded the tutorial as deprecated. But I agree that it is best to have both, especially if testing and the generation of the displayed notebook output can be automatically done.
Do you want the tutorial only for yesting or for new users as well?
My idea was to test the tutorial that new users will have at their disposal such that no errors are introduced in there during development...
