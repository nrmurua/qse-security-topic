Hello, The qiskit.transpile function at optimization_level=3 incorrectly optimizes circuits involving swap and measure instructions. This leads to incorrect possible outcomes when the circuit is executed.
The issue can be replicated using the following Python code:
The possible outcomes differ between the original and optimized circuits:
The optimized circuit should yield only 000 and 010 outcomes, consistent with the original circuit.
The potential source of the bug could be in
qiskit/transpiler/passes/optimization/optimize_swap_before_measure
I would like to work on this!
The bug is in OptimizeSwapBeforeMeasure, which uses DAGCircuit.successors (immediate successors) as opposed to DAGCircuit.descendants (all nodes that are topologically after the given).  It should hopefully be an easy fix there, though it'd be good to add a couple more tests, such as when there's multiple swaps before several multiply-measured qubits, just to be sure.
A more minimal reproducer showing the bug:
This prints
but the second circuit should be
@border-b: I can assign you, thanks!
@jakelishman, sorry I was a bit busy with work these past couple of weeks.
You're right, changing DAGCircuit.successors to DAGCircuit.descendants does seem to solve the issue. I'm gonna try to add some tests.
