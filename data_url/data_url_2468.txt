Currently mux's sample checks "has_unitary" on a circuit.  That does a check to see if the measurements are all terminal and if not, returns false.  But this is not correct for deciding to use sparse simulator: if the measurements in the middle are there the sparse simulator will be faster because it is doing a pure state simulation.
The use of asking about terminal measurements in has_unitary feels a bit wrong to me (it was unexpected for me when tracking this down).
Oh this also will pick the wrong one for Monte Carlo simulation.
@Strilanc thoughts on the has_unitary method on circuit?
Hmm I see. I thought that I was calling the purely wavefunction simulator. I still don't really get what you mean when you say "sparse" in the name.
Is there any situation where we would want to perform a density matrix simulation?
Sparse refers to that you are not keeping the unitary in memory (so sparse matrix multiplication).  We could rename PureStateSimulator.
You want density matrix simulation when you want an actual density matrix, or the channel cannot be a mixture (generalized phase damping, for instance).
PureStateSimulator would be much better.
This looks to be fixed.
