It's not clear from the docs how to get num_occurrences, alongside list of samples.
User's comment here.
num_occurrences is a sampler-specific data field, not in general for dimod Samplers. We could consider making is a required data field as it has come up in multiple cases.
Adding something like this to dimod.Response docs would also help:
@randomir @arcondello
Should we make num_occurrences required for the next backwards compatibility update?
I see the arguments as follows. Making it optional means more flexibility for wrapping solvers and less overhead (no need to compute the histogram). The downside is less uniformity in the responses from different samplers, and that len(response) may or may not be equal to the num_samples/num_reads parameter. If it is required, one other downside I can think of is that the samples returned lose their "time-dependence" which I can see being important for the QPU and maybe other solvers.
While it would be possible to require num_occurrences and then allow the samples to be non-unique (so you could take your existing sampler, and just set num_occurrences=1 for every returned sample), I would argue this will be too confusing as the name and current usage in the ecosystem implies that what's returned is a proper histogram.
I think the best solution is to make num_occurrences required, and to provide a decorator which builds the histogram if the user needs it when making a sampler.
This is perhaps tangential, but I think we should also consider standardizing the num_samples/num_reads parameter. I understand that this parameter does not apply for some solvers, and so should remain optional, but it's such a common parameter that I think there should be just one way to do it. Maybe this just means stating this in the docs for how to make a sampler (i.e. "If your sampler takes an argument that specifies how many samples to return, use num_reads"). Another option could be to have another ABC that requires num_reads.
And while we're on topic of long-term planning/breaking compat/renaming stuff -- why not call that property simply histogram?
üëç for standardizing names across API (I believe num_reads is inherited from SAPI/QS).
The need for pre/post-processing of parameters/responses from SAPI has already come up several times (e.g. here: dwavesystems/dwave-cloud-client#199), and that seems to be the direction which makes most sense (in terms of API flexibility, unification and faster development).
Made required in #243 .
I agree we should standardise num_reads/num_samples. I think by dint of longevity num_reads is the winner.
