@Roger-luo, @GiggleLiu , I have a few questions about how to use our Emulator for certain tasks (some of them I am not sure if we have supports)
Thanks!
how to initialize quantum state in blockade subspace if it is not zero_state?
see product_state, e.g
how to write a product state that are not composed by 0 and 1 in both full-space and subspace?
how do you represent a product state that is not composed by 0 and 1? you mean sum of product states?
which function should I use to diagonalize the hamiltonian to get all eigenvalues and eigenvectors
We don't have the support right now. This needs to integrate with ITensor or SuiteSparse.
suppose we have diagonalized the matrix in subspace, how could I convert the calculated eigenvector to subspace register, so that I can do certain measurement?
Thanks!
how do you represent a product state that is not composed by 0 and 1? you mean sum of product states?
If I want to create a product state all atoms polarizing in X direction, how should I do that, instead of expanding in the z basis?
We don't have the support right now. This needs to integrate with ITensor or SuiteSparse.
hmm, if I just want to diagonalize a normal matrix to get its eigenvalues and eigenvectors, I guess there are linear algebra package in Julia to do this, right?
This is kind of quite common task for people studying eigenstate thermalization and quantum scar.
If I want to create a product state of all atoms polarizing in the X direction, how should I do that, instead of expanding in the z basis?
We don't have support for an arbitrary basis, so it has to be on a Z basis. We may think about supporting automatically converting X to Z. But this doesn't exit in Yao since we were in the context of quantum information rather than general quantum system simulation.
hmm, if I just want to diagonalize a normal matrix to get its eigenvalues and eigenvectors, I guess there are linear algebra package in Julia to do this, right?
the simplest is eigen from LinearAlgebra stdlib, but that has poor performance since it only support dense matrix, you will need SuiteSparse for sparse matrix diagonalization.
