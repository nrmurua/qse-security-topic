I followed the quickstart instructions and tried to build liboqs as part of the openSSL instalation and I when I run
cmake -GNinja -DCMAKE_INSTALL_PREFIX=<OPENSSL_DIR>/oqs .. I came across the following error:
With a quick google search I found out here that for building on Tiger Lake you need to specify cmake to use gcc-10:
cmake -DCMAKE_C_COMPILER=gcc-10 -GNinja -DCMAKE_INSTALL_PREFIX=<OPENSSL_DIR>/oqs ..
I thought it was worth mentioning for anyone that comes across the same problem in the future. Sorry if opening an issue for something so small is an overkill.
Cheers,
George
Hi George, thanks very much for your interest in our project and taking time to report this.
Unfortunately I don't have such platform at my disposal to test but I'm puzzled about this and would like to ask @jschanck about his opinion: Can the default "OQS_OPT_TARGET=auto" trigger a selection of "-march=tigerlake" on OSX using the cmake invocation above?? I didn't find an explanation for this in our code. Is this a cmake issue? If so should we add a caveat to the documentation for OQS_OPT_TARGET?
I'd assume that George passed OQS_OPT_TARGET=tigerlake. If that's not the case, please let me know.
I revised the OQS_OPT_TARGET documentation to make it more clear that the list of available options depends on the compiler selected by CMAKE_C_COMPILER.
I followed the quickstart guide for Ubuntu on the OpenSSL fork of OQS here and on Step 1, when this command is invoked:
cmake -GNinja -DCMAKE_INSTALL_PREFIX=<OPENSSL_DIR>/oqs ..
the error poped up. I didn't specify to target Tiger Lake, I'd assume it did it by itself.
To solve the error, I found out that the cmake command must be specified to make use of the gcc-10 compiler (or newer I suppose) and not the default ( gcc-9), so the command I invoked and solved the issue is the following:
cmake -DCMAKE_C_COMPILER=gcc-10 -GNinja -DCMAKE_INSTALL_PREFIX=<OPENSSL_DIR>/oqs ..
So I only passed the argument that specifies which compiler to use.
OK, thanks. We would pass '-march=native' in that case. Unfortunately it looks like Ubuntu made a mistake packaging gcc 9.3.0 (https://gcc.gnu.org/bugzilla/show_bug.cgi?id=100009), so I don't think there's much we can do about this.
