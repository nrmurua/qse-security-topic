Currently the retrieval of setpoint data relies on the order of the registered dependent paramenters. So for example the code below will fail for depends_on_wrong and pass for depends_on_right
In the failing case the values for the setpoint axes get interchanged, because the array of dependent ParamSpecs is reversed.
This behavior is of course undesired and has to be resolved.
In my opinion this problem roots all the way back to the get_setpoints method of sqlite_base.py, which returns the setpoints as a List[List[List[Any]]], for a parameter specified by its name. I don't think that we should establish some standard order of the setpoints to resolve this problem. We should possibly rather return a dictionary with the setpoint parameter names as keys instead of one level of the lists.
The named function gets only used in this presented use case (i.e. get_data_by_id).
I will start implementing a fix that involves a dictionary return value for this purpose.
fully agree. Beware though that @WilliamHPNielsen has started working on a new format for storing dependencies information in relation to the data model. Perhaps, you can align with him.
@astafan8, good point. See #1227 for a description of what is about to change. Unfortunately, #1227 requires #1002 to be merged.
Thanks for pointing that out. It is good that we are all aware of those correlations. It seems to me that #1227 will require a reimplementation of get_data_by_id . This reimplementation should include the changes proposed here. I think implementing these changes already in the current version will not impose extra work.
