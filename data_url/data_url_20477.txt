Hi,
Vanilla OQS OpenSSH does not build with vanilla OQS OpenSSL any more. And I think the issue came from the renamings in liboqs in open-quantum-safe/liboqs@4d10a58
The errors I get are
sshkey.c: In function ‘oqs_sig_pk_len’:
sshkey.c:111:61: error: ‘OQS_SIG_sphincs_haraka_128f_simple_length_public_key’ undeclared (first use in this function); did you mean ‘OQS_SIG_sphincs_shake_128f_simple_length_public_key’?
case KEY_ECDSA_NISTP256_SPHINCS_HARAKA_128F_SIMPLE:return OQS_SIG_sphincs_haraka_128f_simple_length_public_key;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
OQS_SIG_sphincs_shake_128f_simple_length_public_key
sshkey.c:111:61: note: each undeclared identifier is reported only once for each function it appears in
sshkey.c:114:61: error: ‘OQS_SIG_sphincs_sha256_128f_simple_length_public_key’ undeclared (first use in this function); did you mean ‘OQS_SIG_sphincs_sha2_128f_simple_length_public_key’?
case KEY_ECDSA_NISTP256_SPHINCS_SHA256_128F_SIMPLE:return OQS_SIG_sphincs_sha256_128f_simple_length_public_key;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
OQS_SIG_sphincs_sha2_128f_simple_length_public_key
sshkey.c:116:61: error: ‘OQS_SIG_sphincs_sha256_192s_robust_length_public_key’ undeclared (first use in this function); did you mean ‘OQS_SIG_sphincs_sha2_192s_simple_length_public_key’?
case KEY_ECDSA_NISTP384_SPHINCS_SHA256_192S_ROBUST:return OQS_SIG_sphincs_sha256_192s_robust_length_public_key;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
OQS_SIG_sphincs_sha2_192s_simple_length_public_key
sshkey.c:118:61: error: ‘OQS_SIG_sphincs_sha256_256f_simple_length_public_key’ undeclared (first use in this function); did you mean ‘OQS_SIG_sphincs_sha2_256f_simple_length_public_key’?
case KEY_ECDSA_NISTP521_SPHINCS_SHA256_256F_SIMPLE:return OQS_SIG_sphincs_sha256_256f_simple_length_public_key;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
OQS_SIG_sphincs_sha2_256f_simple_length_public_key
sshkey.c: In function ‘oqs_sig_sk_len’:
sshkey.c:148:12: error: ‘OQS_SIG_sphincs_haraka_128f_simple_length_secret_key’ undeclared (first use in this function); did you mean ‘OQS_SIG_sphincs_shake_128f_simple_length_secret_key’?
return OQS_SIG_sphincs_haraka_128f_simple_length_secret_key;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
OQS_SIG_sphincs_shake_128f_simple_length_secret_key
sshkey.c:152:12: error: ‘OQS_SIG_sphincs_sha256_128f_simple_length_secret_key’ undeclared (first use in this function); did you mean ‘OQS_SIG_sphincs_sha2_128f_simple_length_secret_key’?
return OQS_SIG_sphincs_sha256_128f_simple_length_secret_key;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
OQS_SIG_sphincs_sha2_128f_simple_length_secret_key
sshkey.c:155:12: error: ‘OQS_SIG_sphincs_sha256_192s_robust_length_secret_key’ undeclared (first use in this function); did you mean ‘OQS_SIG_sphincs_sha2_192s_simple_length_secret_key’?
return OQS_SIG_sphincs_sha256_192s_robust_length_secret_key;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
OQS_SIG_sphincs_sha2_192s_simple_length_secret_key
sshkey.c:158:12: error: ‘OQS_SIG_sphincs_sha256_256f_simple_length_secret_key’ undeclared (first use in this function); did you mean ‘OQS_SIG_sphincs_sha2_256f_simple_length_secret_key’?
return OQS_SIG_sphincs_sha256_256f_simple_length_secret_key;
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
OQS_SIG_sphincs_sha2_256f_simple_length_secret_key
make: *** [sshkey.o] Error 1
Can we get this regression fixed soon? Should we file a PR?
@xvzcf agreed to take care of this. Branch "alg-update" already contains the code and I guess it will be turned into a PR today (for some reason I didn't have the permissions to do it myself).
Update: #143 already is the required PR (sorry to have overlooked this when answering the above).
Thank you. I will wait for it to be merged before I test again.
I've just merged #143 which should fix this; @csosto-pk please let us know if we can close this issue.
Yes. I just tested and it works!
Closing.
Thank you.
