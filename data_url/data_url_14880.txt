PyPI:
qiskit 0.44.1
qiskit-terra 0.25.1
Github:
qiskit-metapckage: 0.44.0
qiskit 0.25.1
Hi,
I'm a bit confused with the plan here. qiskit-terra is renamed to qiskit, and what was before qiskit now is qiskit-metapackage, which is archived and read-only. However, qiskit in PyPI is still not qiskit-terra as in Github. And the latest qiskit in PyPI does not correspond with the latest tagged version of qiskit-metapackage in Github.
So what is the plan here? Just a confused packager...
In addition, previous tarballs of qiskit-terra were modified (as far as I can tell only to rename the compressed folder from qiskit-terra to qiskit) without changing the version, producing failures in the packaging scripts due to invalid checksums.
.
.
No response
No worries, it is confusing indeed.
Let me know if this answer you questions. If so, please close this issue :)
Thanks for the summary, but I'm still confused about the last point.
I don't see the qiskit 0.44.1 tarball (as the PyPI release) in here. I only see that qiskit-terra tarballs that are name simply qiskit.
For example, here the only mention to Terra is in the header, but the tarball is qiskit-0.25.1.tar.gz and inside the compressed folder is qiskit-0.25.1 instead of qiskit-terra-0.25.1.
And also I cannot find the tarball qiskit-0.44.1.tar.gz, which is available at PyPI.
We unfortunately can't control the names that GitHub gives releases on their page - those are just the zipped / gz-tarred contents of the entire repository at the time of the tag.  We don't actually add any assets to GitHub releases.  The sdist .tar.gz files that you get from PyPI are what we actually package, which is why you're (hopefully) able to find everything you need there.
Oh, I see... so the sdist tarballs here may not match the ones at PyPI? My problem is that Arch has decided not to use PyPI sdist tarballs whenever possible, and I thought I could follow that guideline here, but maybe I can't.
the qiskit pypi package is an empty metapackage. Its only point is to have a single dependency: qiskit-terra.
Yeah, the tarballs here are zipped contents of the entire GitHub repository, so they're not the same as the PyPI sdist, but they're not much different - they just include a lot more development-workflow detritus.
You can build the same sdist as the qiskit-terra package on PyPI from the GitHub tarball of this repo by just running pip install build; python -m build --sdist in the root.  As Luciano mentioned, the PyPI qiskit package is an empty dependency-only package that simply wraps qiskit-terra - we're not happy with that state of affairs, but unfortunately PyPI doesn't give us a way to say that the qiskit package as of version 0.45 entirely replaces qiskit-terra.  For all practical purposes it does, but to try and give continuity to libraries that depend on qiskit-terra, we've had to keep this empty wrapper package (PyPI's qiskit) around the package we actually want to call qiskit (PyPI's qiskit-terra).
If you need / want to build the sdist of the empty wrapper package, you can do that by running the same python -m build --sdist command but from the qiskit_pkg directory in this repo.  It has no code, though - it's a metadata-only package.
Hi @iyanmv, hopefully this issue covered all your questions. Feel free to comment forwards if this issues is not resolved yet.
Yes, sorry, forgot to answer. Thanks @jakelishman for the explanation ;)
