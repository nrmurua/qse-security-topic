I'm working with some fairly large circuits (~1000+ qubits), and I've noticed that stim.TableauSimulator.canonical_stabilizers() is truncating the PauliStrings at length 466. What can I do to read the canonical stabilizers out in full? For context, I am working from a Jupyter notebook.
Here's some code demonstrating the behavior:
Expected output:
+___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________X
Actual Output:
+___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
This seems to be a deeper down bug related to inverting tableaus. Simplest repro I've managed is this one:
Very worrying; the fact the direct sum is needed suggests something to do with bounds checking within simd registers.
Okay, I've confirmed it also happens with just 64 bit values instead of fancy simd things. Also I've figured out where the 467 comes from: it's the first number such that floor(n*1.1) > 512. The 1.1 comes from various places that pad the tableau inside the tableau simulator by a constant factor to avoid quadratic costs when iterating towards big tableaus one by one. When using 64 bit words this instead happens for the first time at 118.
