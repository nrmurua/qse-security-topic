Right now both VQE and QAOA return and use parametric program objects from pyquil.  These objects are used as they are intended to be efficient templates for variational quantum programs.
That said, the parametric.py library is still very experimental.  This means that it can be pretty unintuitive to use and still has several bugs and strange edge cases.
Due to this, we should remove the dependency of pyqve and pyqaoa on these objects until they are more stable.  In the meantime they can be replaced with basic python functions that return pyQuil programs.
@jotterbach Is going to start taking a look at this.
@willzeng
I looked through the code and I think the problem has an upside and a downside.
On the upside: VQE only has functions of the form f: list -> PyQuil.function which is exactly what we want. Hence there is no direct dependency on pyquil.ParametricFunction
On the other hand pyqaoa.qaoa has a dependency on various parts od pyquil.Paulis, which hence indirectly introduces a dependency to ParametricFunctions through Paulis.exponential_map that returns a decorated program.
As far as I can tell from a first pass Paulis.exponential_map is the only point where we induce ParametricFunction into grove. There is no direct import of ParametricFunction in the grove library (except some ipynb) and the name of parametric_state_evolve is misleading. In this light it might be worthwhile to try and refactor Paulis to purge the dependency. What's our thought?
cc @ncrubin as he wrote most of qaoa.py according to the git annotate.
Yep that's correct @jotterbach.  As part of this issue exponential_map should be changed to return a python function rather than a parametric program. I also agree that changed should be made to make function behavior clear if their output type has changed
this was fixed by #32
