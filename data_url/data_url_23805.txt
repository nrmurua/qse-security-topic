When setting a dac voltage or acquiring data the time between a function call and the response getting back is typically larger than the default timeout (digging around in the code tells me this is 2s but I could not find where this is set).
I have had the error below when 1 setting a voltage on the IVVI (directly related to the delay in setting it slowly over a large range) and 2 when acquiring data with the CBox (homebuilt FPGA). Now that I think of it, this may also be the error I am seeing in #119 when loading in sequences in the AWG (typically takes somewhere between 3s and 1min depending on the sequence).
I understand the need for a timeout on a server call, however currently it is raising exceptions where it should not. I am again reverting back to using server_name=None to circumvent the error.
Solutions I can think of, 1. longer default timeout, pro easy to implement, con not general to say a measurement that takes very long (several mins is not uncommon when averaging a lot). 2, have no timeout and rely on the underlying VISA timeouts.
Both are not very good but to me this is  a serious issue as it breaks the way I work. I also think that whatever solution we implement should not be something I do when instantiating the instrument but something general that the user (other than me) does not have to think about.
While doing a night run that does simple 2D scans of some parameters my measurement crashed.
The error I get is the nondescriptive Empty that the instrument server seems to generate, from the line number I deduce that this is the same timeout that I have created this issue for.
I relate this directly to having my instruments on the instrument server, I verified that the instruments involved in the loop are still running and still responsive, indicating to me that there was no "hard" exception. I can execute the same cell and everything runs fine.
As the server only returns Empty, it is very hard to debug. As it is a timing related issue, I expect that this specific example will be hard to reproduce.
I add this to the issue as the above example is a specific problem with loading AWG-sequences or setting parameters that have sweep delay built in. This is an instance where it crashed my night run after running for several hours.
@alexcjohnson , I am worried about this and this is certainly something that will makes me want to avoid the instrument server.
@AdriaanRol yikes, this is no good... Thinking about it more, we may actually be fine with no timeouts at all. My only hesitation about this is making sure we have a bulletproof distinction between queries that expect a response (ask) and those that do not (write). But if we make a mistake like that it will already break the measurement, it will just do so by raising an error within the timeout (and we haven't seen that failure mode, as far as I know) rather than potentially blocking forever. So I think I'll take the timeout out completely for now, then when I get a chance look at the server communication architecture and make sure it's as hard as possible to mix up ask and write.
so I don't forget why I'm leaving this issue open:
