As an MVP we should implement functionality required for pyQuil's QuantumComputer.run() method, which mostly means we need to expose a (possibly renamed) /multishot endpoint.
As part of this MVP, we are implementing at least the internal API for persistence (#39) and shared memory (#150).
@stylewarning @appleby should this issue also track implementing the allocation/shared memory endpoint, or just default to native allocation for the sake of time and leave that stuff for the next milestone? I think it would be cool to demo shared memory, but I am famous for underestimating how much time these things need for implementation.
I vote to bump to next milestone to keep the M in MVP :).
If there is time to implement it at the end of the sprint (there never is) then great. I think sticking to the plan in asana for this milestone makes sense, i.e just a single endpoint + plumbing to enable that.
Also, I thought the point of shared memory mode was that callers could mmap that into their python process and poke the memory directly? What is the point if QVM is running on another box? Is the intention to allow multiple persistent QVMs to act on the same shared mem region?
I vote to bump to next milestone to keep the M in MVP :).
Noted.
If there is time to implement it at the end of the sprint (there never is) then great. I think sticking to the plan in asana for this milestone makes sense, i.e just a single endpoint + plumbing to enable that.
Reasonable.
Also, I thought the point of shared memory mode was that callers could mmap that into their python process and poke the memory directly?
Correcto.
What is the point if QVM is running on another box?
I can't think of a good point. Perhaps in my OP I misused "shared memory/allocation" in place of "persistence".
