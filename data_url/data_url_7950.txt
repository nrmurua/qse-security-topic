I try to use mesolve to do a system dynamics with a system static Hamiltonian H_0 under a driving term governed by a cosine shape waveform cos_waveform.
We try to method to construct the dynamical hamiltonain H_d in two ways: one is H_d = [H_0, [a_dag + a, cos_waveform]] and H_d = [H_0, [a_dag + a, cos_waveform_array]], corresponding to [ops, func] and [ops, ndarray] cases, respectively.
You can see from the code I provided, the cos_waveform_array is given by drive_pulse_y = np.array([cos_waveform(t, None) for t in tlist], dtype=np.complex128).
We expect the simulation result of the system should be the same under these two cases. We plot the diagonal matrix elements of the density matrix to see the dynamics of the system. But the result are different.
I try to find the issue probably happens due to function mesolve._qobjevo_set or the different treatments in QobjEvo.ops as it contains a string "func" and "ndarray" in our cases, and the "ndarray" case has some code errors.
The simulation results are different, for the same system, same option, same initial state, the same driving pulse, just the input form of the driving pulse to the mesolve is different, but this should not cause differences in the result.
The simulation result using [ops, func] should be correct, and the case [ops, ndarray] should be wrong.
For [ops, func] case, the simulation result is

which is correct.
For [ops, ndarrray] case, the simulation result is:

which is incorrect.
Looking at it quickly, I see a period of about 0.16 for your wave, but a sampling rate of 0.1` for the array...
This sampling is insufficient to properly represent the wave.
Oh, yes, I increase the sampling rate. Indeed the correct result is recovered. Great thanks
