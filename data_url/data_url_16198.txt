Template substitution where templates have parameters sometimes causes errors. When parameters are present the template substitution first performs a soft match and then solves a system of equations in _attempt_bind to determine if the match is valid. When the whole template is matched this results in a temporary template where all parameters have been bound. For incomplete matches occurring before _attempt_bind the temporary template may still have parameters in it. This causes the template substitution to crash as we cannot invert circuits with parameters.
Perform template matching with a template with parameters that does not result in a complete match.
The code should not crash and furthermore should not use temporary templates after _attempt_bind that still have parameters.
Augment the already existing function _remove_impossible to exclude the temporary templates produced by _attempt_bind that have parameters.
