Currently the specification is clear that a bitstring can be used to initialise classical bit[n] variables:
For convenience, classical registers can be assigned a text string containing zeros and ones of the same length as the size of the register. It is interpreted to assign each bit of the register to corresponding value 0 or 1 in the string, where the least-significant bit is on the right.
(from Classical bits and registers).
There is also a code example in Classical value bit slicing that implies that they are valid elsewhere too:
The first paragraph only says that bit strings can be assigned to classical registers.  I think we mean something more general: a bitstring is a bit[n] literal and is valid whenever a bit[n] value would be valid.  That's implied by the second example, and needed in equality comparisons:
If so, a small text update to clarify this would be good.
@jakelishman are you going to submit a PR that provides the desired clarification?
I'm happy to do it, though I'll wait a bit for others to check if anyone disagrees with what I wrote first.
I agree with your interpretation, @jakelishman.
#337 touches this, and since I need to take over that PR anyway, I'll fix this issue as part of that.
