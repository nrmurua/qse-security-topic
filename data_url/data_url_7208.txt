I would like to apologize in advance if my formatting is not convenient here - I am new to dropping issues here on github and hope that the readability is okay. If you need any more information please let me know!
I had some simple simulations which ran fine for IonSim@0.3.3, but after the update to IonSim@0.4.0, they no longer run.
I have also tried running the examples on the website for IonSim@0.4.0 and they throw an error identical to the one I receive running my code. Reverting to IonSim@0.3.3 fixes the issue for both my own code and for the website examples.
The error QuantumOpticsBase.IncompatibleBases() is thrown on the line
in the following example code. I have many simple simulations like this one which all throw the same error upon the line involving timeevolution.master_dynamic but which involve different numbers of lasers and ions, and different energy levels, laser parameters, etc.
Here is my (cumbersome) stacktrace:
QuantumOpticsBase.IncompatibleBases()
Stacktrace:
[1] check_samebases
@ ~/.julia/packages/QuantumOpticsBase/BsFXI/src/bases.jl:184 [inlined]
[2] check_master(rho0::Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, H::Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, SparseArrays.SparseMatrixCSC{ComplexF64, Int64}}, J::Vector{Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, SparseArrays.SparseMatrixCSC{ComplexF64, Int64}}}, Jdagger::Vector{Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, SparseArrays.SparseMatrixCSC{ComplexF64, Int64}}}, rates::Vector{Float64})
@ QuantumOptics.timeevolution ~/.julia/packages/QuantumOptics/Aep8P/src/master.jl:410
[3] dmaster_h_dynamic!(drho::Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, f::var"#5#6", rates::Nothing, rho::Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, drho_cache::Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, t::Float64)
@ QuantumOptics.timeevolution ~/.julia/packages/QuantumOptics/Aep8P/src/master.jl:372
[4] dmaster_
@ ~/.julia/packages/QuantumOptics/Aep8P/src/master.jl:188 [inlined]
[5] df_
@ ~/.julia/packages/QuantumOptics/Aep8P/src/timeevolution_base.jl:23 [inlined]
[6] ODEFunction
@ ~/.julia/packages/SciMLBase/IJbT7/src/scimlfunctions.jl:1624 [inlined]
[7] initialize!(integrator::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.DP5, true, Matrix{ComplexF64}, Nothing, Float64, SciMLBase.NullParameters, Float64, Float64, Float64, Float64, Vector{Matrix{ComplexF64}}, SciMLBase.ODESolution{ComplexF64, 3, Vector{Matrix{ComplexF64}}, Nothing, Nothing, Vector{Float64}, Vector{Vector{Matrix{ComplexF64}}}, SciMLBase.ODEProblem{Matrix{ComplexF64}, Tuple{Float64, Float64}, true, SciMLBase.NullParameters, SciMLBase.ODEFunction{true, QuantumOptics.timeevolution.var"#df_#3"{QuantumOptics.timeevolution.var"#dmaster_#24"{Nothing, var"#5#6", Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}}, Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}}, LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardODEProblem}, OrdinaryDiffEq.DP5, OrdinaryDiffEq.InterpolationData{SciMLBase.ODEFunction{true, QuantumOptics.timeevolution.var"#df_#3"{QuantumOptics.timeevolution.var"#dmaster_#24"{Nothing, var"#5#6", Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}}, Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}}, LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Vector{Matrix{ComplexF64}}, Vector{Float64}, Vector{Vector{Matrix{ComplexF64}}}, OrdinaryDiffEq.DP5Cache{Matrix{ComplexF64}, Matrix{ComplexF64}, Matrix{ComplexF64}, OrdinaryDiffEq.DP5ConstantCache{Float64, Float64}}}, DiffEqBase.DEStats}, SciMLBase.ODEFunction{true, QuantumOptics.timeevolution.var"#df_#3"{QuantumOptics.timeevolution.var"#dmaster_#24"{Nothing, var"#5#6", Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}}, Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}}, LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, OrdinaryDiffEq.DP5Cache{Matrix{ComplexF64}, Matrix{ComplexF64}, Matrix{ComplexF64}, OrdinaryDiffEq.DP5ConstantCache{Float64, Float64}}, OrdinaryDiffEq.DEOptions{Float64, Float64, Float64, Float64, OrdinaryDiffEq.PIController{Rational{Int64}}, typeof(DiffEqBase.ODE_DEFAULT_NORM), typeof(LinearAlgebra.opnorm), Bool, SciMLBase.CallbackSet{Tuple{}, Tuple{SciMLBase.DiscreteCallback{DiffEqCallbacks.var"#30#31", DiffEqCallbacks.SavingAffect{QuantumOptics.timeevolution.var"#fout_#4"{Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, QuantumOptics.timeevolution.var"#fout#7"}, Float64, Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, DataStructures.BinaryMinHeap{Float64}, Vector{Float64}}, typeof(DiffEqCallbacks.saving_initialize), typeof(SciMLBase.FINALIZE_DEFAULT)}}}, typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), DataStructures.BinaryHeap{Float64, DataStructures.FasterForward}, DataStructures.BinaryHeap{Float64, DataStructures.FasterForward}, Nothing, Nothing, Int64, Tuple{}, Tuple{}, Tuple{}}, Matrix{ComplexF64}, ComplexF64, Nothing, OrdinaryDiffEq.DefaultInit}, cache::OrdinaryDiffEq.DP5Cache{Matrix{ComplexF64}, Matrix{ComplexF64}, Matrix{ComplexF64}, OrdinaryDiffEq.DP5ConstantCache{Float64, Float64}})
@ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/UG9Mz/src/perform_step/low_order_rk_perform_step.jl:791
[8] init(prob::SciMLBase.ODEProblem{Matrix{ComplexF64}, Tuple{Float64, Float64}, true, SciMLBase.NullParameters, SciMLBase.ODEFunction{true, QuantumOptics.timeevolution.var"#df#3"{QuantumOptics.timeevolution.var"#dmaster#24"{Nothing, var"#5#6", Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}}, Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}}, LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardODEProblem}, alg::OrdinaryDiffEq.DP5, timeseries_init::Tuple{}, ts_init::Tuple{}, ks_init::Tuple{}, recompile::Type{Val{true}}; saveat::Tuple{}, tstops::Tuple{}, d_discontinuities::Tuple{}, save_idxs::Nothing, save_everystep::Bool, save_on::Bool, save_start::Bool, save_end::Bool, callback::SciMLBase.CallbackSet{Tuple{}, Tuple{SciMLBase.DiscreteCallback{DiffEqCallbacks.var"#30#31", DiffEqCallbacks.SavingAffect{QuantumOptics.timeevolution.var"#fout_#4"{Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, QuantumOptics.timeevolution.var"#fout#7"}, Float64, Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, DataStructures.BinaryMinHeap{Float64}, Vector{Float64}}, typeof(DiffEqCallbacks.saving_initialize), typeof(SciMLBase.FINALIZE_DEFAULT)}}}, dense::Bool, calck::Bool, dt::Float64, dtmin::Nothing, dtmax::Float64, force_dtmin::Bool, adaptive::Bool, gamma::Rational{Int64}, abstol::Float64, reltol::Float64, qmin::Rational{Int64}, qmax::Int64, qsteady_min::Int64, qsteady_max::Int64, beta1::Nothing, beta2::Nothing, qoldinit::Rational{Int64}, controller::Nothing, fullnormalize::Bool, failfactor::Int64, maxiters::Int64, internalnorm::typeof(DiffEqBase.ODE_DEFAULT_NORM), internalopnorm::typeof(LinearAlgebra.opnorm), isoutofdomain::typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), unstable_check::typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), verbose::Bool, timeseries_errors::Bool, dense_errors::Bool, advance_to_tstop::Bool, stop_at_next_tstop::Bool, initialize_save::Bool, progress::Bool, progress_steps::Int64, progress_name::String, progress_message::typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), userdata::Nothing, allow_extrapolation::Bool, initialize_integrator::Bool, alias_u0::Bool, alias_du0::Bool, initializealg::OrdinaryDiffEq.DefaultInit, kwargs::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
@ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/UG9Mz/src/solve.jl:456
[9] #solve#502
@ ~/.julia/packages/OrdinaryDiffEq/UG9Mz/src/solve.jl:4 [inlined]
[10] #solve_call#28
@ ~/.julia/packages/DiffEqBase/aAyno/src/solve.jl:433 [inlined]
[11] solve_up(prob::SciMLBase.ODEProblem{Matrix{ComplexF64}, Tuple{Float64, Float64}, true, SciMLBase.NullParameters, SciMLBase.ODEFunction{true, QuantumOptics.timeevolution.var"#df#3"{QuantumOptics.timeevolution.var"#dmaster#24"{Nothing, var"#5#6", Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}}, Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}}, LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardODEProblem}, sensealg::Nothing, u0::Matrix{ComplexF64}, p::SciMLBase.NullParameters, args::OrdinaryDiffEq.DP5; kwargs::Base.Pairs{Symbol, Any, NTuple{6, Symbol}, NamedTuple{(:reltol, :abstol, :save_everystep, :save_start, :save_end, :callback), Tuple{Float64, Float64, Bool, Bool, Bool, SciMLBase.CallbackSet{Tuple{}, Tuple{SciMLBase.DiscreteCallback{DiffEqCallbacks.var"#30#31", DiffEqCallbacks.SavingAffect{QuantumOptics.timeevolution.var"#fout_#4"{Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, QuantumOptics.timeevolution.var"#fout#7"}, Float64, Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, DataStructures.BinaryMinHeap{Float64}, Vector{Float64}}, typeof(DiffEqCallbacks.saving_initialize), typeof(SciMLBase.FINALIZE_DEFAULT)}}}}}})
@ DiffEqBase ~/.julia/packages/DiffEqBase/aAyno/src/solve.jl:772
[12] #solve#33
@ ~/.julia/packages/DiffEqBase/aAyno/src/solve.jl:756 [inlined]
[13] integrate(tspan::StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, df::QuantumOptics.timeevolution.var"#dmaster_#24"{Nothing, var"#5#6", Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}}, x0::Matrix{ComplexF64}, state::Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, dstate::Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, fout::QuantumOptics.timeevolution.var"#fout#7"; alg::OrdinaryDiffEq.DP5, steady_state::Bool, tol::Float64, save_everystep::Bool, saveat::StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, callback::Nothing, kwargs::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
@ QuantumOptics.timeevolution ~/.julia/packages/QuantumOptics/Aep8P/src/timeevolution_base.jl:58
[14] integrate(tspan::StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, df::Function, x0::Matrix{ComplexF64}, state::Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, dstate::Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, fout::Function)
@ QuantumOptics.timeevolution ~/.julia/packages/QuantumOptics/Aep8P/src/timeevolution_base.jl:20
[15] #integrate#6
@ ~/.julia/packages/QuantumOptics/Aep8P/src/timeevolution_base.jl:74 [inlined]
[16] integrate
@ ~/.julia/packages/QuantumOptics/Aep8P/src/timeevolution_base.jl:71 [inlined]
[17] integrate_master(tspan::StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, df::Function, rho0::Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, fout::Nothing; kwargs::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
@ QuantumOptics.timeevolution ~/.julia/packages/QuantumOptics/Aep8P/src/master.jl:231
[18] integrate_master
@ ~/.julia/packages/QuantumOptics/Aep8P/src/master.jl:228 [inlined]
[19] #master_dynamic#23
@ ~/.julia/packages/QuantumOptics/Aep8P/src/master.jl:189 [inlined]
[20] master_dynamic(tspan::StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, rho0::Operator{CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, CompositeBasis{Vector{Int64}, Tuple{IonSim.IonInstance{:Ca40}, VibrationalMode, VibrationalMode}}, Matrix{ComplexF64}}, f::Function)
@ QuantumOptics.timeevolution ~/.julia/packages/QuantumOptics/Aep8P/src/master.jl:187
[21] macro expansion
@ In[6]:62 [inlined]
[22] top-level scope
@ timing.jl:220
[23] eval
@ ./boot.jl:373 [inlined]
[24] include_string(mapexpr::typeof(REPL.softscope), mod::Module, code::String, filename::String)
@ Base ./loading.jl:1196
This is weird. The temporary workaround is to use the QuantumOptics.jl samebases macro like this:
I'll try to figure out what's going on. @marwahaha it looks like this has something to do with IonInstance.
Actually, it's still broken. Sorry about that. We might need to revert back to 0.3 @marwahaha
Thanks for letting me know. I'll take a look this week.
Now after https://github.com/HaeffnerLab/IonSim.jl/releases/tag/v0.4.2 it seems to be working.
Nice it got fixed. @jbroz11 could you add a test (perhaps the one that demonstrated the issue) documenting this behavior?
This would have been caught by any of the test_dynamics tests, so we should be good when that's back up and running.
