I don't run windows, so I will have a hard time trying to reproduce this, but it seems as if Picnic is causing memory access violations on MSVC in the Rust wrapper. See the failed builds on open-quantum-safe/liboqs-rust#146 and open-quantum-safe/liboqs-rust#147 and open-quantum-safe/liboqs-rust#149.
see also #1241 and #1237
@thomwiggers : Is there anything more than in https://github.com/open-quantum-safe/liboqs-rust/runs/7301430054?check_suite_focus=true to (try to) understand what's going wrong? @sebastinas FYI... Do you have a windows environment to check this apparent regression? @christianpaquin : Could you help (reproduce/fix) this apparently Windows-specific issue?
From CI, not really. What I would do to try to get a more usable trace, is run the test suite single-threaded (to isolate the failing test, and check if it still happens) and then run it through Valgrind.
oh, but Valgrind doesn't have Windows support...
I've got a Windows VM running somewhere and it's definitely crashing in PicnicL1Fs. Note that the below build doesn't require OpenSSL and disables all other algorithms.

Also, it seems that PicnicL3* and PicnicL5* are not affected
Thanks very much @thomwiggers for these additional infos. @sebastinas FYI above.
I think I've managed to collect some dump files. I'll see if I can figure out some more.
Got to love how the debugger for the Windows 10 SDK is still a Windows 95 program at heart.

Seems as if it's in picnic_mzd_xor_s256_128.

This stack trace is a bit suspect, why does it mention PicnicL5....??????!?
picnic-crash-investigation.zip
I've attached the unit test binary (you can execute it as oqs-<bla>.exe --test-threads 1 PicnicL1Fs::test_signing if you only want to run the offending code). The zip file also contains a memory dump at the moment of the crash, obtained using procdump -ma.
@dstebila : Given we define 0.7.2 as a "security" release, shouldn't this issue become part of the milestone?
I have reproduced the issue locally. I'll update the bug as soon as I have a fix.
