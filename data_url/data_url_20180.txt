Hi!
I've been looking at the library and running some things, and this is a really nice work, so thanks for all!
I recently ran some tests, enabling clang's UndefinedBehaviorSanitizer using the build sequence:
My compiler is clang-11, and arch is x86_64-apple-darwin18.7.0
I ran onto several undefined behaviour, on some algorithms (I'm just pasting only one of each 'family'):
I haven't finish running it all for all tests; but if it is of interest, I can do that.
Hi Sof√≠a! We are aware of some undefined behaviour (#637, #791) but not all of the ones you found, perhaps due to a different version of clang being used.
I've tried fixing the Frodo ones, please see https://github.com/open-quantum-safe/liboqs/tree/ds-frodo-undefined-behaviour.
For SIDH, those should be covered by #637.
For Saber, can you file the bug report in PQClean, as we pull our Saber implementation from there?
We are aware of some undefined behaviour (#637, #791) but not all of the ones you found, perhaps due to a different version of clang being used.
Yes, I think that might be the cause. There was lots of new things added to Clang 10.0: https://releases.llvm.org/10.0.0/tools/clang/docs/ReleaseNotes.html . I'll check if it is possible to add a machine on the CI with clang 11. Will that be of interest?
I've tried fixing the Frodo ones, please see https://github.com/open-quantum-safe/liboqs/tree/ds-frodo-undefined-behaviour.
It is fixed ;)
For Saber, can you file the bug report in PQClean, as we pull our Saber implementation from there?
For sure! I'll open a bug report over there.
Opened the issue over there: PQClean/PQClean#309
Should we close this one then?
Opened the issue over there: PQClean/PQClean#309
Should we close this one then?
I'll keep this open but with a new title for just FireSaber so that we remember to pull that in when it's fixed.
Closing.  This was fixed by #827, and FireSaber passes when I run undefined behaviour sanitizer on current liboqs.
