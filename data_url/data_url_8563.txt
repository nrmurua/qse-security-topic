Hi,
works fine, but gives a MemoryError (in a Jupyter Notebook for instance) as it trying to print the full size matrix.
Maybe above a given size, it would be better to just display the .data (sparse matrix) attribute rather than trying to display the full matrix and raising MemoryError? (plus a sparse matrix may give more information than the full matrix).
It is likely that the 64 million elements it the array are causing the issue.
On Feb 15, 2016, at 08:20, Lucas Verney notifications@github.com wrote:
Hi,
import qutip
qutip.tensor(qutip.destroy(20), qutip.destroy(20), qutip.destroy(20))
works fine, but gives a MemoryError (in a Jupyter Notebook for instance) as it trying to print the full size matrix.
Maybe above a given size, it would be better to just display the .data (sparse matrix) attribute rather than trying to display the full matrix and raising MemoryError? (plus a sparse matrix may give more information than the full matrix).
â€”
Reply to this email directly or view it on GitHub.
Untracked with Trackbuster
Yes, you should avoid printing such a large object. I imagine the memoryerror occurs when it is generating the full() representation for printing
would avoid the object being printed in the notebook.
I have no experience of working with such a large object though, so I can't say that you would be able to anything useful with it.
I'm actually a bit confused about why there would be a MemoryError when outputting in Jupyter Notebook, since Qobj._repr_latex_ currently only converts the first and last five rows and columns. Indeed, when I ran the exact code listed in a Jupyter Notebook, the output was properly truncated to prevent printing a gigantic matrix:

Just to be sure we are talking about the same thing, I was indeed talking about the Jupyter Notebook output (Qobj._repr_latex_), as shown by @cgranade, and not any direct printing (print(Qobj)) or REPL print (qutip.tensor(qutip.destroy(20), qutip.destroy(20), qutip.destroy(20)) in the interpreter).
My issue actually has two points:

I also get no error.  The user already has access to Q.data, so if this is what they want, then it is already available.  I do not see any benefit of changing the display output.
I will close this issue as it looks like there is nothing more to say on the issue.
