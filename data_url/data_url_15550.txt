QuantumCircuit.draw should support drawing the circuit with vertical wires instead of horizontal. This is useful when the length of the circuit exceeds the width of the display area. With horizontal wires, this situation results in line wrapping, but with vertical wires no wrapping would be needed because one can scroll, and it's easier to read the circuit contents that way.
vertical wires no wrapping would be needed because one can scroll
well.. until the amount of qubits gets too big for your screen :)
This is a mayor change. So, here are some alternatives:
Anything beyond that implies rewriting a drawer fully:
Therefore, I think this could be closed as wontfix. The suggestion is good and it comes from an understandable need. I think it could be a good external circuit drawing module. If you think that the mpl options are doable, please feel free to reopen this issue and add change the title accordingly.
@1ucian0 If you agree that the suggestion is good, why close the issue? I understand that you might not think the core developers should spend their time on this, but what if an external contributor wants to? Or even a core contributor on their free time? Would that not be a welcome contribution?
well.. until the amount of qubits gets too big for your screen :)
Indeed, the vertical drawer is most useful for circuits with qubits that fit on the screen. But that is a very important use case.
Did you try the option fold=...? Most (all?) of the drawers support this option to break lines nicely.
Thanks, but that does not achieve the effect I want.
For latex and mpl, we could just flip the result before showing it. This would also change the orientation of the text, of course. Would this be good enough?
That would certainly be a good start. But ideally the text would remain horizontal. So perhaps a transpose option could be easily added for these two cases, with vertical being a longer term project.
for text, it would have to be totally redone.
Perhaps, but let me just point out that Cirq's text diagram drawer supports vertical display and the code is not that complicated. Indeed, Cirq's drawer partly inspired this issue because I find it very useful and nice.
for latex, the qcircuit package we are using does not fully support vertical circuits (for example, with measurement as described section IV.B of the documentation), so an alternative package would be needed.
I've had good experiences using qpic.
If you think that the mpl options are doable, please feel free to reopen this issue and add change the title accordingly.
I don't have permission to reopen the issue.
Would [vertical drawers] not be a welcome contribution?
To put it a little bluntly, yes, it wouldn't be welcome in Terra, but that's not at all because it's not useful.  We'd love to see a more complete external library for circuit visualisation, where a separate set of maintainers could give it the time it needs, but that's not what Terra is.  We already struggle enough to maintain the limited visualisation support we offer, and only cope through the contributions of a very dedicated external contributor.
We're open source, but we still need to manage our priorities, and somebody putting in a lot of effort doesn't make Terra the best fit for a feature.  We have a list of contributions that we'd find useful, including features we'd be happy to accept - those are the issues tagged with "help wanted" or assigned to somebody.  We need to close issues that we wouldn't be happy to accept, to make it clear for people who come looking that this isn't something we'd like to add.
Indeed, the vertical drawer is most useful for circuits with qubits that fit on the screen. But that is a very important use case.
This isn't meant as discouragement at all, just a design point to consider: even with only small numbers of qubits, things like register names and instruction names would probably be displayed horizontally in a text-mode drawer, and those can be arbitrarily wide (and for high-level instructions often are).  A vertical-mode drawer probably still needs to consider how it will handle wrapping, even if its intent is only to support small numbers of qubits.
Thanks for the explanation, that is helpful. @1ucian0 and I had some discussion offline and we agreed to leave this issue closed and instead open two new ones:
