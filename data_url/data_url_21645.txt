In order to deal with hardware such as the AD9910, here is a proposed mechanism to support atomic RTIO transactions series (i.e. a sequence of transactions is either executed completely or not at all).
This is used in kernels like this:
The main drawbacks of this scheme are:
Alternatively, buffer whole atomic transaction series at the rtlink level (with a fixed buffer depth/latency) and ensures that each series is between start/commit tokens. This can be done using locally-generated sequence numbers for an efficient FPGA implementation. This has less performance overhead, is easier to use correctly in the driver, and allows timeline rewinds, but uses more FPGA resources, increases latency, and imposes an additional length limit on the atomic transaction series.
In the case of Urukul (with short atomic transaction series), the drawbacks sound reasonable though.
