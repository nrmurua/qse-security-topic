count_ops should use a ordered dict with the order set by the number of times the gate is used in the circuit.
Isn't this penalizing every count_ops user? Should the user preferring the ordered dict do that themselves instead of extending the promise of our API?
What is the penalty here?  It just sets an order verses how the gates are arranged in a circuit. The output can still be accessed like any dict.
I dont have numbers (I can get some later), but dict is implemented in C while OrderedDict is written in Python, wrapping a dict.
Have you actually looked at what was modified?  If so you would see it is a simple conversion involving at most 10-15 or so elements.
okey.. I updated the docstring and the test.
