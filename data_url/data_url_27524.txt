I have to calculate first (y^x \mod G)'s for each thread efficiently.
To realize it, prepare an array {y \mod G, y^2 \mod G, y^4 \mod G, ..., y^{2^n} \mod G}.
Then check the first value of x for each thread and construct y^x \mod G from the array.
The problem is how to calculate the first value of x for each thread.
It is easy to implement it for sequential version and parallel-but-non-OpenMP version.
However, up to now I don't know how to know it in the case of OpenMP version.
I have to read the specification of OpenMP.
Possibly I have to implement a function different from the present one loop_n.
MPI parallelization is the other problem.
Current implementation is to calculate index for each MPI process and check if it is in the process.
Maybe it is impossible to implement MPI parallelization efficiently...
