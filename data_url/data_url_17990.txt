After #686, job properties were changed to methods (job.id() and job.status() instead of job.id and job.status).
But for backends, the user still has to write backend.status, etc.
These should be made consistent to avoid confusion.
I would vote for removing properties that could potentially throw and I see that every property in backend could potentially throw. Not sure how this breaking change would impact users code, though.
I would not convert job.id() and job.status() into properties again since they can throw and properties are like instance members for the user, and they must not throw.
That said, consistency is a great argument for changing an API, and I'm inclined towards converting backend.status into a method but we should also evaluate how many users would be affected by this change. If we think a big number of people would be affected, it is preferable to add a deprecation warning and remove in the next version perhaps.
I agree I think we should convert backend.status into a method because it can throw. As it is a breaking change, we should make sure it is part of the 0.6 release. It is used fairly often I would say, so a DeprecationWarning would be nice.
We should do this for all backend properties: backend.status, backend.configuration, backend.calibration, backend.parameters. Maybe backend.name too for consistency?
Correct me if I'm wrong but we can not add deprecation warnings since this is a change of syntax (no way of distinguishing when the user is using backend.status or backend.status()), should we keep some deprecation warnings during 0.6 and switch to methods by 0.7. What do you think?
Because it is a version issue, it should be scheduled for 0.6.
