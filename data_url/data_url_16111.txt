The OptimizeSwapBeforeMeasure pass is supposed to commute quantum SWAP gates that immediately precede measurements, past the measurements, and instead convert them to classical swap (i.e.just retarget the measurement clbit).
However this should be generalized to work with any permutation that happens before the measurements, not just one swap layer. I made this work by invoking it many times for the example below, but really one invocation should be smart enough to remove all the swaps (that whole swap network should be modeled as a permutation).
Hi, i can take this one, i think putting a loop on top of this pass is enough.
i think putting a loop on top of this pass is enough.
I think the "permutation model" that @ajavadia is suggesting would allow to run this in a single pass over the circuit. You need to bookkeep the permutations that each swap is inserted and, at the end, move the measurement.
@1ucian0 i meant, i want to add a loop with a number of iterations equal to dag.depth() directly in the OptimizeSwapBeforeMeasure code but reversing the dag would also work.
