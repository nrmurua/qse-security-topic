We introduced the noise model functionality to pyQuil back in February 2018, along with our release of Forest 1.3. Since then, we have made a good number of changes to the structure of pyQuil, and it seems that the noise model functionality has been neglected. We are looking to reinvigorate this component of our SDK, as there have been many external feature requests related to noise models, and we additionally have made strides internally on noise-related projects.
Tasks:
Currently, the QuantumComputer object can be "noisy", meaning that it has a noise model lodged inside of it as a class attribute. However, all this means is that it handles the application of the noise model to the user-supplied Program object at runtime. This has caused some user confusion, and we may want to consider bringing noise models back "into the open" as they were in the past. But, it would be great to better understand use cases that might prefer the stateful QC approach.
Additionally, I know that @sophiaponte and @kilimanjaro have been doing some exciting innovation w.r.t. the way in which we define, compose, and apply noise models, so it would be great to get their input on this issue.
