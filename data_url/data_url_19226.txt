By using this function I have noticed an exponential scaling in runtime with $n$ and $t$.
Here are several improvements to its auxiliary functions that can reduce runtime significantly:
My next point is more of a logical bug than an enhancement:
What do you think @AlejandroSopena ?
I agree with the first two comments. I was aware of the expression of the $t$-momentum operator for Haar random states in terms of the projector onto the symmetric subspace. I implemented it through sampling (without really considering the scaling) because it seemed easier for coding but it would be good to have the exact method,
Regarding the pcq_integral, it is typically calculated over the ensemble of states generated by randomly sampling the parameter space (see ZoÃ« (expressibility and BP) and expressibility and entanglement) It might be useful to introduce other distributions and the option to sample from the single qubit Haar measure for completeness.
I can take care of these improvements.
Thanks @AlejandroSopena.
Regarding the literature, let me ask you a question since you're more familiar with it: how do people square the idea of sampling uniformly over the parameters with that fact that this procedure does not lead to a uniform sampling over the states the circuit can create?
EDIT: I was checking the first reference you sent and Section II-B says
$dU$ is the volume element corresponding to the uniform distribution over $\mathbb{U}$
which is exactly what I was saying in the comment above. The distribution is uniform over the set of unitaries accessible by that circuit, not over the parameters.
