Description of the issue
I'm not sure if this actually counts a bug, but it's an inconvenience, and I'm not sure what would be the best way to handle it.
Some docstrings in Cirq, e.g. cirq.circuits.optimization_pass.PointOptimizer.optimization_at:7 have indentations in them that cause Sphinx to emit "Unexpected indentation" warnings when it processes them.
Docstrings are inherited by child classes, so when you inherit a Cirq class with such a docstring, and try to build API docs for the child class using Sphinx, you get these warnings unless you override the offending docstring.
For example, assume we have class DerivedClass(cirq.PointOptimizer):
Cirq version
0.11.0
Cirq's devsite doesn't rely on Sphinx, so I'm not sure whether we want to restrict our docstrings to Sphinx format. Is there a way to silence these warnings in your environment?
Otherwise, to enforce Sphinx formatting you would need to modify check/format-incremental to verify Sphinx format in default mode, or auto-format if the --apply flag is provided. This is what allows us to enforce other formatting standard (black, flynt) without putting undue load on contributors to format their code.
I'm guessing the underlying issue here is that the optimization_at docstring contains a code snippet with a hanging indent:
If there's a way to actually mark this as code (or pre-formatted text) instead of just regular text, I bet that would fix it. As @95-martin-orion said we would need to mark this in a way that our devsite doc tooling understands; whether that would work for sphinx as well I don't know.
If there's a way to actually mark this as code (or pre-formatted text) instead of just regular text, I bet that would fix it. As @95-martin-orion said we would need to mark this in a way that our devsite doc tooling understands; whether that would work for sphinx as well I don't know.
For Sphinx, this would happen using a code-block directive, i.e.
https://www.sphinx-doc.org/en/master/usage/restructuredtext/directives.html?highlight=code-block#directive-code-block
A reST literal block would also work: https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html#rst-literal-blocks
