When creating a creation operator:
the returned object has a sparse CSC matrix as data property.
When this is added to a CSR matrix Qobj from the left, the result is still CSC.
For many use cases, this isn't a problem, except for mcsolve:
mcsolve produces non-sensical results when this happens because it basically operates with a transposed version of the operator represented as CSC.
Addressed in pull request: #210
This is because we transpose the data of the destruction operator which
just returns a csc from a csr.
Good find! And easy to fix!
Paul
On Aug 5, 2014 5:01 AM, "Nikolas Tezak" notifications@github.com wrote:
When creating a creation operator:
ad = create(10)
the returned object has a sparse CSC matrix as data property.
When this is added to a CSR matrix Qobj from the left, the result is
still CSR.
For most use cases, this isn't a problem, except for mcsolve:
mcsolve produces non-sensical results when this happens because it
basically operates with a transposed version of the operator represented as
CSC.
â€”
Reply to this email directly or view it on GitHub
#209.
I don't think that type checking should be done in the mcsolver.  Instead we should just unit test the operators themselves.  The reason that this happened is because we bypassed the checks done by the Qobj class by operating on the underlying data itself.  For most users, this will never be an issue.
Sounds reasonable!
