Follow up to #3313
1- square, sawtooth, triangle are defined in terms of period, but sin, cos are defined in terms of frequency.
2- another initial discontinuity:

I can have a look at this over the weekend, if it's still open?
This is still open if you want to take it on. These could be done in two separate PR to separate the complexity.
Yes, I'll try my best - updating you when I have something more!
Quick question @taalexander - Should we allow square , sawtooth and triangle to still take period as an argument, with a DeprecationWarning, or only allow freq as argument?
I'm not certain as these pulses are not often used and to allow this we would have to change the order of arguments as we would have to allow None for both freq and period. I've asked for input on my review from @lcapelluto as she is better versed in graceful deprecations.
For part 2:
The simplest way would be to make a new function, _fix_gaussian_deriv_width() that subtracts the value of gaussian_deriv at zeroed_width/2, from the absolute value of the gaussian_deriv.
This will introduce a discontinuity in the pulse at the center of the pulse, where the derivative of the gaussian crosses 0. I assume that is inconvenient.
An alternative route would be to take the derivative of the corrected gaussian, instead of calling gaussian_deriv with the same parameters (as gaussian_deriv creates a new instance of a gaussian pulse. This would probably work better, seeing as it corresponds to the gaussian pulse component of drag, but we will still have a discontinuity at the edges.
Do you have any suggestions for how to address this @taalexander?
I believe first of all we should introduce a new set of pulse functions, ZeroedGaussian, ZeroedGaussianSquare, ZeroedDRAG and there associated parametric pulses so that it is absolutely clear that the pulse shapes are being zeroed. I have created issue #3742 for this.
I believe the solution for the gaussian derivative and generally any antisymettric component is to subtract g(-1) for (t < width/2) and g(width+1) for (t>= width/2).
I believe this can be generalized to any linear combination of symmetric and anti-symmetric pulse functions that share a duration and can be derived from the assumption that we want our zeroed pulse to satisfy f(-1) = 0, f(width+1) = 0 and f(t)-g(t)= c such that the separation of all pulse samples remains constant pre and post lowering. Here g(t) is the un-zeroed pulse, eg., the gaussian derivative or gaussian pulse.
I believe the solution for the gaussian derivative and generally any antisymettric component is to subtract g(-1) for (t < width/2) and g(width+1) for (t>= width/2).
I think it's a good approach for generalization, especially for positive functions, but it doesn't solve the discontinuity issue when g(t)=0 which in this case is at t = width.
Either way, I guess we can move this discussion to #3742, and close this issue? I don't see any reason to double the work on this if we'll remove it in a future PR.
Ok, let's move the discussion over there ðŸ˜„.
