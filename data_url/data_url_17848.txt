As I am working on building result objects, I encountered a few things about the qobj schema which need clarifying:
 The global level config currently has memory_slots as a required field. This should be on a per-experiment basis however. Each experiment is different in terms of classical bits it uses. It doesn't make much sense to define a global memory_slots.
 The n_qubits is currently part of header, meaning it shouldn't be used by the experiment. But I think this should actually be part of the experiment config. Simulators need to know the n_qubits. Otherwise, they would have to infer it from the register indices of the gates, which is not accurate (the user makes a 5 qubit circuit but only acts on the first 3 qubits. the statevector should still be of length 32). @chriseclectic brought this up before as well.
Regarding the first point, the only question would be whether this puts a constraint on the hardware that will be hard to satisfy, but I don't think it will.
For the second point I would make that a required part of the simulator configuration spec which can be different.
For the first one, I'll go ahead and fix then. Any hardware constraint is not going to be solved by putting the number of memory_slots at the global level. That's just a max of the number of memory slots per experiment anyway.
For the second one, I agree the device will always ignore n_qubits. So I'm good with not including it as required in the schema. But still, I think I should modify the qiskit compiler such that this information always gets written in the experiment config. Soon, we will remove any information about what the backend is from compile(), and just compile for a given coupling_map, basis_gates, etc. (see #978). Therefore, we have to decide whether the compiler writes this information in the qobj regardless of the backend.
