I am currently seeing
QiskitError: 'Unknown fitter <qiskit.ignis.mitigation.measurement.fitters.CompleteMeasFitter object at 0x7fcbcace6c40>'
error, when I pass an qiskit.ignis.mitigation.measurement.fitters.CompleteMeasFitter  object as a value to the parameter measurement_error_mitigation_cls  in the constructor of QuantumInstance and use the QuantumInstance object with QuantumKernel.evaluate() .
It should not throw any runtime error.
CompleteMeasFitter incorrectly imported in measurement_error_mitigation.py. At line # 141 of measurement_error_mitigation.py, CompleteMeasFitter should be imported from qiskit.ignis.mitigation.measurement.fitters instead of qiskit.ignis.mitigation.measurement.
May I work on this @omarshehab ?
I think that the following PR should handle this issue: #6867
(note that qiskit-ignis is going to be deprecated)
Okayy üëç
PR #6867 is part of the next release 0.19: https://github.com/Qiskit/qiskit-terra/milestone/18
Can you check with the latest version of qiskit - 0.18.1 (you say you have 0.18.0). The issue you describe was fixed
See https://qiskit.org/documentation/release_notes.html#bug-fixes
Fixed an issue where the QuantumInstance class would potentially try to use the CompleteMeasFitter class before it was imported resulting in an error. Fixed #6774
@woodsp-ibm , I received the same error with Qiskit Terra 0.18.1.
It sounds like you're passing an instance, but the code wants the actual class (i.e. pass CompleteMeasFitter directly). The error you reported is consistent with the import having succeeded, but the wrong value having been passed.
(by the way, for reproducibility, it can be a little easier for us if you're able to provide a minimal complete block of code to read and copy/paste, rather than trying to interpret text)
@jakelishman , I have attached the MWE code here.
qsvm-readout-error-mitigation-mwe.ipynb.zip
That's not exactly a MWE, but I can see you are setting measurement_error_mitigation_class to an instance of CompleteMeasFitter, but it's meant to be the class (type).  You need to pass CompleteMeasFitter to construct QuantumInstance, not a constructed instance of it.
If an example would be helpful for how to use it see this tutorial https://qiskit.org/documentation/tutorials/algorithms/03_vqe_simulation_with_noise.html#Performance-with-noise-and-measurement-error-mitigation
@woodsp-ibm , I modified the statement to create QuantumInstance as follows.
Currently, I am getting the following error.
@omarshehab - you cannot have a noise model with ibmq backend, only with Aer simulator:
backend = Aer.get_backend('aer_simulator')
the ibmq devices already have noise inside them :)
so, you should either choose an ibmq backend, or Aer simulator with a noise model
please look again at the tutorial suggested above.
I'm closing this now, because I think that if there was a bug, it was fixed, and the other issues were due to problems with the usage.  Please feel free to re-open this or another issue if that's not the case.
