The Z2Symmetries are the last piece of code coupling the algorithms and application modules to qiskit.opflow instead of qiskit.quantum_info. Refactoring that class to be based on SparsePauliOp instead of PauliSumOp will allow us to remove this final dependence and, thus, will clear the path towards deprecating qiskit.opflow.
To solve this, we need to do the following:
If it's quantum-info related and uses only quantum_info classes, perhaps somewhere in qiskit.quantum_info makes most sense?
Ideally I'd like us to avoid putting more calculation code in qiskit.utils - it's in a weird state right now where it's both the bottom of the package stack (things like the lazy optional checkers and deprecation utilities) and the top of the stack (QuantumInstance, error mitigation).  The top-of-stack bits largely came from the Aqua and Ignis migrations, which is understandable, but now it causes long import cycles that frequently trip us up.
I guess one option would be something along the lines of qiskit/quantum_info/analysis/z2_symmetries.py
which in turn contains the Z2Symmetries class we currently have in opflow (or an improved version thereof).
@mrossinek, I can work on this isssue
