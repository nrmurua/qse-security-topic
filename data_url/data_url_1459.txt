Describe your design idea/issue
Should noise model application be moved to a transformer rather than done by the simulator? In the spirit of keeping simulators simple. While we have a central point of noise application in cirq that all simulators inherit, it's still only usable by Python simulators and requires duplication of all that logic in qsim. It seems more flexible to do this application in a circuit transformer before feeding it into the simulator. This also allows for easily composing noise models, inspection and serialization of what the noise models produce, etc. It also makes it easier/safer to introduce custom modes of noise application (prefix vs postfix, apply or not to subcircuits) since all you have to do is make a new transformer rather than inject it into simulator code.
Downside is that the existing model where the simulator has the noise model, maps closer conceptually to how things work in reality. And for users that have lots of circuits they want to simulate with the same noise model, it's perhaps easier to instantiate the simulator once with noise, rather than transform all the circuits.
@95-martin-orion Do you have any opinion here? We can close this without triage if you think noise should stay in the simulators.
We already support both modes: you can assign noise to a simulator OR manually apply it to the circuit. I think we should keep both modes, since simulator+noise is better for "pseudo-hardware" applications and circuit+noise is better for inspecting the circuit behavior.
There's an interesting question here about converting noise models to use the Transformer API, but I'm pretty sure Tanuj is already addressing that as part of the Transformers change.
