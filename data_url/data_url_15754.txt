mostly the title, can qiskit.circuit.quantumcircuit.QuantumCircuit.assign_parameters and qiskit.circuit.quantumcircuit.QuantumCircuit.bind_parameters be merged? Their names do not highlight their differences.
Really they do exactly the same thing, except bind raises TypeError if any of the given values aren't numeric.  bind_parameters definitely seems like it could be removed, as long as we make sure there's a reliable way to query if a circuit contains unbound parameters.
@1ucian0 may I have a go at this?
Let's allow some time for discussion on the preferred direction first, if you don't mind.
Agree these two strongly overlap now. There was originally a justification in #4037 for leaving them separate, in that the behavior of assign_ was planned to evolve to include cases where assigning parameters would not necessarily remove them from the circuit, but leave them in place so that once a circuit was evaluated under a given parameterization, they could be re-assigned without requiring the circuit to be copied. This still seems like a valid use case, given the heavy performance cost of copying circuits.
@Cryoris Any thoughts on whether or not this something that's needed, and if so, if assign_parameters  (or somewhere else) is the right place for it?
[...] where assigning parameters would not necessarily remove them from the circuit, but leave them in place so that once a circuit was evaluated under a given parameterization, they could be re-assigned without requiring the circuit to be copied
I think that's still a valid use-case. To clarify, we would distinguish into the following:
Since I think this assigning makes only sense for numeric values (I cannot assign theta: theta2) we could alternatively also always use assign and add some other methods to "collapse" the parameters with their values. Like
I would not want them to be merged. For example, suppose you have an ansatz that takes two Parameters. With assign_parameters, I can use assign to get a different quantum circuit each time without the need to rebuild the circuit. With bind_parameters, the circuit is now concrete, I could not reuse it to bind some other parameter. Then I will have to rebuild it from scratch. I think these two methods are different and both useful.
