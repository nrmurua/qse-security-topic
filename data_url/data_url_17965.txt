A utility method [set_qiskit_logger()](https://github.com/Qiskit/qiskit-terra/blob/cac7c6a2631d76ef3e811a5c943a2b9101fed240/qiskit/_logging.py#L48) exists to log qiskit-terra's execution flow.
It has room for improvement, namely:
Yes! Actually, with the removal of QuantumProgram, it might be worth just assume that the user will use the facilities provided by Python for dealing with logger levels directly (for example, the case that you mention of only turning logging on for a specific module would be possible - most IDEs, etc will have facilities for those as well) instead of providing the functions. These have always been "convenience functions", but were more relevant with QuantumProgram as it acted as a central "god object" of sorts - now their purpose seems a bit more diluted indeed (and we might end up reinventing the wheel if we implement more logic there).
I'd actually lean towards either removing the functions, or move them to the wrapper layer (and perhaps also make a round of revising how we are using log.info vs log.debug, etc to try to reduce the default verbosity): if there is a need for "easy toggle" of logging, they can use it from the wrapper, and if the user needs finer grained control (or they are using terra fully as a library) they should just use the standard Python mechanisms directly.
Removing the discussion label, since the wrapper is not a thing that exists anymore. The problem of "fixing" the logger still exists tho. Probably, the best would be to remove it all together...
