Currently, our platform specific configurations are defined as scripts, e.g. quantinuum. These files can define a specific pass pipeline using the PLATFORM_LOWERING_CONFIG variable. However, the use of pass options breaks the JIT compilation of kernels.
The problem is that the RemoteRESTQPU class will parse this file and split the line with this variable on =:

Since a pass with an option will have the form pass-name{option=value} this breaks the pipeline too.
Add a pass with an option to the PLATFORM_LOWERING_CONFIG variable.
We need to be able to accept pass with options.
Not a regression
No response
Sounds like fixing this will be the impetus to introduce some other file format for the MLIR Pass pipeline. PLATFORM_LOWERING_CONFIG=pipelineFile.txt or something
I think you can just look for the first = and take the remainder of the line as the pass pipeline, no? (In other words, the regex expression approach is getting in the way.)
Sounds like fixing this will be the impetus to introduce some other file format for the MLIR Pass pipeline. PLATFORM_LOWERING_CONFIG=pipelineFile.txt or something
My idea was a quick-fix in line of what @schweitzpgi is suggesting. Leaving a the creation a new configuration file for when we discuss the nvq++ driver.
