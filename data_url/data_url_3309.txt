All of our QCS API needs should be handled by the new Rust QCS SDK. There are still a few places we use the qcs-api-client to call out to QCS that we need to migrate into qcs-sdk-rust.
api._qcs_client exports the qcs_client context manager, which is used in various places to make different kinds of requests to QCS. Replacing each of those and cleaning up the associated tests and unused imports should allow us to remove the dependency entirely. In the spirit of breaking down the work, each of these tasks will have it's own issue:
I'm a bit confused, do we want to create python bindings for all (or a subset) of qcs-api-client-openapi and/or qcs-api-client-common crates and then re-export those via qcs-sdk-python?
I would expect that qcs-api-client would keep parity, since both are based on the OpenAPI specification
I'm a bit confused [...]
After discussion, it's more reasonable to simply add the exact functionality needed in qcs-sdk-rust, which already includes qcs-api-client-openapi, rather that trying to blanket the api-client crate in bindings and reexport it wholesale.
Resolved by #1550
