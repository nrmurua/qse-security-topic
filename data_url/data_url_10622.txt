Currently this package only relies directly on NetworkX for one function, common_working_graph(). We could consider migrating that function to dwave-networkx. By doing so, we would not have a direct dependency on NetworkX - potentially lightening the maintenance load. See for instance dwavesystems/dwave-networkx#221.
On the other hand, while that is the only place in the package we directly rely on NetworkX there are many places in the docs/tests that do use NetworkX directly, not to mention the many places that we rely on it transitively. So perhaps delegating version maintenance/testing to dwave-networkx/dimod/etc would just increase the probability of bugs.
Ironically, it seems that common_working_graph() was originally slated for dwave-networkx. See #179, dwavesystems/dwave-networkx#117. I have no recollection as to why we moved it.
Also, looks like networkx.intersection could more or less be a drop-in replacement for common_working_graph.
