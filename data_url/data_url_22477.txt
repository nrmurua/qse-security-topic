Ah, yes, I remembered why this happens.
The problem is that, to prevent massive code duplication, the contents of the finally block are only codegen'd once. Of course, this prevents any flow analysis that only takes into account one previous block (as opposed to some longer path) from being very precise.
We could solve this easily at the cost of duplicating the contents of finally for every except clause plus once for try body. Ideally, this deduplication is something that should happen at a later stage, maybe even in LLVM, but the practical considerations are such that optimization passes aren't smart enough to do this transformation. It goes something like...
to
and it's pretty hard to do automatically.
Generally I think there are a few things we can do.
Okay. If the situation is understood and there is no bug hidden under this, the current behavior is fine as the user code is easy to adapt.
