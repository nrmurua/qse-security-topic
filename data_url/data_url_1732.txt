A recurring issue in Cirq is that we deprecate something, but continue to use it in other code within Cirq (e.g. #3847 ). This creates false positive deprecation warnings for users of the code. We should ensure this never happens by turning such usages into errors during unit tests.
I'm not sure exactly how to go about implementing this, but e.g. the deprecated decorator that we use could check if it is running in "check mode" by looking for an environment flag that is set by the continuous integration system. Note that there needs to be an escape hatch that a test can use when it is explicitly checking that the deprecated function is forwarded correctly. For example, a with cirq.testing.ExpectDeprecatedCall() context manager that sets a flag that the @deprecated decorator can look for.
+1. We have functions to do exactly this internally and it's very helpful.
+1 - I would do this before the release.
