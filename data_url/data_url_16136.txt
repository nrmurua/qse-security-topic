There is a lot of duplicate code among Operator and QuantumChannel class:
Since Operator can always be converted to QuantumChannel,
the change of superclass can be considered:
Operator(QuantumChannel) instead of Operator(BaseOperator, TolerancesMixin).
PS: It is rather a point for discussion, as it may have other drawbacks.
@molar-volume I'm fairly new to quantum computing but would like to contribute where I can. This seems like a good place to start. Can I work on this issue if this is a change the qiskit team is considering?
Thanks. I think we need more discussion here. This is related to MuliplyMixin and LinearMixin.
@chriseclectic What do you think about this?
I agree there is a lot of duplication that could do with cleaning up, and this process is underway and will be done over several PR over next couple of releases (the PR @ikkoham points to is one example).
That said, the particular solution suggested here would not work. It is backwards from a dependency point of view: An Operator can be considered a channel, but a channel cannot always be converted to an Operator. For example, code like this would break if the input was a channel:
A large part of the reason for moving to the mixin design is for reducing this sort of code duplication for API elements while avoiding the subclass inheritance issues when used for isinstance checking. Further down the road I plan to add something like an Array mixin or ArrayOp base class that can be used as an ABC for array/matrix based operators, but there are a few other things that need to be done first.
If operator can be considered a quantum channel, then following dependency makes sense:
Your example would break for most classes that have common superclass.
But if we require that subclasses of QuantumChannel must always transform to each other,
then Operator does not belong there.
I don't think Operator can be considered a QuantumChannel. For example, trace-preserving and completely-positive are concepts of QuantumChannel, but operator does not have. Converse may be hold. (But I don't recommend it.)
Hi @ikkoham,
actually in https://github.com/Qiskit/qiskit-terra/blob/master/qiskit/quantum_info/operators/measures.py#L93-L121
completely-positive and trace-preserving properties are validated for Operator as well, and in module transformations.py, Operator can be converted to any channel.
I found this issue worth to discuss, if you don't consider this change for better, you can close it.
@molar-volume Yes. Thank you so much for the discussion.
@Qiskit/terra-core Please close this issue.
