Should not it be:
in matching.py line +505:
if isinstance(p_meas, (int, float, np.integer, np.floating)):
p_meas = np.ones(H.shape[0], dtype=float)
---------------->
if isinstance(p_meas, (int, float, np.integer, np.floating)):
p_meas = np.ones(H.shape[0], dtype=float) * p_meas
One question: given error_probabilities p, we can extract weights; but we require to give these two parameters separately. can they have different meaning?
Oops good catch, that will be fixed in the next release.
As to your question: the weights are used by the decoder (Matching.decode), whereas the error_probabilities are optional and not used by the decoder, and are only used/needed for sampling (Matching.add_noise). Usually if an edge has error probability p, then you should set the weight to the log-likelihood ratio log((1-p)/p), but that needn't always be the case - for example for a MWPM-based decoder that takes into account hyperedge ("correlated") fault mechanisms, you might want to re-weight the edges after observing the syndrome.
This is fixed and the fix will be in the next release
