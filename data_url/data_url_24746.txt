There are cases where you want to translate f.i. a SequencePulseTemplate or a RepetitionPulseTemplate into a single waveform. Therefore it is useful to make this property not a class like AtomicPulseTemplate but a property that is either
The is_interruptable property of PulseTemplate is intended to express this (but maybe the name is confusing). It indicates whether or not a PulseTemplate can be split into several waveforms (and therefore execution of it can be interrupted by the Sequencer).
It currently behaves like this:
Good point. I thought of the is_interruptable property more as of a hint than a strict order intended for the case that there are parameters that depend on a condition and the translation process needs to be interrupted. The atomicity flag on the other hand indicates that the PulseTemplate always is translated to one waveform.
I think that should pretty much amount to the same.
Solved by _is_atomic method for itnernal purposes for now
