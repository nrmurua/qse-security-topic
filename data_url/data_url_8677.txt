Importing the full scipy package AFTER importing qutip causes a namespace conflict between the identity operator function in qutip identity() and the identity array function in scipy with the same name.
Yes, this can happen.. But I dont think this is a bug or error, although it can be confusing. There is always a risk of namespace collisions when importing different packages into the global namespace. For example, many conflicts of this kind occur between the math and numpy packages.. The only way to get around it safely is to import packages in different namespaces.
But it seems to me that it would be best to avoid this type of issue when possible.  For example, the squeezing operator is called squeez just to get around a namespace conflict.  Otherwise people are bound to get errors that don't make any sense just because of the import order and then they will be emailing us.  Of course we can not avoid all conflicts, but since loading scipy is so fundamental to what we do, having no conflicts with this package seems to be reasonable, at least to me.
On Wednesday, June 5, 2013 at 11:12 AM, Robert Johansson wrote:
Yes, this can happen.. But I dont think this is a bug or error, although it can be confusing. There is always a risk of namespace collisions when importing different packages into the global namespace. For example, many conflicts of this kind occur between the math and numpy packages.. The only way to get around it safely is to import packages in different namespaces.
—
Reply to this email directly or view it on GitHub (#25 (comment)).
I would have preferred if the squeez function was called squeeze... but that's just a personal preference. There are many very generic symbol names in qutip, such as tensor, create, etc. These could easily appear in some other package, such as scipy or numpy sometime in the future, and then become a conflict, so I tend to prefer not relying on distorting the function names to make them more unique. For example, identity seems more readable to qeye, which is why i prefer it.
What is your suggestion? That we remove identity again? If you think that's the best thing to do that I'm ok with that.
However, if best practices python programming is followed, either by not importing into the global namespace or by importing packages in dependency order (for example numpy, matplotlob, scipy. followed by qutip), then this isn't really a problem.
Well how about we just stick with the way it is, change squeez to squeeze in the next release (with squeez depreciated and calling the new version), and mentioning in the docs that qutip should probably be imported last?
On Wednesday, June 5, 2013 at 11:54 AM, Robert Johansson wrote:
I would have preferred if the squeez function was called squeeze... but that's just a personal preference. There are many very generic symbol names in qutip, such as tensor, create, etc. These could easily appear in some other package, such as scipy or numpy sometime in the future, and then become a conflict, so I tend to prefer not relying on distorting the function names to make them more unique. For example, identity seems more readable to qeye, which is why i prefer it.
What is your suggestion? That we remove identity again? If you think that's the best thing to do that I'm ok with that.
However, if best practices python programming is followed, either by not importing into the global namespace or by importing packages in dependency order (for example numpy, matplotlob, scipy. followed by qutip), then this isn't really a problem.
—
Reply to this email directly or view it on GitHub (#25 (comment)).
Sounds good to me. We do need stress this in the manual, that qutip should be imported last, that's a good point.
