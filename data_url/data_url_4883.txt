The backend statevec_swapQubitAmps implementation (called by swapGate) assumes pairwise communication. This is despite it being known that not all communicated amplitudes are used by the recipient node.
There are non-trivial scenarios (exposed in the distributed manuscript) where nodes contain only amplitudes ignored by their recipients. Hence, these nodes should avoid communicating at all to, in some instances, significantly reduce network traffic. This is a (relatively) complicated but worthwhile optimisation, since it may impact the performance of calling methods like multiQubitUnitary.
Note this is a distinct optimisation from sending only pertinent amplitudes in any round of communication, which would require compacting and un-compacting amplitude arrays and general poor memory access. Instead, I here propose we (needlessly) send all amplitudes if even a single local one is used by the recipient node; but if none are needed, we do not communicate at all.
In retrospect, the latter mentioned optimisation could be very worthwhile, if the penalty of memory communicating and subsequent non-contiguous striding exceeds the additional amp-updating-loop complexity. And I believe it will! Implement and test
