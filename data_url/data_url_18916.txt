To support non-discriminated values we probably need a complex type. I started to write this, but then realized how much bikeshedding there would be:
(Incomplete) list of bikeshedding:
I worry that introducing operations on complex numbers rather than just a constant time representation + kernel functions supported by the backend may be adding additional complexity we should avoid on a first pass.
It would be reasonable to say that this is just an opaque value that you can pass from one function to another, but not perform math on it (for now)
On the other hand, I think it becomes more and more important with the signal formalism. I'm more and more onboard for including complex types in the same way as floats and other types. To begin with, we could avoid defining any specialized operations on them for simplicity if desired.
Closing as this is addressed in #175
