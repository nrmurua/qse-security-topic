Do different factories sample different points? I used ZNE with a polynomial factory and a linear factory with the same scale_factors, yet the points they use look different. Is this supposed to happen? If so, can someone explain why? Isn't it impossible to compare the effectiveness of different factories if they use different points for extrapolation?


Hello @atmalik123, thank you for your interest in Mitiq!
If this is a bug report, please provide screenshots and/or minimum viable code to reproduce your issue, so we can do our best to help get it fixed. If you have any questions in the meantime, you can also ask us on the Unitary Fund Discord.
The scale factors (x-axis values) are the same in both plots. The expectation values (y-axis values) are different presumably because you are computing expectation values via sampling.
If you would like to do different extrapolation techniques with the same data (i.e., y-axis values):
i.e.
I will close this, but please re-open or continue the conversation as appropriate. You can also continue the conversation in our Discord http://discord.unitary.fund.

I'm getting this error
Hi @atmalik123,
there is a small syntax error:
execute(zne.scaling.fold_global(circuit, s) 
should be
execute(zne.scaling.fold_global(circuit, s))
Before I was defining a factory l_fac and p_fac first so I could do l_fac.plot_fit(), but in the code given in the first comment they use LinearFactory and PolyFactory directly. How can I use plot_fit() on these?
If you already have noise scale factors and the associated expectation values and want to use the plot_fit method of a factory, you can do as follows:
Alternatively, you can get the zne_curve and do a manual plot as follows:
If you already have noise scale factors and the associated expectation values and want to use the plot_fit method of a factory, you can do as follows:
Alternatively, you can get the zne_curve and do a manual plot as follows:
Thank you very much for your help. Just one last question:
If I use the example code you wrote in which you use plot_fit(), how can I get the predicted expectation value once ZNE is applied? Before I could simply save zne.LinearFactory.extrapolate(scale_factors, expectation_values) as a variable, but I'm not sure how to do that when using zne_limit = fac.reduce()
When using zne_limit = fac.reduce(), you are in fact saving the predicted expectation value in the zne_limit variable.
Alternatively, you may find fac.get_zero_noise_limit() useful too.
Thanks both of you for all your help. I really appreciate it.
