Hi,
Im trying to build liboqs for later integration into nginx, however im getting the following error when running the
cmake -DOQS_USE_CPU_EXTENSIONS=OFF -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=${OPENSSL_PATH}/oqs ..
command.

Where it fails with performing the CMAKE_HAVE_LIBC_PTHREAD test and looking for OPENSSLL_NO_EC2M.
The machine im building it on is a DigitalOcean droplet with the following specs:
1 GB Memory / 25 GB Disk /  Ubuntu 20.04 (LTS) x64
"Build files have been written": Looks OK. Have you tried running make?
"Build files have been written": Looks OK. Have you tried running make?
Yes, make and make install run fine. It was just a worry that it was an error that was affecting my creation of a server certificate using dilithium2. The certificate is then integrated into nginx and throws an error
nginx: [emerg] SSL_CTX_use_PrivateKey("/home/ibra/nginx_pki/pki/server.key") failed (SSL: error:0B080074:x509 certificate routines:X509_check_private_key:key values mismatch)
When trying to reload nginx using nginx -s reload.
Did you see our nginx sample build? Does this (not?) work for you?
Did you see our nginx sample build? Does this (not?) work for you?
Yes, this is the build i followed, although im trying to deconstruct it (aka not using Docker and just manually setting up nginx). I have followed the same configuration in the nginx.conf, however when i try to reload nginx with the new config file i recieve the following error:
nginx: [emerg] SSL_CTX_use_PrivateKey("/home/ibra/nginx_pki/pki/server.key") failed (SSL: error:0B080074:x509 certificate routines:X509_check_private_key:key values mismatch)
SIG_ALG used was dilithium2.
The following steps were taken for creating the certificate and key, as shown in the Dockerfile here
 ${OPENSSL_PATH}/apps/openssl req -x509 -new -newkey ${SIG_ALG} -keyout CA.key -out cacert/CA.crt -nodes -subj "/CN=oqstest CA" -days 365 -config ${OPENSSL_PATH}/apps/openssl.cnf
${OPENSSL_PATH}/apps/openssl req -new -newkey ${SIG_ALG} -keyout pki/server.key -out server.csr -nodes -subj "/CN=oqs-nginx" -config ${OPENSSL_PATH}/apps/openssl.cnf
${OPENSSL_PATH}/apps/openssl x509 -req -in server.csr -out pki/server.crt -CA cacert/CA.crt -CAkey CA.key -CAcreateserial -days 365
Issue has been resolved, forgot to put the new nginx binaries into /usr/sbin as well as inputing my domain name inside the certificate instead of "oqs-test CA" and "oqs-nginx"
