I think #4915 introduced some bugs in how the the global phase header is calculated which is causing some Aer tests to fail. It appears certain unitary gate instructions are causing a non-zero phase to be added during assemble, even though the unitary matrix is being added as an instruction without any modification. So far I've confirmed this happens for several single qubit gate matrices:
The following code checks the original matrix is inserted as the qobj instruction parameters, and what global phase is added to the circuit. The global phase should be zero in all cases
prints
Adding unitary matrix gates should not change the global phase of the circuit during assembly.
Is this just an issue with Qobj assembly or is global phase incorrect in the circuit attribute too?
This just appears to be due to assemble. It also applies to standard (non-unitary) gates with phases when they are assembled. For example:
Will have a qobj with an "rz" instruction in it and a global phase of -theta/2. But the global phase should only be added if rz is unrolled to u1, if the qobj has the "rz" instruction the global phase should be 0
Resolved by #5126 .
