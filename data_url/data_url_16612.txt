When trying to MPL graph an isometry gate, I'm getting a lot of funny outputs, depending on the isometry size.
considering the following code:



Something like the text drawer:
@1ucian0. In #4264, I addressed some of these issues, but it's part of a much bigger issue in the mpl drawer. In that PR, I treated hamiltonian and unitary as special cases, but that's not a long-term solution.
When I first added mulit-control gates in #4131, some of the gates jumped to very large layer_width's, since the code for layering was assuming anything with an op.name of 4 chars or more was a large gate, so ccu3 had a different layer_width from a cu3. I solved this by treating control gates specially, but there's a much bigger issue.
With the advent of labels for all gates, mpl will need some serious redo. There are 3 issues your isometry example points out,
'isometry' can be fixed with a couple of lines of code by creating another special case like 'unitary', and eliminating the printing of matrices like you did in the text drawer. But I believe the bigger issues should also be addressed with a fairly major rework of the mpl drawer code.
Hi @1ucian0 . This problem is primarily seen in the parametrized operations. This is due to very large parameter descriptions since the size of the parameter is used to compute the layer width for each layer of gates. As for isometry, the parameter is the matrix I suppose. So I think if we use the size of parameter to compute the layer width only if the length of the parameter is below an upper bound, then this problem could be solved.
