Description of the issue - include code snippets and screenshots here
if relevant. You may use the following template below
Compilation succeeds
Compilations fails
Every time
Azure Pipelines
Please include any additional code snippets and error tracebacks related
to the issue here.
Logs: https://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=455620&view=logs&j=171a126d-c574-5c8c-1269-ff3b989e923d&t=1183ba29-a0b5-5324-8463-2a49ace9e213&l=1172
Build instructions: https://github.com/regro-cf-autotick-bot/pennylane-lightning-feedstock/blob/0.21.0_h5d7f77/recipe/meta.yaml
Any additional information, configuration or data that might be necessary
to reproduce the issue.
This is in the contetxt of the conda-forge feedstock: https://github.com/conda-forge/pennylane-lightning-feedstock
Hi @BastianZim . Thanks for reporting this. We will take a look and get back to you shortly.
Thanks @mlxd Let me know if you need any more info on what exactly conda-forge is using in terms of infrastrucure.
Hi @BastianZim . We internally test our cobebase using cl.exe version 19.30.30709 that comes with MSVC version 14.30.30705. Could you build Pennylane-Lightning using this version of MSVC?
Hi @chaeyeunpark that should be possible, I just need to see how I can coax the infrastructure into using it. Let me come back to you once I have that working.
@BastianZim This version is nothing but MSVC 2022. I think upgrading windows image to windows-2020 may be necessary (https://docs.microsoft.com/en-us/azure/devops/release-notes/2021/pipelines/sprint-192-update#windows-server-2022-with-visual-studio-2022-is-now-available-on-microsoft-hosted-agents-preview)
@chaeyeunpark Updating to vs2019 fixed it. Thanks for the help!
@BastianZim No worries. As we also use VS2019 in GitHub workflow to test build wheels, I think this should not make any trouble from now on (until we fully move to VS2022).
