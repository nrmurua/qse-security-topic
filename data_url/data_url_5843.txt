SnapshotExpectationValue supports non-Hermitian operators, but its replacement, SaveExpectationValue, does not support them.
However,
raises
@chriseclectic Is this expected behavior of the new SaveExpectationValue? The above referenced PR in Terra, to replace the prior, now deprecated instruction with this, we had a unit test that passed with the old instruction but now fails with the new one. We were holding off on that PR pending some outcome here as to which way to proceed; would like to progress it soon though to avoid deprecation messages from running with the old instruction still.
This was intentional since technically a quantum mechanics expectation value has to be Hermitian so the return value is real. However in principle there isn't a strict computational reason it couldn't allow non-Hermitian and return a complex like the old instruction (other than variance calculation is probably incorrect).
Do you need actually use non-Hermitian operators in current algorithms or was it just for the unit test? (A real experiment can't measure a non-Hermitian expectation without decomposition into Hermitian operators and post-processing for example)
I think it was more that things were usually done in opflow to allow the more general case, and this was an area that also worked. If this change is intentional, and your rationale for it seems eminently reasonable, then I guess we drop the test that ends up using Aer in this case.
I added complex support according to Qiskit/qiskit#6307, but I don't know where we need it. We may use it in Qiskit Machine learning, but I don't know it at all. Let's turn non-Hermitian operators off and see if the tests for other modules fail.
I replaced SnapshotExpectationValue with SaveExpectationValue and removed the tests for non-Hermitian operator in Qiskit/qiskit#6593.
No problem occurred in Terra and ML, so this issue is closable. Thanks.
