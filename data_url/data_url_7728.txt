In some situations a backend cannot be provided and the default None results in an AttributeError.
For example, when calling sample() there are a couple of function calls in the call tree:
where the backend is not passed through (either explicitly, or included in **kwargs). Consequently the backend defaults to None and an AttributeError is raised when the ContractExpression is evaluated (the exception is raised when opt-einsum checks if the backend is available; see the call to backends.has_backend(backend) here.
If the quantum circuit example:
is run, the truncated stack trace is:
The problem appears to have been introduced in commit 830b71d
The call to quimb.tensor.contraction.get_contract_backend() should return a usable backend.
No response
Python 3.7 and 3.8
Fedora 35
Quimb commits as noted above
Thanks - should be fixed by latest commit, and long-term I've opened a PR on opt_einsum to allow backend=None as its tripped me a few times.
