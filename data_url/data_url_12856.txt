There is a discrepancy between what I see in Q# documentation / QuantumKatas tasks, and all the other documentation all over the Internet. In particular, the gates Y and Ry seem to me to be transposed.
Let's take Y for example. All docs, including Microsoft ones, tell that
(I'm using the line-by-line notation)
Therefore, when you apply it to the base states you get:
And this is confirmed by other sources. However, in the Q# Quick Language Reference we see:
which could only happen if you multiply not line by column (as matrix multiplication really works), but column by column.
The same situation with Ry. I could write off that glitch with Y as a typo, but now we have the Katas, particularly â€” BasicGates, Task 1.4 where we are expected to use the Ry gate. According to all docs I could find,
So if you apply this gate you get:
which is different to what Task 1.4 requires: the sines have inverted sign, again, as if multiplication was performed by columns instead of by lines. Or, as if it used transposed matrix for some reason. And yes, I did check, and the test really accepted the solution Ry(alpha * 2.0, q) and did not accept (Adjoint(Ry))(alpha * 2.0, q) or Ry(- alpha * 2.0, q) which should have given the requested result according to the rules above, instead of Ry.
I'm at a loss here. I admit I'm pretty new to this area, and I have not read that many docs on Q# yet, but what I've read so far never gave me a hint at such a big difference from the common approach. Is it a bug, or have I missed something here?
Sorry, disregard this. I completely messed up the vector state representations when multiplying.
