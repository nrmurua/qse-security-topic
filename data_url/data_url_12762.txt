I get the following error in Task 2.1 of the QFT kata
C:\snippet_.qs(5,9): error QS5022: No identifier with the name "BigEndian" exists.
Code Segment for Reference Implementation of Task 2.1 in QFT kata
%kata T21_PrepareEqualSuperposition_Test
operation PrepareEqualSuperposition (register : Qubit[]) : Unit is Adj+Ctl {
QFT(BigEndian(register));
}
X------------------------X------------------------------X------------------------------------------------X
So, I tried to define BigEndian type as :
newtype BigEndian = Qubit[];
But I got the following error :
error QS6204: The type SNIPPET.BigEndian does not match the expected user defined type Microsoft.Quantum.Arithmetic.BigEndian.
Which is a bit confusing. Since the BigEndian datatype is defined as newtype BigEndian = Qubit[] at :
https://github.com/microsoft/QuantumLibraries/blob/main/Standard/src/Arithmetic/Types.qs
X------------------------X------------------------------X------------------------------------------------X
But if I use the fully qualified Notation for BigEndianType, then I get Success. ie :
Code Segment with fully qualified Notation for BigEndianType
%kata T21_PrepareEqualSuperposition_Test
operation PrepareEqualSuperposition (register : Qubit[]) : Unit is Adj+Ctl {
QFT(Microsoft.Quantum.Arithmetic.BigEndian(register));
}
X------------------------X------------------------------X------------------------------------------------X
Note : I am running the code in jupyter notebook locally. I followed the setup instructions at :
https://docs.microsoft.com/en-us/quantum/quickstarts/install-jupyter?tabs=tabid-conda
The library QFT implementation uses Microsoft.Quantum.Arithmetic.BigEndian data type which is not open in the notebooks by default (I think only Canon and Intrinsic are open by default), so you'll need to add open Microsoft.Quantum.Arithmetic; to your cell (or indeed use a fully qualified type name like you did). ReferenceImplementation.qs opens several namespaces on top of the file, so it's less noticeable.
Once we get to writing the workbook for this kata, it will be easier to figure out, since the workbook solutions have to look exactly the same as the solution in the kata notebook would.
Alternatively, the learner can use the QFT implementation they just did in part 1, which doesn't use BigEndian data type.
