Although touch interaction works fine on my windows laptop with a touch screen, it is completely broken on my nexus phone. Gates are somehow hard to pick up, and tend to drop during a drag. Often I try to grab a gate and instead scroll the screen. Figure out why, and fix it.
The issue is related to zooming. Interaction seems fine until the canvas becomes larger than the screen.
Not just related to zooming. On my android tablet, touching a gate picks it up... for about a tenth of a second. Then the gate is let go despite the finger still being on the screen. Super frustrating.
üëç
@Strilanc I believe I can fix this issue, I'll try to play with it later tonight
@perak The relevant code is in src/browser/MouseWatcher.js and used by src/main.js. It's supposed to translate clicks/taps/touches into a common set of calls to grab/cancel/drag/drop.
The circuit manipulation code doesn't handle multiple drags, so MouseWatcher purposefully filters out touches that start during another touch. A bug in this code could easily prevent interaction (which is why 'canRegrab' has a timeout that forces it true if no unfiltered movement happens for 5s).
@Strilanc couldn't sleep, so I'm still investigating: looks like drag&drop on android is hard to implement, especially in scrollable areas. Long touch produces right click event (showing copy/paste/select all menu). Moving finger instructs browser to scroll.
Browser automatically produces touchcancel event and performs default action. Also, firing touchcancel event is inconsistently implemented in different browsers and OSes (maybe that's why it works in your laptop but not on your phone).
e.preventDefault helps until you have a scrollbar, or to be more precise, until scrollbar appears during touch. Problem is when gate is selected then new wire appears and it produces scrollbar / changes area size and browsers cancels touchmove event.
I think I've found a workaround that works: put invisible absolutely-positioned divs with touch-action: none over all the draggable elements.
fcc7888
Thanks @perak. Although I didn't end up using your pull request, knowing about touch-action was the key.
