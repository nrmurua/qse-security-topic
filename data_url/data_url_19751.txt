Extend RB circuits.py to allow other types of groups and gate sets (not only the Clifford group), such as the CNOT-dihedral group from https://arxiv.org/abs/1510.02720
The following API should be updated:
The function randomized_benchmarking_seq in circuits.py:
-- Add a parameter called group_gates (default value is 'Clifford')
-- The parameter align_cliffs would remain (so we won't need to update tutorials or documentation), but will also be used for non-Clifford gates
-- The ability to use patterns and length_multiplier will remain
-- The options for interleaved gates and purity calculation will remain
The function load_tables should be moved to clifford_utils.py (since it only deals with Cliffords)
The function get_quantum_circuit should be moved to circuits.py (since it can be used not only for Cliffords)
The following functions in clifford_utils.py will be renamed, and it will be assumed that any new module of another group (or gate set) will have a similar utils file with the following functions:
-- load_tables (in case pre-generated tables are needed)
-- random_clifford_gates --> random_gates
-- compose_gates
-- find_inverse_clifford_gates --> find_inverse_gates
It will be assumed that any new module of another group (or gate set) will have a similar class like the Clifford.py class.
I would suggest to replace the existing clifford_utils.py and the planned dihedral_utils.py files by classes: CliffordUtils class and DihedralUtils class.
Both classes will inherit from a basic abstract class: BasicUtils that should have the following functions:
This way, it will be easier to add other groups (or gate sets) in the future.
Closed by #255
