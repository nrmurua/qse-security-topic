If the bug manifests in unexpected behavior (as opposed to a crash), confirm that you have consulted the
API documentation
I make a system of capacitively coupled fluxoniums and try to see how it assigned external fluxes:
However, it gives an error:
No errors
See above
If I try to output symbolic Hamiltonian, it randomly gives different results from just repeated execution of the same code. In particular, the command
randomly gives either
or
One can see that it rearranges external fluxes. I assume that by itself it should not be a problem if it would be possible to know in advance which flux is assigned to which loop. That's why I tried to use sym_external_fluxes(), which doesn't work
Many thanks for reporting this bug, and sorry for replying late. We confirm we can reproduce it, and the fix will be released with the updated code release soon.
Thanks again for reporting the bug. About your additional comments, it seemed like the external fluxes were getting swapped with every run. I was able to track the issue to how we were finding the closure branches, where I used set objects. But, sets in Python do not generally preserve the order in an iterable, which makes the ordering random at times. I have replaced the code with an equivalent list comprehension which does preserve ordering.
Also, just a suggestion: as Sympy uses its own printing internally, its preferable to call coupled_fl.sym_hamiltonian() instead of print(coupled_fl.sym_hamiltonian()). This also ensures that the resultant expression is more readable.
This has been addressed with 71fa720 and released with v3.0.1. Issue #145 with external fluxes is still open, but is separate, I believe.
