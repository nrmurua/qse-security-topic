Currently, programs are executed using QAM#run. This method performs bothexecute_qpu_request and get_buffers calls to the Rigetti backend, blocking during the interval. Further, the results of execution are stored in the QAM itself, rather than being returned to the caller. While this is tolerable for the common use case of an exclusive reservation, the illusion of synchronous execution breaks down for more interesting use cases:
State specific to a single program execution will not be kept on the QAM, but rather in the response objects returned by each of its methods. This will allow the QAM to be used safely in concurrent requests.
This is done, in both v3 and v4
