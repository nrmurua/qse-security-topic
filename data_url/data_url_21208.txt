Importing modules (e.g. sub-experiments) relative to an experiment works in global context but not in methods of an experiment.
Lets assume two experiment files: a.py and cfg/a_cfg.py.
Running the experiment a.py via artiq_runor the dashboard fails with
Importing the cfg module in the global scope of a.py however now allows importing submodules inside methods (I consider this a workaround but not a fix). Importing submodules in the global scope also work as expected.
The issue comes from master.artiq.tools when calling file_import: Here, the experiments path is first added to sys.path for importing the module and then removed from sys.path after the import. This explains, why importing in global scope works.
Once the experiment is instantiated, sys.path does not contain the experiment's path anymore. So the build() method will fail on import on my example. The same is true for any other method, that now is getting called after the experiment has been instantiated and the experiments path was removed from sys.path.
Importing modules inside methods of an experiment relative to the experiments path should work similar as in the global scope of an experiment.
Importing modules inside a method of an experiment relative to the experiment's path fails.
