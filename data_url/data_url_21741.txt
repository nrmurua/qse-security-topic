Can the AST (abstract syntax tree) handle parsing multiple binary operations? I used the following code snippet:
where output_spi is a utility function that logs the value to rtio_log, configures the SPI bus and outputs it to spi2.write().
When I view the rtio_log dump, it shows the output value (i.e. the input parameter to output_spi() as: 0x61AB0000, both in the ASCII rtio_log channel and the spi0/write register. Am I doing something wrong, or this this a compiler bug? Not sure if here or llvmlite-artiq is the better spot for this question.
Do you have a complete minimal example. I can't reproduce this here. The space is a syntax error. And if I remove it the correct value is computed. This pattern is also successfully used in a bunch of places.
I'll look into it closer. Space was for readability. I thought recursion for AST on binary operations might not have been properly implemented/tested in compiler. i.e. E <- E BINOP E; E <- E
I think I found the root cause of my error. Issues with casting between ints & np.int32 (maybe compiler inferencer or soft CPU). Opened #1242 with newly-discovered issues.
