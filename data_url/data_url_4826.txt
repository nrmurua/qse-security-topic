I am trying to migrate vqe_h2o.ipynb to use CO2 carbon dioxide molecule.


As for the orbital index to be removed, this usually involves point-group symmetry considerations in quantum chemistry and is different from case to case. This is a relevant paper.
2. The error is likely due to the large memory required to construct the Hamiltonian matrix. In general CO2 is a very large system for quantum computing, please consider using a smaller system such as LiH.
@liwt31 Why did you remove the line if i[0] == "c" and j[0] == "c":  ?
@liwt31 Why did you remove the line if i[0] == "c" and j[0] == "c": ?
i, j are tuples of integers. No string is contained.
@liwt31 I suppose that I cannot use one_body_terms = fh.terms to do point group symmetry for determining orbital removal index ?
Do I need to resort to using Q-Chem or ORCA ?
I noticed that there is an external user library that does point group symmetry, but I am not familiar with it.
@liwt31 I suppose that I cannot use one_body_terms = fh.terms to do point group symmetry for determining orbital removal index ?
No, I believe more advanced tools are necessary.
Do I need to resort to using Q-Chem or ORCA ?
I noticed that there is an external user library that does point group symmetry, but I am not familiar with it.
To the best of my knowledge currently there's no readily available tool for this, unfortunately. And I don't believe tensorcircuit is the correct place to implement it.
IMHO the only viable way is to read the paper I mentioned above along with several important references in the paper, understand the theory, and then implement the reduction by yourself.
@liwt31 @gigabrainIO
Abby Mitchell from qiskit team told me to check the paper reference found in https://qiskit.org/documentation/nature/stubs/qiskit_nature.second_q.transformers.ActiveSpaceTransformer.html
What do you think ?
This is certainly a viable method.  If you do not care so much about accuracy, you can directly remove orbitals with the highest and lowest energy and retain the ones that are closest to HOMO/LUMO orbitals
The relevant code snippet within ActiveSpaceTransformer is as follows, however I am not sure how it works.
directly remove orbitals with the highest and lowest energy and retain the ones that are closest to HOMO/LUMO orbitals
You mean Gouterman orbitals ?
PS:  I need some theoretical study on  LUMO and LUMO+1 Gouterman orbitals, as well as HOMO-LUMO gaps
@liwt31 Thanks for your suggestion, I have the LUMO and HOMO molecular orbitals now for Fe2+ metallic ion for carbon capture MOFs.

