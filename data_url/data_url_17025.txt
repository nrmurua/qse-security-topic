We are moving towards scenarios where the pass manager are being reused. For that, a passmanager should be the same one, independently of the backend.
Currently, preset passmanagers are build in qiskit/transpiler/preset_passmanagers using a transpile_config parameter, returning different pass schedules.
I suggest to build passmanagers with class types instead of instances. For example, instead of
can be replaced by
This would remove the hacking thing we do to force equivalence among passes and will simplify the code in qiskit/transpiler/preset_passmanagers since no conditional (and no more having a parameter).
A passmanager can be set using PassManager.set(transpile_config).
We currently have:
Some of the pass arguments are not coming from transpile_config. It would be possible to include trial in transpile_config (as optional). However, Decompose(SwapGate) is harder case. Similarly, FixedPoint('depth').
This problem also happens in require and preserves.
One option is to  allow tuples as "passes" during append time.
Other option is add a parameter to append with the parameters for a particular pass.
I'm going to close this as stale now, since with #7163 we went a different way for the larger goal of "make it easier to construct a preset passmanager from a backend".  I'm not convinced that there's a clear API benefit from trying to raise pass configuration from the level of individual passes to the level of an "unbound" pass manager in our current set-up outside of that context.
Please feel free to re-open if there's more to discuss about this.
