Multiple instances of HasEnvironment subclasses in an experiment cannot setattr_argument in their build methods, when the experiment is submitted via the dashboard or via Scheduler.submit (if arguments are defined in the latter case).
Inside an experiment (subclass of EnvExperiment), if multiple instances of subclasses of HasEnvironment (sub-components)  call setattr_argument in their build methods, AttributeError: Supplied argument(s) not queried in experiment: <list of arguments> is raised when submitting the experiment via the dashboard. If submitting from another experiment using Scheduler.submit, then the error is also raised, if the arguments dictionary contains arguments built in any other sub-component that is not the first one to be instantiated.
The error lists all arguments defined in all sub-components except for the first one to be instantiated inside the experiment or those defined in the experiment itself.
For example, say SubComponent1 and SubComponent2, subclasses of HasEnvironment, are instantiated in an experiment. Then arguments defined in the experiment and in SubComponent1 will not be listed in the error message, only the ones defined in SubComponent2 will. Furthermore, if SubComponent2 does not build any arguments, then no error will be raised even if arguments are built in the experiment and in SubComponent1. Also, if for example SubComponent2 is instantiated inside SubComponent1, no error occurs.
Usage of this kind of sub-components is illustrated in arguments_demo.py. Submitting that example from the dashboard or with Scheduler.submit (having defined arguments) will raise the error mentioned above.
No error is raised and some example strings are printed to the log.
After pull request #1927, which solves issue #1641, the __init__ method  of HasAttribute checks for unprocessed arguments before returning. It does so by calling self.__argument_mgr.check_unprocessed_arguments. In a sub-component, __argument_mgr is originally an attribute of the top level experiment, which gets passed to the sub-component via the managers_or_parent argument.
When a sub-component is instantiated the argument manager has no means of knowing which arguments will be processed later by other sub-components instantiated afterwards by the main experiment. Thus when the check for unprocessed arguments is done in the first sub-component, some of the arguments defined in subsequent sub-components, not yet instantiated, are still unprocessed and thus the error is raised.
We could impose that the check for unprocessed arguments is done only in the main experiment, after its build method has returned (and thus also all of its sub-components' build methods). This way all sub-components will be able to add their arguments to the set of processed arguments in the main experiment's argument manager.
The main experiment is a subclass of Experiment. So we could check for this before calling check_unprocessed_arguments.
Edit: Better solution suggested by @dnadlinger : Manually check_unprocessed_arguments() after constructing the EnvExperiment in artiq_compile/artiq_run/worker_impl. This way one can also embed an  EnvExperiment inside another one.
