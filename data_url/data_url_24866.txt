The bare eigenstate lookup function of HilbertSpace populates differently between the first and second time it is run.
Expected functionality of bare eigenstate lookup was to return an array of the bare eigenstate of a subsystem of the HilbertSpace object. This was done correctly, but array shape was slightly different depending on whether lookup dictionary was already populated.
Start with fresh kernel, then execute
Output:
(6,6)
(1,6,6)
I noticed in the definition of the bare eigenstates method that there was a reference to pre-slicing, but I don't believe this should be important in the context of HilbertSpace.
@benmcdonough20 Ben, thanks so much! If you are willing and able: check out branch jk-ejecfit which should (I hope) be addressing this issue.
@jkochNU Hello Prof. Koch,
I cloned the jk-ejecfit branch and I was able to reproduce the issue importing the local module, so maybe this is not related to the pre-slicing behavior.
I will spend some time trying to find the source of this behavior so that I can give more specifics!

@benmcdonough20 Are you sure you are importing the right branch (and have pulled all recent changes that I pushed yesterday)?
Can you please respond with output from the following (run after the code block you shared):
import inspect
lines = inspect.getsource(hs.bare_eigenstates)
print(lines)
Absolutely! It is totally possible that I messed something up with the local import.
Here is the output of the code above:
@benmcdonough20 That indicates that you are not on the correct version and/or branch.
Output should be (note specifically the second but last line):
Ah, that is my bad! I did not know the correct command to clone a branch, and so I ended up just cloning the main branch of the repository.
I verified that I cloned the jk-ejecfit branch correctly, and the code ran as expected. Thanks for pointing this out!
Should I go ahead and close the issue?
@benmcdonough20 Glad this works now. I'll close, but don't hesitate to reopen (or post a new issue if something unrelated comes up). Thank you so much for taking the time to help making scqubits better. I'll merge this into the master branch momentarily.
