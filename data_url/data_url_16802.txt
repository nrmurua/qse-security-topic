It appears that get_memory() and get_counts() methods take QuantumCircuit object as argument, but it does not utilize the hash function of the QuantumCircuit objects. This can result in confusion as usually one may deep copy quantum circuit and run multiple of them in a job. For such cases, the result of get_memory() and get_counts() will just the same result of a circuit with the same name.
https://github.com/Qiskit/qiskit-terra/blob/8d5ad21517fb545e70c592e11ef6f64d8cc2e026/qiskit/result/result.py#L116
I think, at the line below, we should use the hash value of quantum circuit object instead of its name (which can happen to be the same as resulting from copy/deep copy).
https://github.com/Qiskit/qiskit-terra/blob/8d5ad21517fb545e70c592e11ef6f64d8cc2e026/qiskit/result/result.py#L257-L258
The reason for this is that results are primarily deserialized from a remote execution. In this case the circuit object/hash does not exist, but rather the circuit name exists. So get_result(circuit) is purely a convenience around get_result(circuit.name).
I agree this should be more clear. I'm not sure, however, how to support looking up by actual circuit objects in this serialization/deserialization model.
@ajavadia when you said "this should be more clear" would you consider a documentation clarification enough?
In any case, it seems to me this is intended behaviour and Ill close this as wont fix. If documentation (or other form of clarification) is needed, a new issue will help to track that.
