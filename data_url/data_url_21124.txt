Incorporation of best practices for mission critical elements like the core codebase is due IMO.
Hi @bitcoinsSG,
Thanks for the observation! What you are suggesting is already taking place.There is clearly still a lot of work to do but these concepts are not new to us and we are very much aware of ALM practices.
A quick summary of where we are:
Core code is moving to a tighter C/C++ library that will be shared by other componets. We are already tagging, releasing, automatically deploying, etc. You can have a look at that here qrllib.
QRL itself has recently incorporated metrics, unit testing, continuous integration, sphinx automatic documentation, doctests, etc. At the moment, we are going through a significant refactoring effort and assessing architectural deficiencies, etc.. In the following weeks, we expect structural changes and test coverage to increase.
We have already in place the infrastructure to automatically deploy pip packages based on tags. If we were to tag a QRL release right now, we would have a pip package being deployed. Have a look at these lines:

Going beyond that, we are already using CMake and it is planned to use CPack to prepare installation packages for different platforms.
We have been gradually incorporating standard processes and best practices in the last few weeks, however, it is important to keep a balance and flexibility has been prioritized in the early stages of this project. You will see many changes and standard processes being applied as we move from prototype to production level code.
With respect to development branches, we will be soon moving to a more standard workflow, gitflow-like. Nevertheless, up to this moment, forks have provided an acceptable interim answer to this problem.
All in all, we are always open for suggestions and would love to hear new ideas. I would suggest that you join our discord channel so we can discuss this and other ideas further.
Closing due to inactivity. Please feel free to comment and we can reopen.
