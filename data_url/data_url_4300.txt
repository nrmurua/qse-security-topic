@stavros11 @MatteoRobbiati
In pull request #965, we propose a Parameter object to model complex variational gate parameters.
Currently, each ParametrizedGate is added to the circuit with given initial values for its parameters. If we build a variational circuit with trainable parameters which map to gate parameters through some lambda function, there is no way for the ParametrizedGate to hold the Parameter object which holds this mapping. Instead, some encompassing function or object must deal with this issue.
An example of this arises with optimisers, proposed in #962.
In this example, the SGD holds the Parameter objects and creates a mapping to the final gate parameters. It then updates the circuit parameters using 'circuit.set_parameters()', before executing the circuit.
A solution to this problem would be to allow ParametrizedGate objects to receive Parameter objects directly when initialised. However, this would require changes to all types of gates inheriting the ParametrizedGate object. I can develop a Pull Request which deals with these changes, but I would like to confirm that everybody is on board with this change.
Thank you @WanderingMike for your efforts on this. I think the Parameter class will be very useful for variational problems.
A solution to this problem would be to allow ParametrizedGate objects to receive Parameter objects directly when initialised. However, this would require changes to all types of gates inheriting the ParametrizedGate object. I can develop a Pull Request which deals with these changes, but I would like to confirm that everybody is on board with this change.
I also believe this is the best solution. Controlling parameters via a list like we do in the current set_parameters is simple in terms of code, however it is not very user-friendly. Users need to manually keep track of the order of parametrized gates and make sure they pass parameters in the same order. This can lead to errors, if the given list does not have the proper size or if the order is not respected. So from my side, go ahead with the changes and let me know if you need any help as I have probably written much of this code.
One question regarding implementation: ParametrizedGate objects will accept only Parameter or also floats as they do now? It may be useful to keep accepting floats to not break the current interface, but you can convert them to Parameter internally if that is more convenient.
Thank you for the comments @stavros11. I will try a first implementation this week, and then I'll be glad to receive your feedback. I think allowing the user to input either floats or Parameter objects is a friendlier method, that way a beginner who is uninterested in complex Variational circuits does not need to learn about Parameter objects before being able to run a circuit.
@stavros11 The Parameter object and using it in rotational gates (class Rn) has been implemented. I'd appreciate it if you could review #965 related to this
