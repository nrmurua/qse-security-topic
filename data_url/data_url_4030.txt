Adapted from tests/test_basics.py:
compiles to qasm:
Why is this?
@peendebak please pull the latest changes from develop branch. You will be able to generate the scheduled and un-scheduled qasm as shown below:
Also note the the updated use of arguments to compile().
@imranashraf I already tested on the development branch. The full code I use is:
and the output is:
@peendebak indeed it generates empty kernel when optimize=True, did not pay attention to it. This is because of problem with rotation decomposition which is done when optimization is enabled. @Nader-Khammassi  should be in better position to comment on that. For the time-being I will suggest compile with optimize=False.
@imranashraf The .compile function does not accept keyword arguments right now. I think this would make the code much easier to read in Python.
I tried to get back the keyword args by adding -modern and -keyword to the swig options. I did this by adding to openql/CMakeLists.txt the following line
(see https://stackoverflow.com/questions/17043088/cmake-build-calling-swig-with-multiple-arguments)
With this I still do not get keyword arguments. Is this disabled somewhere else for the opeql interface?
I agree it will make the code easier to read in python, but at the moment it is not working. -keyword seems to be the option to enable it, but it was working earlier even without this option. seems to me something is conflicting with it. i dont think it has been disabled somewhere but i don't have any clue either at the moment how this can be made to work.
@peendebak @imranashraf
When enabling the optimizations, the compiler will try to fuse instructions and compile-out instructions which are cancelling each others like successive PI rotations around the same axis or so...
To do that, the matrix provided in the instruction definition (in the configuration file) is used. So please make sure that matrix is not a dummy matrix (often an identity), I saw that many of them are not specified correctly. It is the responsibility of the user to provide the correct matrices especially for custom instructions.
@peendebak  Can you please post the configuration file you are using ?
@Nader-Khammassi The config file is this one:
https://github.com/peendebak/OpenQL/blob/master/tests/test_cfg_cbox.json
How can a measurement operation be cancelled? I would assume this is a special kind of operation, treated differently by the compiler.
@peendebak Indeed the measurement instructions are treated in a special way and they should not be cancelled. I am trying to reproduce the issue on my machine...
@imranashraf The issue with the keyword arguments is due to a std::string that is added as a default argument. I reported an issue to upstream qcodes swig/swig#1147
Keyword arguments are now fixed by adding %include "std_string.i" and -keyword option. thanks @peendebak  for the hints.
