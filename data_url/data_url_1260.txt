Description of the issue
Numpy 1.24 was released recently (see release notes) and it breaks master branch.
Using alias for built-in types was deprecated in Numpy 1.20 (See https://numpy.org/doc/stable/release/1.20.0-notes.html#using-the-aliases-of-builtin-types-like-np-int-is-deprecated) and was finally removed in the 1.24 release. As a result, all cirq code that uses aliases for built-in types like np.bool breaks.
Specifically, we'd need to fix the the proper_repr function to use bool instead of np.bool, which would end up changing the repr of a bunch a Cirq classes.

Other occurrences of np.bool are in repr and repr_inward files, which can be updated directly to use bool instead of np.bool.  Specifically, the following two files:

Cirq version
Another source of conflict is that numba (a Cirq dependency due to cirq-contrib)  supports numpy only upto 1.23; so we are blocked on them before we can upgrade to 1.24. See https://numba.readthedocs.io/en/stable/user/installing.html#compatibility
For now, I will limit numpy version to 1.23 and then we can work on the upgrade once numba adds support for 1.24.
can we add a comment to the requirements.txt linking to this issue so it's clear why we're restricting the version
Is anyone assigned to this high priority issue?
I think this should be unblocked by #5991 and a new release of numba that now supports numpy 1.24 (https://numba.readthedocs.io/en/stable/user/installing.html#compatibility)
sweeeet! Regardless of what numba is doing, we can un-pin it in our dependencies, yes?
I think so, let's find out - #6149
Is there a plan to release soon with numpy 1.24 support?
