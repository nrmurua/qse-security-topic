On the page of the documentation talking about qutip.mcsolve ("Monte Carlo Solver"), it describes the algorithm for the monte carlo simulation as:
I: Choose a random number r between zero and one, representing the probability that a quantum jump occurs.
II: Integrate the Schrödinger equation, using the effective Hamiltonian (1) until a time τ such that the norm of the wave function satisfies ⟨ψ(τ)|ψ(τ)⟩=r, at which point a jump occurs.
III: The resultant jump projects the system at time τ into one of the renormalized states given by Eq. (3). The corresponding collapse operator Cn is chosen such that n is the smallest integer satisfying:
(5)
∑_{i=1}^{n} P_n(τ)≥r
In actuality, through my own reading of the code, two random numbers are generated, one for determining if a jump occurs, and another to determine which jump operator was responsible. I suggest the following change (changes highlighted in bold):
I: Choose a random number r_1 between zero and one, representing the probability that a quantum jump occurs.
II: Integrate the Schrödinger equation, using the effective Hamiltonian (1) until a time τ such that the norm of the wave function satisfies ⟨ψ(τ)|ψ(τ)⟩=r_1, at which point a jump occurs.
III: Choose a random number r_2 between zero and one, used to select which collapse operator was responsible for the jump.
IV: The resultant jump projects the system at time τ into one of the renormalized states given by Eq. (3). The corresponding collapse operator Cn is chosen such that n is the smallest integer satisfying:
(5)
∑_{i=1}^{n} P_n(τ)≥r_2
While this is not an issue in the code, the way the documentation is written at the moment implies that jumps which occur after a short amount of time will primarily be due to collapse operators at the end of the c_ops list, while jumps that happen after a long time will be biased towards collapse operators at the start of the c_ops list. Again, the code is correct, but the documentation does not accurately reflect the algorithm used.
@IanThorvaldson Thanks! I made the changes you suggested in #1677. Do they look good to you?
Yep, that looks good to me!
