Linear sequence placement purpose is to find a linear sequence of qubits on a two dimensional, planar quantum chip. Currently it's placed in the cirq.contrib.placement.linear_sequence package and its main method takes XmonDevice and returns List[XmonQubit].
Placement code should be more integrated with cirq. The proposal is to move it, together with cirq.ops.LineQubit to the cirq.line package.
Entry point method could have more generalized signature:
cirq.line.place_on_device(device: cirq.devices.Device, options: PlacementOptions) -> List[cirq.line.LineQubit])
or even more general:
cirq.line.place_on_device(device: cirq.devices.Device, options: LinePlacementOptions) -> LinePlacement
with LinePlacement being able to store even more complex solutions (multiple disconnected lines on a chip for example).
This assumes that cirq.devices.Device can be extended with:
Does it sound sane?
This sounds good. You should probably take an XmonDevice instead of a raw Device, since a raw device has no topology. You may want to define a GridDevice to avoid coupling to the google namespace.
This additional abstraction seems justified (potential XmonDevice successors, competitors devices).
Strilanc, you mentioned recently that you want to introduce device constraints. What is your plan regarding this, don't you need GridDevice for that purpose as well?
