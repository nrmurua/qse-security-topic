QuasiDistribution and ProbDistribution are from M3 and the latter was made so that it is explicit to users that one found the closest true probability distribution from a QuasiDistribution, a process for which it is hard to evaluate error bounds.  However, in the Runtime everything is a QuasiDistribution and thus it really makes no sense to have ProbDistribution floating around if people are not going to partition real from quasi-distributions (in Runtime "quasi" is used as a name for sampled distributions as much as it is for distributions with negative values)
At a minimum, QuasiDistribution and ProbDistribution should be refactored. But if ProbDistribution is not used by anyone, then of course, it can be removed. The two classes are mostly code duplication that could be factored out. They are really the same thing, except QuasiDistribution has a method to produce the closest prob dist. and returns ProbDistribution.
so that it is explicit to users
I think you are saying this is essentially the same class, but with a descriptive name?
a process for which it is hard to evaluate error bounds
This must be relevant for this issue, but what is that relevance?
In some sense yes it is descriptive, indicating that one performed the MLE transform from quasi distribution to a true probability distribution. However, the increased variance from the mitigation is still there and needs to be carried around.
The MLE finds the nearest probability distribution to the quasi distribution in L2 norm.  The distance is usually quite small, assuming M3 here, but it is nonzero and needs to be included in the error analysis. It is not clear how to include that.
