Seems to me that there is a bug in transforming the MO coefficients from a spherical to a Cartesian basis. The orbital transformation matrix "s2c" is used in two places in the code to accomplish this transformation. However, this matrix transforms the spherical functions (not the coefficients) to Cartesian ones. The correct transformation for the coefficients should be the "c2s" matrix. The transformation matrices are defined in aobasis/orbital_transformation_matrices.F
This is done twice in the code:
In the attached file I have written down my reasoning regarding the correct transformation. I would appreciate if this would either be confirmed or corrected.
In case this turns out indeed to be a bug, I can provide a patch.
sph_to_cart.pdf
@hossamelgabarty I think that your analysis is correct and the wrong matrix is used for the transformation to the Cartesian MOs. It seems this bug became only obvious in connection with the MOLDEN output, because the Cartesian MO output has not (or very rarely) been used and the Cartesian coefficients are wrong only for the l > 1 orbital blocks.
@hossamelgabarty Are you also able to reconstruct the overlap matrix in Cartesian GTOs in its original form by doing, for instance,
transpose(s2c) * c2s * S_cartesian * transpose(c2s) * s2c  ?
From my perspective, the problem is that the inverse transformation is not unique due to linear dependence in Cartesian GTOs starting from d-type orbitals. This is not an issue as long as everything is consistent. In reality, however, we only rely on this inverse transformation to save Cartesian MO coefficients in alternative file formats. Other programs are then going to use these MO coefficients along with the 'original' overlap matrix recomputed analytically from the basis set definition.
@schulkov Yes I understand that with an overcomplete basis the transformation is not unique, this is not a problem, but isn't this a different issue? The issue here is that the matrix that transforms the "basis" is erroneously used to transform the "coefficients" in the same direction.
@hossamelgabarty You are correct. Indeed, the matrix product transpose(s2c) * smatrix needs to be replaced by transpose(c2s) * smatrix .
Although it is impossible to reconstruct the original overlap matrix in Cartesian GTOs (to do this we need a matrix c2s^-1 which is ill defined), it does not really matter. The important point is that density matrices P_s and P_c = transpose(c2s) * P_s * c2s do refer to the same electron density.
@schulkov @mkrack thanks for the responses. I will do a PR.
@hossamelgabarty Did you submit a PR already?
Hopefully resolved by #1477
