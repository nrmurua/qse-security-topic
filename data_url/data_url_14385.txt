PR #8547 wants to change the method for sampling in quantum_info. But the original method is sometimes better. So the PR has to be modified. I opened this issue to determine and document when one or the other method is better. At the bottom of this comment is a plot that may have the answer.  (See also #8535, although the present issue largely supersedes that one.)
We want to collect $n$ samples from the probability distribution $p(i), i=1,\ldots k$ and return the number of times that each value of $i$ was sampled. This corresponds to binning shots (with the finest bins).
There are at least two ways to do this sampling. We can either perform the procedure just described, or alternatively, sample once from the associated multinomial distribution. Both give counts with the same statistics.  The question is when should we prefer one over the other? Let's give them names
Qiskit provides this sampling in various places. For example quantum_info and in qiskit-aer. Making it efficient is useful, especially if we can reduce the time complexity. Sampling in some regimes can be quick rather than strictly impossible if we use the right method.
Note that the multinomial method is always better for large enough $n$ .
The choice of data structure for counts is not as tightly coupled to the choice of algorithm for generating counts as I first believed. Nonetheless, I'm leaving these observations here.
Currently, the Counts class stores counts in two or more dicts. The keys are ints or strs representing either binary or hex numbers. Using numpy-like data instead might be better. This depends on how counts are used. In any case, the most efficient  way to generate counts depends in part on how you want to store them.
The multinomial method is always better for large enough $n$. I did benchmarks (plot below) to determine the value of $n$ above which multinomial is better.
This procedure builds a table of thresholds

I overuse bullet points in this markdown to work around a bug that prevents rendering math. â†©
