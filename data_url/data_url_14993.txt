Change JobV1.job_id to be a property.
See request in Qiskit/qiskit-ibm-runtime#883.
We would need to make a new version of the Job interface to change the type of this; JobV1 is an public subclass-able API that we cannot break.  Adding a new version of an interface causes a lot more work for all downstream packages of Terra - providers need to transition to a new interface slowly, and consumers all need to update their code to be able to handle either version of the interface.
I'm fairly sure there are other API changes that people might be interested in for a JobV2, so if we were planning on going this route, we'd need to liaise with other users and providers (non-IBM as well) and make up a design document that takes everyone's wishlist into account.
@jyu00 suggested keeping both options: @property def job_id() and def job_id() so as to remain backward compatible. Is this possible? (See in the original issue in runtime).
The runtime provider is free to add whatever additional behaviour it likes, provided it satisfies the JobV1 interface.  In this case, as long as job.job_id() returns a string, then job.job_id can be anything (though I wouldn't recommend it).
@jakelishman I made the suggestion because we changed a number of things to attributes in BackendV2 (such as name). Now it's somewhat inconsistent between the two, i.e. Job is mostly methods and Backend is mostly attributes.
