In order to check the status of a job programmatically you need to do one of the following: job.status().name == XXX or:
So the actual status of a job is not a property / function  of the Job class but rather that of the JobStatus class.
The job status and possible error message should be strings returned from the Job instance itself
The JobStatus class, which inherits Enum, is just python's way of doing an enumerated type. A benefit of enumerated types is it avoids spelling mistakes in the code, so the later method you mentioned is probably preferred although a bit more cumbersome. Before the JobStatus class we had issues with capitalization and undocumented "states".
For the record, the preferred way for checking the status is by doing:
@ewinston already explain the main benefits behind this design in comparison with having strings so closing. Feel free to reopen with a proposal that meets both convenience and better ergonomics.
As this was summarily closed, I am guessing there is no interest in this topic.  So I will just clarify my point and leave it at that.
The Job class is not self-contained.  In order to get the status of a job, a new JobStatus class instance is created and the status of the original job class must be obtained from this other object.  The Job itself has no status.  In addition, the "preferred way" for checking status requires the end user to have loaded the JobStatus (it is not loaded at init) using from qiskit.providers.jobstatus import JobStatus.  Where to find the job status is confusing as an end user probably does not understand why it is under providers (since providers provide backends).  I also could not find a tutorial that instructs an user as to where to load the JobStatus, nor how to use it.
Moreover, lets assume that an user has a Job and then creates a new JobStatus object by calling Job.status().  If one gets JobStatus.QUEUED does the JobStatus tell me the queue position?  No, I need to go back to the original Job class for that.  If I get JOBStatus.ERROR can it tell me the error message?  No, once again I need to go back to the original Job instance.  So everything but the status is a property / attribute of a Job instance but the status, and the status doesn't tell anything more than a string would, and in order to programmatically use it I need to import it from a not so clear location.
That people are fine with this (and even thumbs up it) is a bit puzzling to me, but it is what it is I guess.
Fair points those related to loading JobStatus by default for better ergonomics. I'm reopening the issue with a different name reflecting the topic of the discussion. Thank you for clarifying.
I see @nonhermitian's concern here, given that inquiring a job's status is a very common thing that the end user would like to do. But seems like job.status().name() does what you're asking?
It's true as mentioned that internally we should use an Enum, because for example I still can't remember whether the job status was 'Done' or 'DONE' or 'COMPLETED' or what.
About loading JobStatus by default, where would that go? Currently it is accessible off of qiskit.providers, but usually you never access the providers, you just do IBMQ.get_backend().
I meant making it available in the Qiskit root.
