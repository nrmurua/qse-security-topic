I'm trying to enable asynchronous dispatch for small QEngineCPU loads, but Python seems to choke on the proliferation of threads for QUnit instances on top of QEngineCPU. Many fewer threads for negligible work loads would be created if QUnit was "lazy" about creating QEngine instances under its "shards." Single qubit shards are handled entirely as auxiliary pairs of amplitudes attached directly to a shard, anyway, so it should not even be necessary to allocate QEngine instances at all per shard until they become entangled in representation with another qubit.
This would also benefit QEngineOCL shard instances, which do quite a bit of construction in preparing even a single qubit instance.
Resolved by #457
