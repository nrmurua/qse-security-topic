In PiecewiseLinearRotation, only num_state_qubits - 1 + 1 ancillas are ever used at the same time (instead of num_ancillas = num_state_qubits - 1 + len(self.breakpoints)).
For each breakpoint, the exact same ancillas could be reused, instead of changing each time which ancilla are used (by using the i_compare index) (or another way to say it.: everything would work the same if i_compare was fixed to 0 all the time).
In PolynomialPauliRotation, only max(1, min(degree - 1, num_state_qubits - 2)) are needed, instead of num_ancillas = max(1, self.degree - 1). (Because where the ancillas are used, l.341, 343 and 345, we have that len(rotation_coeffs[c]) <= min(degree + 1, num_state_qubits))
Nice catches! I tried to address all the cases you described (in the 3 issues) in #5332, feel free to check it out!
Thanks! Your fixes look good.
(However, because mcrx/mcrz do not accept ancillas whereas mcry does, polynomial pauli rotation will have really different gate counts depending on the rotation basis. But maybe that's not really a problem)
True, there's space for enhancement for sure. The ancilla-based decomposition could also be implemented for MCRX/MCRZ in future (and likely also for many other gates).
Also feel free to leave a proper review/accept/request changes on the PR! ðŸ™‚
