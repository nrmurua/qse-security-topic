A qaoa or a rqaoa object can be optimized more than once without recompiling again.
The following code is now valid:
If you run the code above, an error should be raised saying that the qaoa object is already optimized and that it should be compiled before optimizing again.
That could be done by implementing a boolean already_optimized that is False when the user compiles and it's True when they optimize. If the boolean is True then the warning is raised.
Ok, we should also add the following edge case: I compile, but, before optimising, I realise that I have made a mistake in my input. Should I then be able to re-compile without having to re-instantiate the object? (I think so)
@raulconchello I think we have dealt with this? Do you remember the PR so I can link & close?
@raulconchello I think we have dealt with this? Do you remember the PR so I can link & close?
I don't think we decided how to do that, the qaoa object can be optimized several times yet
