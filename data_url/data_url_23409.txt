Is this the behavior one wants?
Run tests
@alexcjohnson   maybe it's by design (or I am sure it's by design, given the fact that it's almost clone of numpy.arange)  ?
I remember that we deliberately kept the slice notation the same as the default python slice behaviour. This is probably at the root of this problem
I am personally not surprised by this behaviour. (I cannot say anything about the types though)
@damazter right - .sweep was added because some people (understandably) didn't like the missing endpoint from slice notation, or wanted the ability to specify the number of points rather than the step. But slice notation is well defined in python - and never includes the endpoint - so we don't want to alter that.
We could debate whether coercing always to float or leaving ints where it's possible is better... probably doesn't have any practical effect at the moment but definitely confusing.
Reminds me of this:

jokes aside. I think it's really too confusing.
I will deprecate and then remove in the next version.
Background:
If one  thinks in terms of generators then slicing is also not supported.
Lastly while slicing is pythonic, it has to do with existing sequences (that's also why by default one can't really slice a generator as mentioned above).
This syntax creates a sequence by using a slice, and hence the behavior of the syntax is not predictable, unless one has been involved in the discussion. Moreover  it is impossible to document.
I am deeply sorry for those who used this syntax.
â˜®
