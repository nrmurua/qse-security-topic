The following code
does not:
In order of personal preference:
None
Hello @nelimee, thank you for your interest in Mitiq!
If this is a bug report, please provide screenshots and/or minimum viable code to reproduce your issue, so we can do our best to help get it fixed. If you have any questions in the meantime, you can also ask us on the Unitary Fund Discord.
I think a warning in the case of a gate that's not in the input circuit but has fidelities provided could be useful here.
If invalid_gate_name was used in the initial circuit, then either qiskit would have raised an error that the gate is not recognized or mitiq would have raised an error that the input circuit cannot be folded because has_unitary(circuit) will fail. But if  invalid_gate_name is some user-defined gate, then as long as it is a unitary, the circuit folding would proceed.
Ideally, the restriction on the allowed gate names that are allowed in fidelities should be removed
I don't think 1 is a good idea because the allowed gate names that are used in _cirq_gates_to_string_keys  are part of the Clifford + T gate set. By default, gates not in this set cannot be assigned imperfect fidelities and rx is non-Clifford. So, maybe raising a warning along these lines could be helpful.
Pinging @andreamari just in case if what I stated is incorrect.
Thanks @nelimee, this is a very useful issue. I guess it was not easy to isolate the problem/bug but you did it in a very clear way!
fidelities={"invalid_gate_name": 0.06}) 
fidelities={"rx": 0.1}) 
@purva-thakre , I agree that fidelity is easier to measure for Clifford gates but, in principle, it can also be defined for non-Clifford gates too. So I would not enforce this restriction in Mitiq. In practice, it can be useful to set custom infidelities for non-Clifford gates, e.g.,  rx or  rz  gates.
@andreamari Thanks for the correction ! I was under the mistaken assumption that the gates were restricted to that set in Mitiq because of them being the generators of Clifford group.
When the ZNE module was created, were those the gates commonly available across Cirq, Qiskit etc. ?
In fact it was quite easy: I started by reading the doc, the restriction on gates was not convenient for my use case so I tried anyway expecting an error, nothing happened and a folded circuit was returned, so I dug into mitiq code to understand what was going on and why no error was returned.
I completely agree with your points: an explicit error is better than an implicit unintuitive behaviour without any warning. Eventually, more gates will have to be supported for this function to be useful in real cases, but I have no idea how complex this might be. I would even prioritise some gates over others, for example supporting {"cx", "rz", "sx"} is enough to be able to fold any IBM-hardware-compliant quantum circuit and any circuit that has been transpiled with qiskit.transpile for a real backend.
In the mean time I have made my own Qiskit-compatible version, leaving it here if anyone finds this issue and needs it:
There is a little bit of noise around circuit naming because I needed specific names, and I am pretty sure the set of instructions that should be ignored for folding is larger (in fact it might be better to filter the other way around, something like if in hardware_gates). But it works, and it should be quite straightforward to adapt if any error comes out or if another method is needed.
Thanks @nelimee!
@nelimee Just wanted to check if you are planning on working on the suggestions ? If not, I was thinking of working on them.
@nelimee Just wanted to check if you are planning on working on the suggestions ? If not, I was thinking of working on them.
I will be way too busy in the next few weeks due to several deadlines, so I will not work on this soon. You can work on this if you want to, and I will follow the advances you make when I can. Have fun! :)
This issue had no activity for 4 months, and will be closed in 2 weeks unless there is new activity. Cheers!
@purva-thakre any news on this? :)
@nelimee I haven't finished working on this yet. I did get started but left halfway because I got caught up in something else.
