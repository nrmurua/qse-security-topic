As discussed in the engineering meeting, some programs are too short for ZNE via unitary folding to work properly (the example was a program with a single gate). While this example program is silly, and as @andreamari noted it is implicit in the protocol that there need to be enough gates for it to work, I still think it is worth warning the user. Someone also mentioned using a different default factory (linear instead of Richardson) could improve low-depth behavior, but that might be a discussion for another issue.
I agree with raising a warning (maybe inside the folding functions?)
Proposal:
We could raise a warning when the noise scaling round-off approximation is too large, i.e. when the user inputs an ideal scale_factor but the folding method produces an actual_scale_factor which is significantly different.
The actual_scale_factor  can be computed as the number of gates of the output circuit divided by the number of gates of the input circuit.  More precisely, to take into account the fidelity parameters, the actual_scale_factor would be equal to the weight of the output circuit divided by the weight of the input circuit.
@andreamari what about simply raising a warning when the depth of the circuit is small, say less than 5 (moments)? If so, I'm happy to take this :)
Sounds good. Thanks
Resurfacing.
How about making it clearer in the docstrings / docs that folding may not work well with small circuits? (and not raising a warning)
Hi! I am interested in tackling this issue! Is anyone working on that?
Hey @nahumsa, it's all yours - thanks!
There's not a clear direction to go in from the above PR comments. We discussed this at our weekly meeting last Friday and settled on the following.
The warning can be something along the lines of this comment:
We could raise a warning when the noise scaling round-off approximation is too large, i.e. when the user inputs an ideal scale_factor but the folding method produces an actual_scale_factor which is significantly different.
The actual_scale_factor can be computed as the number of gates of the output circuit divided by the number of gates of the input circuit. More precisely, to take into account the fidelity parameters, the actual_scale_factor would be equal to the weight of the output circuit divided by the weight of the input circuit.
Hi @rmlarose, thanks for the reply! I'll try to implement this warning and add a PR. :)
Hi @rmlarose, I had some personal issues and I will not be able to finish by Friday.
Sorry about that :(
