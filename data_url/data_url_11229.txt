Hello,
I have been using the function uccsd_singlet_generator in utils/_unitary_cc.py and noticed that at line 308 there is the for loop
which will include values where spin_a = spin_b, hence the spin orbitals virtual_1_a = virtual_2_b, or occupied_1_a = occupied_2_b. I don't think there should be excitations in which like spins are excited to/from the same spatial orbital. This doesn't affect the results (as the corresponding amplitudes invariably go to 0 for singlets), but this would add unnecessary terms to the cluster operator, hence it will affect efficiency.
I made a copy of this function in which I simply added conditionals that throw out excitations involving those spin orbitals, and I get the same answer with fewer terms in the cluster operator.
It looks like there may be a similar bug is also in uccsd_singlet_get_packed_amplitudes, around line 190-203 of utils/_unitary_cc.py.
Thanks,
Gabriel
Hi Gabriel,
Thanks for pointing this out.  It is true that this is a redundancy.  Calling normal_order on the fermion operator also would have removed the terms in the generator that are automatically zero (but with extra computational cost!).  Would you like to open a PR with this fix?
Hi Nicholas,
I sent a pull request for this. I will close the issue now.
Thanks again,
Gabriel
