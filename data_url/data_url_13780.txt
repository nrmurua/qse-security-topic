Multiple easy fixes, one is to take num_folded >= num_to_fold as a stopping condition in, e.g., fold_gates_from_left, as opposed to the stopping condition num_folded == num_to_fold. For very small stretches, num_to_fold can start out at zero.
What about adding:
before the loop?
If the stretch is so small that num_to_fold is zero, then I would say that zero gates should be folded. With the num_folded >= num_to_fold stopping condition, 1 gate is folded when num_to_fold is zero.
I agree with this. Before I was thinking we should just round up num_to_fold to 1 if it's in the interval [0.5, 1.0). But we could just as well do as you suggested and round down to the nearest integer.
Actually I like the idea of rounding num_to_fold as you suggested, it's a better approximation. However I think the rounding choice is independent from this issue: even with the rounding that you proposed num_to_fold can be 0 if stretch is sufficiently close to 1.
Fixed by #30
