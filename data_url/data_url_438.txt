The Program is quite useful. When I iterate over it to get all the nodes, I want to know if each of them is part of the std library or not. I notice you are checking that internally like this: qelib_defs.find(id_) != qelib_defs.end(). I think it may be user-friendly to expose that as a public function, say, is_std().
On the other hand, I understand what I am suggesting sounds like some syntax sugar because, without that function, I can simply do the same checking in my own code as long as you maintain the qelib_defs as a public constant.
Anyway, just some food for thought.
Can you please point out the location of the code qelib_defs.find(id_) != qelib_defs.end()?

Thanks, I was doing a wrong grep and couldn't find it :)
Implemented staq::ast::is_std_qelib(), see the last commit 75e60c7; looks good?
Works like a charm. Thanks.
By the way, thanks for the amazing work done in the staq. I didn't even know the QASM/Verilog stuff could be handled in such a concise and elegant way. That lets us see new opportunities.
@DevelopDaily Thank you, glad you like it, staq was a collaborative effort at softwareQ Inc., lead by our senior quantum software engineer Matthew Amy.
