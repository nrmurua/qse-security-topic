Hi all,
given two FermionOperators, e.g. term1 = 1 [0^ 0 1^ 1] and term2 = 1 [1^ 1 0^ 0], can OpenFermion tell me if they are identical? If I use the SymbolicOpertor eq-method  term1 == term2, I get "False" as an output, probably because it does not first write term1 and term2 in an ordering of for instance normal-ordering+lowest-to-highest indices, where both operators would read term1 = -1 [0^ 1^ 0 1] = term2.
So: How do I check if two FermionOperators are identical (without using get_sparse_operator() and comparing the matrices, I want to avoid that if possible)?
I hope this is not too dumb a question, cheers
Michael
As a convention we never automatically normal order and always require that the user does that explicitly, because its very costly. So just use
normal_ordered(term_1) == normal_ordered(term_2).
But be warned that equality testing is never completely safe when we're dealing with floats. So a more robust thing to do would be
difference_operator = normal_ordered(term_1 - term_2)
bool(difference_operator.induced_norm() < 1e-8)
or something like that.
