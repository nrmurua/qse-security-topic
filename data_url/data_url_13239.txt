Per #1448, write the following documentation section:
Considerations:
@amirebrahimi, during the community call @nickdgardner volunteered to help close this issue and would be happy for your help in review stage if you have time. Hope that's fine with you, we assign the issue to Nick.
GitHub doesn't send notifications for issues being added to milestones, so I'm only now becoming aware of this. I would be willing to work on the task for the upcoming sprint/milestone, but am okay if @nickdgardner is really wanting to work on this. My one ask would be that in covering the options available it mentions that generate_inverse_confusion_matrix() can be used for generating a simplistic readout error correction matrix and generate_tensored_inverse_confusion_matrix() can be used for all other cases. This is alluded to at the end of the first sub-section in the docs currently.
I had this idea that for 2D hardware architectures that a worthy experiment would be to try growing the neighborhood of measurements progressively. So, initially, you could start with measuring single qubits in the computational basis (which implies no other qubits affect the measurements), then move to including nearest neighbors, then extended neighbors, and so on. For small devices it would be interesting to compare that to a full confusion matrix (or inverse for that matter) and what fidelities you get when comparing tensored versions with the full. My intuition says that there would be a significant falloff after nearest neighbors.
Regardless, I'd be happy to review.
Would it make sense to include #1454 in this milestone, too, and have me work on that?
Hey @nathanshammah and @amirebrahimi, if you have time and want to Amir, I think it definitely makes sense for you to work on this since I just started familiarizing myself with REM module. Maybe I'd be a good reviewer for this documentation as someone not already familiar with REM. What do you think? Anyway I'm happy to help with anything to make the milestone, just let me know.
Hi @nickdgardner and @amirebrahimi. Given the current situation and to avoid further confusion with new re-assignments, I would propose:
Having code and docs written by different people can be an interesting approach. It helps to better see the user's perspective and the user's difficulties.
@amirebrahimi : The idea about confusion matrices measured for a subset of qubits, interpolating between single-qubit to all-qubits makes sense. However, before jumping to the implementation, I would first check what methods already exist in the literature. E.g. see:
where similar approaches in that direction were proposed, if I am not wrong. Of course we are always free to study and implement our own method, but only if we think it is better or simpler.
Ok sounds good! I'll do a minimal version and we can go from there.
Sounds good. I plan to work on section 4 this weekend.
