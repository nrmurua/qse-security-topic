I am using QuantumVolume Circuit in order to test gpu and mpi bindings of qiskit-aer. Here is my code:
I want performance to enhance as I use multiple processes which actually does, below are output along with time_taken_execute
For 1 process without mpirun
With 2 processes, it takes a little higher than half time (16.5)
With 4 processes, time again shrinks
I also try with 'device=GPU' and it decreases time even further
However when I use multiple nodes, time taken increases significantly.
Same goes for GPU;
I am unable to understand this drastic increase in time as both of my nodes are at distance of one hop to eachother and on same LAN. There cannot be any networking lag.
Also in all outputs where np>1, I found 'parallel_experiments': 1}. Is this mean that my code is not running in parallel?
Using mpirun command with multiple nodes
Execution time should be significantly lesser when I use two nodes along with their GPUs.
May be I need to change my code to handle parallel execution but I am not sure as all of qiskit examples using gpui and MPI I came across are doing nothing regarding MPI.
Because communication between nodes will be the bottleneck, using multiple nodes to parallelize Aer takes longer time than single node execution for smaller number of qubits.
Here are parallelized simulation results I have for 30 and 32 qubits quantum volume circuits.

(I used IBM AC922 with 6 NVIDIA Tesla V100 GPUs on each nodes)
For these qubits, they require 8 nodes to get faster simulation time than single node.
(I think without GPU, we can speed up with less nodes...)
Also please try using larger blocking_qubits to get more speed. You can increase up to blocking_qubits = number_of_qubits - np where 2^np = number_of_processes
