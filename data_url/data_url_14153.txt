Right now the FullAncillaAllocation expands the circuit to the full width of the Target prior to applying the layout. It does this by adding a QuantumRegister instance with the name "ancilla". However, qiskit has a dedicated QuantumRegister subclass AncillaRegister (and AncillaQubit which subclasses Qubit) which is used to differentiate an ancilla qubit from other qubits. For FullAncillaAllocation we should leverage these subclasses as it makes it easier for users to differentiate between input circuit qubits and ancilla qubits added during a transpile. This is especially useful when trying to reason about the layout permutations caused the transpiler (such as with Operator.from_circuit or #9988) if there a distinct type it's much easier to determine if a qubit was in the input or not.
I'm totally on board with using AncillaRegister as the extra register added to the circuit by the allocation, but I disagree with the justification of
This is especially useful when trying to reason about the layout permutations caused the transpiler (such as with Operator.from_circuit or #9988) if there a distinct type it's much easier to determine if a qubit was in the input or not.
because we've never asserted that you can't use AncillaQubit in an input QuantumCircuit, and things like the multi-controlled gate synthesis make some vague insinuations that they want ancillas.  I'm worried that we'd be assigned extra meaning to AncillaQubit that hasn't previously existed, so would be a breaking change.
That's fair, I'm not aware of anything else using them so I was kind of cheating and just assuming that would be sufficient as a marker. But you're correct someone could be putting AncillaQubits in a circuit already and running transpile() on it which would make the type insufficient for differentiating the origin of the qubits. I think the only real option at this point is probably to add an attribute to TranspileLayout something like TranspileLayout.layout_allocated_ancilla and have a list of the qubits added during FullAncillaAllocation there as the only definitive way to track them
