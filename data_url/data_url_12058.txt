In the 1_quadratic_program.ipynb notebook, different ways of specifying the terms of a quadratic function are shown in code cells 6 and 7. The 7th code cell shows how to specify the terms of the objective function using lists/arrays:
mod.minimize(constant=3, linear=[1,0], quadratic=[[0,1],[1,-1]])
However, this code produces different quadratic terms in the objective function than code cell 6 above it. It also misses on including the z variable in the objective function at all. Perhaps it would be instructive to demonstrate to users how to construct the same objective function using different input modes. For instance, the code in code cell 7 could be changed to:
mod.minimize(constant=3, linear=[1,0], quadratic=[[0,1,0],[1,0,0],[0,0,-1]])
which would produce the same objective function as code cell 6 with a z term.
Thoughts?
I guess that having the same example would be a better option as it also includes the 'z' variable. The code could be edited to get some more clarity.
@wagnersj @tgag17
Agreed that having better clarity about what's going on with these two cell blocks would be useful.
Some suggested text, starting just above cell 6. What do you think?
You can add a constant term as well as linear and quadratic objective function by specifying linear and quadratic terms with either list, matrix or dictionary. Below shows examples of both. Note: in the LP format the quadratic part has to be scaled by a factor 1/2. Thus, when printing as LP format, the quadratic part is first multiplied by 2 and then divided by 2 again.
For quadratic programs, there are 3 pieces that have to be specified: a constant (offset), a linear term ($$c^{T}x$$), and a quadratic term ($$x^{T}Q_{0}x$$).
The cell below shows how to declare an objective function using a dictionary. For the linear term, keys in the dictionary correspond to variable names, and the corresponding values are the coefficients. For the quadratic term, keys in the dictionary correspond to the two variables being multiplied, and the values are again the coefficients.
[Cell 6]
Another way to specify the quadratic program is using arrays. For the linear term, the array corresponds to the vector $c$ in the mathematical formulation. For the quadratic term, the array corresponds to the matrix $Q_{0}$. Note that the ordering of the variables ($x$ in the mathematical formulation) is the order in which the variables were originally declared in the QuadraticProgram object.
[Cell 7]
Pinging @stefan-woerner to confirm the logic given above is correct.
@a-matsuo
Yes, I think this would give enough clarity even to a beginner on what the code does.
Also, Should cell 6 and 7 represent the same objective function to maintain the flow? Currently the two objective functions do not match
Sorry for my late response and thank you for raising the issue.
I haven't looked at in details, but I agree with having the same example makes sense more. I will modify the tutorial.
@a-matsuo Cool!
There's two things that should be changed:
I made a PR #1046 .
It should fix the points you guys mentioned in the above.
I used your texts @Travis-S-IBM . Thank you very much!
