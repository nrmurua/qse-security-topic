To implement a hanger resonator, you currently would put a bunch of coupler QComponents and connect between them with regular tline QComponents, thus fundamentally implementing a graph (graph, not list, since couplers and other QComponents have more then 2 nodes). That makes you lose information regarding the full "length" of the tlines.
The first step of improvement might be to "measure" post-fact the length, by summation while traversing the graph. That is a reasonable approach and in fact it should be implemented regardless of what I am going to say next, since it would be needed anyways. However this approach does not resolve the scalability limitation, given that the number of tlines grow linearly with the number of couplers.
The idea here is to implement a QPin concept for which a QComponent can have "anchor" points as part of its definition. Those Anchor points can then be given to the tline router algorithm to pass through, thus without the need for breaking the main tline into smaller segments. The ideal name for this is something like "Through-pins" since these are pins for all intents and purposes, but differently from other pins they allow a through connection, rather than a terminations.
Currently the "Anchors" are already implemented in the tline algorithms. So extending that to utilize "QComponent anchors" as inputs should be doable without too much work.
