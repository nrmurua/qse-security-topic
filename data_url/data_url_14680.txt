(Both qargs and cargs are [].)
Seems like the right behavior here is to broadcast to all qubits if barrier.num_qubits  == circuit.num_qubits (similar to what's done for circuit.barrier()), but if not, we should at least raise an error as we would for other instructions
I am interested to work on that.
Doesn't append require to provide the qargs? To not provide them, compose should be used. So I think this should raise an error if no qargs are specified ðŸ™‚
Doesn't append require to provide the qargs? To not provide them, compose should be used. So I think this should raise an error if no qargs are specified ðŸ™‚
Surprisingly not, though maybe this is the bug. If qargs is None, it defaults to [] which will eventually raise an error from Instruction.broadcast_arguments for most instructions, but not Barrier (because it supports qc.barrier() with no qargs).
