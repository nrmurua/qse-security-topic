When I run artiq_ctrlmgr it will only load controllers from the device_db.pyon file with a host parameter set to the ip address of the master.
For example I'm running:
artiq_master --no-localhost-bind --bind 192.168.1.1 -vv
artiq_ctlmgr --bind 127.0.0.1 -s 192.168.1.1 -vv
In my device db, this isn't loaded by the controller manager:
"hello": {
"type": "controller",
"host": "127.0.0.1", (ip of controller host)
"port": 4000,
"command": "./hello_controller.py -v -p {port} --bind {bind} --no-localhost-bind"
}
But this does get loaded:
"hello": {
"type": "controller",
"host": "192.168.1.1", (ip of master)
"port": 4000,
"command": "./hello_controller.py -v -p {port} --bind {bind} --no-localhost-bind"
}
So I'd have to set every controller's host to the same ip (of the master) and the controller manager would try to load every controller in the device database.
If I create a socket to artiq_master in a python console, the local address of the socket is always the same as the remote address of the master (each running on the same machine).  I'm guessing artiq_ctrlmgr is working the same way and this is just an issue with running everything on the same machine.
Loading controllers based on the --bind parameter passed to the controller manager seems how someone would expect it to work though.
Everything is happening on 192.168.1.1, so yes, you have to use that IP.
If you want the local controllers to use the loopback interface with IPv4:
Closing ticket.  Non issue.
