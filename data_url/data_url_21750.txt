PYON can't encode a NamedTuple. Fails silently.
PYON should be able to encode a namedtuple because it can be iterated/represented as a simple tuple. NamedTuples are useful for logically structuring data types that are passed between functions. Acceptable behavior: PYON encodes a NamedTuple as a regular tuple.
PYON should also raise logical errors through the PC RPC interface, so that debugging these issues is easier.
Should be able to fix this by checking if the type is a subclass of some other type, instead of exact type matching.
In my system, I make a RPC, which encodes a NamedTuple via PYON then sends it to a remote system.
**So 2 big problems
Workaround for anyone struggling with this: cast it to a tuple: tuple(named_tuple_object)
PYON should be able to encode a namedtuple because it can be iterated/represented as a simple tuple.
But it's not one. PYON was never designed to support named tuples, and adding support is a feature, not fixing a bug.
It failing silently and needing to track it down is a bug
PYON should be able to encode a namedtuple because it can be iterated/represented as a simple tuple.
But it's not. PYON was never designed to support named tuples, and adding support is a feature, not fixing a bug.
Related: list of supported datatypes is out of date. https://m-labs.hk/artiq/manual-master/protocols_reference.html#module-artiq.protocols.pyon. Doesn't include OrderedDict.
It failing silently
It does not:
Also, I don't see how they can be serialized in a way that is actually useful in practice. Turning them silently into regular tuples brings about new problems.
@drewrisinger I'm going to close this, if you need it please come up with a design and rationale for supporting named tuples in PYON.
