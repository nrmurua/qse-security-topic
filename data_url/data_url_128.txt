Some of our decomposition patterns add a global phase that is not tracked in any way. Often this is not a problem, however, when if we transform a pure kernel into something that is equal up to global phase and attached a control to it, then the resulting circuit will be wrong, because this global phase will become relative phase. For this reason the decomposition pass is very conservative and won't do any transformation if there is a quake.apply instruction in the module.
The addition of a global phase gate can help us to keep track of the global phase added by some transformation, and will allow us to not have to be this conservative when doing transformations.
Currently, in our simulator code handling exp_pauli (SimulatorTensorNetBase::applyExpPauli and QppCircuitSimulator::applyExpPauli), we throw an error if controlled exp_pauli(i*theta*Identity)  (controlled global phase) is encountered since it is a non-trivial operation.
When we have this global phase gate implemented, please revisit those FIXME comments in SimulatorTensorNetBase::applyExpPauli and QppCircuitSimulator::applyExpPauli.
