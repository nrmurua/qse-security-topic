There is a problem with mesolve and sesolve's default options, which determine whether the propagated states are stored in the result object:
In res3, there should be no stored states, as I'm requesting expectation values. The problem is due to the common gotcha of mutable default arguments in the definition of of e.g. mesolve:
What happens is that the default options get instantiated once when qutip is imported. In the example above res2 = qutip.mesolve(H, psi, tlist) will then internally set options.store_states = True, and this value will still be there for res3 = qutip.mesolve(H, psi, tlist, e_ops=[p0]).
Also, c_ops, e_ops, args, and progress_bar are all mutable in this definition, which could cause more problems. The correct thing to do is to initialize with None and set the mutable defaults in the body of the function.
I can prepare a pull request for this.
Thank you,
I was not aware of that and put the Options as default value to clean the code.
