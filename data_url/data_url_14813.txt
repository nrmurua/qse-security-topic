Hello, I'm working with the Qiskit transpiler and it erroneously removes necessary if conditions even when the optimization level is set to zero.
To reproduce the issue, run the following Python code:
The transpiler should not remove the conditional if(c==1) as this could lead to incorrect gate applications. The cx_o0 gate only acts if the classical register c is equal to 1. Since there are no prior measurements to change the initial state of c, the condition c==1 should be false and the cx_o0 gate should not be executed.
The transpiled QASM code lacks the conditional if(c==1), leading to the execution of the cx_o0 gate, which would flip q[0] to 1.
No response
I think the bug here is actually in the OpenQASM 2 import - the conditional isn't even on circ, let alone transpiled.  Does that match with what you're seeing?
Oh no, I'm sorry that's not true at all - I was tricked by a separate bug in the circuit drawer, where the condition wasn't drawn!
It turns out that the transpiler is actually doing its job completely fine - the condition is there all the way through the pipelines - but on conversion to a circuit at the end of the transpilation, a (potentially spurious) deepcopy is losing the conditional in this particular case, where the conditioned gate in question is a custom gate generated by the OpenQASM 2 parser.  It's a pretty tricksy bug all in - thanks for the report.
Here's a minimal reproducer of the root cause:
shows
but the second line should be the same as the first.
