If I try to create a controlled unitary from a QuantumCircuit which contains another QuantumCircuit, I get the error
QiskitError: 'One or more instructions cannot be converted to a gate. "inner" is not a gate instruction'
where "inner" is shown in the "Steps to reproduce the problem".
It only seems to work correctly if the top level QuantumCircuit is decomposed to its lowest level before making it controlled.
This throws an error
whereas the following works:
and the more nested circuits, the more times decompose() needs to be called, e.g
I would expect the ability to create controlled unitaries should be independent of the number of nested QuantumCircuit objects.
That's due to the fact that Qiskit distinguishes operations in Gates -- strictly unitary operations that e.g. can be controlled and inverted -- and Instructions -- for everything else. E.g. an RY rotation is a Gate whereas a measurement would be a Instruction.
If you call circuit1.append(circuit2), circuit2 is casted to an Instruction and therefore cannot be controlled anymore. I agree it's a bit inconvenient in your use-case. But there are several workarounds you can use:
Thanks for the suggestion @Cryoris. Indeed the compose workaround is the best option and works well, although it makes it a bit harder to control the level of granularity when drawing the circuit. But it sounds like my reported issue is actually behaving as expected, so happy to close this as an issue.
