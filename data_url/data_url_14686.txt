I would like to be able to append multiple circuits at once, e.g. this does not work:
where keep_alive() returns a QuantumCircuit
One way this could be done is to do,
Another alternative is to use keep_alive(qubit).repeat(8).
The docs for append say you can do what I want:
Append one or more instructions to the end of the circuit, modifying the circuit in place. Expands qargs and cargs.
This feels more or less like the compose with inplace=True.  Also using repeat is an interesting alternative.
append is for instructions while compose is for instructions or circuits.
What is the difference between an instruction and circuit?  Indeed, I use from instruction when taking a circuit to state vector, for example.
There are not a lot of differences but circuits are generally a higher level of abstraction than instructions. For instance they contain instructions and the notion of registers and track their parameter dependencies.
@nonhermitian I see there are workarounds for this issue, but since the docs say 'one or more instructions', would it be a good idea to allow a list of instructions as input to append? If you agree, I can do a PR for that. It would allow any combination of instructions and circuits in the list as long as the qubits/clbits are the same for all.
Probably more of a question for a qiskit-core member
AFAICT, the "one or more instructions" text was introduced in #2282 , but I don't think this was ever supported, so I think this is more a documentation bug.
Ok. Thanks.
