Adding points and colors to a Bloch object and rendering the Bloch object does not result in correctly colored points in QuTiP 5.
All points have the same colors. Running the same code in QuTiP 4 generates the correct output.
I expect the same coloring of points as with version 4. The expected plot is shown below.


Thank you @christian512 for reporting this bug! I was aware of it and hoping to fix it as part of #1913. The issue here is that a while ago a change that breaks backwards compatibility was made to the bloch sphere. I think you should see the correct behaviour if you change colours using:
but ideally there should not be a break in backwards compatibility for QuTiP 5.0. I was planing to revert this change as part of #1913 but I have not gone through it yet.
Hi @Ericgig @AGaliciaMartinez! Is this still open? If yes, can I work on it?
If I understand correctly, the idea is that it should accept any list of colours, not just the default, right? Or as part of reverting the change is it expected to add some new features?
@DnMGalan This is still open yes.  I think just making it backward compatible with the way v4 allowed for the colors to be customized is all that's needed.   In Asier's old PR #1913  there he had some open plans for further improvements, but am not sure how much of a priority those are?
Hi @nwlambert, thank you for your reply. Perfect, then I will focus on solving the issue of accepting colors as in V4.
One question I have is that in V5, the 's' and 'm' point styles use the same list of colors. In the 'add_points' function, it is specified that for the 's' style, only one color should be passed, however, as the task is to maintain backward compatibility, I just wanted to confirm if we should keep that part of the code unchanged.
Yeah, seems like in v5 if you give a list of colors to add_points it ignores whether you choose 's' or 'm' and just plots multicolored. I would keep that as is (since i guess the logic of choosing 's' or 'm'  is more about what default values to choose if the user provides no list of colors), and maybe update the docstring to just say giving a list of colors to add_points will override the choice of 's' or 'm'?
in v4.7 on the other hand, giving point_color() seems to still obey the choice of s or m used in add_points().  i would say its not so important to preserve that (presumably if you give a list you want multiple colors). @AGaliciaMartinez @Ericgig does this sound reasonable?
@nwlambert I have already made the pull request. The docstring was already updated specifing the needs of the colors you give to the add_points function depending of the style you proposed. I would like to ask two more questions:
-Is it necessary to create a changelog file if the change is small? I was reviewing the documentation and it tells you to create one but reviewing the ones that are created, they are few and all seem to be related to major code updates, so I assumed that one should only be created when the change in the project is significant. Am I right or should I add one?
-The other point I'd like to ask is if there are any open issues related to a plotting problem with the 'l' style. I believe I have found a bug related to plotting with this style due to the way the script orders the points before plotting, but I have not found any issues reporting it.
Plotting in V4:

Plottin in V5:

I think I know how to solve it, but I'm not sure if someone has already reported it, if I should open a new issue or just solve it as part of this issue.
