The main error message I get is rpcq._utils.RPCError: 'q0_ro_rx/filter' after calling qc.run(exec)  where qc is a QPU lattice and exec is a compiled binary executable.
Unfortunately the exact quil program is confidential data; the following steps were taken
gives an error and results in
Operating System: CentOS (QMI at QCS)
Python Version (python -V): 3.6.10
Quilc Version (quilc --version): QMI updated to latest forest sdk 2.17.0
QVM Version (qvm --version): QMI updated to latest forest sdk 2.17.0
Python Environment Details (pip freeze or conda list):
(The pyquil.api._compiler.py was modified to increase the timeout of QPUCompiler beyond 10 seconds)
Hard to be sure what is causing the error in this case. The RPCError message is pretty terse. It does seem a little strange that it mentions q0_ro_rx/filter, yet your ro_sources listed above doesn't indicate any readout on q0.
Do you consistently see this error, or only occasionally?
It's possible this might be related to a version mismatch in your conda env, similar to #1178, but I do not have access to a production QMI, so I can't be sure. I will see about getting set up with an environment this week so that I can try to reproduce.
In the mean time, any example program you can provide to reproduce the issue would be helpful (I realize it may be non-trivial to extract & sanitize one from the confidential source program).
@appleby
Hmm strange indeed. I have only tried running this once on a 16-qubit sublattice of the Aspen-7-28Q-A so it might be occasionally rather than consistently.
There is a chance this is related to #1178 ; however now I only changed msgpack-python to 0.6.1 and nothing else, and now there is no issue like the one above, when I ran almost the same circuit but 14-qubit version on the Aspen-7-14Q-C.
I was hoping to debug it but could not find any info on the meaning of this message q0_ro_rx/filter
@vincentelfving thanks for the update.
Indeed, that error is most likely coming from the remote QPU endpoint, not pyquil. The code that likely produces the error is not open sourced, so it will be difficult for you to debug.
I tried search for the error myself, but the error message is sufficiently cryptic that it's hard to track down exactly where it might be coming from. It's certainly possible that it is related to msgpack 1.0 changes / incompatibility, but that is only a guess.
In some places, RPCError is sort of a default wrapper around some underlying error message. The likely culprit here is that q0_ro_rx/filter is a missing key in a dictionary, and the default string reprepresentation of a KeyError is the error itself e.g.
@appleby correctly notes that this is unusual to see here, as the program does not involve readout on qubit 0.
@vincentelfving would you be willing to share the source of the Quil program which produced this?
We observed a similar issue internally and have applied a fix. I don't think you should see this error again so I am closing the issue, but don't hesitate to reopen if this problem remains.
