For transpiler unit-testing (#14) , we need to able to get the matrix representation of circuits across each of our supported packages to verify the equivalence of circuits before and after using the transpiler. For cirq we use this straight-forward unitary protocol. For qiskit we convert a circuit to an operator and retrieve its data attribute. For braket, we initially thought we could use the to_matrix method of this quantum operator class, but looking at the source code, this class is not yet implemented. So, we need to find another way to retrieve the matrix representation of braket circuits. Look through the amazon-braket open-source for another instance of a built-in function that calculates the unitary of a circuit, and demonstrate its functionality using the braket circuit defined at the bottom of test_circuits.ipynb. Using np.allclose, compare this matrix representation to that of cirq and qiskit for equivalent circuits. If the representations are not equivalent, experiment with qubit indexing, order of operations, and matrix transpositions/inversions as necessary so that the representations are aligned, and document in the notebook which circuit modifications were needed to find consistency transpiling across each package. If no built-in function exists, we may need to make our own version of a braket matrix representation function.
