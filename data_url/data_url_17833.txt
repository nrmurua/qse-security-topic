I tried to run the sample code for Bloch Sphere ("quantum_phase_bloch.py"), from this tutorial:
https://quantumexperience.ng.bluemix.net/proxy/tutorial/full-user-guide/002-The_Weird_and_Wonderful_World_of_the_Qubit/005-The_Bloch_Sphere.html
Executing the code results in the following error:
Traceback (most recent call last):
File "/Users/rajeshn76/python/projects/helloworld/quantum_phase_bloch.py", line 60, in 
plot_bloch_vector(bloch, "my bloch")
File "/Users/rajeshn76/Library/Python/3.6/lib/python/site-packages/qiskit/tools/visualization/_state_visualization.py", line 53, in plot_bloch_vector
B.show(title=title)
File "/Users/rajeshn76/Library/Python/3.6/lib/python/site-packages/qiskit/tools/visualization/bloch.py", line 585, in show
plt.show(self.fig)
File "/Users/rajeshn76/Library/Python/3.6/lib/python/site-packages/matplotlib/pyplot.py", line 253, in show
return _show(*args, **kw)
TypeError: call() takes 1 positional argument but 2 were given
Run the sample code for Bloch Sphere ("quantum_phase_bloch.py"), from this tutorial.
https://quantumexperience.ng.bluemix.net/proxy/tutorial/full-user-guide/002-The_Weird_and_Wonderful_World_of_the_Qubit/005-The_Bloch_Sphere.html
import numpy as np
from qiskit import QuantumCircuit, QuantumRegister, ClassicalRegister, execute
from qiskit.tools.visualization import plot_bloch_vector
q = QuantumRegister(1)
c = ClassicalRegister(1)
pre = QuantumCircuit(q, c)
pre.h(q)
pre.barrier()
meas_x = QuantumCircuit(q, c)
meas_x.barrier()
meas_x.h(q)
meas_x.measure(q, c)
meas_y = QuantumCircuit(q, c)
meas_y.barrier()
meas_y.s(q).inverse()
meas_y.h(q)
meas_y.measure(q, c)
meas_z = QuantumCircuit(q, c)
meas_z.barrier()
meas_z.measure(q, c)
bloch_vector = ['x', 'y', 'z']
exp_vector = range(0, 21)
circuits = []
for exp_index in exp_vector:
middle = QuantumCircuit(q, c)
phase = 2np.piexp_index/(len(exp_vector)-1)
middle.u1(phase, q)
circuits.append(pre + middle + meas_x)
circuits.append(pre + middle + meas_y)
circuits.append(pre + middle + meas_z)
job = execute(circuits, backend = 'local_qasm_simulator', shots=1024)
result = job.result()
for exp_index in exp_vector:
bloch = [0, 0, 0]
for bloch_index in range(len(bloch_vector)):
data = result.get_counts(circuits[3*exp_index+bloch_index])
try:
p0 = data['0']/1024.0
except KeyError:
p0 = 0
try:
p1 = data['1']/1024.0
except KeyError:
p1 = 0
bloch[bloch_index] = p0-p1
plot_bloch_vector(bloch)
Should plot the Bloch Sphere for visualizing the quantum states generated by the sample code.
The bug is in "bloch.py"  (from qiskit.tools.visualization) line # 585:
plt.show(self.fig)
It should instead be:
plt.show()
I cannot reproduce this issue.  Perhaps @mtreinish can give it a try.
I was not able to reproduce this either. I built a fresh virtualenv, installed qiskit 0.6.1 in it, and then copied the script from the bloch sphere tutorial and ran it. No errors and it successfully generated the visualization:

My only thought is maybe the matplotlib version you have installed is out of date? @rajeshn76 which version of matplotlib do you have installed in your environment? Also which backend are you using? After taking a quick look at the matplotlib code plt.show() calls the show() method on the configured backend so it could be specific to the backend you're using.
This i think is a matplotlib issue can you post which version you are using.
Thanks
I have version 3.0.0 of matplotlib
We cannot reproduce this using matplotlib 3.0 or 2.2.3.
Closing as non-reproducible. Please re-open if you believe it is a real bug.
