Right now the max_evals_grouped argument used by the optimisers is only compatible with an integrated finite difference gradient implementation.
It would be great if this would work for arbitrary gradient functions.
I think the way that multiple points are evaluated for the gradient should indeed have commonality if control is still needed over grouping these. Grouping was intended to potentially allow simulation to parallelize execution, plus grouping reduces overhead of remote communication by sending/receiving fewer jobs. Grouping pre-dates parameterized circuits and was restricted in the past to avoid memory issues when working with large number of parameters and a resultant large number of circuits. Grouping  should be re-evaluated as to how we do this etc going forwards to ensure consistent use and behavior around gradients.
This is mainly around the gradients in opflow. As opflow is deprecated, and there are new primitive like/based gradients, I am going to close this.
