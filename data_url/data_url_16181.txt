Calling circuit.repeat(1) on a circuit with global phase seems to duplicate the global phase.
If u is a circuit with only a Z gate and u_with_phase the same circuit but with a global phase of pi, then
This is checking if the matrices are identical, which they are not due to the global phase. To test equivalence up to global phase try,
Operator(u).equiv(Operator(u_with_phase.power(1)))
No but they are supposed to be identical, since power(1) shouldn't do anything. Especially in the phase estimation use case this is important because the circuits are first repeated and then controlled, so if we lose the global phase the circuits are not the same anymore, since the global phase became a relative phase ðŸ˜„
The circuit doesn't seem to lose the global phase.
Ok, I realised the title is wrong. It should rather be circuit.repeat duplicated the global phase. See e.g. this:
while qc.power(1) (or repeat(1), they are the same if power is called with an integer) says it has a global phase of 2 it effectively has one of 4. I'll open a PR to fix it, there it should be more obvious. ðŸ™‚
It seems like the the natural expectation of QuantumCircuit.repeat repeats the entire circuit, including global phase since that is part of the circuit. For instance if you converted the circuit to a gate and repeated that you would get the same answer.
I agree it should repeat the global phase and in #5588 it still does. The problem right now is that it is repeated twice:
therefore if you simulate a repeated circuit you end up with 2 * repetitions * existing_phase
Yes, the global phase must not be included twice. But, doesn't it make sense to collect it in the outer circuit and remove it from the inner circuits ? Is there a standard approach to handling global phase when composing circuits ?
@Cryoris says that leaving the global phase in components in a circuit is currently standard. So this PR for this issue #5588 seems to be the correct approach. LGTM.
LGTM
