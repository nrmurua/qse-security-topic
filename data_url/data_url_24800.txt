AWGs typically support branching based on a multi-bit (e.g. 4) digital input signal that is evaluated at certain points. This should eventually also be supported. One option is to extend BranchPulseTemplate to allow multiple branches similar to elif. However, due to hardware restrictions the usage will often be more similar to a C-style switch statement as only the input value rather than arbitrary conditions can be tested.
This feature is somewhat related to #43 as both controls the autonomous response of hardware to external stimuli.
Can you provide some documentation of how exactly this AWG feature works for some concrete device?
In this documentation the "Agilent 81180B sequence/segment control Input" is shown in figure 10 page 7. A digital signal controls the waveform flow. More than two possible branches are possible (8-bit / 256 in this case).

For BBN APS2, see documentation. The relevant command is CMP, it seems that the comparison register is an externally supplied signal, i.e. the software side of a connector like the above.
Tabor WX1284: See "Dynamic Segment / Sequence Control" (p 1-9), "Segment / Sequence Control In" (p 1-17), "Jump event" (p. 3-48), "Using the Dynamic Sequence / Segment Control" (p. 3-49).
Tek AWG: See "AWGControl:EVENt:DJUMp:DEFine" command and related in programming reference.
The corresponding manuals can be found on our server.
The basic idea for the latter two is that a 8-10 bit word supplied at an input connector determines the target of the jump in a sequence line.
BranchPulseTemplate was removed. This functionality will need to be reintroduced it is required.
