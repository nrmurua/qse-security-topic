It might make sense to define a base TomographyFitter class so that additional fitters can be added that share a common interface.
At minimum it would needs to be able to read load the output from the tomography_data function and return a fitted density matrix.
With respect to the current code, this would mean the fitter_data function which converts the tomography data into the format for the least squares fitting used by the mle and cvx fit would just become an internal function called by those fitters, and the mle_fit and cvx_fit functions would be inside the classes.
