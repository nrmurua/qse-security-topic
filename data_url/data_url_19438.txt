I finally attempted to install Tensorflow and Qibo in a machine with CUDA GPU and had a CUDA path related problem when building the custom operators. More specifically, while my CUDA path is /usr/lib/cuda/, nvcc is not located in the same folder but rather in /usr/local/bin/. Therefore when I follow the instructions from our docs the build fails because it cannot locate nvcc. I could fix this issue by manually changing the NVCC definition in our Makefile to NVCC = nvcc, which worked in my case because nvcc was included in the system's path.
Installation worked properly after this change and could confirm that the GPU was used using benchmark times. I thought of mentioning the issue here as it may be relevant for others. In our docs it seems that CUDA_PATH should direct to CUDA. Shall we change this to NVCC_PATH? I am not sure if for my case these two paths are different because something went wrong during the CUDA installation.
Which Linux distro are you using?
Which Linux distro are you using?
This is on Ubuntu 20.04.1 with CUDA 10.1.
I had a bit of trouble when installing CUDA because I initially tried to install CUDA 11 without success, so I went back to 10.1 using apt install nvidia-cuda-toolkit. I also had to re-install the GPU drivers a few times because of some issues with my monitors. I am not sure if all this messed the installation directories.
I had a typo in the first post: my nvcc is actually located in /usr/bin/ along with many other files not relevant to CUDA, while CUDA is located in /usr/lib/cuda.
Interesting, for the github actions I have followed the official instructions from the nvidia website and I get everything inside the cuda environment. Anyway if that is the case, I think makes sense to separate the compiler flag from the library as you suggest.
Interesting, for the github actions I have followed the official instructions from the nvidia website and I get everything inside the cuda environment. Anyway if that is the case, I think makes sense to separate the compiler flag from the library as you suggest.
Another simple solution that I used is to just copy the nvcc file manually to /usr/lib/cuda/bin/. In my case this directory existed but was empty. After copying nvcc there Qibo build works as it is now.
I am not sure if this issue is relevant to other people but if it is, perhaps we could just write in the documentation where nvcc should be located. This may be simpler than having multiple flags.
Did you install the cuda tools using the nvidia instructions or simply using apt?
Did you install the cuda tools using the nvidia instructions or simply using apt?
I simply used apt because I could not get nvidia's instructions to work.
Strange, I have ubuntu 20.04 and these instructions work fine.
On my system the nvcc compiler is located in /usr/local/cuda-10.1/, same for the virtual machine running rhel6 for our linux wheels in the github action.
Are you sure the compiler is not duplicated from /usr/local/cuda-10.1?
Strange, I have ubuntu 20.04 and these instructions work fine.
I don't remember exactly what was the error I was getting with nvidia's instructions but I think something was missing when I was running sudo apt-get -y install cuda. Perhaps it was because I attempted to install CUDA 11.1. I think I did not try 10.1 using the instructions because after failing with 11.1 I just used apt.
Are you sure the compiler is not duplicated from /usr/local/cuda-10.1?
In my case this directory does not exist. The output of whereis cuda is
cuda: /usr/lib/cuda /usr/include/cuda.h
while the output of whereis nvcc is
nvcc: /usr/bin/nvcc /etc/nvcc.profile /usr/share/man/man1/nvcc.1.gz
Ok, let me try to reproduce this issue on a fresh ubuntu installation.
Ok, let me try to reproduce this issue on a fresh ubuntu installation.
No worries, personally I could solve this issue easily. The only reason I opened it is because I thought it could affect other people trying to install Qibo. If this is not the case we can close it any time.
I have reinstalled cuda from here and used directly version 11.1.
The installation was successful and everything was installed in /usr/local/cuda-11.1, so I believe there is something different for the deb package from the ubuntu repo.
As you said, we could add some warning in the docs about nvcc outside the cuda path.
In summary, we should update the installation docs from source and including a sentence about gcc/clang on macos.
