There are instances where calling the qpt function for the process matrix chi corresponding to a superoperator returned by propagator is not Hermitean. This occurs strangely when multiplying the propagator by an irrelevant global phase: the original propagator does not have this issue. However if I calculate the chi matrix following more closely the analysis in Nielsen and Chuang (defined below as my_to_chi) where first the propagator is decomposed into Kraus operators, and then the Kraus operators are decomposed into the fixed basis of Kraus operators (e.g. Pauli operators) passed by the user, the global phase makes no difference.
I see in the source code a call to scipy.linalg.solve, which perhaps could be the issue, though I am not certain.
The qpt function should return a process matrix that is Hermitean, irrespective of a global phase.
No response
@nathanshammah This seems like an important issue, unsure why this is dormant. Let me know your opinion, please. Danny (former student of mine) could turn this into a pull request, if you tell us that that's the appropriate route.
The transformation presented in the example take a proper density matrix (trace 1, hermitian) and return a non-hermician density matrix:
rho_new = exp(1j * theta) * U(0, t) * rho_0 =  exp(1j * theta) * rho_t.
It seems normal chi matrix for that transformation to also be non-hermician, so I have problem understanding the issue.
Was there confusion that the propagator was applied on a ket and not a density matrix?
Not sure I follow: prop defined in my example is a propagator, or unitary transformation. I can multiply the propagator by a global phase which should e.g. not affect any observables. Moreover the chi matrix should definitely always be Hermitian, see for instance Eq. (8.152) in Nielsen and Chuang.
