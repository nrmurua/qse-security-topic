MPS simulator hangs during processing of a measurement instruction in specific cases reproduced below, and in the case that (a) the bond dimension is limited; and (b) the mps_apply_measure method is used for measurement.
The hang is caused by an infinite loop in the C++ csvd code because the value of eps is zero and none of the exit conditions are satisfied. The value of eps is zero because the input matrix is zero. The input matrix is zero because this is the result of the MPS_Tensor::Decompose method, executed in the context of MPS::move_all_qubits_to_sorted_ordering().
References:



Issue is reproduced with the following Python script.
The problematic behavior is seen in this test case only if the measurement outcome is 1. This is selected stochastically by AerSimulator and cannot be seeded as far as I can determine. If the measurement outcome is 0 the program completes.
When the issue arises, the program hangs in the context of processing instruction measure q[0] -> c[0];.
Changing the measurement method to mps_sample_measure_algorithm="mps_probabilities" avoids the issue, but has limited scalability.
Changing matrix_product_state_max_bond_dimension=2 to a value other than 2 avoids the issue, but the intent is to be able to set it.
Changes to this input program such as replacing h q[3] with h q[2] also avoids the issue.
Simulation should complete with correct sampling result.
The rationale for this particular circuit test is to verify that two independent Bell states which would normally be precisely represented using MPS with a bond dimension of 2 if they were local on the MPS linear chain (e.g. qubits 0 and 1, and qubits 2 and 3) are not precisely represented when the Bell states are not local (in this case, qubits 0 and 3, and qubits 1 and 2). The simulation should succeed but we should not expect all four outcomes to be represented with equal probability due to truncation.
The solution appears to lie in correcting the behavior of MPS::common_apply_2_qubit_gate() in the context of this measurement operation, but I have not determined how. Any guidance would be appreciated.
References:

@mhodson-rigetti - thank you for bringing this bug to my attention. I will probably only be able to look at this next week. I will keep you updated.
@merav-aharoni have you had a chance to look into this?
@mhodson-rigetti - I am currently implementing a fix. I will write more details when I have completed it. It should take another few days including a corner case I haven't addressed yet, cleaning up, testing, review, etc.
I believe that @1713 resolved this issue.
