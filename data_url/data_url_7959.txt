Adding (or subtracting) a number from a ket modifies the data of the ket even without an assignment. In the code below, I would expect that a is not modified when the expression a+1 is run, but it is. That is to say, a+1 has the same effect as a+=1. In contrast, the data of the QObj does not change when adding a number to an operator or when multiplying a ket by a number.
First of all, adding a number to a ket is not a well-defined operation, so perhaps it should throw an error. However, I think that the value of a+1 is not entirely unexpected, so it could be kept. The real issue is that the data of a is modified without the code ever explicitly reassigning a. This is definitely unexpected. I would expect the output to be:
`Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket
Qobj data =
[[1.]
[0.]]
Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket
Qobj data =
[[2.]
[0.]]
Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket
Qobj data =
[[1.]
[0.]]
`
No response
Thank you for reporting.
I will fix by having ket + scalar raising an error.
Closing the issue, it was solved in #2209. Thanks for reporting the issue @vikramkashyap and for solving it @Ericgig !
