Since we allow fior different width circuits in compile / transpile the width of the circuits should be validated to fit on the backend that they are being compiled for BEFORE actually being compiled. This prevents compiling many circuits only to have an exception thrown because a later one is not compatible with the backend.
Hi, I'm interested in taking on this issue. Just a few questions to clarify some things. It looks like with the 0.9 Qiskit release the new way to create your qobj will be with qiskit.compiler.transpile(), and then qiskit.tools.compile() will eventually be removed. Am I safe to assume that this would mainly just be an addition to transpile()? It also looks like the code in transpile() will be changed, as noted by the comment stating the current code "is a hack while we are still using the old transpiler", so should I hold off on any additions until the code is updated?
Hi @mstypulk, great!
I would say wait until #2166 is merged, as it extensively touches the same files you would be working with.
Yes, you should modify the transpile() function. In #2166 this function moves under qiskit.compiler.transpile().
Iniside this function, you have a list of circuits that are being transpiled, and a list of coupling_maps that are targeted (after some parsing is done -- this is a list of either CouplingMap objects, or None). The former determines the width (number of virtual qubits), the latter the number of physical qubits. You can do a simple compatibility check there.
Basically the circuits list and the coupling_map list must be element-wise compatible.
Hi @ajavadia,
I've been working on this, and just had a quick question. After the parsing is done, if the elements of the list of coupling_maps are None, are we still carrying out a check of virtual vs physical qubits? If so, would we do so by checking the number of virtual qubits from circuits against the number of physical qubits which can be retrieved from backend.configuration().n_qubits?
Would this be an acceptable way of doing this?
@Matt-Stypulkoski sorry did not see this, but I think the way you have done it in the PR is right. If coupling_map is None, then this check is irrelevant and does not need to be done.
