The return type of extrapolate in RichardsonFactory is a non-obvious Union, which seems to be a bad solution for a couple of reasons:
One solution that I can think of is having two functions, e.g. extrapolate and extrapolate_with_full_output?
Any other ideas @dexter2206 ?
Hello @mstechly, thank you for your interest in Mitiq!
If this is a bug report, please provide screenshots and/or minimum viable code to reproduce your issue, so we can do our best to help get it fixed. If you have any questions in the meantime, you can also ask us on the Unitary Fund Discord.
Thanks @mstechly!
We want Mitiq to be as user friendly as possible and so this kind of constructive criticism and feedback is very useful.
I write down some proposals:
Personally, I lean towards 2 + 3. But other opinions are welcome.
What about a custom return type?
Or use the custom return type in all cases?
@rmlarose I like this idea, perhaps ExtrapolateOutput could be a NamedTuple?
It could still use the flag to avoid calculating all the additional quantities if they're not needed. They would be just set to None if the flag is not specified?
@rmlarose I like this idea, perhaps ExtrapolateOutput could be a NamedTuple?
Yeah, something like this. Whatever minimizes the annotation while not hurting usability is fine by me.
Also worth pointing out that this will break backward compatibility.
Discussed at Mitiq meeting, strong preference for this option.
