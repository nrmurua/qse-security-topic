Qiskit seg-faults when trying to execute the examples of the extended stabilizer tutorial (https://qiskit.org/documentation/stable/0.19/tutorials/simulators/6_extended_stabilizer_tutorial.html) at qubits >=40, regardless of whether I use the "extended stabilizer" simulator or the "state vector" simulator.  I have tested this on two systems, with three different installs of Qiskit:
Both seem to have the same Qiskit Aer version, according to qiskit.__version__
Both are installed from pypi via pip.
When running the code in Jupyter from the tutorial, the kernel dies on boxes 3/4.  With the code isolated into scripts (see "Steps to reproduce the problem" below) it seems to "work" for 39 qubits but segfault on 40, almost immediately, before any work is done.
Experimentation with print statements show the issue is this line:
What is confusing to me, is that the behaviour is the same regardless of what I put in method.  Has something changed in the way Qiskit selects a method since 2020 when that tutorial was written?
Initially when I tried to run the notebook example at the above link, I used Jupyter and this threw an error saying the kernel had died at the third/forth boxes i.e.
and
I took the code out and put it into a pair of python scripts as follows:
test_sv.py
test_ext.py
Running each script with an argument sets the number of qubits, e.g.
runs the extended stabilizer version with 20 qubits
To see the behaviour:
Running python3 test_ext.py 40 should output:
I've done some more digging on my laptop, installing older versions of Qiskit and Python because of course, that example is old. and:
Qiskit 0.37.1, Python 3.7.12: Seg faults.
Qiskit 0.19.6, Python 3.7.12: Works.
So it seems the bug/feature is a change somewhere in Qiskit.
OK, this definitely happened in the change between Qiskit 0.29.x and 0.30.x.
I note in both there is a deprecation warning, and in the release notes for 0.30.0 there's a change to how backend options are passed.
The deprecation warnings for 0.30.0 and 0.29.1 give the game away:
and
So the issue here is caused by that example using something that's deprecated.
The code can thus be adjusted:
Which works fine.
