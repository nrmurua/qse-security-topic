Frequently while I am using mesolve for some long protracted evolution the density matrix at some point becomes nonhermitian (isherm and checkherm() return false). I am guessing that this is just because of numeric noise, as there is nothing physically that can cause that (and it is happening even when the evolution is purely unitary).
Is this actually because of numerical noise?
If yes, I was wondering whether this can be addressed from within qutip or whether the burden on addressing numerical noise should be on the user?
Is there a "canonical qutip way" to remove the nonhermitian numerical noise from matrices that should be hermitian?
Edit: the nonhermiticity is indeed very small (10**-11), so it is just noise. I am just wondering whether it is qutip that should address the problem or the user.
Yes, I would suspect it is numerical errors. How large is the nonhermicity? For example, what does something like abs(rho - rho.dag()).data).max() give? In some places in qutip where we know that a Qobj is hermitian we enforce it with something like rho = (rho+rho.dag())/2, but I'm not a big fan of this introducing more of this kind enforcement on the matrix data level. But we could perhaps have some convenient functions for helping users enforcing hermiticity?
It most likely is.   Roundoff error and errors due to discreteness of the
ode methods will lead to some errors. One way to get around this is to
operate only on the upper or lower triangle of rho.  This would also speed
things up
Frequently while I am using mesolve for some long protracted evolution the
density matrix at some point becomes nonhermitian (isherm and
checkherm()return false). I am guessing that this is just because of
numeric noise, as
there is nothing physically that can cause that (and it is happening even
when the evolution is purely unitary).
Is this actually because of numerical noise?
If yes, I was wondering whether this can be addressed from within qutip or
whether the burden on addressing numerical noise should be on the user?
Is there a "canonical qutip way" to remove the nonhermitian numerical noise
from matrices that should be hermitian?
—
Reply to this email directly or view it on
GitHubhttps://github.com//issues/122
.
I was wondering if this is still an issue? If so I could try to spend some thinking on possible ways to correct the errors.
Whether it is an issue likely depends on you school of thought.  The error comes from the finite accuracy of the solvers. By default, the solutions are found using a method that is accurate 12-order in the step size and looks for absolute and relative errors at the 1e-8 and 1e-6 levels, respectively.  If you evolve for long enough then inevitably there is going to be some error, and you will not get perfectly Hermitian matrices.  One can accept this, and possibly lower the tolerance levels for more accuracy, or you can take 0.5*(A+A.dag()) to force the Hermicity.  What method you use likely depends on your question and taste.  Either way, I do not think that I would call this an issue.  It is more of a fact of life when doing numerics.
Paul
On Jun 1, 2015, at 20:00, mmensing notifications@github.com wrote:
I was wondering if this is still an issue? If so I could try to spend some thinking on possible ways to correct the errors.
—
Reply to this email directly or view it on GitHub #122 (comment).
Closing this question as it is answered.
