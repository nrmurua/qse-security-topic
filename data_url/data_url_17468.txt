gives 21.  However, the number of tensor factors can never be larger than the width of the circuit which is 20 in this example.  The correct number should be 1.
It seems like this issue is not a regression. I checking out code form Feb and the script from OP is still stdouting 21.
So I think the issue here is that the DAG includes the classical register bits in the computation of tensor components.  So if I have a fully connected circuit, but I have 20 classical bits that I do not do measurements on, then the number of tensor factors will be 21 as given above.
So at first this makes no sense because the tensor components should just be a computation of whether or not my circuit unitary can be made block diagonal with the number of blocks being the answer. However, if you have conditionals, then you could have the situation where two disjoint sub-circuits could be connected if one of the subsystems is conditioned on a measurement that is performed in the other sub-system.  So form this viewpoint adding the classical registers makes some sense.  However, one now runs into the situation where some circuit properties, such as the width depend only on the quantum part (Preskill uses this def for example), dag.width gives only number of qubits in circuit, where as others num_tensor_factors includes classical bits.  This just does not seem right.
Interesting. I agree that in your conditional example, the 2 subsystems are no longer separable. So in that sense the classical bits should be taken into account. But can we also agree that reporting 21 as num_tensor_factors for that first example doesn't make sense? I think we should only report the tensors for qubits, but allow for classical bits to reduce the number of separable systems (not increase).
Closing as I do not think this is a bug. See a discussion in #1993 that unifies the circuit properties with the DAG equivalents.
