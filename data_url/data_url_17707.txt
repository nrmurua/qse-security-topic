The following no longer spawns a progress bar"
unless compile or execute have been run first.
uncomment the line below:
You should not have to call execute or compile before a progressbar can be displayed.
I believe that this is due to progress bars listening to terra.transpiler.transpile_dag.start rather than terra.transpiler.parallel.start that is emitted by parallel_map.  I am not sure why the progress bars work afterward.
Yep, I have associated the progress bar to the compilation, not everything run in the parallel map. If we want the progress bar to show up when something is executed via parallel map, we just need to listen the events you said, and remove all compilation specific events from the code, as nobody else is listening to them.
If there's no rush, this could be a good first issue for contributors.
If there was a way to indicate that a ipywidget was not output to a cell (looking into it) then the unittests would fail. As such,
It should probably be fixed in 0.7
@atilag, the transpilation has been updated in #1406, and just uses a standard call to parallel_map.  Therefore, we can not spawn any progress bars until this issue is resolved.
There seems that the events being emitted by the transpile_dag method have been removed in #1406 . As we are changing the behavior of the Progress Bars to show up whenever a parallel_map is called, we just need to change the events we are listening in the Progress Bars, from: terra.transpiler.transpile_dag.* , to: terra.transpiler.parallel.*.
There's only one file to change, starting here: https://github.com/Qiskit/qiskit-terra/blob/f3e62a4f7348996058bae68be0d709512469b2bf/qiskit/tools/jupyter/progressbar.py#L131
@nonhermitian seems like nobody has dared to take this, could you fix this? :)
Ok
