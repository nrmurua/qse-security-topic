We can reuse task 3 and add repeat-until-success loop to discard numbers less than N or greater than M, similar to how the Microsoft Learn module does it.
I would love to work on this.
I think this task might be too easy for you :-) I'm filing a bunch of easy to start with issues with an eye towards Hacktoberfest, so that if a new contributor walks in looking for something to try their hand at, they'd have something non-daunting to do.
I appreciate your enthusiasm, but I'd suggest to leave those easy issues (the new ones marked as "good first issue") as an opportunity for first-time contributors. Meanwhile I'm trying to catch up on reviewing your existing PRs so that you'd have something to do :-)
Hey, I'd love to work on this !!
@Yash-g17 Sounds good! Let us know if you need any pointers regarding the process.
(I would recommend to send the actual pull request in October, so that it counts for Hacktoberfest :-) I've been part of this event for several years, and I like it a lot)
Tysm :)
Hi,
I have a quick question. Do we need to add a completely new package with the test suite or just add in an existing package. I can find a code file doing random number generation ReferenceImplementation.qs
Can you please guide me through this
Hi @Yash-g17,
To add a task to an existing Kata you do not have to create new packages or files.
You have to add the task to the Jupyter notebook, this is the part where the user will interact with the new task. Next the actual solution should the added to the ReferenceImplementation.qs file.
Lastly, you have to add a unit test to Test.qs, which will compare the solution given by the user in the Jupyter Notebook and the reference implementation.
If you have anymore question don't hesitate to ask.
A quick note: there is also the Tasks.qs entry which is a different front-end for the task, that matches the operation signature in the notebook (without it the Q# project won't compile). You can find the examples in the tutorial - just look for an entry for the task 1 in each file, and see how operations are named (names are important to make sure all pieces work together) and what they do.
Now that I think of it, we don't actually have a list of all the pieces that go into adding a new task documented in the contributor guide, we're relying on ample examples... I opened an issue #497 to document that (it has a link to an example PR that adds a new task).
I hope this issue is not very urgent, I'm quite busy with my assignments and tests right now, I'll create a pull request as soon as I'm done with them.
Hi,
Not urgent, but Hacktoberfest only runs to the end of October ðŸ˜ƒ.
I'm afraid due to less familiarity with jupyter notebook and Q# language , I won't be able to complete the task even after spending a lot of time with the issue , I deeply regret for all the inconvenience caused and would like to withdraw myself from this for other hacktoberfest aspirants while the time allows .
Hi, @tcNickolas, I have added the new task in #549. Check it out it.
