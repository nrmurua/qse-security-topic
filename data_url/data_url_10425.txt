https://github.com/dwavesystems/dwave_micro_client/blob/a425ff6984f6369514359df8fdbfa52c8d5033d8/dwave_micro_client.py#L734
This can be useful when some solvers have x parameters that are not advertised yet, for example x_reinitialize_state, etc...
I looked into this.
A Solver is typically created from a Connection object (at least that's how its used in dwave_micro_client_dimod). So the flags for the solver would need to be given as arguments to the connection.get_solver method. However, there is some caching based on solver name happening there. So providing the same name with different flags could be problematic.
May want to fragment what is happening in that function in a few parts. This is more refactoring than I am comfortable doing (since I am not aware of design choices / priorities).
@frechette-alex  Sure, we can skip checking of x_* parameters. Those will be available only for internal testing anyhow, and discarded otherwise (no security concerns).
That sounds like an even better solution that what I had in mind.
Closed by #211.
@frechette-alex heads up, version 0.4.6 (just released) adds support for experimental parameters (passes through all x_* params).
