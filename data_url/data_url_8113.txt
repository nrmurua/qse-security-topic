Hello,
I am currently having an issue with the qutip.displace operator. I want to solve the dynamics of a 1D Hamiltonian which consists in two terms, the first one a displaced harmonic oscillator and the second one a cosine of the position operator.
Before writing all the Hamiltonian I tried several examples with different potentials :
But when I tried V(x) = 0.5*(x-3)**2+x --> H_2 = H_1 + position(dim) with dim = 8 for example, I found the following eigenvalues :
[-1.94563502  0.44017316  2.61960688  4.31137988  4.99244818  6.16377699
7.35499586  8.06325407] .
The problem is that the first eigenvalues have really decreased which seems not logical because with the x added, the potential should be slightly higher. I also use in parallel the PySlise package for Python which enables to solve Sch√∂dinger equation and finds eigenfunctions and eigenvalues and it gives me :
[ 3.01788   4.11151  5.32044    6.63324   8.02437 9.47380  10.96801   12.49776 ] (it was giving the good results for 1) and 2))
So I don't understant why qutip doesn't give me the same result, I know I use two different methods; qutip is just finding eigenvalues of a matrix and PySlise solve differential equations but when I don't use displacement operator both always give the same result. I tried to write the displacement operator my self with the create & destroy operators and the Glauber formula because I noticed that the commutation relations were not respected cause of the truncation but I didn't work.
If anyone has any ideas I would be very grateful, I have already spent a lot of time looking and I am getting desperate.
I thank you for reading my message, I apologize for any spelling mistakes that may remain in my message, (I am in bachelor and English is not my native language)
To Reproduce
The terminal out put is
@nwlambert Thank you for writing such a nice reply.
@ChristianVerollet I'm closing this for now because it seems to have been resolved, but please feel free to reopen it or write further comments if needed.
Hi Lambert,
Thanks you for your answer ! As you said I tried with a higher number of dimension for the case with V(x) = 0.5x**2+x and I adjusted the sqrt(2) which was lacking and yes the eigenvalues are converging but not a the good values. For example with dim = 35 I obtain :
[ 3.          4.          5.          6.          7.          8.   9.         10.         10.76386907  11.         12.         13. 13.99999999 14.59881066 15.00000021 15.99999984 16.99997989 17.7691296 18.00061485 ....] the first values are not far from the PySlise values but after the errors are too important.
And the most weird is that if I use the potential V(x) = 0.5x**2-x and change the position into - position in the Hamiltonian this times qutip converges at :
[-3.00000000e+00 -2.00000000e+00 -9.99999948e-01  1.24008598e-06
1.00001959e+00  2.00021567e+00  3.00168756e+00  4.00939902e+00]
and PySlise gives me :    [ -3.00000    -1.99999  -0.99990   0.00084   1.00478     2.01924    3.05719    4.13217 ]
So it gives me the good eigenvalues (expect for the 4th but it's negligible) and I really don't understand why it works in this case and not in the other.
Thanks for the time you took for helping me.
Christian
I guess there's two things, firstly as you go to higher energies, again convergence errors will appear as levels  near the cut-off are sensitive to the cut-off.  Also, I think you can see the repeated eigenvalue around the middle of the spectrum which  was recently discussed here as a consequence of truncation #1587
Secondly,  as far as I can see the +- x  examples give similar convergence.   This example is easily solved analytically, the energies are just that of a normal harmonic oscillator + displacement (+-3 in your case) -0.5.  You can calculate this with a couple of just linear coordinate transformations in x.   Perhaps there is some issue with your +x solution in pyslise?
Also, for this type of question, you are likely to get good feedback/help from the community if you post to the qutip google group  https://groups.google.com/g/qutip
