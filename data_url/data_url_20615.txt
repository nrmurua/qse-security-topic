I have compiled OQS-Openssl_1_1_1 for Linux x86. I have followed the compilation steps as described (first liboqs and then openssl). The compilation was successful but when I run apps/openssl ciphers I can't see any ciphersuite with quantum algorithms.
==> apps/openssl ciphers
TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA:RSA-PSK-AES256-GCM-SHA384:DHE-PSK-AES256-GCM-SHA384:RSA-PSK-CHACHA20-POLY1305:DHE-PSK-CHACHA20-POLY1305:ECDHE-PSK-CHACHA20-POLY1305:AES256-GCM-SHA384:PSK-AES256-GCM-SHA384:PSK-CHACHA20-POLY1305:RSA-PSK-AES128-GCM-SHA256:DHE-PSK-AES128-GCM-SHA256:AES128-GCM-SHA256:PSK-AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:ECDHE-PSK-AES256-CBC-SHA384:ECDHE-PSK-AES256-CBC-SHA:SRP-RSA-AES-256-CBC-SHA:SRP-AES-256-CBC-SHA:RSA-PSK-AES256-CBC-SHA384:DHE-PSK-AES256-CBC-SHA384:RSA-PSK-AES256-CBC-SHA:DHE-PSK-AES256-CBC-SHA:AES256-SHA:PSK-AES256-CBC-SHA384:PSK-AES256-CBC-SHA:ECDHE-PSK-AES128-CBC-SHA256:ECDHE-PSK-AES128-CBC-SHA:SRP-RSA-AES-128-CBC-SHA:SRP-AES-128-CBC-SHA:RSA-PSK-AES128-CBC-SHA256:DHE-PSK-AES128-CBC-SHA256:RSA-PSK-AES128-CBC-SHA:DHE-PSK-AES128-CBC-SHA:AES128-SHA:PSK-AES128-CBC-SHA256:PSK-AES128-CBC-SHA
I am using this openssl to compile a SIP server (Asterisk). I would like to add support of quantum based ciphersuites in it. Can you please advice on how to do this?
Thank you.
The most practical way for me to learn about the way how quantum-safe algorithms are integrated into OQS-OpenSSL was by following the Running section in the readme: You can see that it is done by way of specifying the algorithms as TLS1.3 groups (-groups or -curves option) when considering the quantum-safe key exchange mechanisms (not as ciphers). For the background on how things have been done, check out this. Completed integrations are available in oqs-demos where you can see how to specify quantum-safe algorithms, e.g, here. A "trick" to see all OQS algs available in a compiled OQS-OpenSSL is to run openssl speed test: As such algorithm is unknown, the command will return the OQSKEM and OQSSIG algs available for use (as KEMs and SIGs, respectively).
The most practical way for me to learn about the way how quantum-safe algorithms are integrated into OQS-OpenSSL was by following the Running section in the readme: You can see that it is done by way of specifying the algorithms as TLS1.3 groups (-groups or -curves option) when considering the quantum-safe key exchange mechanisms (not as ciphers). For the background on how things have been done, check out this. Completed integrations are available in oqs-demos where you can see how to specify quantum-safe algorithms, e.g, here. A "trick" to see all OQS algs available in a compiled OQS-OpenSSL is to run openssl speed test: As such algorithm is unknown, the command will return the OQSKEM and OQSSIG algs available for use (as KEMs and SIGs, respectively).
I have gone through the Running section in the readme and also ran TLS demo on two separate machines (server & client) to acknowledge the support of quantum-safe algorithms in oqs-openssl.
I have compiled a SIP server (Asterisk) with oqs-openssl support enabled in it. And this server do not provide any way of specifying KEX algorithms (-groups or -curves). This server only requires the ciphersuite to settle on encryption in a TLS handshake. When I run this sever and try to list available ciphersuites, I only get the standard ciphersuites. I am trying to add the quantum-safe key exchange based ciphersuites as well.
I found that in the previous release (OQS-OPENSSL_1_0_2) there was a way to list Qalgorithms based ciphersuites. I compiled this branch and was able to see the OQS based ciphers. However, my SIP server crashes and throws seg fault when I try to run it with OQS-OPENSSL_1_0_2. Therefore, I would like to stick with OQS-OPENSSL_1_1_1. I am looking for a way to list the OQS-based ciphers in 1.1.1 version.
Therefore, I would like to stick with OQS-OPENSSL_1_1_1.
Indeed that is very advisable as we also have ceased to support 1.0.2 (as did the upstream).
this server do not provide any way of specifying KEX algorithms
This indeed is unfortunate but quite "usual" as groups are a reasonably new concept (TLS1.3). We also had to introduce options (for setting these) into some programs to enable KEX/KEM selection, e.g., curl/curl#5892
Thus, I'm afraid you'd have to dig into the code of Asterisk to find a way to call the OpenSSL method SSL_CTX_set1_curves_list to set/activate an OQS algorithm.
Closing based on @baentsch's explanation on calling SSL_CTX_set1_curves_list
