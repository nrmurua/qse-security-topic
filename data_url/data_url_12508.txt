Not sure if my understanding is correct here, but I've been going through the following exercise:
https://www.tensorflow.org/quantum/tutorials/mnist
And I've generated the following model with the following lines:
Great! And I can see I can even run a predict here which is even better:
Now if I look at this models layer I can see it contains a tensorflow_quantum.python.layers.high_level.pqc.PQC class:
So I read through the docs on it here, and it looks to be a kinda class generator for our quantum circuit however I can find a method for getting the quantum circuit out of it after it has been fitted: https://www.tensorflow.org/quantum/api_docs/python/tfq/layers/PQC
What I'd like to do if possible is to view a full circuit diagram output of the following circuit as seen in the building blocks for tensorflow diagram so that I can validate the circuits details: https://www.tensorflow.org/quantum/tutorials/qcnn#13_building_blocks_for_tensorflow
Please let me know if this is possible and thanks in advance for looking into this üëç
Hi @krubot thanks for raising the issue and for going through the documentation! Since TensorFlow Quantum converts a lot of
values to tf.Tensor format it does take just a little bit of work to pull these sorts of quantities out. Here's a quick snippet:
I've turned the original PQC layer into a named variable called pqc_layer. Now at any point I can pull out a cirq.ParamResolver (https://quantumai.google/reference/python/cirq/study/ParamResolver?version=nightly) object from the PQC's symbol_values function (https://www.tensorflow.org/quantum/api_docs/python/tfq/layers/PQC#symbol_values):
This is the quickest way to pull out parameter information if you want to analyze the data in detail in Cirq with minimal changes to existing code in the MNIST notebook. If you want to experiment with more intricate compute graphs, one thing I would recommend also trying is using the tfq.from_tensor method on the intermediate tensor objects that contain circuits in your compute graph. The QCNN tutorial has a nice little intro for how to examine circuit objects from their tensor representations.
Does this help clear things up ?
