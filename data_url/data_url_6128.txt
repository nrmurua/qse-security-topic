Simulation by OpenPulse is very unstable when the frame change is included.
For example,  X/Y measurements for a single-qubit Rabi oscillation.
After calibrating the pi pulse following the currently available notebook, you define
Then you can define another Schedule such as
and run the schedule as
In the activity monitor of macOS I see that a process named "ReportCrash" would run for a few seconds.
I am not sure whether there is a bug in pulse.FrameChange or simply a technical difficulty in calculation, but expect that the latter case is unlikely (since it simply shifts the phases).
Also, running the code directly as xxx.py would tell you there is some problem in convergence of ODE solver. Although increasing the nstep in the ODE option didn't improve the situation so much, it would be helpful for users to display the error.
I think this was fixed by #451
