Just wanted to document this.
In versions of GCC below 7.5 and 8.4 there is a bug whereby std::any_cast fails in the presence of dynamic library loading. This affects our HeterogeneousMap data structure.
Here's a reference to the bug fix gcc-mirror/gcc@683f972#diff-1d4ec2cbbc8c2e33d4a80c2bc5554db6R438
This leaves GCC version 7.5, 8.4, 9.3, 10.1, 10.2 as valid versions.
One question - did we only see this bug for the case of passing a void* to the HetMap in the HPC Virt plugin?
The deuteronH2.py example in the current Gitpod image failed b/c of this bug as well. It is using GCC version 8.3.
Was just trying to test it, can confirm that.
with 8.2.0, the c++ tests all seem to pass.
https://github.com/tnguyen-ornl/xacc/blob/efa12a271cac722c970b4fb9ec82077d3b100507/xacc/utils/heterogeneous.hpp
fyi, seems like the std::any fix was backported to minor versions also.
e.g. on Redhat with gcc version 8.3.1 20191121 (Red Hat 8.3.1-5) (GCC), <any> header does contain the fix.
So we may need to check on the GCC release date when debugging this issue.
