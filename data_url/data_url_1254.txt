Description of the issue
I'm expecting two equivalent (but different) circuits to give the same the output given the same seed. Are different outputs intended behaviour?
How to reproduce the issue
Circuit 1
Circuit 2
put long logs in details blocks like this
Cirq version
You can get the cirq version by printing cirq.__version__. From the command line:
This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 30 days
This happens because, by default, cirq.Simulator has a split_untangled_states=True flag set, which tries to optimize the simulation of circuits which can be split into unentangled states.
In your example, even though the two circuits are equivalent, the second one where you add a subcircuit and it's inverse makes it harder for the simulator to apply this optimization. As a result, for the two cases, the simulation path is different (one has the optimization of splitting unentangled states, other doesn't). This results in different number of calls to the random number generator and therefore a slight variance in the output results.
To get identical results, you can explicitly turn off this optimization by setting simulator = cirq.Simulator(seed=1128889, split_untangled_states=False).
Here are the two code snippets that produce identical results by turning off the optimization.
Circuit-1
Circuit-2
Since this is intended behavior, I'll go ahead and close the issue.
