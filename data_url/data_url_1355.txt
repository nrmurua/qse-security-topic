I looked into actually deprecating this but I don't think deprecation is the right thing to do here.
I believe SimulatesIntermediateState has too much simulation functionality tied to it; it should just be a wrapper around iterating intermediate states. The rest really belongs in SimulatorBase.
I think in the final solution, _base_iterator should be an abstract function in SimulatesIntermediateState. The implementation of it should be moved to SimulatorBase. Upon moving that, we can get rid of the abstract functions _create_simulation_state, _create_act_on_args, and _core_iterator from SimulatesIntermediateState, since they were only ever used from _base_iterator implementation. This provides better separation of concerns, and allows users more flexibility in implementing SimulatesIntermediateState.
Discussion from cirq cync:  This needs a decision before 1.0 since it affects the user-facing interface, but we were unsure whether it should be done without details from @daxfohl .  Keeping it on triage discuss for next time.
I generally have conflicts at that time but I created a simple PR with the implementation details. @95-martin-orion probably has the most context for a go no-go on it.
