From #3890 (comment) : now that the fake backends are useful beyond testing, they should be moved somewhere more visible and  their usage should be documented.
âœ…  Fake backends are still in the test folder and may need a bit more verbose documentation!
Will update comment/add more comments if cause is found/fixed!
Python version 3.9.7
qiskit-terra version: 0.19.1
May I work on this issue?
Yes, by all means, thanks!  I'll assign you.
When we move something like this, we need to do it in a couple of stages: in the next Terra release, we should make all the names accessible from qiskit.mock and qiskit.test.mock (without any warnings), then we'll add the warnings in the release after that.  We're just in the process of updating the deprecation policy to say that, but it'll be good for this to be a trial run.
@jakelishman I see this warning: "The BaseBackend abstract interface is deprecated as of the 0.18.0 release and will be removed in a future release. Instead you should build your backends using the BackendV1 abstract class (which is the current latest version of the backend interface)". I will ignore the legacy backends in this move. Ok?
For this first step, it might be easiest if you don't actually move anything, but just make a new module called qiskit.mock, which imports all the names we want to move.  That will mean that all the names are accessible from two places, without us duplicating any code.  The advantage to this is that it's easier for us to maintain all the locations that the objects are currently accessible from (e.g. you can access FakeRome from qiskit.test.mock, qiskit.test.mock.backends and qiskit.test.mock.backends.rome at the moment) during the swapover period.  In the new form, we generally just want people to access them directly as from qiskit.mock import FakeRome or so, so we don't need to duplicate all the structure right now.
After Terra 0.20 releases (which won't be for another three or so months) we can swap things over, then we can move where the objects are actually defined, and we'll issue a deprecation warning when using the old paths.
So, to answer the question fully: it probably would be ok to ignore the legacy backends, but I think it's better at first just to create a pass-through qiskit.mock module, and that's easiest if you just import everything.  There's no real harm in importing the legacy mock backends - we'll be removing them from everywhere they are.
Oh. Thank you for the details. I will add the module with the imports, you are right... there is no need to duplicate 100 files...
