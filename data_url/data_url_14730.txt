When calling EquivalenceLibrary.add_entry or .set_entry, the entry should first be checked to ensure it implements the same unitary as its corresponding gate. add_entry and set_entry should have a new validate kwarg (default true) .
Should the new entry replace the previous equivalent entry?
The entries are lists, so add_equivalence just appends to the list of known equivalences, and set_entry replaces the list of equivalences for that key.
It's not clear to me that this is something we should do.  If we do it in Qiskit, it should be caught by our tests.  If a user does it, it's a bug on their end and if we attempted to check, we might accidentally blow out memory if they're using it for many-qubit operations.  Adding unitary equivalence checks to the class precludes using the EquivalenceLibrary to represent transformations is problematic for parametrised circuits, to the degree that I'm not sure it's reasonably possible right now.
On that basis, I propose to close this issue as "won't implement".  If you agree (Kevin), please close it.
