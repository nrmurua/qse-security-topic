Is your feature request related to a use case or problem? Please describe.
This would be an extension of feedforward, so in addition to just classically controlling an operation, it should also be possible to resolve an operation's parameters based on measurements.
Describe the solution you'd like
This would require going through the previous RFC to make sure everything that we did for classical control, we also cover for these params, plus the commutation that was missed in the RFC. There are a fair number of considerations in that RFC but most of them should "just work" if we hook up the _control_keys_ protocol correctly to these params. We'd probably want to rename Condition to ClassicalValue or something like that.
What is the urgency from your perspective for this issue? Is it blocking important work?
P3 - I'm not really blocked by it, it is an idea I'd like to discuss / suggestion based on principle
Good feature to have, but P3 is the right priority. Would probably not happen before Cirq 1.0
Also as noted during cynq, since the set of possible measurement results is bounded (and usually small), this can already be brute-forced if needed, by having a separate classically controlled operation on each possible measurement.
I was initially thinking this could be done easily by merging the concept of param resolution and control key resolution, basically making them the same thing, all resolved at runtime. This approach could enable the feature in a few strategic lines of code, but unfortunately it fails in some requirements. For instance there's no good way to make it compatible with measurement indexes (coming with the repeated measurements feature). But moreover, there's an important reason control keys and param resolvers are distinct. The latter can be represented in hardware while the former cannot. If we merge the two concepts then it becomes harder to identify what can be physically realized and what cannot.
Thus any solution here probably requires updating each gate that can be parameterized and adding handling for the control keys protocol.
