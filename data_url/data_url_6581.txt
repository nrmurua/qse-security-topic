Related issues: #62 (Rx vs XPow gates), #48 (SWAP gate).
In order to consistently translate Cirq gates to qsim without increasing circuit depth, we should define gates (or extend existing gates) to replicate every gate type in Cirq. As noted in #62, global phase should be taken into consideration for this.
There's a few complications with providing Cirq gate parity.
One is that that there's no authoritative list of cirq gates, as far as I can tell. Here's my (probably incomplete) list of cirq gates and how they map to other APIs: https://quantumflow.readthedocs.io/en/latest/gates.html#mapping-between-apis
Another complication is that some of cirq's gates (e.g. CCNOT and CSWAP) are 3-qubit gates, and qsim is specifically optimized for 2-qubit gates.
What you may want to do is provide only a few extra gates (e.g. Swap and a global phase at least), and insist that users covert their circuits to qsim compatibility at the python level. Cirq has code to decompose gates into "simpler" gates, but I'm not sure if there is an easy way to covert a whole circuit, or what the set of "simple" gates is.
A circuit conversation may increase gate depth in the source circuit, but qsim's gate fusion will take care of most of that, I think?
@95-martin-orion to add Cirq gates supported by qsim. For gates that are not supported, please make sure that the failure is graceful. Currently the message is a bit misleading:
130 qsim_gate = "id2"
131 else:
--> 132 raise ValueError("{!r} No translation for ".format(op))
133
134 # The moment is missing
Between #135 and #137, this is resolved. Measurement support is tracked separately in #130.
