The Jenkins test profile executes the following command pytest -k-test_QISA_assembler_present. This means that the test_QISA_assembler_present is treated as a known failure. As such this failure is ignored and the tests are run without the assembler.
@quantumkoen can you please update the jenkins file to install qisa-as so that it is used in tests. It will also be great to install libqasm as it will be required for cQASM v1.0 related tests.
@imranashraf can you point me to where I can find the instructions on how to install qisa-as? Also, if libqasm is used in openql, i assume it is added as a submodule?
@imranashraf @AdriaanRol ps, the 'jenkins test profile' is just a file in the openql repo, the file Jenkinsfile in the root (which refers to Dockerfile.build).
@quantumkoen Here you go: https://github.com/DiCarloLab-Delft/ElecPrj_CCLight/tree/development/qisa-as#building-and-installing-the-qisa-as-python-interface-using-setuppy. so basically it is:
python3 setup.py install --user
The dependencies are same as for libqasm and openql so should not be a problem.
similar to qisa-as, libqasm should be separately available/installed and you know where to find it ;-)
@imranashraf https://github.com/DiCarloLab-Delft/ElecPrj_CCLight/tree/development/qisa-as#building-and-installing-the-qisa-as-python-interface-using-setuppy gives me a 404, so I assume I do not have access. I and all my collaborators will need access (same list as for all the other repos), and in addition we'll need to add a deploy key to the repo. Who is admin on this repo, @AdriaanRol  ?
@imranashraf also, should I add qisa-as and libqasm as submodules (preferred, because that way the specific branch of the dependencies can be controlled in the master repo to enable testing master AND development depending on the branch requirements) or should they pull in some (arbitrary?) version of those repos?
@AdriaanRol can provide you the info regarding the repository access. But if it is an issue, qisa assembler alone (separately) is also available on https://github.com/QE-Lab/eQASM_Assembler. In the past qisa-as was a part of openql, not as a sub-module but just as a copy and then it was removed. Personally I would prefer these two to be sub-modules. @AdriaanRol @gtaifu should also give their input as they were involved in this discussion and we can decide to do it accordingly.
As discussed in #151 , OpenQL should be build against the latest stable release version of the Assembler located in  https://github.com/QE-Lab/eQASM_Assembler. To the best of my knowledge this is v2.2.0.
@quantumkoen I do not have admin rights to that repository.
@quantumkoen already has the required access to that repo, so should not be an issue, right @quantumkoen?
@imranashraf i do have access, but Jenkins also needs acces, can you please add the pubkey below as a deploy key?
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAEAQDXkPkBmBVtGNq7uJHhb2QbCEynYImn52/Zim4SwPzkgRHw/GbW2pAIRzTXF++pH5stfbLBe4NPm3/aMP5PMxJgxuXIUcySi/7G9RBqwG/S0dO8a2mQoBnJc2OyyMz8wZZA0qecnjLVLSBAtyXt2V82fosgDG21+iCVfiHnPNr0mxH
JQypUVXqvBGfA0NrghUbZJf7VuA2NOUWtO2HIc5c0Vi2aV1Wo2fOFeFIT33xnYg5CzaPQgY9JhLh6C8ehGaZteY079JveThvOLGpu+kiTpU43tN4xuNQ1p8W5LOL4FaHRfiTKJzEp3Xt5z86bRo9rK1Hi1xtBxp1rh1ej/Aewl4SkWhdRoVzRLZ6qISn9Lc5Uuy8RNHWLbFqM5yhBpF
o49MCbdY5pI9lNXXtVC8u5VC67gwI0paXNj+uj6HtkQhP+lSCQwnxLO7C0BwAXL7dWUc+An1ETpqF3arLQuhTsCkiI4z0KpXcEmK9luLr1/s4J8ec6oEkIR4ZamclG5f4U7br6fA5SgKBheftV29qL3Ej8fGhU2PdEVujDig8j9sMFjrGWttvN3EAiyH2g1E2SWIVPtxYarZl4NhnEZ
Cnm7WI+ttaTphnc8kFXAZ98YDgfoPw9CaTTCYGhkq+nt5TTm3wuHACDAt90r+UxpkbXfS/ShPd2bJ+JJxd13KJBR+jbRE3O25ksDtGRmzk/ek1bKgEA2QL4XwaMkFZ0+Vx1rNP1WXV88X4wuW0E+qZeoBNdPzBahD95yvz28lcF8FrD9FoJvbF4zCFmSZ7AlCpyjYoxj68tqrWTvSLm
p+ar5CbRx/axfMnV1YiJ90Ee7okGnAACKzrpYBDWv302WyZjY/eC0DRcWye1BfjLmZaFAfsjr1y6kafTf1ukmxOAOXIsKgKL2fKS6s6ccnynI+OaM/s3raekqrPdRZ3JVsQ+xOkMSqH68ef+ShtWJ9wyPZ6g9H3cmsKSvw3lnD1Ly3yOMCcz+VdGL7yK9xalRpd+MeeTgcO5v1pbkBF
mXsS4f/w9d/onkjSysPx9U9/zhexZ+FhHIqLchnBPpB4btokzTLfPPLrO9hpuxvKSQvFHqGr9MFDrKqxOJss3B54D7QtyeTSee7wQ2nQEPnd2hRRwT5SOeda8aTXKXw0OARkJaycTgplIcNZvwGR1tKL6V0FUuOZc61zv7q+2Hqz9S6DXezLp0C5xY8tKlgfQiiJGvfOLpeP9lXtTFE
AOpzfNjb9Ir4lTRN0VpIHnEVINcCpj0AslZ3u7Yw1py62Lw/yNZVoufKMhEIhKQa9KTXXWbBqwl/EOKgHHBbXDs8SbVaRZ/JWymUgzBo4Gh1rou/gJtMN9igI0t3OWFUGmYL61Lj2d jenkins@dev.quantum-insight.nl
I get the following error:
Key already in use
@imranashraf ah crap, I pasted the wrong pubkey again.. it should be this one, sorry:
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAEAQD4DROUvz+loYLPmhtDXiy0gQrdYZD7hbWfamzvhTwV3Amrnl0olPL0EQhpDXPXa4nz0gN0Ii4LOe7C3muZqgBj6VgkiKQXhgyZtbJbR64oAVCSYJXH4BuSfYw9vYmwd89jxApbALAWB+tf+l9B13i62/3zM60lOOLQGTvIvDeko39Oti3TqSM3AY5Vqq+3i0f+xj64oAEKGRkdDCDmqEfhC65M1YKV67ycpJ/9inYmspCjhTZOYJG7sFjmgD2ljMmS2yV3LVLEu8jTLdaEzsG2UiuZlBkwFrF5G3MXVUGBHxhY9Rl6fOvZ3HWBkxy8NWNZUN4GKRQJAGR+HHSZECp0sZo67d1Zw8Qc2sXw8g4IKWSV3/CJ0WrRZqWKDNLw8HYiy8MYXS4Zl2h7U8HpxAgWFFsMW8uo2Jz1rE4rsbfugghzUCvgDpJakR9geExWhGbzxp0IgSx6AZS0Tk+aqgMuuHuiS7QIapC/kv1QqD1xNI7927ir+Z3m+iLuY97C69Ozj958Z9ExbFnEBlz3Cu+K8ZweuzAE4bEiwcBAuhHggYKlIWE8yrPeBcVf78phkDv8a988Y1d3o9dhYrrV3dc0IteubMkISa5kRlhSwkjqJXmRunw47csKYbIywDkgnC0UYiN5BrgrAiTzTSFWxswZvc3Gruio5kRxaP46rf4aJZGisFAQRxX7kAoMEjB60c7UQYGMSiZLzpDmpO9tqKBKupoyLH/s0Ums86SWXpHq+d8qVJpX8EEKZcF9gEi3qEJ9ZtqrfJ5FycuiQ+YPzbSke6uEnkJcJ2weyoxtwH5fmywVxnFm+djzos330+Yn1ZysVhYJcfgo6efJDmHrdxDZGoQDuD7v8cO2ctLnIKJmXmQxdxVJOpi6wLOaEn47D6zZ/HhyNZQ/zR5B7x9lkjRfGIYP8KudNaax4te6w54xB45/OnT3rWzQo8HetWDzLkYlhAsoMuQFbCIwK+PzLkShtw7UdUgOQEgizL1FdsFxDDh7KR/9SNvm24sl9uyOQbCIpX6PG9WX39r55V6i4wWjGooihMdLFV10jfT9R4v8uN7VMe3BHubUJalBngqd9dduxDIjyBBMSG5hcpL+AAlyD7MIe6UqKAxSO6SZnGQug7ho1Di5VKeIcdrqCWDM0gdzx0SkKNhVZlHx6dFKwtli97U40Ke/qbrrzo/G9+eTwZDE8v++aZCpBpuHxAxpoxEN7xGpTuPvY29KDwH3ERESn//3/MHzEqkIFV8OgwJWqT28iBuZ7xKIpCoFugx6P9H4d0yQdmCHiirCXTirVVx3E2ZqNjQE54goRiFjvyg1Yj7ktKwMhc7PmZ4ZJGcdhsj6q4LAs/vO1u7oMFRC1zq5 jenkins@dev.quantum-inspire.com
(if only github would allow re-use of deploy keys as gitlab does)
Done
@AdriaanRol so can we just use the master branch, because I assume that the HEAD of master is always the latest released version, or do you want to hardcode v2.2.0 in the tests?
@quantumkoen , I just checked, the HEAD of the master does not point to the latest released version of the Assembler.
Ideally we would test both against the latest stable release version (2.2.0, released Feb 21 2018) and against the latest version of the master. However, if we can have only one I would argue we should use the last stable release (being 2.2.0), i.e., hardcode the version.
@AdriaanRol we'll do both.. @qSaevar is currently working on it
@AdriaanRol we'll do both.. @qSaevar is currently working on it
@quantumkoen just to connect a person to the GitHub ID, who is @qSaevar ?
I forked OpenQL and created two Jenkins pipelins, one for v2.2.0 and one for master branch latest.
https://dev.quantum-inspire.com/jenkins/job/OpenQL-eQASM_Assembler-master/
https://dev.quantum-inspire.com/jenkins/job/OpenQL-eQASM_Assembler-v2.2.0/
They both fail, and I'm not sure if it is for the 'right' reasons or not.
Should I make a PR or is it failing for the wrong reasons?
@AdriaanRol Saevar is one of our most recent additions to the team, he's a software developer / electrical engineer.. when we have a chance, i'll walk by with him so you know who he is :)
@AdriaanRol and @imranashraf, the jenkins jobs are now green and I have created a PR
thanks @qSaevar. merged.
@imranashraf, the pr was incomplete so there is a new one coming up
@qSaevar will you also be adding necessary steps for libqasm setup?
@imranashraf sure, Ill add it
@imranashraf, libqasm setup is now part of the PR
thanks @qSaevar
Sorry for the late reply here. I am glad to see the verification of OpenQL over the assembler is on progress smoothly. I will keep in mind that the master branch of the repo eQASM_Assembler is used for the test. I will make new releases for the assembler only after the new assembler has passed enough tests.
