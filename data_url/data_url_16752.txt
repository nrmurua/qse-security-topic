The SetFrequency in the pulse module allows the user to change the frequency of a channel. The frequency of a pulse may be changed either by setting the frequency of the RF source or the modulation of the AWG (note that not all backends work in such a way). Currently it is up to the backend to decide how to implement SetFrequency.
We could expose the distinction between the carrier frequency and the side-band modulation frequency to the user through the SetFrequency command by adding an extra optional argument to SetFrequency called set_lo which would by default be False. When set_lo is True the frequency of the carrier is set to the given frequency. This also implies that SetFrequency with set_lo=True can only be used once per schedule and should be at the beginning of the schedule.
This enhancement would allow users to perform spectroscopy by sweeping the carrier frequency.
I think we should avoid extending the semantics of the SetFrequency instruction into configuration space. There are two timescales at play here
I believe setting an RF source solidly falls into the second category and we should not aim to model this in the instruction set, but rather as configuration time data.
It seems like it would be useful for the backend to communicate what instructions it supports and when it supports them. In that context, a SetFrequency command could be supported both in the fast and slow specifications to keep the command set simple, however it also may be necessary to have different range limits in both contexts which detracts from that simplicity.
@taalexander That is a good point. I am also wondering how this would work out on non-superconducting qubit setups? @ewinston Indeed, having different range limits for different options increases the complexity.
Can we somehow introduce a channel initialization mechanism per schedule? To my understanding we are implicitly assuming in the current implementation that all schedules in a QObj will be run with the same channel settings. Spectroscopy done by sweeping the carrier frequency breaks this assumption.
I think this issue is stale now, and the discussion in it was likely obsoleted by later work on OpenPulse as a supplement to OpenQASM 3.  I'll close this now on that basis (since I'm tidying up issues), but if I'm wrong, please feel free to re-open.
