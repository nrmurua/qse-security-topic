Is your feature request related to a use case or problem? Please describe.
Simulators spend lots of time recalculating things between runs. Can we eliminate that?
Describe the solution you'd like
To my understanding, an n-qubit unitary circuit is equivalent to a unitary 2^n * 2^n matrix. In sparse simulator for instance, the first step splits the circuit into unitary and non-unitary sections. Then it calculates the unitary once and uses that result to run repetitions on the non-unitary part. However this does not persist between runs.
Would it be useful to cache the matrix representation of a unitary circuit to local file and reuse that between runs? Plausibly as more simulations are run locally, more subcircuits would be cached, and simulations would be increasingly faster.
Longer-term we could look at maybe an online cache, algorithms that try to decompose a circuit into things that can be found in the cache, etc.
[optional] Additional context (e.g. screenshots)
IDK how this works with noise.
What is the urgency from your perspective for this issue? Is it blocking important work?
P3 - I'm not really blocked by it, it is an idea I'd like to discuss / suggestion based on principle
This would only be applicable to the default simulator, which is not a priority. For now this seems like low ROI.
