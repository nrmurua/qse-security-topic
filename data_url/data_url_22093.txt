
The "decay" at the upper limit is the baluns highpassing your signal. When filing these bugs, please do have a look at the actual hardware you have in front of you, including cables, splitters, baluns, traces. A bit of diligence would make this debugging more efficient.
And you are submitting two events to the config channel at the same time. One gets dropped and then you are only setting one limit. Add some delay before for the second limit. I'll force that in the next commits.
The "decay" at the upper limit is the baluns highpassing your signal.
Checking the AD9154-FMC-EBZ specification sheet. Looks like the balun ADT2-1T-1P+ is only specified for 8-600 MHz. Thanks for the reminder. Ok.

But I can't see how balun bandwidth is responsible for the observed waveform. The expected behavior is sharp "clipping" which has a rapid onset and is dominated by frequency components well above 2 MHz. The balun should pass that just fine.
Imagine you have a simple (e.g. RC) high-pass. Now convolve the step response into every clipped edge...
Mathematica model of expected behavior of the high-pass.

"The" high-pass?
Come on, Joe. This is simple RF electronics.
Imagine you have a simple (e.g. RC) lowpass. Now convolve the step response into every clipped edge...
There is no regime in which the model I pasted above produces the behavior I see in sawg. Your balun acting as a high-pass explanation doesn't seem to fit.
Regardless, why does sawg ever permit the amplitude to be >>0.5?
It doesn't. And you are thoroughly wrong.
Unfortunately we don't have the bandwidth to correct your understanding of filters, electronics, or signal processing here. Reading a book would probably be best here.

I didn't appreciate the magnitude of the effect of the balun on the time-domain output at 2 MHz. Thanks for the scipy.signal example.

Shifting the test frequency to 20 MHz makes the output easier to interpret. Notwithstanding #765, the summing junction works as expected.

