When generating a controlled version of a unitary gate, the resulting gate does not seem to be deterministically generated. This can be seen by checking two gates generated from the same unitary for equality. Sometimes this will return True and sometimes False, seemingly at random. The reason seems to be differing definitions of the controlled versions, which is checked by the __eq__ function.
Generate a new unitary, for example with
and repeatedly generate controlled versions of it, comparing them for equality:
Shouldn't the generated gate definitions be deterministic? At least I would expect two controlled gates to be identified as equal when generated from the same object.
During the gate.control() call, add_control() will call _define() on unitary gates, which seems to produce different decompositions of the unitary every time it is called, before the controlled version is even generated.
@dime10 Thanks for bringing this up. I was not able to reproduce this issue. I also tried with 1000 iterations and random unitaries which was also successful. I tested on:
terra: 0.11.0.dev0+b7d6a90
python: 3.6.9
OS: Linux
I'll see if I can find someone with windows to test there. Could you try with the latest on master?
Hmm I just tested it again on a fresh master install (0.11.0.dev0+b7d6a90) with the same results.
To be fair maybe I should specify the OS as WSL (Ubuntu 18.04.3 LTS) on Windows 10 (Build 18362).
EDIT: retried on Ubuntu inside a VM to be sure, Python 3.6.9, still the same
I was able to replicate this on osx 10.14 with python 3.5 at 1f0c716a.
The fix here is probably that controlled gates should use the __eq__ method of the base gate instead of equality of the definition.
The fix here is probably that controlled gates should use the __eq__ method of the base gate instead of equality of the definition.
While that could fix the comparison, it won't affect the underlying "issue" that definitions generated for the controlled gate can differ even if they came from the same object (if we care about that).
(However most basic gates don't implement their own __eq__ currently, and so still rely on the definition, although I proposed changing this in #3542)
There are two issues at play here:
I'll rename this issue to cover 1. and open a new issue for 2.
Can you add an example of the decomposition?
Can you add an example of the decomposition?
The PR #3585 does the trick, but somebody with more knowledge should have look.
