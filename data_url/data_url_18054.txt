The compiled_circuit_qasm in Qobj does not return the qasm compiled for the backend.  Running execute immediately gives a failing job.status.


The compiled_circuit_qasm should return the qasm for the circuit that was actually run on the hardware.
@nonhermitian I need some help, please. I'm not getting an error when running execute on your quantum program sample and I'm getting almost the same QASM program from the compilation as I'm getting from the backend. It is missing the OPENQASM 2.0; line but that's the only difference:
Just to ease the revision, get_ran_qasm() is looking into the compiled_circuit_qasm entry which is copied from the qasm field of the API result.
Yes, it seems that the failure to run was likely due to an older version of the API that I had (as pointed out by @atilag).
However, if indeed the ran qasm result is correct, and the exact same as the input, that would mean that the compiled circuit needed no additional swap gates, and all the cnots happen to be in the right direction; A not very likely scenario.  In addition, the results from 0.5.4 shown above indicate that many many more gates are needed to make the circuit match the underlying topology.  And no appreciable changes to the mapper have been made since 0.5.2.
So either there is some funny business with the way the compiled qasm is returned, or we have a major improvement in the mapping even though the mapping did not change.
Actually I see what is going on.  It actually does match the coupling map exactly!  The change was the _matches_coupling_map routine that @ajavadia added to the transpiler to check for such things.  It verified the circuit, which caused initial_layout=None to be passed. That is how I caught it.
