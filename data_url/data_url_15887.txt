Currently there is no way to map an id gate to a delay.  This despite the fact that the QASM3 spec says this mapping should exist:
a delay instruction implements the identity operator in the ideal case
To support this behavior the delay gate should allow for a null value.  A backend that supports the delay gate should supply a default value, e.g. backend.configuration().default_delay=XXX, to substitute into the delay gates.
This gets around doing things like: Qiskit/qiskit-ibmq-provider#976, that treats delay different from other basis gates and moves portions of circuit rewriting to locations other than the transpiler.
My interpretation of that section of the spec is somewhat different:
We illustrate this point by considering timing constraints in an OpenQASM circuit. When a delay instruction is used, even though it implements the identity channel in the ideal case, it is understood to provide explicit timing. Therefore an explicit delay instruction will prevent commutation of gates that would otherwise commute.
I take this to mean that there is an explicit difference (in the spec) between an id instruction (defined as a literal identity operation, which could presumably e.g. commute with other instructions or be optimized away) and a delay instruction (defined as an explicit wait time, which only on a noise-less device would implement the identity).
My understanding is that the interpretation of 'id $n'; as delay[durationof({sx $n})] $n; was a behavior only ever implemented by IBM hardware backends prior to the introduction of delay.
To support this behavior the delay gate should allow for a null value. A backend that supports the delay gate should supply a default value, e.g. backend.configuration().default_delay=XXX, to substitute into the delay gates.
I don't have a strong opinion here, but I will point out that on at least one current device, the duration of id is different for different qubits.
This gets around doing things like: Qiskit/qiskit-ibmq-provider#976, that treats delay different from other basis gates and moves portions of circuit rewriting to locations other than the transpiler.
Just to clarify, Qiskit/qiskit-ibmq-provider#976, treats 'id' as different from other basis gates, which to some degree it is, because it has a different definition on different qubits, but only on IBM hardware.
Hmm ok. Will close then.
Hmm ok. Will close then.
