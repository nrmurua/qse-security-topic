As demonstrated in arXiv:2303.06496, potential optimizations can be made when a local observable is used with PEC (slides from Quantum Wednesday presentation on paper).
If implemented, this should be an optimization that a user can turn on and off, but should not require a new function/mitigation technique. I suggest using our existing execute_with_pec function, whose API is as follows.

Adding a flag such as local_obs: bool = False and conditioning the variant PEC protocol on this seems like a nice way to expose this to users. Alternatively, we can forgo the boolean flag, and compute how "local" an observable is, if one is passed. Then, if it is acting on few enough qubits, we apply the optimizations. I prefer the first approach as we have a lot to learn about this technique before including it in the default run of PEC (e.g. what is "local enough"?).
Functionality that will need to be added is the ability to compute an observables light cone.
