In the language, the purpose of identifier like $0, $1, ... is to identify physical qubits. They are currently matched to Identifier token in the grammar. This allows any identifier to start with $ and take away the purpose of using $ to identify physical qubits. Suggest to separate the token for physical qubit from identifier.
Suggested enhancement:
+1 from me.
Playing the other side: a grammar is never going to give you all the information about any given identifier; some of that will always come from semantic analysis (types, etc).  In this case, I think having the lexer distinguish physical qubit identifiers is useful and sensible behaviour, because defcal blocks can only take physical qubits, and this is something that's absolutely simple to push off onto the lexer.
Also, my reading of the spec is that $ is only meant to be valid as the first character of physical qubits (as described), but the current reference lexer grammar just makes it a valid character anywhere in any identifier.
This makes sense to me. +1
@taalexander: I think this might be a minor difference between OpenQASM 3 and OpenPulse - I think in the OpenPulse spec, you can use (say) $q as a wildcard pattern:
Is this difference something we want to keep, or would it be better to have the defcal wildcard pattern be any identifier - anything other than $<int> would still work, since it doesn't relate to one particular hardware qubit any more.
I think any identifier is the desired behaviour. The form of including $ is convenience for the human to remember that it is a physical qubit.
The current specification could be more explicit on the physical qubit section:
While program qubits can be named, hardware qubits are referenced only by the syntax $[NUM]. For an n qubit system, we have physical qubit references given by $0, $1, â€¦, $n-1. These qubit types are used in lower parts of the compilation stack when emitting physical circuits. Physical qubits must not be declared and they are, as all the qubits, global variables.
I suggest that the update to the grammar requested by this issues should also include the specification update for the wildcard pattern.
