Is your design idea/issue related to a use case or problem? Please describe.
When creating circuits for a particular device, should the users be responsible for ensuring that they only use the native gates in the circuit, and if not, first explicitly convert the circuit to one containing only native gates, using one of the existing compilation tools? Or should the device class be smart enough to do this conversion via the decompose_operation method on the device class?
Describe your design idea/issue
For example, a simple QFT circuit on 3 qubits behaves differently when created using an IonQ device vs Sycamore device.
The compilation happens as part of the construction because decompose_operation as takes care of the steps.
compiles fine to the device compatible circuit
The same workflow as above throws an error that the QFT gate is not supported.
gives
Instead, the circuit first needs to be compiled to device compatible gateset:
gives the correct device compatible circuit
As per the discussion #3295, It looks like circuit construction with device attribute should be deprecated.
ref #3244 and #3245
Discussed on Cirq cynque:
Let's change the scope of this issue to add support for an explicit compiler for IonQ as we plan on deprecating the device object in a circuit (i.e. cirq.Circuit( op_list, device = cirq.ionq.IonQAPIDevice(qubits)) would be deprecated)
@tanujkhattar Can we close this since we aren't attaching devices to circuits anymore ?
