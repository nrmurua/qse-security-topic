While writing random test for 3586, I noticed that a set this range wrongly (see 6e2b270). However it seem that the previous range discover some crashes in weyl_coordinates.
Currently, two_qubit_decompose is non-determinisic (see #3585), making reproduction complicated. Here are the situations I found:
All this cases trigger (eventually) qiskit.exceptions.QiskitError: 'TwoQubitWeylDecomposition: failed to diagonalize M2'.
Because they do not raise when the range is shorter (see 6e2b270) I assume is lack of normalization.
these failures occur on master now too, or only after #3585 ?
Current master.
(also after #3585, but this issue is about current master)
I have been running into QiskitError: 'TwoQubitWeylDecomposition: failed to diagonalize M2 quite often when running a QAOA type application. What do we need to do to fix this?
Another example. Consider this minimal example:
The passes should not fail.
I think having a fallback for ConsolidateBlocks  when TwoQubitWeylDecomposition raises is a good starting.
because affects the default level 3, priority: high
Does mapping those phase values to be within 2pi work?  I am guessing that is the issue.
Yeap.. I'm having the same guess. That's what I meant with "lack of normalization"...
This works:
Yeah. But since all phases can be mapped to within 2pi, or -pi to pi if so desired, this should be done internally anyway.
