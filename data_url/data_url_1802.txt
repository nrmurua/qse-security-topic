Is your feature request related to a use case or problem? Please describe.
Part of #3235.
PR #3480 added a lookup table for constants in the circuit proto. Extending this table to more complex objects should help reduce the amount of network traffic required when using Quantum Engine.
Describe the solution you'd like
FrozenCircuits are a prime candidate for storing in the constants table, as they are often fairly large and may be repeated several times within a circuit.
What is the urgency from your perspective for this issue? Is it blocking important work?
P2 - we should do it in the next couple of quarters
Blocked on #3678. Workarounds are possible, but messy.
It should be noted that proto serialization of FrozenCircuit - efficient or not - is currently unavailable, as the serializers have no assigned behavior for handling CircuitOperation. Decomposing the circuit in advance avoids this issue, but also removes all of the intended benefits of using CircuitOperations in the first place.
It may be possible to enable more general proto compression with tools provided by gRPC: SetCompressionLevel
Similar methods are available on the client side. Reference: How to do payload compression in grpc?
I wonder if we should consider making a v3 proto format to handle subcircuits, instead of trying to force them into the current format which has various problems? If we do want to ahead with adding support in v2, then I think we can work around #3678 in this particular case fairly easily, by checking for CircuitOperation explicitly before we check op.gate to pick a serializer. This seems like a fairly natural special case since CircuitOperation is so different from other operations.
I wonder if we should consider making a v3 proto format to handle subcircuits, instead of trying to force them into the current format which has various problems?
It seems like v3 proto is still a topic under discussion, and may take some time to be fully realized. In order to make subcircuits available to QCS as soon as possible, I plan to continue work on this, but please keep me in the loop on the v3 proto plans.
As described in #4336, this issue is now effectively resolved; however, additional proto optimizations are still possible.
As described in #4336, this issue is now effectively resolved; however, additional proto optimizations are still possible.
Due to backwards-compatibility issues with QCS, this was rolled back. A roll-foward is under development.
Support for CircuitOperation serialization rolled forward in #4511.
It's been highlighted that there are still issues in the server-side handling of this feature. We'll continue working on fixes for those, but as long as no pre-existing behavior is broken by #4511 we don't plan to revert it.
Marked as before, but could be after if there is no core code that needs to be changed.
This has been demonstrated to work and documented in #5221.
