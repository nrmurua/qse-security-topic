namespace Quantum.QSharpTestProject1 {
open Microsoft.Quantum.Canon;
open Microsoft.Quantum.Diagnostics;
open Microsoft.Quantum.Intrinsic;
States no namespace for these underlined exists.  I have added package references with various versions for all.  Still nothing.
I'm stuck.
Hi,
Could you provide some more details. For example did you install the Quantum Development kit extension, and what version are you running of the QDK?
Hi,
Are you attaching code or pictures? I cannot see your errors, or other information.
Vincent
I still cannot see anything. Could you upload the images via GitHub?




Can you see these images?
Hi @FTCEnergy , if you are using Visual Studio 2022, you need to use the version of the Quantum Development Kit that targets this product. Can you please confirm that you are using this one? (Notice that there is a 64 at the end of the URL)
https://marketplace.visualstudio.com/items?itemName=quantum.DevKit64
We now have two versions of the Visual Studio extension. One of them is 64-bit and targets only VS2022, while the other one is 32-bit and is only compatible with VS2019. Hope this helps.
That version was the one I installed for Visual Studio 2022.  I still cannot find Microsoft.Quantum.Intrinsic, which is supposed to be included.  I seem to have solved the missing Microsoft.Quantum.Canon somehow.
@FTCEnergy This looks weird. When you run "dotnet build" in that folder from command line, ignoring VS 2022 for a moment, does the project build and run successfully? If it does, then it's VS language server being weird rather than the build - it does that sometimes for me too.
I have really big plans for Quantum because of all my forecasting matrix work with AI.  I want to seriously expand my matrices.  Major firms are looking to use what I know.  But I can't even build one of Microsoft's own software programs.  It's not from lack of trying.
@FTCEnergy Does this mean that running "dotnet build" from the command line gives you the same errors?
I haven't tried that.  I will later.
Hi @FTCEnergy , were you able to get the extension to work in VS 2022?
Yes.
