I'm a Java developer with limited resources and I'm not been able to compile LIBOQS to get a release that I can use for the Java-wrapper "liboqs-java".
At the moment I'm trying to provide sample programs for the actual NIST round 3 competitors.
Can you kindly provide a link to download a lib file that can be used with Java?
Thanks and kind regards
Michael
Hi Michael, I'm afraid that's a rather "underspecified" wish :-) Seriously: Which OS, which HW platform? Could you make do with a docker image? Have a look at this: openquantumsafe/curl-dev (i.e., docker run -it openquantumsafe/curl-dev sh puts you into an image containing the latest liboqs and a few executables around it). Greetings, --Michael
Dear Michael,
Thank you for your prompt reply and yes, you are totally right - it is an under specific wish - I'm sorry for that.
My problem is that I'm unfamiliar with "Compiling" and don't know what the output is and what options I do have when compiling.
My main developing system is running Windows 10 x64, OpenJDK Runtime Environment, java.runtime.version: 11.0.8+10, the second system I'm using (useful for running my codes "online" is Java on https://repl.it/: operating system Linux (more information is not available), OpenJDK Runtime Environment, java.runtime.version: 11.0.10+9-Ubuntu-0ubuntu1.18.04.
As written I'm trying to run "post quantum cryptography" algorithms and I started with Liboqs-Java's KEMexample.java that is running into an "ExceptionInInitializerError" because the (compiled) lib is not available:
The code lines causing the error are in Common.java:
To answer your question in detail: I think I do need the two files oqs-jni.dll and liboqs-jni.so to run the example on Win10 and Linux.
Thanks for your link to docker but up today I have no experience with Docker, so that is no option for the next days.
It would be perfect to get the two requested lib's because there is no other (cryptographic) library available that provides all round 3 candidates with actual parameters (Bouncy Castle is not up to date with the implementations, and they are waiting for the final decision ("winners") before they update their PQC (I asked them some time ago :-(.
Thanks again and greetings from Germany
Michael
Dear Michael, thanks for the additional background. I'd suggest you read (and follow) all the information in the oqs-java wrapper: You will find easy-to-follow instructions how to build what you need for Ubuntu. I am afraid that Windows is not supported yet. Could you share information what you want to achieve ultimately? Why do you need both platforms? Greetings from Switzerland, --Michael
Tagging also @jimouris @christianpaquin for possible additional input.
Additional feedback
To answer your question in detail: I think I do need the two files oqs-jni.dll and liboqs-jni.so to run the example on Win10 and Linux.
You do need more: The liboqs-jni.so is the shared lib build by the liboqs-java project. Then you need the actual liboqs.so.
I would strongly encourage you to install docker on your machine and simply execute the command I provided above (docker run -it openquantumsafe/curl-dev sh): This will get you a command prompt with a fully compiled and ready-to-run liboqs.
You then need to execute these commands to build liboqs-jni and execute the tests:
Dear Michael (and @jimouris & @christianpaquin as well),
Thanks again. To answer your question "Why do you need both platforms?" my main platform is Java on Windows 10 x64 and your code in Common.java suggests that I do need a platform specific library (oqs-jni.dll) for this. On the other hand I'm running an Online compiler service (https://repl.it/) to present my codes in a running environment that has Linux as its OS, so my thoughts are that I do need a second library (liboqs-jni.so). If one library is all that I need - that would be okay for me :-).
Regarding your recommendation for a build process: I do not have an Ubuntu-OS running on my machine, so I am not able to run the build process as described on https://github.com/open-quantum-safe/liboqs-java.
"Could you share information what you want to achieve ultimately?": Of course, I'm running a private project "Cross platform cryptography" on GitHub (https://java-crypto.github.io/cross_platform_crypto/ or https://github.com/java-crypto/cross_platform_crypto) and actually I'm trying to show programs that can handle post quantum cryptography. I found liboqs as it has implementations of all round 3 candidates. That brought me to my initial question that I do need a compiled version of this library to run Java (and other framework) examples.
Are there any concerns to simply provide the compiled library (as attachment, mail or...) ?
Edit: you commented in the second I saved my comment :-)
Thanks for your kindly help and greetings to lovely Switzerland
Michael
Are there any concerns to simply provide the compiled library (as attachment, mail or...) ?
Yes: That would create platform- and version support issues on our side (recompile, test, etc. on each platform after each code change). Hence our recommendation for using docker images that take care of such problems, particularly cross-platform ones -- actually by way of a common platform (Alpine, presently only x86_64, but arm64 is just around the corner). Please check out the proposal above and let me know whether it could serve your purpose: It seems we have similar goals: Making PQC easily accessible. I am afraid, reading your website that some work on your side, particularly compiling code, e.g. for maximum performance, would be advisable. Side note: You also may want to consider using LetsEncrypt certificates for your website as the self-signed cert there may make paranoid people nervous :-)
Dear team,
Thanks for your effort in helping me to get your library to run.
I set up a virtual Win 10 and installed Docker within, downloaded & run the docker-file with "docker run -it openquantumsafe/curl-dev sh", followed by
and - the good news - ended up with
Tests run: 127, Failures: 0, Errors: 0, Skipped: 0
Unfortunately this fine result is useless to me as I'm not a professional programmer but just a hobby programmer that is been able to "consume" a library and write some code lines around it (using Intellij IDEA). It was nice to see a build process on Docker / Maven but at this point I'm stopping my experience with Liboqs as it takes too much time to work on a text base development instead of using an IDE.
I think I have to wait until the NIST competition is over and the Bouncy Castle guys provide an updated version of their crypto-library that I can use out of the box (I didn't thought that is so complicated to get a library like Liboqs to work, my fault).
BTW: my website runs on a "free of charge" server that does not provide LetsEncrypt certificates so I have to stay on http for that part, the GitHub-stuff is on https fortunately.
Thanks again for your kindly help.
Michael
