


hi, @Tininfin96 please share the complete code so that i can look into it , if you are okay with it.
Hey, yeah. The code is as follows:
qub=QuantumRegister(5)
clreg=ClassicalRegister(2)
c=QuantumCircuit(qub,clreg)
c.x(qub[0])#initialize(init_st,qub[0])
c.x(qub[1])
c.cx(qub[0],qub[1])
c.measure(qub[:2],clreg)
backend=provider.get_backend('ibmq_burlington')
layout=Layout({qub[0]:3,qub[1]:4,qub[2]:0,qub[3]:1,qub[4]:2})#,2:c[2],3:c[3],4:c[4]}
job = qiskit.execute(transpile(c,backend), backend, initial_layout=layout, shots=2048)
Hi @Tininfin96 , what version of qiskit are you using? I wasn't able to reproduce this particular error on master.
Can you try replacing your last line with the following:
qiskit.execute(c, backend, initial_layout=layout, shots=2048)?
execute will internally call transpile with the provided initial_layout, so you don't need to call it separately.
(I'd guess that the layout stage is failing because the circuit returned by transpile(c, backend) has already been laid out on to device qubits, and so doesn't match the initial_layout provided to execute defined over qubits in qub. We should notice this earlier so we can raise a more detailed error message.)
@kdk Hey! Thank you so much, you are right. I am now passing the layout in the transpile function itself. That has taken care of the issue.
