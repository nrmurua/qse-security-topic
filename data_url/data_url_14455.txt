Retrieving the coupling map from a backend returns a list instead of a CouplingMap. This means it cannot be passed to some methods that accept a coupling map, which is very surprising. See example below.
The passes explicitly take a CouplingMap object as an input which is the connectivity graph object for the transpiler. The object  is also how most passes which look at the connectivity graph need as it's actually a retworkx graph object underneath. That being said this is already fixed in BackendV2 which is the current version of the backend interface, it doesn't do the list attribute from the configuration() method anymore there is a backend.coupling_map attribute which returns a CouplingMap object. However, the separate coupling map is partially superseded by the Target class anyway which contains a superset of the information in a coupling map. You can see an overview of the difference between the backend interface versions here: https://qiskit.org/documentation/apidoc/providers.html#migrating-between-backend-api-versions
You can update your example to be:
Not every provider has been updated to use the newer interface yet though (it was only added in 0.19).
