My device_db contains DDS entries like,
And I'm running the following experiment,
The DDS bus channel is actually 50, not 58 as it was previously after the recent changes. I built a new bitstream and flashed the FPGA. If I run the experiment with the incorrect bus channel on windows, I get the following error message,
On linux, I get a more explicit error message,
If I correct the bus channel the experiment runs but I get the OSError on both systems as in #393.
If your bitstream is built from master, please use the dev packages for the software as well.
Or better, build the bitstream from release-1.
That probably won't help, that code didn't change since branching... But yes.
So I can just install artiq from artiq-dev/artiq with python3.5 setup.py develop --user from the manual?
I tried that on the virtual machine and can get artiq_master running but artiq_gui gives me
conda list
I meant the dev conda channel (which tracks master) but it's probably better that you build the bitstream from release-1 instead.
https://github.com/m-labs/artiq/tree/release-1
Reproduced when mixing gateware 1.x and software 2.x. Please don't do that (this is why it gives you a warning).
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xdd in position 324: invalid continuation byte
But why is it doing this? I don't think it should.
If that helps, the string that fails decoding is:
The problem is fully reproducible.
May be a bug with the old (1.0rc2) compiler and not due to mixing.
With master, the string is:
Looks like the problem is here: artiq_run_repository\\coredevice_examples\\simple\xdds_test.DDSTest.run. See that \x? Looks like some kind of very stupid escaping failure.
I don't think it's a mixing issue. I get the same error with the software and gateware from 2016-04-04.
With the wrong dds bus channel I get the following error message.
Also seems to happen with the software and gateware updated 04-15.
with the software and gateware updated 04-15.
From main or dev? What is the output of python -c "import artiq; print(artiq.__version__)"?
From main.
Yes, the problem is in 1.0rc2, and is fixed in git.
