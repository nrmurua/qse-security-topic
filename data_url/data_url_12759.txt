It seems there is some issue in Jupyter Notebooks due to some recent update to this repository. I am getting the following errors :
It seems the error is because the following lines have been removed from many Jupyter notebooks :

%package Microsoft.Quantum.Katas::0.12.20082513


%workspace reload

And the simple fix that works is adding those required lines back...
Hi @Manvi-Agrawal - can you please make sure you are running the latest version of IQ#? Here are the update instructions:
https://docs.microsoft.com/quantum/quickstarts/update?tabs=tabid-conda#update-the-iq-jupyter-kernel
If you run %version, it should report the following:

@vivanwin That's the updated scenario for the troubleshooting guide from #476 - the errors are the same but the root cause (and the fix) is slightly different.
Updating iqsharp works @rmshaffer . Although I found a new interesting bug:
Output of conda -f "iqsharp"
Name                    Version                   Build  Channel
iqsharp                   0.12.2010.504            py37_0    quantum-engineering
whereas when I run
%version in jupyter notebook
Component	Version
iqsharp	0.12.20082513
Jupyter Core	1.4.0.0
.NET Runtime	.NETCoreApp,Version=v3.1
Hi @Manvi-Agrawal, thanks for confirming! The mismatched version you are reporting could happen in some cases if you had previously installed a version of IQ# via dotnet tool install -g Microsoft.Quantum.IQSharp followed by dotnet iqsharp install --user.
To check this, you can run jupyter kernelspec list. It should show a path to the installed iqsharp kernelspec. If you are inside the conda environment where you installed iqsharp, then this path should be somewhere inside your conda environment path, e.g.:
If your iqsharp kernelspec is not under the conda environment path, then you may have a per-user installation that is overriding it. In that case, you may see something like:
The easiest way to fix this issue is to run jupyter kernelspec uninstall iqsharp, which will remove the dotnet-installed kernelspec and restore the conda-installed kernelspec as the default:
Then jupyter kernelspec list should show the correct, conda-installed path:
Thanks @rmshaffer. Now, I am getting the matching version numbers.
