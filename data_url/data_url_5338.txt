It seems we start hitting this issue after the recent refactoring (#472)
presumably because __version__ is now moved from pennylane_lightning.__version__ to pennylane_lightning.core.__version__. Any chance this regression can be fixed?
Thanks!
Hi @leofang ,
There is probably a way to fix this. Could you let us know more about your end goal? For example, is the Conda-Forge release causing issues? Then I could quickly issue a patch there. Or is that more of a problem with the PyPI releases?
Hey @leofang just a note --- pennylane_lightning now is no longer holding just the LightningQubit source, but is a namespace package for all Lightning devices, LightningQubit, LightningKokkos, and soon to be LightningGPU. In this instance, if you need the LightningQubit version string, you can find the string at pennylane_lightning.lightning_qubit.__version__.
As the primary use of Lightning devices is still through PennyLane, it is worth noting that (outside of testing) we currently do not guarantee stability of the pennylane_lightning interface. Let us know if this suits you intended use.
Thanks, Vincent/Lee. We have the need to identify the version of pennylane_lightning at run time. So,
to check the package version. We'll change accordingly.
Thanks!
Hi @leofang In this case, not checking pennylane_lightning.__version__ anymore is the way to do this.
IN this case, the suggested change to move the version strings to the top-level namespace is not compatible with a namespace package, and so this is intended behaviour. The directory pennylane_lightning is not a package anymore, but now a namespace for the packages lightning_qubit (lightning.qubit), lightning_kokkos (lightning.kokkos) and the upcoming lightning_gpu (lightning.gpu) following the PEP 420 guidelines. Since these can be installed at different versions from another (though we expect them to be uniform), as mentioned by the namespace package spec, having a top-level version string is not compatible. Instead, the internal packages will maintain their respective version strings at the pennylane_lightning.package_name.__version__ location.
If you need to read the version for the lightning_qubit build (which was previously the only package in the pennylane_lightning space), you can now find that at pennylane_lightning.lightning_qubit.__version __, so that should be the required way for this to be read at runtime. I cannot seem to find a way to allow importlib.metadata.version read the version strings in a namespace package, so until I can, the previous option should be fine for now.
As an example, for the current version of the master branch:
If we can identifier a way to make this work nicely with the importlib version before the next release, we will be happy to update accordingly. Feel free to let us know if this works for the build process.
