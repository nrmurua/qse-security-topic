I'm having trouble building this project for iOS, running into missing header issues with sys/random.h.
It looks like src/common/rand/rand.c includes this header for any platform that defines __APPLE__, which I believe iOS does (apologies, I'm not actually an iOS developer).
Unfortunately, the iOS SDK does not provide sys/random.h (I believe access to either getentropy or even directly to urandom is not permitted in the iOS sandbox...)
Using OQS_USE_OPENSSL doesn't help, because the #include <sys/random.h> isn't guarded by that flag and so the header is included regardless.
Potentially, a relatively-easy fix would be to change the ifdef guards to not attempt to #include <sys/random.h> if OQS_USE_OPENSSL is set. This would, I believe, allow building for iOS by just relying on OpenSSL's PRNG.
Additionally, it might be nice to support iOS's PRNG API SecRandomCopyBytes.
I apologize if I've missed something either in this project or in iOS development!
Hi Zane, we haven't built for iOS before, so indeed there are probably a few bugs like the one you've identified.
The reason that the #include <sys/random.h> isn't guarded even if OQS_USE_OPENSSL is set is because we wanted to have the system RNG available regardless of OpenSSL availability.  I think the ideal solution would be to support iOS's PRNG API SecRandomCopyBytes as the system RNG in src/common/rand/rand.c, similar to how we call Windows' CryptGenRandom for the system RNG on Windows.
Thank you @dstebila!
I just opened a PR (#1219) that I believe fixes the build on iOS, by using the SecRandomCopyBytes as you suggest
I now see that CI is failing on my PR. Apologies. I'll fix that now
