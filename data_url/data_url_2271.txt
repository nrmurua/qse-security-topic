The delayed import functionality fails in a certain importer that creates a zip for hermetic python packaging for Google.
Here is what fails.
Traceback (most recent call last):
...
File "", line 994, in _gcd_import
File "", line 971, in _find_and_load
File "", line 955, in _find_and_load_unlocked
File "", line 658, in _load_unlocked
File "", line 571, in module_from_spec
File "/build/work/.../py/cirq/_import.py", line 105, in create_module
return self.loader.create_module(spec)
AttributeError: '_elfzipimport.ElfZipImporter' object has no attribute 'create_module'
The create_module method on a Loader is allowed to be not implemented or return None to indicate the default behavior.  https://docs.python.org/3/library/importlib.html#importlib.abc.Loader
The fix should just be to check if the create_module method exists and return None otherwise.
Ok, I can give that a try.
@dstrain115 is this still an issue?
I think we managed to work around the issue by building the package differently.  I am okay closing it and then re-opening it if we run into it again.
Thanks, let's do that then!
