This is the tracking epic for RFC 0019: Variable-declaration and storage representation in Qiskit.  Details of the proposal are in the linked document.  Since the tasklist doesn't show linked PRs, I'm just assigning myself to issues as I open a PR that closes them to give a neater visual indication.
Current dependency DAG of the created PRs, where an arrow from A to B means "A depends on B".
In theory all the links are clickable, but I found it finicky unless you control/command-click to open in a new tab.
Pushing this from 0.45 because there are some further internal API considerations about how the transpiler should reason about classical-memory access. The system is already at the limits of special casing, and with me needing / wanting to add in a read/write memory-access split for variables into the transpiler, there's more considerations to be made about how downstream passes will work.  There's no immediate dependents on this work being in 0.45, because it's all internal stepping stones for Qiskit 1.0 work, not stuff that's supported immediately on hardware.
