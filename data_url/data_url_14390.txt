I suggest implementing a method one meaning multiplicative identity for Pauli, SparsePauliOp, Clifford. Also possibly SuperOp. In fact I would add this method to any type that naturally supports the notion of multiplicative identity unless there is a reason not to.
For example
This is chance to introduce a useful abstraction that reduces complexity and improves performance in some cases. I have tested the performance. There are many instances where the body of the proposed method is written out.
Here is  an apparently efficient method for Pauli
https://github.com/Qiskit/qiskit-terra/blob/a2ae2ed1d3af5b6a70da97b9e0bd427337521d95/qiskit/quantum_info/operators/symplectic/pauli.py#L674-L681
