I found in Grover's search based circuits that the phase computation of the amplitudes is not done correctly. An easy circuit that shows this is the following:
http://algassert.com/quirk#circuit={%22cols%22:[[%22H%22,%22H%22,%22H%22,%22H%22,%22X%22],[1,1,1,1,%22H%22],[%22%E2%80%A2%22,%22%E2%80%A2%22,%22%E2%80%A2%22,%22%E2%80%A2%22,%22X%22],[%22H%22,%22H%22,%22H%22,%22H%22],[%22X%22,%22X%22,%22X%22,%22X%22],[%22%E2%80%A2%22,%22%E2%80%A2%22,%22%E2%80%A2%22,%22Z%22],[%22X%22,%22X%22,%22X%22,%22X%22],[%22H%22,%22H%22,%22H%22,%22H%22],[%22%E2%80%A2%22,%22%E2%80%A2%22,%22%E2%80%A2%22,%22%E2%80%A2%22,%22X%22],[%22H%22,%22H%22,%22H%22,%22H%22],[%22X%22,%22X%22,%22X%22,%22X%22],[%22%E2%80%A2%22,%22%E2%80%A2%22,%22%E2%80%A2%22,%22Z%22],[%22X%22,%22X%22,%22X%22,%22X%22],[%22H%22,%22H%22,%22H%22,%22H%22],[%22%E2%80%A2%22,%22%E2%80%A2%22,%22%E2%80%A2%22,%22%E2%80%A2%22,%22X%22],[%22H%22,%22H%22,%22H%22,%22H%22],[%22X%22,%22X%22,%22X%22,%22X%22],[%22%E2%80%A2%22,%22%E2%80%A2%22,%22%E2%80%A2%22,%22Z%22],[%22X%22,%22X%22,%22X%22,%22X%22],[%22H%22,%22H%22,%22H%22,%22H%22],[%22Chance4%22],[%22%E2%80%A2%22,%22%E2%80%A2%22,%22%E2%80%A2%22,%22%E2%80%A2%22,%22X%22],[%22H%22,%22H%22,%22H%22,%22H%22],[%22X%22,%22X%22,%22X%22,%22X%22],[%22%E2%80%A2%22,%22%E2%80%A2%22,%22%E2%80%A2%22,%22Z%22],[%22X%22,%22X%22,%22X%22,%22X%22],[%22H%22,%22H%22,%22H%22,%22H%22],[%22Chance4%22]]}
Base state 1111 is marked by the "oracle" among 16 base states, then in sqrt(16)=4 iterations the chance of measuring 1111 has to be aproximately 100%, however the value given by Quirk drops from 96,1 in the third iteration to 58,1 in the fourth (last) iteration.
Why do you think it should be nearly 100% after 4 iterations? Grover's algorithm doesn't take exactly sqrt(N) iterations.
For example, the wikipedia article mentions that the number of iterations is roughly pi/4 * sqrt(N). Since pi/4 * sqrt(16) ~= 3.1 you'd expect the maximum to occur between the 3rd and 4th iterations, maybe slightly before the third iteration since this is just an approximation. And that appears to be the behavior.
Thanks you for your quick reply, you are right, the amplification got by the marked base state increases the mean in the fourth iteration so it damages itself. I have another more complex circuit where in the first iteration the avarage about the mean don't seems to work, but I am going to implemented it and test it in QisKit before posting it here. I take the chance to congratulate you and thank you for this great tool.
