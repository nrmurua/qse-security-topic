StateFn is meant to construct something representing a quantum state, pure or mixed.
OperatorStateFn is meant to represent a density operator. But, for some objects, such as a PauliOp or a ListOp containing anything, StateFn constructs a OperatorStateFn, which does not agree with these semantics.
This behavior is more or less relied on in the test suite. For example here https://github.com/Qiskit/qiskit-aqua/blob/63b5029f739e30dfd08bb6321d3567b1f08c40a6/test/aqua/operators/test_aer_pauli_expectation.py#L71-L72
and  here https://github.com/Qiskit/qiskit-aqua/blob/63b5029f739e30dfd08bb6321d3567b1f08c40a6/test/aqua/operators/test_aer_pauli_expectation.py#L98-L99
In the latter example, we have
But X is not a density operator (not trace 1 or positive).
The results of the tests are apparently correct and meaningful, but the intermediate steps need to be cleaned up conceptually.
Aqua master commit 63b5029f
@jlapeyre Is this valid anymore or can be closed?
This is still valid. It may be best dealt with as part of a moderate refactoring of the opflow.
Opflow is now deprecated soon to be removed. New features/enhancements are no longer a consideration.
