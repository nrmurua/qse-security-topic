When running artiq_flash I get the following error message:
"Cannot find proxy bitstream bscan_spi_xc7a100t.bit"
I've downloaded zadig (there doesn't appear to be an actual installer at this time, it doesn't require installation to run.) and I've installed the WinUSB driver for Quad RS232-HS interface 0.
The artiq_flash help is very specific to a *nix based operating system, it doesn't apply to a Windows system, but it leads me to believe that I still needed to install openocd and place the right bitstream file in the path.
I've discovered that all the bitsreams are installed in the root of my conda environment, so I think the artiq_flash path options needs to be updated with os.getenv('CONDA_PREFIX') because that's where the bitstreams are installed by default. Further, openocd can't be installed by conda on Windows using conda install openocd as is suggested by the latest installation manual.. It fails with the following error:
This has been a big headache to debug, I excpect the ability to flash the latest gateware to our artiq system should be seamless, rather than fraught with complications.
By manually moving the bitstream files to where artiq_flash searches for them, I then get this new error:
The file in question is openocd.
This has been a big headache to debug, I excpect the ability to flash the latest gateware to our artiq system should be seamless, rather than fraught with complications.
First of all, let's get this straight:
The artiq_flash help is very specific to a *nix based operating system, it doesn't apply to a Windows system, but it leads me to believe that I still needed to install openocd and place the right bitstream file in the path.
I've discovered that all the bitsreams are installed in the root of my conda environment, so I think the artiq_flash path options needs to be updated with os.getenv('CONDA_PREFIX')
It used to work correctly on Windows, though regressions wouldn't be surprising (did I say Windows and Conda are trashy?). Generally, ARTIQ itself does not include things that are specific to a package manager. Is there a way to make it work without involving CONDA_PREFIX? Did you install the bscan-spi-bitstreams package?
The openocd package is here:
https://anaconda.org/m-labs/openocd
Try installing it.
Hi @sbourdeauducq, thanks for your quick response, it's much appreciated!
After installed openocd and the bscan-spi-bitstreams package from the link provided I was able to flash one of our artiq, and I can communicate with it via the LAN. Unfortunately none of the demo code is working (at least using the "device_db.py" supplied to UNSW, I've yet to try the examples using the master device_db.py), I am even unable to turn off and on the user leds.
Could you please confirm that the kasli-sydney board is the right choice for the systems bought by UNSW (SN: 128779/128780)?
I am also encountering the issue #1487 when trying to debug via the FTDI port, and so I'm a bit stuck for what to do.
I'm happy to have this issue closed, the only remaining problem is that the documentation states: conda install openocd, which fails but conda install -c m-labs openocd works. It's strange because my channels list seems correct:
Also the documentation doesn't mention that the package bscan-spi-bitstreams also needs to be installed manually. Genuine question, would it be worth packaging these items in an artiq_flash_utilities or similar?
Could you please confirm that the kasli-sydney board is the right choice for the systems bought by UNSW
It is not the right one. Please email me (sb@m-labs) a picture of the front of the system with all the cards, and I'll check which firmware and device database you should be using.
I've yet to try the examples using the master device_db.py
This will not work. A device database is specific to a certain configuration of cards.
I'm a bit stuck for what to do.
In my experience, a very common situation when trying to perform seemingly simple tasks like this but with Microsoft software...
Also the documentation doesn't mention that the package bscan-spi-bitstreams also needs to be installed manually.
Normally conda would install it as a dependency of openocd, but considering the reliability of the conda dependency solver I was suggesting checking manually that it is installed.
