I am using this piece of code but it gives error
feature_map = ZZFeatureMap(feature_dimension=4, reps=2, entanglement='linear')
backend = BasicAer.get_backend('qasm_simulator')
quantum_instance = QuantumInstance(backend, shots=1024, seed_simulator=seed, seed_transpiler=seed)
class_labels = [0, 1]
train_input = {key: (x_train[y_train == k, :]) for k, key in enumerate(class_labels)}
test_input = {key: (x_test[y_test == k, :]) for k, key in enumerate(class_labels)}
qsvm = QSVM(feature_map, train_input, test_input)
qsvm = qsvm.run(quantum_instance)
ValueError                                Traceback (most recent call last)
 in ()
5 quantum_instance = QuantumInstance(backend, shots=1024, seed_simulator=seed, seed_transpiler=seed)
6
----> 7 result = qsvm.run(quantum_instance)
8
9 print('Testing success ratio: {result["testing_accuracy"]}')
11 frames
/usr/local/lib/python3.7/dist-packages/scipy/sparse/construct.py in block_diag(mats, format, dtype)
691     row = np.concatenate(row)
692     col = np.concatenate(col)
--> 693     data = np.concatenate(data)
694     return coo_matrix((data, (row, col)),
695                       shape=(r_idx, c_idx),
<array_function internals> in concatenate(*args, **kwargs)
ValueError: all the input arrays must have same number of dimensions, but the array at index 0 has 1 dimension(s) and the array at index 1 has 2 dimension(s)
May run the same code given on the tutorial page https://qiskit.org/documentation/stable/0.24/tutorials/machine_learning/01_qsvm_classification.html
It should run and give results as all the inputs provided are valid
Probable the qiskit version at the time of tutorial might have changed, may use older version or if parameters entered need to be changed, please provide a correct template for running QSVM
Hi, thanks for your interest and apologies for the slow response! this bug refers to a tutorial from qiskit-machine-learning (not contained in this repo) which was refactored a few months ago, I would encourage you to take a look at the new version and open an issue in qiskit-machine-learning if you think that the problem persists.
Thanks anyway for your feedback and helping us make Qiskit better! ðŸš€
