Currently, the auto merge script that powers cirqbot is stateful. It internally keeps track of the things it is doing and needs to do. This causes all kinds of havoc when accidentally running two at the same time, and is generally more brittle than necessary. It should be the case that killing the script and restarting it has no observable effect on the behavior.
Here is the workflow I have in mind, to replace the current one:
There will be a new tag automerge_front_of_queue. CirqBot will add this tag to the PR instead of saying "automerge started". If automerge_front_of_queue does not imply automerge; a human removing automerge still counts as a cancel action. Perhaps a human removing automerge_front_of_queue could indicate "go to next", but that functionality can be deferred to later. Humans can add automerge_front_of_queue to indicate to CirqBot that a PR should be done first.
There are four modes that the repository as a whole can be in: "no automerge tags present" (IDLE), "automerge tags present but with no front of queue" (CHOOSE), "automerge tags present with a front of queue tag but PR not ready to merge" (WAIT), and "automerge tags present with a front of queue tag and PR not ready to merge" (MERGE).
Here are the possible transitions:
- IDLE -> (anything): manually trigger by a human adding the automerge tag to a PR.
- CHOOSE -> WAIT / MERGE: CirqBot notices automerge tags are now present, and adds an automerge_front_of_queue tag to the lowest-numbered PR.
- WAIT -> MERGE: Status checks finish running on an automerge_front_of_queue PR.
- WAIT -> CHOOSE/IDLE: Status checks fail on an automerge_front_of_queue PR, and CirqBot removes the automerge tags from it.
- MERGE -> IDLE/CHOOSE: CirqBot merges the automerge_front_of_queue PR.
There are four modes that an individual PR can be in: MANUAL, READY, FRONT, and MERGED.
PRs can also be in a state where they are tagged as automerge_front_of_queue but not automerge. This is considered to be a bad state, but CirqBot handles it by simply removing the tag.
Other bits of functionality that are needed:
If there's an existing system out there that just does this without a bunch of hassle, we could also just use that instead.
