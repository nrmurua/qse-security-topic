We currently have an ideal_executor argument in the calibrator which represents a classical simulator of a perfect quantum computer. In practice however it is not used.
It would be nice to support this argument, not much for the benchmark problems that we are using now but mostly for more advanced or custom benchmark problems. E.g. small subcircuits of user's circuits, small random circuits, clifford-dominated circuits, etc... where the ideal solution is not known a priori but it can be efficiently simulated.
The first question to ask is: Do we really need to support this? Is the need of an ideal_executor argument sufficiently strong?
If not, just drop the ideal_executor argument.
If yes, add proper support.
