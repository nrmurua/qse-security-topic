statevector_gpu is very slow if parallel_shots is many.
Code:
Result:
GPU is faster than CPU
Current thrust has many synchronization between CPU and GPU.
Running multiple QubitVectorThrust is not efficient.
A work around is to generate a long qubit vector that consists of multiple qubit vectors.
I think our current shot/circuit parallelism paradigm in general will work very poorly for GPU simulator because the outerloops are all handled by OMP threads that spawn multiple instances of the state classes.
In addition all our available memory checks for limiting parallel thread numbers check system memory, not device memory, which will give incorrect available memory estimates for GPU simulation.
Multi-shots on GPU simulator get better, but still behind CPU
statevector: 1.1290619373321533 statevector_gpu: 1.4679443836212158
using the latest code #788
(on P9 + 6x Tesla V100)
I optimized multi-shot parallelization with GPUs in the latest version of GPU + MPI simulator (it is not on Github yet)
The result with Hiroshi's test code
statevector: 1.13724946975708 statevector_gpu: 0.310870885848999
(on Power9 with 6 Tesla V100, using 80 threads (2 SMT/core))
I would like to put the optimized codes separately from #788 , and I will make another pull request to solve this issue after #788 will be merged to the master.
In general, if memory is enough to run density matrix, density matrix is better than statevector for noise simulation. I think that most of GPU machines are workstation with much memory (such as 128GB-) and can simulate 16-qubit with density matrix (64GB with double precision). Therefore, multi-shot-parallel is necessary for 17 or more qubits for noise simulation.
If problems do not exist in multi-shot-parall simulation for 17 qubits, this issue can be closed by enabling Method::automatic to configureMethod::density_matrix_thrust_gpu.

An issue in multi-experiment-parallel simulation for small qubits will remain. Maybe, this issue is a problem to simulate parameterized circuits. I believe that it should be another issue because other techniques are available to optimize simulation of these circuits.
This issue was resolved with batched execution in 0.10.
