Hi,
I recently had to animate a Wigner plot, to show the evolution of the Wigner function in time. It looks like QuTip does not any specific methods to ease this, at least when doing it in a Jupyter notebook.
Typically, the qutip.plot_wigner method is really handy to plot Wigner functions, as it deals with everything, from the Wigner generation to the correct plotting. However, using it in an animation function callback from matplotlib.animation.FuncAnimation is not doable if you want it to be plotted live in the notebook. And to use qutip.wigner.wigner you have to manually reproduce lots of code from qutip.plot_wigner.
I can think about two solutions to this issue:
Thanks!
This seems like a reasonable thing to implement.  However, I am backlogged with other things, so you may want to try to create a Pull yourself.  Or, perhaps on of the other devs can tackle it sooner.
Ok. I was just throwing the idea with this issue. Sure, if I need it again in the future and have some time to work on it, I'll try to make a PR to the repo!
Not sure this issue is closed as is, I think it would be if the notebook mentionned above was emphasized in the docs or anywhere.
