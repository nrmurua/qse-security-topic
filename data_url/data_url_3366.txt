This issue occurs only on QPU engagement with user-declared-memory-parametric gate compilation. In particular, the qc compiler's native_quil_to_executable throws the following error: ValueError: ParameterAref is not allowed for map key.
I might be doing something wrong but the example below follows directly the docs here.
This problem only occurs on QPU, not on QVM of the same lattice. It might be because of asymmetry between QPU and QVM that could then be improved.
First I believed it had to do with arithmetic on parametrized gates, i.e. doing RY(2.5*theta, 20), but the code below without any arithmetic on the classical memory gives the same error.
Operating System: QCS QMI
Python Version (python -V): 3.6.10
Quilc Version (quilc --version): forest sdk 2.17.0
QVM Version (qvm --version): forest sdk 2.17.0
Python Environment Details (pip freeze or conda list):
I suspect this is a msgpack versioning issue. Your conda env list says you have msgpack-python 1.0.0 from conda-forge, but rpcq's requirements.txt file pins the dependency to msgpack == 0.6. Somewhat confusingly, rpcq's setup.py file only sets a lower bound of 'msgpack>=0.6', and, more to the point, rpcq's conda feedstock requires msgpack-python  >=0.5.2.
Based on the conda list output you posted, it looks like you possibly installed or upgraded some package(s) from conda-forge (the default QMI conda env doesn't include any packages from conda-forge), and possibly that caused your msgpack-python package to upgrade as well.
Note that the latest msgpack version available in the default conda channels is 0.6.1, whereas conda-forge has 1.0.0.
Just tried upgrading to msgpack-python v1.0.0 in a freshly-installed conda env and am able to reproduce the issue there.
I will open an rpcq issue to investigate what needs to happen to get things working with msgpack 1.0.0.
In the mean time, we should probably pin msgpack to be >= 0.6,<1.0 everywhere. See also #1153.
As a workaround, you could try downgrading msgpack-python in your conda env to 0.6.1, or else just switch to the default conda env provided on the QMI and make sure it doesn't reproduce there.
@appleby thanks for checking! indeed now that I downgraded msgpack-python to 0.6.1 there are no errors and it runs as expected.
Great! Thanks for the update @vincentelfving. The RPCQ changes are being tracked in rigetti/rpcq#118.
I will close this out.
