When using the Sample layer or op, there are sometimes workflows where one desires different numbers of samples from each circuit in the batch.  Currently, I get around this by applying the Sample layer once per circuit, each called with the correct number of repetitions.  It would be easier and likely be more performant to allow repetitions to be a tensor of same shape as the input circuits, where each entry specifies the number of samples to draw from the corresponding circuit.
This is a tricky problem, you have to make a ragged tensor with a kind of nasty shape. In this case you would need to modify the sample op to produce a [batch, num_qubits <ragged>, num_samples <ragged>] both of which depend on values in input tensors. More annoyingly is that broadcasting rules also breakdown if things get really ragged in both dimensions, to the point where it might be hard to line up the appropriate qubits ?
Either way, anyone interested might want to start looking at modifying the signature of tfq_simulate_samples and all the other sample OPS in the library. From there we would need to modify the Sample layer slightly in order to accommodate the case of a single value for sample in addition to a 1:1 sample list.
