The generated circuits have the same name and it results in users cannot retrieve the result correctly since terra uses the circuit name to retrieve the result.
here is the example script
The circuit name should be unique even though they are created via multiprocess
I do not know. The workaround I had now is assigning the name by myself.
The solution is passing a tuple of (idx, circuit) as the argument to parallel map, and then doing the naming.
Yes, that is what I did now but I imagine that normal users won't notice that since the name of circuit is optional and the way to retrieve result is passing the circuit object rather than circuit name.
In my opinion, the first impression users get will be using the circuit object to retrieve the result rather than using the name.
I will fix it.
And why not use the parallel tools that are already in terra?  i.e. parallel_map?
I could give it a try with the parallel_map in the Terra but may I know that what is the advantages over standard library? will it manage the thread/process better when using with Terra?
It is a well tested function for running tasks in parallel that supports additional static args and kwargs, correctly handles the Windows platform, and nicely groups the return items in a list.  In addition, you can use it to track the execution progress using the builtin terra progress bars.
