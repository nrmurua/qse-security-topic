I'm not sure this is wise to double up on types of data, single responsibility principle. We should have a most Base fitter that is agnostic of data type, and we could have one that chooses what type of fitter to instantiate, but at the end of the day, there should be a fitter that handles a specific sort of data. Its important to avoid things that work like magic (ie. passing any type of data to a fitter and having it automatically do its discrimination behind the scenes), these sorts of APIs end up not being very extensible and so if you want to do anything out of the ordinary it becomes hard to put the building blocks together.
I'll probably soften my stance after thinking about it and I shouldn't have said all fitters. The examples I were thinking of are things like T1, T2, T2* where the IQ values don't need to be discriminated at all.
