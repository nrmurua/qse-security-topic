Re-running some old code on a Colab instance, and when trying to show some arrays using the function array_to_latex, I get the following error :
TypeError: '>' not supported between instances of 'method' and 'int'
With the following debug message :
The error should be reproducible with the following code :
This was tried on a new instance of a google colab today
A TypeError should appear showing the following message :
After playing a bit with sympy, if my understanding is correct, I think the code here is missing the parenthesis at line 39 for the value.denominator > 50 being replaced with value.denominator() > 50
Thanks, this must have slipped in without a test. Would you be interested in fixing it?
Yeah I can try ! You can assign this to me.
Thanks!  Let me know if you need a hand - the small extra bits that go with the PR are:
same problem with me any solution??
We're in the process of deploying a fix.  Please be patient.
!pip install qiskit
pip install git+https://github.com/qiskit-community/qiskit-textbook.git#subdirectory=qiskit-textbook-src
qc = QuantumCircuit(2)
qc.h(0)
qc.x(1)
qc.draw()
usim = Aer.get_backend('aer_simulator')
qc.save_unitary()
qobj = assemble(qc)
unitary = usim.run(qobj).result().get_unitary()
from qiskit.visualization import array_to_latex
array_to_latex(unitary, prefix="\text{Circuit = }\n")
gives error
'>' not supported between instances of 'method' and 'int'
two days before it work fine for me but now its not working
any help??
ok waiting
As an immediate workaround, you can install a slightly older version of Qiskit Terra from before the bug was introduced with
This issue will be closed when a fix is merged to Terra's main branch, and after that it'll be a few days until we cut a new patch release.
The example given in the opening comment executes without error for me on a3b359b from January 27, 2023.
Also runs normally on fb2e0e5 from today, Feb 2, 2023.
qiskit_aer 0.11.2
Python 3.11.0
For me too, but it fails on Colab.  I suspect it's because Colab has Sympy 1.7 pre-installed, but the latest version is 1.11.  We only require 1.3+ on Terra for now. I wouldn't consider this a sufficiently large issue to raise the required version of Sympy - the catch is fairly simple; we just only call the denominator object if it doesn't return an int.
Yes, unless it's a big performance issue (I doubt it is) I think adding a workaround here is sufficient.
It looks like using q rather than denominator might work:
Uhh, unfortunately it's more complicated than that, S.Zero is the instance of sympy.core.numbers.Zero.
I think think the correct fix is here
