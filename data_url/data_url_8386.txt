(Apologies: this is a repost from the QuTiP Google group, but since this seems to be a possible bug with mesolve, I figured it was more appropriate to post it here. See the Google post here for some images documenting this issue.)
Hello,
I'm trying to simulate a system of qubits with a two-pulse periodic Hamiltonian and some dissipation using QuTiP's mesolve function. As a consistency check, I compared the results of setting c_ops = [], and setting c_ops as the zero matrix. These should give the same results, yet for certain basis states, setting c_ops as the zero matrix seems to give the wrong result.
Here is a minimum working example that reproduces the effect:
I would very much appreciate any insights into where this inconsistency comes from, and how to fix it. Since mcsolve does not reproduce it, I think this might be an issue with mesolve.
Many thanks,
Oliver
Thanks for opening this issue @OliverLunt. It sure looks like some bug that should definitely be resolved. I would like to take a look as soon as I can and discuss how to fix this.
@IIAOPSW can also help perhaps.
@OliverLunt,
The problem lies in the adaptative step of the ode solver. Since nothing happen at first, the step become so long that it jump over the change in the on_off signal...
You can do:
To limit the step size and it will work as expected.
I am not sure why sesolve (used when no c_ops are given) have smaller step size. It seems to be something in the scipy solver.
