Suppose we have a circuit made up of two sub-circuits, one of which contains parameterised gates. To be efficient, we want to reuse this general circuit many times with differently bound parameters. The first time, there are no problems. The second time, the new parameter is bound at the higher level (i.e. sub_circuit1 + sub_circuit2) but when the circuit is run it executes the old parameter from the first time. This can be seen at transpilation as shown below.
Every time you bind a parameterised circuit it should have no memory of previous bindings. This is because quantumcircuit.bind_parameters() makes a deepcopy of the original circuit so there should be no memory left.
Currently we fix this by transpiling the parameterised circuit before binding. However, we believe this shouldn't be required to get the expected behaviour.
Hi @bjader, thanks for reporting this! This is indeed a bug, and you rightly identified that the deepcopy we preform during bind_parameters was missing some state, resulting in errors on subsequent bindings. Transpiling prior to binding is one workaround, but there is an additional fix for this issue on the master branch (by I think a combination of #3729 and #3874) which will be included in the upcoming release.
Running your first example from master, I get
I'm going to close this issue as fixed on master, but feel free to comment or reopen if there are any questions.
