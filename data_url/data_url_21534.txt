Currently, kernel_invariants is a class variable of coredevice.AD9910 and coredevice.AD9912. When the Urukul device currently being processed has dedicated RF switch lines, the device_db.py should contain an optional property "sw_device" storing the corresponding TTL outputs, and so sw would be added to kernel_invariants belonging to the class, instead of just the current instance of AD9910/AD9912
Consider a set of AD9910 and/or AD9912 instances, containing both Urukuls with and without dedicated RF switch lines (i.e. some are in 2-EEM mode and some are in 1-EEM mode). If there is at least one 2-EEM Urukul has its driver instantiated, when a 1-EEM Urukul driver is to be instantiated next, the class kernel_invariants would still contain sw despite being unused. Since the sw attribute is absent from the instance's list of attributes but present in the class's kernel_invariants, the compiler will emit diagnostic messages as follows:

This does not produce any errors, but it appears to be unnecessary to modify kernel_invariants for all instances in order to accommodate 2-EEM Urukuls.
