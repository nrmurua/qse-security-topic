We could agree on the format to follow from now on in docstrings.
Once we do, I'd like to format the docstrings in the .py files, as part of the main Documentation effort, #34 (I'll open a pull request for this).
Provided that we are free to do as it suits us best, there are two Python Enhancement Proposals (PEP) that can be looked up for this: PEP 8 (Style guide) and the more precise PEP 257 (doctrings conventions).
I find it useful also to look at well-documented libraries such as Numpy, Matplotlib and so on, as they also build some easily explorable documentation.
I propose to use the format of this example:
This tells
Besides the formatting, I think it is important to add what is the output of functions and methods to the current code.
It may be neat to format, if not all, some particularly important objects, already in view of cross-referencing (internal links) and external links to other projects using intersphinx. For example using:
Once the documentation is built, it allows the object type to be clicked upon and brings the user to the requested page, in that documentation or elsewhere.
I see that type hint is taken care of by annotations (PEP 484) which I am not very familiar with.
I like the suggested format. With annotations (PEP 484), I would modify this to the following. I would also add a section on errors the function raises, if any, as below.
This is great! I agree with the edit suggested by @rmlarose which reduces duplication from the existing type annotations.
There's two rules of thumb that folks sometimes use
(1) all functions should have docstrings for all parameters and return data
(2) parameter and return data explanations should only be included in docstrings if the function name and argument names are not self-explanatory.
I lean towards (2) as it encourages good naming and reduces docstring clutter. e.g.
or
are preferable to:
If return is None,  shall we omit the Returns part? E.g.:
Another question that I have is if we should indent parameters and returns variables in the docstring. This can be used to have a compact docstring without empty lines between arguments. E.g. :
(example taken from https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html)
I like your last proposal, @andreamari. It includes @rmlarose's improvement on type information in the first line and makes it less verbose than my Numpy-style example, as @willzeng pointed out. Shall we go for it?
Once we agree, I can help out and format all docs.
I think it's important to have some structure in the docstrings as we deal with new concepts for the community it is intended for, and there is a lot of different libraries used. We may skip this formal structure for trivial functions, especially when private.
Agreed!
