An error is produced stating "Cannot unroll the circuit to the given basis, ['id', 'rz', 'sx', 'x', 'cx', 'reset']. No rule to expand instruction h."
Create a new Quantum Circuit of x qubits and x bits. Apply a Hadamard gate on one of the qubits and run the circuit on
a real quantum computer other than ibmq_armonk.
The circuit should at least compile.
This was not an issue that I previously experienced so it must be a problem in a newer update with the transpiler unroller.
@metacubestormerxii12 can you provide the exact code replicating the issue and the error that Qiskit is throwing?
I expect this is a duplicate of the original issue described in #5840. If you are using the Unroller pass it is not able to handle unrolling to an arbitrary basis as it works by descending through the gates' definitions which may or may not be written in the basis of a backend. In this case a hadamard gates definition is in terms of U2 (https://github.com/Qiskit/qiskit-terra/blob/master/qiskit/circuit/library/standard_gates/h.py#L64) which will not match the basis returned by ibm quantum devices. This wouldn't have been an issue in the past because ibm quantum devices used to use the basis set u1, u2, u3, cx, id (and the ibm q provider still will return that if you are using an older version or terra) so the unroller could find a match.
This limitation with the unroller is why we introduced the BasisTranslator pass which is the default in all the preset transpiler pass managers now. It understands equivalences between different gates and can find a match in an arbitrary universal basis.
If you are manually running the transpiler with the unroller pass can you try using the basis translator instead? If this is not the case then as @delapuente asked having a code snippet for exactly what you're running is necessary to debug what is failing for you.
Ok in the later versions, this was fixed and I can run this just fine. Thank you mtreinish and delapuence :).
