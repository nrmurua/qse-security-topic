We want to change fold_gates_from_left and fold_gates_from_right so that they match on odd scale factors. Namely, we want it so that
for all integers k. This is to match how they are defined in https://arxiv.org/abs/2005.10921.
Currently the circuit is folded up to a scale factor of 3, then this circuit is folded again treating all gates as though they were in the original circuit for scale factors beyond 3.
For the last case (scale factor = 5), the returned circuit should be (for both left/right scaling)
This would be a breaking change, so some scaling tests with scale factors > 3 may need to be modified.
@rmlarose Why was this distinction made originally ? In the code for fold_gates_from_left, a scale factor of greater than 3, calls a different function fold_local.
I found a comment made about this on discord in a discussion with @andreamari and ethanh. Perhaps, you could clarify this more because I am a bit confused as to why scale_factor=3 was made except that it's the first odd number and/or the number of physical operations increasing by 1+2. I understand there's a difference between folding with an odd scale factor and an even one.

@purva-thakre this is more or less how local folding functions are defined now in Mitiq (sketch):
This recursive workflow has the advantage that one doesn't need to pre-compute in advance what gates needs to be folded. One simply starts folding the gates of the circuit until the stop condition is achieved. However this has some side-effects due to the recursive nature of the loops: in the second loop there is no distinctions between the original gates of the input circuit and the new gates which have been inserted in the first loop. This creates the non-uniform folding effects shown in the code example of this issue.
For scale_factor < 3, only one loop is executed and so this problem does not emerge.
I think also fold_gates_at_random should be fixed as well to match the theoretical definition in https://arxiv.org/abs/2005.10921.
I tested that for large odd scale_factors, sometimes the folding is non-uniform.
I think also fold_gates_at_random should be fixed as well to match the theoretical definition in https://arxiv.org/abs/2005.10921.
I tested that for large odd scale_factors, sometimes the folding is non-uniform.
I suggest opening a new issue for this.
