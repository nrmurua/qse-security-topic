I am experiencing random crashes when working interactively. The error message is
The crashes occur about every 5 minutes on average. This under unix (Ubuntu 14.04). I tested both python 3.4 and python 3.5 with spyder or pyzo as interactive environment.
Has anyone experienced the same issues or similar error message?
Nope, also I assume you meant Linux üì¶
Anyway  Linux and X server makes me think that is something do to with QT rather then qcodes.
Never heard about pyzo, but I am ready to pay drinks if it's not based on QT  :P
In linux on a lower level x server uses sockets, so if you mix up multiprocessing with threads under a qt app that relies on x server, you could end up with a mishmash of X-server-sockets.
AFAIK multiprocessing on linux forks stuff, meaning that you could end up with two sockets per thread where they both get gibberish data.
This explains both the error message and why it happens at random. But it's hard to tell without knowing what code was running and where this came from :D
PS.
It would be super sweet if you could follow the issue template ‚ù§Ô∏è
Follow up, aside from the first cocky answer, to look into this I need to know what where you doing.
My guess is that if you are using the loops with a data manager multiprocessing kicks in and messes up with QT.
@giulioungaretti Thanks for the response. The Xwindows+multiprocessi+Qt explanation fits the issues I see. I tried to set all my loops with data_manager=None, so perhaps the multiprocessing kicks in somewhere else. I am also using a custom version of the MockModel without the ServerManager, so no multiprocessing there either. One of the instruments (my virtual gates) is on a different process though (see #185), so there multiprocessing is definitively used.
After some googling and testing I found out that the following at the top if my script solves seems to solve the issue:
I think it would be good to modify the Qcodes __init__.py to either:
@eendebakpt , ah interesting.
In *unixies (both linux and OS X for us) spawn is not preferred for performance reasons (also philosophical reasons, but we can safely ignore them).
QCoDes has already helpers for this, but for now I would not have it in init but rather something that users select when fit.
@eendebakpt are you using the loop feature thing ?  or even better do you have a snippet of code where you got this problem ?
@giulioungaretti I can understand why you would not want to have the method set in in init. Nevertheless, I would at least set a warning as this is a problem that is hard to debug and identify.
@giulioungaretti I am indeed using the Loop from qcodes, but always in background=False mode. I do not have a snippet of code that shows the issue. The main script is quite large, and the error is at random, never when executing a particular line of code.
@giulioungaretti I am closing this one since there is a workaround.
