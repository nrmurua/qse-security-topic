ID was a gate defined in QASM 2 which is equivalent to the identity. It was later adopted to implicitly control timing in experiments (with discrete timing). QASM 3 allows finer-grain timing with dt granularity, using Delay instructions. ID is deprecated in QASM and also on future IBM backends. Therefore we need a pass that can convert ID to Delay. This will be used for the deprecation period, but in general it is a good pass to have to convert between QASM 2 and QASM 3.
The compiler would know the duration of delay by looking up backend.properties().gate_length('id', qubit) with a unit of dt.
If a backend supports ID, then the pass would not replace anything. If it does not but supports delay, then it would replace with delays. If it supports neither, then neither ID nor Delay can exist in the circuit as the backend does not allow timing control.
Resolved as part of Qiskit/qiskit-ibmq-provider#976 .
Note that, as a consequence, users who send circuits with id gates to backends that don't have id in their set of basis gates, will have to set the scheduling_method parameter (see #6678). And they will have to somehow know about it (they'll learn about it from the transpiler's error message, but I'm not sure if this is the best way to notify users about what they should do and how). Automatic setting of scheduling_method to alap (if not set by the user) is an option, which has of course the drawback of reduction of transparency; which can be mitigated by a proper message sent to the screen or log).
Actually what I wrote above is not true, as long as we make sure that the delays are multiples of 16
