Is your feature request related to a use case or problem? Please describe.
Is it possible to add support for something like c_if from qiskit? It seems this would be the core primitive required for flow control #3234. It was mentioned in #762 that this would not be supported because the quantum machines can't do it.
Describe the solution you'd like
I'd want the ability to run an operation conditionally based on a previous measurement. cirq.H(q1).c_if('m'). If applied to a CircuitOperation, when decomposing it would apply to all suboperations in that circuit. Eventually we could add some boolean logic operators to the measurements cirq.H(q1).c_if(cirq.c_and('m1', 'm2)), and higher-level if-else, switch, do-while and other flow control mechanisms. But they should all be able to decompose to a bunch of c_ifs as a primitive: the circuit layout itself after decomposition would remain fixed (with caveats: do-while loops would need to be designed with an explicit maximum count for instance).
I'd expect the implementation to be applied at the Operation class such that it intercepts all calls to act_on and checks the corresponding measurement first. (Maybe all act_on in the subclasses will have to be renamed to act_on_internal, (which may or may not break some backwards compatibility), or maybe Python has a trick to circumvent that). External simulators would all have to be updated explicitly to support it.
QASM emitter could also be updated to support this. If each measurement key was considered a classical gate, that would provide the ability to translate these operations to QASM.
[optional] Describe alternatives/workarounds you've considered
None, primarily asking if this is something that would be considered, whether someone could start working on design for soon, or if some other design was being formulated.
What is the urgency from your perspective for this issue? Is it blocking important work?
P3 - I'm not really blocked by it, it is an idea I'd like to discuss / suggestion based on principle
I think this is the same as feedforward #3232.
@smitsanghavi  Yeah this would be a concrete first step. The full scope of feed forward seems broader. Though as you commented there, I'm curious about the physical aspect. Is that device limitation an easy thing to patch in or are there fundamental physical problems there. Apparently IBM also can't do feed forward even though their simulator can.
The design here will likely go via a ClassicallyControlledOperation wrapper similar to the POC using tags.
