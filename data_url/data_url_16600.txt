The property set is used to communicate information about the transpilation process "out-of-band" from one pass to the next. We originally disallowed TransformationPasses from writing it, with the idea that AnalysisPasses would exclusively collect information and TransformationPasses would exclusively modify circuits.
I think the latter assumption is hard to maintain going forward. For example a TransformationPass may have internal state that is useful to a future pass (the example I have is the "final_layout" that is computed from a routing pass). We would need to communicate this information somehow.
Within the current architecture, the only way to do this is to write an AnalysisPass that does the exact same thing as the routing pass, but does not actually transform the circuit and only returns the "final_layout". This is clearly expensive.
So I think the solution is to either allow a TransformationPass to modify property set, or to declare the routing pass as inheriting from both AnalysisPass and TransformationPass. I couldn't get the latter to actually work though.
