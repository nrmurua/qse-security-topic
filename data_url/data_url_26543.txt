Hi, a CSCS user on the Cray XC50 reported a problem with ELPA GPU linked by CP2K 9.1: in a test case that runs in few minutes on 6 nodes, the job hangs when starting the diagonalization with the default ELPA_KERNEL AUTO or it crashes with CPASSERT failed in cp_fm_diag_elpa_base when using ELPA_KERNEL  NVIDIA_GPU in the input file.
The job works instead when setting manually ELPA_KERNEL GENERIC, therefore we have added a note on the CP2K page of the CSCS User Portal: if you can access Piz Daint, the input file, the coordinate file and the Slurm submission script are in /scratch/snx3000/lucamar/cp2k/aiida.
Are you aware of other issues with ELPA GPU within CP2K? We have built CP2K 9.1 based on a recent architecture file with  -D__ELPA -D__ELPA_NVIDIA_GPU linking ELPA GPU enabled, but I have the impression that it is safer to continue linking the CPU version of the library only. Thanks for your advice.
Yes, that issue related to ELPA is known (#1696 and #1599) and it has been reported also several times in the CP2K forum. The suggested work-around is to switch to ScaLAPACK as you correctly suggest.
Thanks for the reply: similar issues previously reported with ELPA were occurring with the CPU version of the library and they were fixed by the recent ELPA release 2021.11.001 (at least the input files that I could test). On the other hand, this issue seems to be specific of ELPA GPU only, since it does not occur with the CPU version of the library or when I set ELPA_KERNEL GENERIC.
In that case, the problems you observe could be rather an ELPA than a CP2K issue. The CP2K crashes using ELPA might have several reasons, i.e. others than a bug in the redistribution scheme implemented in CP2K.
Thanks, indeed the issue might come from the ELPA GPU version. However, I wonder how CP2K linked to ELPA GPU on the Cray XC50 selects ELPA_KERNEL among the choices when the default AUTO is used, since it gives the warning below:
The warning is not printed if I select ELPA_KERNEL GENERIC, which seems to make sense. However it still gets printed when I choose explicitly ELPA_KERNEL NVIDIA_GPU:
In addition to @marci73's comment, you can tune the switch between ELPA and ScaLAPACK with the keyword ELPA_NEIGVAL_MIN. Due to my experience the ELPA_KERNEL AVX2_BLOCK gives the best performance (similar to the NVIDIA_GPU_KERNEL if it works).
Thanks a lot for your comments, they are very helpful. In the meanwhile, I noticed that a new ELPA release 2021.11.002 is available:
I will try it out, to see if it helps as well with the issue that I have experienced.
While I'm getting a 404 for the release page, the new tar-ball seems to already be there.
The latest ELPA release 2021.11.002 fixed the issue that I have reported (see the pull request 2690), thanks again for your advice.
Thanks for your report! I've also updated ELPA in our toolchain: #1959.
