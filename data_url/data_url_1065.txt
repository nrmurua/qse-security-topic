cirq.Result is supposed to be supplied measurement results as a dict from string to a multidimensional numpy array. However it is possible to instead supply the value as a list of lists. In this case cirq.Result equality will still work, but it will fail to when converted to a string (since __str__ uses numpy slicing).
I'm not quite sure why mypy didn't yell about the incorrect type here. I guess the value in a dict is covariant? I thought it was invariant.
mypy doesn't recognize numpy types.
All of this is accepted by default
I tried with pip install data-science-types - that project creates type stubs for numpy, matplotlib, pandas.
With this, mypy catches the first three:
However, it generates a lot of other noise:
That includes errors due to missing type stubs in the package e.g.:
So I think we'll just have to live with this not being in mypy. Maybe we could / should do runtime type validation in the constructor though for the measurement argument!
Originally posted by @balopat in #3710 (comment)
Related to #3767.
We can probably close this after numpy requirements go past 1.20 where they have mypy stubs.
