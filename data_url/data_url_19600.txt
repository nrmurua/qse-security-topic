When I produce a lot of detection event data using stim and store it in a numpy array, I can ask for it to be bit packed so that it uses 1 bit per detector instead of 1 byte per detector. Also, I can combine multiple shots into one array. But when I go to give this array to pymatching I need to feed it in one shot at a time and I need to unpack the bits:
It should be possible to instead do, for example, this:
and I don't just mean that the internal implementation does what the above python code is doing. It should stay bit packed from end to end, and avoid initialization overhead between shots.
It may also be useful to have a method that you give input and output filepaths to, so that the C++ code can run off data on disk instead of involving data stored by python at all.
I agree it would be good to add this
Fixed in dev branch
Although I agree this is fixed with the protected main method for sinter, I also plan to add pymatching.Matching.decode_bit_packed_batch(det_data) at some point, so reopening this one
