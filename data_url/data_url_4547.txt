I propose a simplification for the user and visual enhancement for qibo.models
Is your feature request related to a problem? Please describe.
Imagine we would like to compute expectation values for the following circuit
We would like, however, to compute the expectation value of some Hamiltonian for different input parameters. I believe, right now we should implement a for loop for each of the parameters we are considering, something similar to this
Describe the solution you'd like
I believe it would be more elegant if qibo.models accepts vectors as parameters, similar to other software for classical machine learning, e.g. Keras. A possible way to visualize it could be
where expectation_values is now a vector of length len(params) that contains the expectation values for the different input parameters.
I think the first part of what is described is already implemented with parallel.parallel_parametrized_execution. You can execute a circuit for different values of the parameters in parallel as follows:
Here result will be a list of four state objects which are the result of execution for each value of the parameters.
What is not possible right now is to get the expectation value in a "vectorized" way. If you use the above approach for your example you would still have to do a loop for the expectation value:
Given that expectation values are somewhat important for optimization problems, it may be worth considering parallelizing this calculation.
