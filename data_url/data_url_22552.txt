We currently use h5py to save data. h5py is very low level and we miss out on a lot of higher level features that we would need to implement ourselves, like metadata and the inherent abscissa-ordinate association. Also pandas will be the tool that people will want to use to read and analyze that data and the missing metadata makes reading our results files with pandas really hard. The overhead is negligible.
The ARTIQ dataset DB also currently does not support such metadata or associations between datasets. What features exactly should be added to result management and how?
Primarily, one should be able to open the results with pandas. The easier solution there appears to be saving them with pandas. The associations can come later.
Are there pandas or h5py bugs that prevent them from being read right now?
Pandas seems to have lots of dependencies, including matplotlib, and is slow to load. No less than 405 modules are pulled in by import pandas on a fresh interpreter, as shown by:
By comparison, that number is 22 for artiq.
Nonsense. You can't claim that artiq pulls in just 22 modules. h5py itself pulls in 222 modules! If you are worried about modules (they all are packaged and maintained in conda), then at least we should switch to pytables as the underlying hdf5 interface.
And as I explained being unable to read h5py written files in pandas is not a bug in either. It is just a different level of abstraction.
I mean the basic import artiq pulls 22. Others pull more (e.g. artiq.experiments takes 184), which is still much less than pandas (those 405 modules are just for the top-level) and is way faster to import.
import artiq needs 22 modules just to expose __artiq_dir__ and __version__. Comparing that with pandas (or h5py for that matter) does not make any sense.
It does give some indication of how much a given package likes to carelessly load tons of modules.
Let's revisit this once this materializes:
https://hdfgroup.org/wp/2015/09/python-hdf5-a-vision/
(also https://github.com/pytables/pytables/tree/h5py)
Also keeping #405 in mind.
Fine for now.
