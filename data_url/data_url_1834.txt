StateVectorMixin provides a couple of useful features on the state vector itself. ProductState and _NamedOneQubitState and its subclasses could benefit from it.
cc @mpharrigan wdyt?
The mixin uses qubit_map which is designed for a vector (aka ndarray) based representation so you can map qubits to indices in a contiguous array. ProductState is like a dictionary (so this isn't applicable) and NamedOneQubitState only has one qubit (per its name (it's also named per its name)). The mixin also has qid_shape which similarly doesn't make as much sense for ProductState.
There's a couple of helpful methods, however, that only require the .state_vector() method to be implemented, which the classes do implement
Is StateVectorMixin used anywhere? Either "no" or my pycharm is broken :) my pycharm was/is broken
According to @viathor , this points to a more general problem of Cirq not having a philosophy with which to make technical decisions when it come to state representation. He'll file an issue about this.
Filed #4582 for discussion. Keeping this issue open for now, but if we decide to consolidate our representations of quantum states then it will become moot and should be closed.
This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 30 days
Issue closed due to inactivity.
