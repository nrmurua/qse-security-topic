I've seen enough people confused by the fact that decomposing a gate can change its global phase to be convinced that we should try to preserve it.
I think the way we should do this is by adding a "global phase gate" that moments or circuits automatically fold and diagrams treat specially in some way. Then we need to go through all the decompositions and add this global phase part. We would also need to update any tests that are now incorrectly only up to global phase.
I changed the assert for unitary-vs-decomposition consistency to respect global phase in #1160. Hadamard was the only one broken by this change, so the last step above should be simple.
#1165 is catching many gates that need this fixed (I haven't fixed them yet).
@Strilanc what do you mean by "fold" in "moments or circuits automatically fold"?
For #1165 I would start with only requiring consistent-up-to-global-phase.
By "fold" I mean that a global phase gate is a gate that applies to zero qubits, and this means that you could append fifty billion of them to one moment without violating the "no qubit overlap" rule. I was suggesting that, when that happens, you take the product of all the global phase gate and store just one global phase gate storing that product.
Well, the tests in #1165 are failing because #1160 changed assert_decompose_is_consistent_with_unitary to require global phase consistency
Oh. That's my mistake for letting that through before we were ready to really guarantee it. Revert it in your PR.
Oops. Sorry for that. I thought that since all other gates passed the new stricter test we were ready to provide the stronger guarantee. Didn't know about #1165 .
An alternative to reverting would be a temporary switch for use in tests of gates that fail the stricter version of the test.
Yes, I agree that a boolean switch defaulting to "phase insensitive" would be ideal.
Fixing this issue will involve making the include_global_phase argument of assert_decompose_is_consistent_with_unitary default to True and then fixing the broken tests.
This looks it has been completed.
