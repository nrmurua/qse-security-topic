A test is needed to confirm that optional nix packages can be added to nix shell environment without error. See #1575. Examples of such packages include the following.
Because this is a Nix problem, I don't think an ARTIQ unit test is the appropriate place. If it was anywhere, it should probably be a build artifact of https://git.m-labs.hk/M-Labs/nix-scripts (i.e. show up on the MLabs Hydra server https://nixbld.m-labs.hk/jobset/artiq/full).
However, this is tricky, because the mkShell nix command explicitly does not support building (i.e. can't be called w/ nix build, only nix-shell). I can't think of an easy workaround off the top of my head, though I admit I could be missing something obvious (maybe a VM test like in https://github.com/NixOS/nixpkgs/tree/master/nixos/tests?).
References:
Ideally an automated process discovers problems adding ARTIQ-related packages to a nix environment. Better than end users discovering the problem. Problems should be flagged whether the source is an ARTIQ-level nix script error, a package error or an error with nix itself.
mkShell is just a special and very simple derivation: https://github.com/NixOS/nixpkgs/blob/master/pkgs/build-support/mkshell/default.nix
It could be replaced with runCommand that does touch $out for testing. A VM test would be rather heavy, and unnecessary unless there are some special test commands that could be run there that do need a VM.
done
