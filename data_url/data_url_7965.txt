The documentation of mesolve states that lists of callback functions can be passed in the parameter e_ops:
A list of operators as Qobj and/or callable functions (can be mixed) or a single callable function. For operators, the result’s expect will be computed by qutip.expect. For callable functions, they are called as f(t, state) and return the expectation value. A single callback’s expectation value can be any type, but a callback part of a list must return a number as the expectation value.
However, I find that passing a callback function in a list e_ops = [my_callback] gives an exception:
UnboundLocalError: local variable 'rho_t' referenced before assignment
By contrast, I find that passing a callback function directly as e_ops = my_callback does not cause an issue.
This is important because I am unable to pass lists of callback functions which, according to the documentation, I should be able to do.
I expect that callback functions passed as a list should be computed without issue.
No response
This looks like a duplicate of #2118. A fix was just released in QuTiP 4.7.2 -- would you mind trying with that and letting us know if the fix works for you?
This looks like a duplicate of #2118. A fix was just released in QuTiP 4.7.2 -- would you mind trying with that and letting us know if the fix works for you?
Yup, this sure fixes it. Sorry for missing the duplicate!
No worries. Thank you for checking and reporting back.
