
Load up a backend in Jupyter.
No warnings
I am not sure why dt has been changed to seconds.  Given the GHz freq. that we use, the natural timescales are nanosec.  This was already a bit funky given that we do T1 and T2 in microsec.  So now we have three different timescales for our parameters.
As a side note, the natural timescale for the simulator is nanosec.   I am not sure how this affects that.
If you load a backend in jupyter by assigning it to backend, there should be no warnings. When you execute a cell ending in just backend, the output of the backends __repr__ is printed. The IBMQ backends' repr seem to include a call to dt. We can remove the warning by temporarily suppressing warnings within ibmq-provider's repr method, or by accessing the private variable within __repr__ (until the warning is removed). This would happen outside terra (edit: as stated below, this is wrong).
I agree it was funky that there were multiple timescales for the parameters -- this is intended as a small step towards fixing that. The idea is that the units s for time and Hz for frequency would be the least surprising for users. If it is the most likely assumption, then matching that assumption improves usability. Of course, users who have already gone through the trouble of finding the units would expect ns, and that is what the warning is for (I myself had to read the whitepaper on the arxiv to find it, after getting a value that I thought obviously couldn't be seconds).
I also agree that having more than one timescale is not good. I would suggest migrating GHz -> Hz before the next release as well, at least on the Qiskit terra side. These changes are more pervasive than the change for dt, but it should be somewhat (hopefully?) localized to assemble. If we decide to go forward with this change, I'll make time to work on it.
Regarding us, where are these values of T1 and T2? I am right now only aware of backend.properties(). In this, the values for T1 and T2 had their units attached to them (in the Nduv). This was a very good thing, because the explicit unit requires no guessing on the part of the user. Also, t1(qubit) and t2(qubit) have been exposed on the BackendProperties as methods, and they do return their values in units of s.
Ideally, on the long term, we can also migrate the providers to pass terra values in units of s, Hz, and all the basic SI units. This will remove any ambiguity, but I believe it would require a synced update between providers and terra. I think @mtreinish has started looking into a way to de-couple core terra code from the serialization of objects between providers and terra -- this might not remove the need for the sync, but it could potentially ameliorate it.
On the Aer side, maybe @chriseclectic can tell us if there will be an issue?
I'll see if I can make a PR to qiskit-ibmq-provider regarding the warnings (edit: this seems to be the wrong place, but I'm looking into it. edit2: I was very wrong, it is in terra/jupyter stuff)
