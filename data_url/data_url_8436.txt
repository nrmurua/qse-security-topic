I have such error whenever my the ratio between j or h for my hamiltonian and the total duration time(now in the following code is 0.1) is a certain number and above, mesolve produces this error. However, I need this ratio to be a certain number and above which produces the error. What do you recommend that I do? Thank you so much!
Here is the code:
j = 1000
h = 100000
\begin{equation}
H=  j \sum_{\langle ij\rangle} \sigma_i^x\sigma_j^x +h \sum_i \sigma_i^z
\end{equation}
psi0=tensor(basis(2, 0),basis(2, 0),basis(2, 0),basis(2, 0),basis(2, 0),basis(2, 0))
times = np.linspace(0.0, 0.1, 100)
result3 = mesolve(H, psi0, times, [], [])
print fidelity(result3.states[99],psi0)
Exception                                 Traceback (most recent call last)
 in ()
8 times = np.linspace(0.0, 0.1, 100)
9
---> 10 result3 = mesolve(H, psi0, times, [], [])
11
12 print fidelity(result3.states[99],psi0)
/Users/anaconda/lib/python2.7/site-packages/qutip/mesolve.pyc in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode)
341         else:
342             res = _sesolve_const(H, rho0, tlist,
--> 343                                  e_ops, args, options, progress_bar)
344
345     if e_ops_dict:
/Users/anaconda/lib/python2.7/site-packages/qutip/sesolve.pyc in _sesolve_const(H, psi0, tlist, e_ops, args, opt, progress_bar)
325     #
326     return _generic_ode_solve(r, psi0, tlist, e_ops, opt,
--> 327                               progress_bar, dims=psi0.dims)
328
329
/Users/anaconda/lib/python2.7/site-packages/qutip/sesolve.pyc in _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, dims)
689
690         if not r.successful():
--> 691             raise Exception("ODE integration error: Try to increase "
692                             "the allowed number of substeps by increasing "
693                             "the nsteps parameter in the Options class.")
Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.
Pass options=Options(nsteps=x) where x is some integer greater than 1000 (the default)
I have a similar issue, but raising nsteps on options don't solve it. I tried to raise it until I got the error "OverflowError: Python int too large to convert to C long", which seems to happen for big numbers.
@andriusdc Could you open a new issue containing a minimal example showing your issue and then perhaps we will be able to help debug it and/or QuTiP?
@hodgestar  Sure ! I just did it, here is the link #1605. Thank you for the help. And please, tell me if I missed some information on the issue decription
