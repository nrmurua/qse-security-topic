Note from the user for more context on the error:
"I’ve run into issues when using the Jupyter Notebook guide to try running our QML application. I followed the guide presented here: https://www.rigetti.com/qcs/docs/guides#setting-up-a-jupyter-notebook-on-your-qmi, and was successfully able to connect to the notebook locally, though I was running in Linux and had to include a -i flag pointing to the ssh key.
When I first ran it using “get_qc” to try and access either a QMI-based QPU or QVM, I got a TypeError (traceback in attachment error_one.py), which I believe was because I needed to update my local pyquil config to point at the QVM. I used the configuration values from the .qcs_config to set FOREST_SERVER_URL, QPU_URL, QVM_URL etc. locally, and was able to get command like “list_quantum_computers()” working as expected, but when I try to connect to the QPU (inside a scheduled window), another error occurs (traceback in attachment error_two.py).
I’ve dug into the bug, and what I believe was happening was that the when I initialized the Jupyter notebook outside of the QPU access window, it was creating the PyquilConfig with the current environment variables, and when the access window opened up and the QPU_URL environment variable changed, that wasn’t updated in the PyquilConfig being used by the notebook. Resetting and rerunning the kernel fixed the issue.
There are some other oddities I’ve encountered while debugging this - for example, “pyquil.api.list_quantum_computers()” doesn’t appear to work with the default config settings.
A possible fix might be to add a check at runtime to see if the config files on the QMI have changed from what is in the PyquilConfig?"
