Currently in the workflow, there needs to be branching if/else statements to handle the different result outputs from the various backends in OptimizeVQA. 'vectorized' producing its results as a probability vector while shot-based backends outputing their results in counts. The results populate different entries in the results_dictionary depending on the backend used.
We should find a more unified way to combine these 2 together. Since in the current version. workflows post-processes the results as well.
Having the results from the Logger Class go directly into a Results Object that post-processes the results one more time should make the code look cleaner.
For QAOABackends, either counts or probability attribute is filled depending on the backend used. To merge both attributes into one and update Logger Class accordingly.
