Is your feature request related to a use case or problem? Please describe.
Are we "allowed" to cache the _value_equality_values? If so, is there a standard way to do this?
I'm in particular looking at PhasedXZGate: 
Describe the solution you'd like
I suppose decorating with @_compat.cached_method would be the easiest thing.
[optional] Describe alternatives/workarounds you've considered
[optional] Additional context (e.g. screenshots)
What is the urgency from your perspective for this issue? Is it blocking important work?
P1 - I need this no later than the next release (end of quarter)
Yes, caching this method should be fine if the underlying is meant to be immutable, as is certainly the case for gates like PhasedXZGate. Decorating the method with @cached_method is the way to do this, as you note (we introduced the cached_method decorator for precisely this reason).
I will say that to fully take advantage of the performance benefit of caching, you'll want to reuse instances of PhasedXZGate, which might require some restructuring of the code that is using PhasedXZGate.
From cirq sync:  We should actually just modify the @value.value_equality decorator implementation to
