Hi there,
I'm trying to run ProjectQ on ARM devices and since the LLVM / GCC is well supported. How do i check if the jobs are not running on Python Simulator?
Thank you very mcuh !!!
The Python simulator always print a message upon construction (Note: This is the (slow) Python simulator.).
If that message does not appear when creating a new Simulator  object, you're using the C++ simulator.
hi, i found that pybind11 is not really working and pip install not compiling .so
But python3 setup.py build install works.
Could you provide here the full installation log with the error when running the installation command using Pip?
Something like python3 -m pip install -v projectq.
Also, what OS, OS version, Python and Pip versions are you using?
Further output that could be helpful:
MacOS Big sur
git clone
python3 -m pip install --user .  #No error messages but .so not generated
python3 setup.py install #.so generated with ERROR

AWS gravtion ARM machine
git clone
python3 -m pip install --user .  #No error messages but .so not generated
python3 setup.py install #.so generated without ERROR

But run sample code below cannot mutli-thread

thank you so much
Thanks for the information.
One potential issue regarding the multi-threading is that the Apple Clang compiler does not actually support OpenMP (the last time I looked, haven't checked lately), so you might want to install the  llvm package using HomeBrew (for e.g.) and then install ProjectQ like so:
EDIT:
Also, the installer will never actually fail, if for some reason the compilation fails, an error message is printed to the console (but hidden from you if you do not add the -v verbose flag to pip install)
Also, regarding your second point about multi-threading, only the C++ simulator is actually capable of using OpenMP enabled code. So all of these:
Will not run in parallel, since no C++ simulator is instantiated.
Also, regarding your second point about multi-threading, only the C++ simulator is actually capable of using OpenMP enabled code. So all of these:
Will not run in parallel, since no C++ simulator is instantiated.
So how can I run the C++ Simulator ?
Also, regarding your second point about multi-threading, only the C++ simulator is actually capable of using OpenMP enabled code. So all of these:
Will not run in parallel, since no C++ simulator is instantiated.
So how can I run the C++ Simulator ?
Worked with demo Shor algo, Thank you so much !
