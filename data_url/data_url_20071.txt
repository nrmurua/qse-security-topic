I have noticed that appveyor.yml and src/kem/sike/external/P751/AMD64/fp_x64_asm.S have CR+LF (\r\n) line endings. While this is a very minute issue, some of tools employed in Debian packaging have minor problems with it (I should probably find a way to deal with them too). But if there is no difference, maybe the same newline convention could be used throughout the project? If this could not be done for appveyor.yml due to usage in Windows, maybe then line endings could be unified throughout all *asm.S files?
FWIW, my vote would go to (standardize on) LF only. But I'm a diehard UNIX guy... :-) @christianpaquin : Do you feel strongly (or even know of tools that need CRLF)?
No strong feelings; we certainly can enforce LF everywhere. Git clients can transform to CRLF locally if needed.
maybe the same newline convention could be used throughout the project?
liboqs has an existing astyle check that already enforces linux-style line endings . Until now this is only done on code controlled by liboqs, not external code, though (with the exception of appveyor*, which is an easy fix).
Before amending the existing astyle check, question to @merkys: Is the addition of the two files mentioned above to the astyle check sufficient or would you rather prefer (need?) liboqs enforces this on all source code (or maybe only on "*.S" files)?
Question to @dstebila @christianpaquin : Can you remember the reason for excluding "external" code from astyle "enforcement"? After simply running find appveyor* src tests -name '*.[chS]' | xargs astyle --options=.astylerc everything keeps building and testing just fine -- after changing 2440 files to bring them "in line", though...
Edit/Add: Running a less drastic find appveyor.* src tests -name '*.[Sch]' | xargs sed -i 's/\r//' indeed only highlights the file(s) above: PR #1133 . Will keep permitting possible future "visual" inspection of copy_from_upstream results.
maybe the same newline convention could be used throughout the project?
liboqs has an existing astyle check that already enforces linux-style line endings . Until now this is only done on code controlled by liboqs, not external code, though (with the exception of appveyor*, which is an easy fix).
Before amending the existing astyle check, question to @merkys: Is the addition of the two files mentioned above to the astyle check sufficient or would you rather prefer (need?) liboqs enforces this on all source code (or maybe only on "*.S" files)?
Question to @dstebila @christianpaquin : Can you remember the reason for excluding "external" code from astyle "enforcement"? After simply running find appveyor* src tests -name '*.[chS]' | xargs astyle --options=.astylerc everything keeps building and testing just fine -- after changing 2440 files to bring them "in line", though...
Edit/Add: Running a less drastic find appveyor.* src tests -name '*.[Sch]' | xargs sed -i 's/\r//' indeed only highlights the file(s) above: PR #1133 . Will keep permitting possible future "visual" inspection of copy_from_upstream results.
Running astyle on all external code seemed to be too disruptive.  But I agree that running a check for line endings is a good idea.
Thanks for unifying the line endings!
Before amending the existing astyle check, question to @merkys: Is the addition of the two files mentioned above to the astyle check sufficient or would you rather prefer (need?) liboqs enforces this on all source code (or maybe only on "*.S" files)?
@baentsch: I would prefer all the files required to build liboqs on Linux-type systems to have LF line endings. I am OK with Windows-specific files having CR+LF, though.
I would prefer all the files required to build liboqs on Linux-type systems to have LF line endings.
Thanks for the clear statement. We currently have this state but I'll add another PR to protect against regression to this state.
