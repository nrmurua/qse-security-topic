Hi,
I am trying to run the following command:
./staq -S -O2 -f resources -m --device square -l bestfit -M steiner filename
But I get the error:
`libc++abi.dylib: terminating with uncaught exception of type std::logic_error: No indices left to pivot on, but multiple vectors remain!
Abort trap: 6`
My file is a randomly generated 9 qubit .qasm file:
OPENQASM 2.0; include "qelib1.inc"; qreg q[9]; cx q[4], q[8]; cx q[2], q[5]; cx q[1], q[0]; cx q[1], q[2]; cx q[2], q[7]; cx q[0], q[3]; cx q[2], q[5]; cx q[0], q[7]; cx q[0], q[3]; cx q[7], q[2]; rz(0.5*pi) q[0]; rz(-0.25*pi) q[1]; rz(1.0*pi) q[2]; rz(0.25*pi) q[3]; rz(-1.0*pi) q[4]; rz(-0.5*pi) q[5]; rz(-0.25*pi) q[6]; rz(1.0*pi) q[7]; rz(1.0*pi) q[8];
Hi Arianne,
Thanks for sending this! This is an interesting error, it seems to be caused by a rare confluence of events where Steiner-gray can effectively swap an unpartitioned column with a previously partitioned column. I've pushed a fix that solves it for this case, but I'm leaving this open for the moment in case problems persist.
Thanks for the quick reply and fix!
But unfortunately the issue does persist for other circuits.
Just sending you the first file that where the error occurs. Again, random phase polynomials, so not very pretty ^_^" (Also, I cannot add the file itself for some reason so I had to paste it below)
Attempted to run on aspen:
OPENQASM 2.0; include "qelib1.inc"; qreg q[16]; cx q[5], q[1]; cx q[7], q[1]; cx q[8], q[1]; cx q[2], q[1]; cx q[3], q[1]; cx q[11], q[1]; cx q[6], q[1]; cx q[13], q[1]; rz(0.25*pi) q[1]; cx q[6], q[1]; cx q[13], q[1]; cx q[14], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[3], q[1]; cx q[4], q[1]; cx q[9], q[1]; cx q[11], q[1]; cx q[12], q[1]; cx q[13], q[1]; cx q[14], q[1]; rz(0.25*pi) q[1]; cx q[2], q[1]; cx q[0], q[1]; cx q[4], q[1]; cx q[6], q[1]; cx q[10], q[1]; cx q[11], q[1]; cx q[14], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[6], q[1]; cx q[11], q[1]; cx q[12], q[1]; cx q[3], q[1]; cx q[4], q[1]; rz(0.25*pi) q[1]; cx q[9], q[1]; cx q[10], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[3], q[1]; cx q[4], q[1]; cx q[13], q[1]; cx q[14], q[1]; rz(0.25*pi) q[1]; cx q[0], q[1]; cx q[3], q[1]; cx q[9], q[1]; cx q[11], q[1]; cx q[4], q[1]; cx q[10], q[1]; cx q[12], q[1]; cx q[13], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[4], q[1]; cx q[6], q[1]; cx q[10], q[1]; cx q[12], q[1]; cx q[13], q[1]; cx q[14], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[0], q[1]; cx q[8], q[1]; cx q[2], q[1]; cx q[3], q[1]; cx q[4], q[1]; cx q[6], q[1]; cx q[12], q[1]; cx q[13], q[1]; rz(0.25*pi) q[1]; cx q[2], q[1]; cx q[3], q[1]; cx q[4], q[1]; cx q[6], q[1]; cx q[9], q[1]; cx q[11], q[1]; cx q[12], q[1]; cx q[13], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[7], q[1]; cx q[14], q[1]; cx q[0], q[1]; cx q[4], q[1]; cx q[9], q[1]; cx q[10], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[0], q[1]; cx q[6], q[1]; cx q[13], q[1]; cx q[4], q[1]; cx q[8], q[1]; rz(0.25*pi) q[1]; cx q[4], q[1]; cx q[8], q[1]; cx q[9], q[1]; cx q[10], q[1]; cx q[11], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[5], q[1]; cx q[4], q[1]; cx q[2], q[1]; cx q[6], q[1]; cx q[12], q[1]; cx q[15], q[1]; cx q[0], q[1]; cx q[9], q[1]; cx q[10], q[1]; cx q[11], q[1]; cx q[13], q[1]; rz(0.25*pi) q[1]; cx q[0], q[1]; cx q[8], q[1]; cx q[9], q[1]; cx q[10], q[1]; cx q[11], q[1]; cx q[13], q[1]; cx q[14], q[1]; rz(0.25*pi) q[1]; cx q[6], q[1]; cx q[2], q[1]; cx q[9], q[1]; cx q[10], q[1]; cx q[11], q[1]; cx q[13], q[1]; cx q[14], q[1]; rz(0.25*pi) q[1]; cx q[9], q[1]; cx q[7], q[1]; cx q[0], q[1]; cx q[2], q[1]; cx q[3], q[1]; cx q[11], q[1]; cx q[13], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[11], q[1]; cx q[0], q[1]; cx q[2], q[1]; cx q[3], q[1]; cx q[10], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[3], q[1]; cx q[8], q[1]; cx q[10], q[1]; cx q[12], q[1]; cx q[13], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[2], q[1]; cx q[8], q[1]; cx q[10], q[1]; cx q[13], q[1]; cx q[14], q[1]; rz(0.25*pi) q[1]; cx q[0], q[1]; cx q[2], q[1]; cx q[3], q[1]; cx q[8], q[1]; cx q[10], q[1]; cx q[12], q[1]; cx q[14], q[1]; rz(0.25*pi) q[1]; cx q[0], q[1]; cx q[2], q[1]; cx q[3], q[1]; cx q[7], q[1]; cx q[13], q[1]; cx q[14], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[4], q[1]; cx q[0], q[1]; cx q[10], q[1]; cx q[6], q[1]; cx q[8], q[1]; cx q[9], q[1]; cx q[11], q[1]; cx q[12], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[12], q[1]; cx q[6], q[1]; cx q[13], q[1]; cx q[14], q[1]; cx q[2], q[1]; cx q[7], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[2], q[1]; cx q[7], q[1]; cx q[8], q[1]; cx q[9], q[1]; cx q[11], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[6], q[1]; cx q[3], q[1]; cx q[2], q[1]; cx q[8], q[1]; cx q[15], q[1]; cx q[7], q[1]; rz(0.25*pi) q[1]; cx q[7], q[1]; cx q[9], q[1]; cx q[11], q[1]; cx q[13], q[1]; cx q[14], q[1]; rz(0.25*pi) q[1]; cx q[2], q[1]; cx q[8], q[1]; cx q[13], q[1]; cx q[14], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[3], q[1]; cx q[8], q[1]; cx q[9], q[1]; cx q[11], q[1]; cx q[13], q[1]; cx q[14], q[1]; rz(0.25*pi) q[1]; cx q[8], q[1]; cx q[10], q[1]; cx q[12], q[1]; cx q[14], q[1]; cx q[2], q[1]; cx q[7], q[1]; cx q[3], q[1]; cx q[6], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[3], q[1]; cx q[6], q[1]; cx q[9], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[2], q[1]; cx q[3], q[1]; cx q[6], q[1]; cx q[7], q[1]; cx q[9], q[1]; cx q[13], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[0], q[1]; cx q[2], q[1]; cx q[3], q[1]; cx q[6], q[1]; cx q[7], q[1]; cx q[9], q[1]; cx q[12], q[1]; cx q[13], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[2], q[1]; cx q[12], q[1]; cx q[3], q[1]; cx q[6], q[1]; cx q[7], q[1]; cx q[8], q[1]; cx q[11], q[1]; cx q[13], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[8], q[1]; cx q[6], q[1]; cx q[9], q[1]; cx q[7], q[1]; cx q[10], q[1]; cx q[11], q[1]; cx q[14], q[1]; rz(0.25*pi) q[1]; cx q[7], q[1]; cx q[10], q[1]; cx q[11], q[1]; cx q[14], q[1]; cx q[15], q[1]; rz(0.25*pi) q[1]; cx q[6], q[1]; cx q[7], q[1]; cx q[9], q[1]; cx q[11], q[1]; cx q[13], q[1]; cx q[14], q[1]; rz(0.25*pi) q[1]; cx q[3], q[1]; cx q[7], q[1]; cx q[8], q[1]; cx q[10], q[1]; cx q[11], q[1]; cx q[13], q[1]; rz(0.25*pi) q[1]; cx q[5], q[6]; cx q[0], q[6]; cx q[2], q[6]; cx q[7], q[6]; cx q[3], q[6]; cx q[9], q[6]; cx q[10], q[6]; cx q[11], q[6]; cx q[13], q[6]; cx q[15], q[6]; rz(0.25*pi) q[6]; cx q[3], q[6]; cx q[4], q[6]; cx q[8], q[6]; cx q[9], q[6]; cx q[10], q[6]; cx q[11], q[6]; cx q[13], q[6]; cx q[14], q[6]; cx q[15], q[6]; rz(0.25*pi) q[6]; cx q[2], q[6]; cx q[0], q[6]; cx q[3], q[6]; cx q[8], q[6]; cx q[10], q[6]; cx q[13], q[6]; rz(0.25*pi) q[6]; cx q[8], q[6]; cx q[0], q[6]; cx q[3], q[6]; cx q[7], q[6]; cx q[9], q[6]; cx q[12], q[6]; cx q[4], q[6]; cx q[10], q[6]; cx q[15], q[6]; rz(0.25*pi) q[6]; cx q[4], q[6]; cx q[10], q[6]; cx q[11], q[6]; cx q[15], q[6]; rz(0.25*pi) q[6]; cx q[0], q[6]; cx q[9], q[6]; cx q[7], q[6]; cx q[3], q[6]; rz(0.25*pi) q[6]; cx q[3], q[6]; cx q[12], q[6]; cx q[13], q[6]; cx q[15], q[6]; cx q[4], q[6]; rz(0.25*pi) q[6]; cx q[4], q[6]; cx q[14], q[6]; rz(0.25*pi) q[6]; cx q[3], q[6]; cx q[4], q[6]; cx q[7], q[6]; cx q[10], q[6]; cx q[11], q[6]; rz(0.25*pi) q[6]; cx q[9], q[6]; cx q[10], q[6]; cx q[11], q[6]; cx q[14], q[6]; cx q[15], q[6]; rz(0.25*pi) q[6]; cx q[5], q[6]; cx q[0], q[6]; cx q[2], q[6]; cx q[3], q[6]; cx q[4], q[6]; cx q[11], q[6]; cx q[14], q[6]; cx q[7], q[6]; cx q[8], q[6]; cx q[9], q[6]; cx q[13], q[6]; rz(0.25*pi) q[6]; cx q[7], q[6]; cx q[8], q[6]; cx q[9], q[6]; cx q[10], q[6]; cx q[12], q[6]; cx q[13], q[6]; cx q[15], q[6]; rz(0.25*pi) q[6]; cx q[4], q[6]; cx q[7], q[6]; cx q[8], q[6]; cx q[9], q[6]; cx q[12], q[6]; cx q[13], q[6]; rz(0.25*pi) q[6]; cx q[9], q[6]; cx q[3], q[6]; cx q[12], q[6]; cx q[7], q[6]; cx q[8], q[6]; cx q[13], q[6]; cx q[15], q[6]; rz(0.25*pi) q[6]; cx q[8], q[6]; cx q[10], q[6]; cx q[11], q[6]; cx q[13], q[6]; cx q[14], q[6]; cx q[15], q[6]; rz(0.25*pi) q[6]; cx q[7], q[6]; cx q[8], q[6]; cx q[10], q[6]; cx q[15], q[6]; rz(0.25*pi) q[6]; cx q[3], q[6]; cx q[7], q[6]; cx q[8], q[6]; cx q[10], q[6]; cx q[12], q[6]; cx q[13], q[6]; rz(0.25*pi) q[6]; cx q[2], q[6]; cx q[4], q[6]; cx q[12], q[6]; cx q[14], q[6]; cx q[3], q[6]; cx q[10], q[6]; cx q[13], q[6]; cx q[7], q[6]; rz(0.25*pi) q[6]; cx q[7], q[6]; cx q[15], q[6]; rz(0.25*pi) q[6]; cx q[3], q[6]; cx q[7], q[6]; cx q[8], q[6]; cx q[9], q[6]; cx q[10], q[6]; cx q[13], q[6]; rz(0.25*pi) q[6]; cx q[0], q[6]; cx q[2], q[6]; cx q[4], q[6]; cx q[8], q[6]; cx q[10], q[6]; cx q[13], q[6]; cx q[14], q[6]; cx q[15], q[6]; rz(0.25*pi) q[6]; cx q[4], q[6]; cx q[3], q[6]; cx q[11], q[6]; cx q[2], q[6]; cx q[13], q[6]; rz(0.25*pi) q[6]; cx q[7], q[6]; cx q[8], q[6]; cx q[9], q[6]; cx q[10], q[6]; cx q[12], q[6]; cx q[15], q[6]; rz(0.25*pi) q[6]; cx q[2], q[6]; cx q[9], q[6]; cx q[10], q[6]; cx q[13], q[6]; rz(0.25*pi) q[6]; cx q[3], q[6]; cx q[7], q[6]; cx q[8], q[6]; cx q[11], q[6]; cx q[12], q[6]; cx q[13], q[6]; cx q[14], q[6]; rz(0.25*pi) q[6]; cx q[8], q[0]; cx q[10], q[0]; cx q[2], q[0]; cx q[3], q[0]; cx q[4], q[0]; cx q[5], q[0]; cx q[7], q[0]; cx q[12], q[0]; cx q[13], q[0]; cx q[14], q[0]; cx q[15], q[0]; rz(0.25*pi) q[0]; cx q[3], q[0]; cx q[4], q[0]; cx q[7], q[0]; cx q[11], q[0]; cx q[13], q[0]; cx q[15], q[0]; rz(0.25*pi) q[0]; cx q[7], q[0]; cx q[5], q[0]; cx q[12], q[0]; rz(0.25*pi) q[0]; cx q[13], q[0]; cx q[14], q[0]; cx q[15], q[0]; rz(0.25*pi) q[0]; cx q[5], q[0]; cx q[11], q[0]; cx q[12], q[0]; cx q[13], q[0]; cx q[15], q[0]; rz(0.25*pi) q[0]; cx q[2], q[0]; cx q[3], q[0]; cx q[5], q[0]; cx q[7], q[0]; cx q[9], q[0]; cx q[13], q[0]; cx q[4], q[0]; cx q[15], q[0]; rz(0.25*pi) q[0]; cx q[4], q[0]; cx q[12], q[0]; cx q[15], q[0]; rz(0.25*pi) q[0]; cx q[10], q[0]; cx q[15], q[0]; cx q[2], q[0]; cx q[13], q[0]; cx q[14], q[0]; rz(0.25*pi) q[0]; cx q[2], q[0]; cx q[3], q[0]; cx q[4], q[0]; cx q[7], q[0]; cx q[11], q[0]; cx q[13], q[0]; cx q[14], q[0]; rz(0.25*pi) q[0]; cx q[8], q[0]; cx q[11], q[0]; cx q[2], q[0]; cx q[4], q[0]; cx q[5], q[0]; cx q[7], q[0]; cx q[14], q[0]; rz(0.25*pi) q[0]; cx q[7], q[0]; cx q[9], q[0]; cx q[10], q[0]; cx q[12], q[0]; cx q[14], q[0]; rz(0.25*pi) q[0]; cx q[2], q[0]; cx q[3], q[0]; cx q[4], q[0]; cx q[5], q[0]; cx q[7], q[0]; cx q[9], q[0]; cx q[10], q[0]; cx q[15], q[0]; rz(0.25*pi) q[0]; cx q[13], q[11]; cx q[9], q[11]; cx q[14], q[11]; cx q[2], q[11]; cx q[3], q[11]; cx q[4], q[11]; cx q[5], q[11]; cx q[7], q[11]; cx q[8], q[11]; rz(0.25*pi) q[11]; cx q[7], q[11]; cx q[8], q[11]; cx q[10], q[11]; cx q[12], q[11]; rz(0.25*pi) q[11]; cx q[3], q[11]; cx q[4], q[11]; cx q[5], q[11]; cx q[8], q[11]; cx q[12], q[11]; rz(0.25*pi) q[11]; cx q[2], q[11]; cx q[4], q[11]; cx q[5], q[11]; cx q[7], q[11]; cx q[10], q[11]; cx q[15], q[11]; rz(0.25*pi) q[11]; cx q[9], q[11]; cx q[4], q[11]; cx q[2], q[11]; cx q[5], q[11]; cx q[8], q[11]; cx q[14], q[11]; rz(0.25*pi) q[11]; cx q[7], q[11]; cx q[10], q[11]; cx q[12], q[11]; cx q[15], q[11]; rz(0.25*pi) q[11]; cx q[2], q[11]; cx q[3], q[11]; cx q[8], q[11]; rz(0.25*pi) q[11]; cx q[5], q[11]; cx q[7], q[11]; cx q[12], q[11]; cx q[14], q[11]; cx q[15], q[11]; rz(0.25*pi) q[11]; cx q[5], q[11]; cx q[7], q[11]; cx q[12], q[11]; rz(0.25*pi) q[11]; cx q[5], q[11]; cx q[7], q[11]; cx q[8], q[11]; cx q[15], q[11]; rz(0.25*pi) q[11]; cx q[3], q[11]; cx q[5], q[11]; cx q[7], q[11]; cx q[8], q[11]; cx q[10], q[11]; cx q[14], q[11]; cx q[15], q[11]; rz(0.25*pi) q[11]; cx q[2], q[11]; cx q[4], q[11]; cx q[8], q[11]; cx q[12], q[11]; cx q[14], q[11]; cx q[15], q[11]; cx q[3], q[11]; cx q[5], q[11]; rz(0.25*pi) q[11]; cx q[7], q[11]; cx q[10], q[11]; rz(0.25*pi) q[11]; cx q[3], q[11]; cx q[5], q[11]; cx q[7], q[11]; rz(0.25*pi) q[11]; cx q[2], q[11]; cx q[5], q[11]; cx q[13], q[11]; cx q[3], q[11]; cx q[4], q[11]; cx q[7], q[11]; cx q[8], q[11]; rz(0.25*pi) q[11]; cx q[3], q[11]; cx q[4], q[11]; cx q[7], q[11]; cx q[8], q[11]; cx q[9], q[11]; cx q[10], q[11]; rz(0.25*pi) q[11]; cx q[4], q[3]; cx q[5], q[3]; cx q[7], q[3]; cx q[9], q[3]; cx q[10], q[3]; cx q[15], q[3]; rz(0.25*pi) q[3]; cx q[9], q[3]; cx q[2], q[3]; rz(0.25*pi) q[3]; cx q[10], q[3]; cx q[12], q[3]; cx q[14], q[3]; cx q[15], q[3]; rz(0.25*pi) q[3]; cx q[2], q[3]; rz(0.25*pi) q[3]; cx q[2], q[3]; cx q[7], q[3]; cx q[8], q[3]; cx q[9], q[3]; cx q[12], q[3]; cx q[15], q[3]; rz(0.25*pi) q[3]; cx q[4], q[3]; cx q[5], q[3]; cx q[7], q[3]; cx q[8], q[3]; cx q[9], q[3]; cx q[12], q[3]; cx q[14], q[3]; rz(0.25*pi) q[3]; cx q[5], q[2]; cx q[9], q[2]; cx q[15], q[2]; rz(0.25*pi) q[2]; cx q[7], q[4]; cx q[8], q[4]; cx q[9], q[4]; cx q[10], q[4]; cx q[14], q[4]; cx q[15], q[4]; rz(0.25*pi) q[4]; cx q[2], q[1]; cx q[2], q[0]; cx q[3], q[0]; cx q[4], q[0]; cx q[5], q[2]; cx q[5], q[0]; cx q[7], q[6]; cx q[7], q[4]; cx q[8], q[4]; cx q[8], q[1]; cx q[8], q[0]; cx q[9], q[6]; cx q[9], q[4]; cx q[9], q[1]; cx q[9], q[0]; cx q[10], q[4]; cx q[10], q[0]; cx q[11], q[6]; cx q[11], q[1]; cx q[9], q[2]; cx q[7], q[3]; cx q[12], q[6]; cx q[12], q[3]; cx q[13], q[1]; cx q[13], q[0]; cx q[14], q[6]; cx q[14], q[4]; cx q[14], q[0]; cx q[15], q[6]; cx q[15], q[4]; cx q[15], q[3]; cx q[15], q[1]; cx q[15], q[0]; cx q[15], q[2]; cx q[14], q[11]; cx q[9], q[11]; cx q[5], q[11]; cx q[5], q[6]; cx q[4], q[11]; cx q[2], q[6]; cx q[2], q[3]; cx q[0], q[1];
That's what I was afraid of. Rather than trying to track the situations where this can occur directly, I've added a fallback that resets the process for any problematic partitions. It should work in all cases now.
Thanks for the stress tests! I'll leave this open for the moment just in case, but there shouldn't be any more problems of the same nature.
Thank you!
I cannot confirm that this resolves the issue for this particular circuit yet. I will let you know tomorrow.
It does seem to work for all my phase polynomials with 10 or less terms, but the runtime seems to explode with the number of terms.
There must be some extreme inefficiencies somewhere in your implementation, because my python implementation of the Nash et al. paper is significantly faster (150 ms per circuit as opposed to 8s for staq, for 10 terms in the phase polynomial, and 50 ms per circuit versus 550 ms for 1 term, respectively).
The explosion in runtime is due to the initial layout optimization, which multiples (a minimum of) a quadratic factor in the number of qubits to the runtime. With the layout optimization turned on, the circuit you sent takes a few minutes on my computer, versus under 1s without it. In the case of this circuit it doesn't change the end result, so the performance hit isn't exactly ideal. We'll have to come up with some better general purpose heuristics, but either way I'll add an option to disable layout optimization.
