Currently, when one wants to access the hardware characteristics, a lot of boilerplate code is needed.
As an example, here is the code needed to retrieve all CX error rates:
It becomes even more cumbersome if only one error rate is needed:
The same kind of code is needed for any hardware data (qubit frequency, T1, T2, gate length, gate error rates, measurement error, ...).
Provide a simplified way to access the calibration data. The goal is not to replace the existing API but rather to provide a more user-friendly way to retrieve the most important calibration data and letting experienced users needing more advanced data use the already existing API (backend.properties).
I already implemented such an enhancement on my own, feeling the need to simplify API accesses. The implementation is quite simple and do not require to change a single line of already existing code. It just plugs itself to the existing API and handles the boilerplate calls / filtering to give a simplified API to the user.
The implementation I wrote is available at https://gist.github.com/nelimee/d3e4a006b429ae3e10eb5aa2935a0209.
Here is a code snippet that shows how to implement the previous examples along with other examples:
Seems like it has been solved several months ago in #3131.
