While working on the 3 qubit decomposition, I run into variable size circuits - sometimes there are no operations on one or all of the three original qubits.
As cirq.Circuit does not have a notion of qubits AFAICT - it is implied from the operations - this results in a changing size in the unitary matrix. This variability is inconvenient when I'm trying to assert equivalences in unitaries, e.g. by evaluating dot products - as numpy fails on the mismatching dimensions. I can work around this by inserting artificial IdentityGates on the empty qubits but it would be best if I wouldn't have to do that.
Question: is there a way to tell an empty cirq.Circuit to return - say - the 8x8 identity operator for a 3 qubit composite system without defining a 3-qubit IdentityGate?
Oh, I found it: c.unitary(qubits_that_should_be_present=cirq.LineQubit.range(3)) is an answer...
