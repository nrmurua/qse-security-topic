This issue seeks to settle the naming convention for factory functions that produce gate instances given rotation angles. I found the following factories:
These are clearly inconsistent. Proposals:
I'm uneasy about conventions that lead to names like cirq.rms since this may be interpreted as "root mean square".
To broaden the set of examples, here are some names we may reasonably anticipate in future:
Context: comment
Thoughts?
related #1681
I think method names should follow style conventions, so snake_case.  When I see cirq.Rx I think it is a class and start looking around for the class definition.  Maybe,
5. rx, ry, rz, givens, iswap, ms.
I think the factory methods main benefit is being short-cuts.
I agree about snake_case (hence conventions 2 and 4).
Convention 5 is inconsistent with its use of the r prefix.
I think calling a unitary gate a rotation is kind of redundant.  "Rotation about givens" or "Rotation about Molmer-Sorenson" seems odd to me.
Good point. I'm starting to like 5. One more concern with it though: cirq.iswap and cirq.ISWAP meaning slightly different things is potentially confusing and error-prone.
Thought about it and I think I'm willing to accept cirq.iswap and cirq.ISWAP given that they would actually enter python expressions quite differently: one as a function call like cirq.iswap(np.pi/5) and the other standalone or exponentiated, e.g. cirq.ISWAP**0.5. This use is also consistent with the naming convention which implies the former is a function and the latter is a constant.
Thoughts?
Rx, Ry, Rz, Rgivens, Riswap, Rms
Rms reads like root mean square.
Rgivens and Riswap are sorta logical given the first three, but very weird on their own.
Violates python naming convention.
rx, ry, rz, rgivens, riswap, rms
rms reads like root mean square.
rgivens and riswap are sorta logical given the first three, but very weird on their own.
Semi-violates python naming convention in that there would normally be an underscore after the r.
XRotation, YRotation, ZRotation, GivensRotation, ISwapRotation, MSRotation
The names for X/Y/Z are too long IMO. The most common gates should have short names.
MSRotation seems wrong; like saying HadamardRotation. I get what it means but it's odd.
Violates python naming convention.
x_rotation, y_rotation, z_rotation, givens_rotation, iswap_rotation, ms_rotation
Too long x/y/z.
ms_rotation seems strange.
rx, ry, rz, givens, iswap, ms.
Lacks consistency across them, but honestly I like this one the best by far. Avoiding the rotation word for two qubit operations seems to be a good idea.
The only major problem, I think, is that it will be confusing to have iswap and ISWAP.
Agreed, commented on the iswap vs ISWAP concern above.
In #2526 I have forced keyword parameter passing to differentiate cirq.ISWAP and cirq.iswap. I'm curious what y'all think about this and whether you'd like to see this convention employed consistently for all the six factory functions. Admittedly,
is little longer than cirq.rx(np.pi/2), but I don't find it excessively verbose. I also like explicit units since they make the code more comprehensible to new cirq users.
WDYT?
Oops, didn't actually intend to close this until all changes are in.
Also, FTR: from last meeting the convention we'll follow here is:
Avoiding the rotation word for two qubit operations seems to be a good idea.
What about rzz
In #2526 I have forced keyword parameter passing to differentiate cirq.ISWAP and cirq.iswap
Am I taking crazy pills or did you change it to riswap?
Am I taking crazy pills or did you change it to riswap?
No crazy pills appear to have been ingested. We've decided in the meeting cirq.riswap was better than cirq.iswap so I'd updated my PR. I've also recorded the change of plans in the comment above.
What about rzz
Sure, this is consistent with the convention we've settled on.
ok
