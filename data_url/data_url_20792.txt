Lines

As we compile with -Werror, it breaks our build. This applies to both avx2 and clean versions.
One possible fix is replacing those with something like memcpy(&cc, (p->state.d + 48), 8);
To avoid the strict-aliasing warning we should access the memory with pointers that are declared as part of the unions. So we should change

to
The alignment trick that is causing the warning is common throughout the PQClean codebase. So I think we should start by developing a test that catches all instances of this.
@mouse07410 What version of GCC are you using? And does it issue aliasing warnings in any schemes other than falcon?
What version of GCC are you using?
And does it issue aliasing warnings in any schemes other than falcon?
Alas, I'm using PQClean in the "recommended" way - aka I take the scheme(s) that my project needs, and embed the source directories into it. I'll try Dilithium and NTRU with the project compiler.
So, I haven't tried other schemes - except in pytest -v -n=auto (where everything seems fine, with Clang-10 and GCC-10.2, resulting in 4272 passed, 543 skipped).
I still need to test Dilithium. NTRU is fine everywhere.
HQC showed a problem with GCC-10.2:
@jschanck based on #355 (comment) (i.e., assuming the struct is extended as you suggested), how would you change this code (what should it become):
@jschanck thanks - now the only problematic one seems to be

When I changed it to
the code started to fail test-vectors...
If x has type T * then arithmetic with x has a stride of sizeof T bytes. So you just want
or equivalently
So you just want . . .
<Blushing>
I should be ashamed of myself for asking such questions. Probably been working too hard before the Holidays. ;-)
Thank you - everything works now as it should.
Looking forward to having these changes incorporated in the main repo.
This was originally fixed by #280, but an update reverted these changes. I will have another look.
Should be fixed by #476
