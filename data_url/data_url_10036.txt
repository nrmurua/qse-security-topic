
which will allow scaling by other number-like object in python (like sympy symbols).
Okay, this just bit me.  If the values that make up BQM come from  h,J,offset variables sourced from a sympy based calculations then you call normalize the " if not isinstance(scalar, Number): " on line 851 gets angry.
Traceback (most recent call last):
File "log_28c_qubit.py", line 599, in 
bqm.normalize(settings.bqm_normalize_range)
File "/usr/local/lib/python2.7/dist-packages/dimod/binary_quadratic_model.py", line 955, in normalize
ignore_offset=ignore_offset)
File "/usr/local/lib/python2.7/dist-packages/dimod/binary_quadratic_model.py", line 851, in scale
raise TypeError("expected scalar to be a Number",str(type(scalar)),scalar)
TypeError: ('expected scalar to be a Number', "<class 'sympy.core.numbers.Float'>", 0.00888888)
I can fix it by casting to float before I create the BQM
