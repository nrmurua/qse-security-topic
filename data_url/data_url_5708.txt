According to the Qiskit documentation, a gate error is simulated by a thermal relaxation channel followed by a depolarisation channel, where the parameter of the depolarisation channel is adjusted so that the average gate infidelity corresponds to the gate error from the backend.properties().
However, if the calculated average gate infidelity of the thermal relaxation error is greater than the gate error of the backend.properties().gate_error(gate,qubits), the thermal relaxation error is returned directly to the NoiseModel. This sometimes leads to large deviations (up to 100%) of the simulated gate error rate and occurs in particular when the dephasing time $T_2$ is small (~20 $\mu s$) since the gate error of the thermal relaxation channel is $E_{therm} \approx \frac{1}{6} t/T_1 + \frac{1}{3} t/T_2$ (where $t$ is the gate time and much smaller than $T_{1,2}$).
Recommendation: if the calculated thermal relaxation error is greater than the reported gate error, you should return only a depolarization error to mimic the correct gate error.
The device noise model by default always includes a thermal relaxation error based on backend T1, T2 and gate times, and if the resulting gate error is less than the reported gate error it adds depolarizing noise so that the composed channel has the reported error. That suggests, as you reported, it may return a noise with larger gate error than reported one (measured by RB) in the case of reported gate error < thermal relaxation error, when the backend has a gate error stored lower than coherence limit. We may need to investigate why this case happens so often but I think it's a separate issue.
I also think we have no answer for what is the best approximation of the real noise unless we do process tomography (and measure the process fidelity between the real and the model), which weâ€™ll never do every time when constructing aer noise model. I think the current spec is not so bad that it needs to be changed at this moment.
Thank you very much for your comment. Yes, we don't know the best approximation of the real quantum error. So the first goal should be to mimic the right fidelity for the one- and two-qubit errors. This can easily be achieved by modifying one or two lines of code by setting relax_error = None and relax_fid = 1 if relax_fid > error_param. Otherwise, you have to modify the documentation which is obviously not correct in all cases: The probability of the depolarizing error is then set so that the combined average gate infidelity from the depolarizing error followed by the thermal relaxation is equal to the gate_error value from the backend properties.
And in the same context I think the correction of the calculation of the excited state population is outstanding (#1638 )
I think it would be good to modify the document so to reflect the current specification precisely.
Would you prefer to make the pull-request to update the document yourself? @smiserman
Regarding the bug in the calculation of the excited state population, I'll quickly make a separate PR to fix it so that it should be included in 0.11.2 release.
Hi Itoko, thanks for your suggestion, but I'm not a developer and I don't know where in the extensive documentation (source code, notebooks) this issue is not properly documented. Moreover, I think it is still better to adjust the code at the appropriate place. I'm just trying to contribute with my understanding to improve Qiskit.
I believe it is productive based on discussion with a PR to modify https://github.com/Qiskit/qiskit-aer/blob/main/docs/tutorials/2_device_noise_simulation.ipynb?short_path=aef1293#LL146C1-L146C1.
