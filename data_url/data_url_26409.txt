After the introduction of DLAF the timings of the CMake regtests went up by 3-5x:

It can't be cp_fm_diag_dlaf because it's only called for matrices larger than 1024.
Suspects that come to mind are:
@RMeli what do you think?
@oschuett thanks for pointing this out! I think this might be caused by improper bindings, which I did not take into account (pika-bind is a simple wrapper script that tries to get binding information from MPI or SLURM). Is the test running with a 2 MPI ranks on a single 32 cores AMD EPYC CPU? Is it possible to have a look at the output of one of the tests, to see what pika-bind prints out?
The do_regtest.py parallelizes over TEST_DIRS. In the case of the CMake test it uses  8 worker each running CP2K with 2 MPI ranks and 2 OpenMP threads.
As a workaround I've now hard-coded PIKA_PROCESS_MASK="0x3", which brings the time back down to 10 minutes.
A proper solution, in my opinion, would require DLAF/pika to better integrate with OpenMP. As a start, it should not use more threads that $OMP_NUM_THREADS.
Fixed by #3191.
Thanks Ole. I did miss the parallelism over multiple workers, so my quick test in #3189 did reduce contention but did not remove it completely. Thanks for fixing this in #3191, LGTM.
