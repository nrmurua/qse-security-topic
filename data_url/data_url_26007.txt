We want to get an idea of the qBraid transiler's gate coverage across all of it's different supported packages. The transpiler uses a hub-and-spokes model, centered around cirq. So, for example, when converting a qiskit circuit to Amazon Braket, what you are really doing is converting qiskit to cirq to Amazon Braket. Therefore, are 8 total round of testing needed (to/from cirq x 4 packages):
The structure of each round of tests would be as follows:
For Amazon Braket, for example, I could get the full gate set as follows:
There are also _gate_archive.py files in the transpiler testing sub-folders for cirq, braket, and qiskit which hold incomplete gate sets for a few those packages. Some examples of this type of gate-by-gate circuit conversion testing can be found in test_transpiler.py. There, you will also find a number of examples of helper functions that can be used to check the unitary equivalence of circuits, for example:
Setting strict_gphase=False checks equivalence up-to a global phase, which, for these tests, is all that is required. These benchmarking test-cases should be as new files to the to the qbraid/transpiler/tests directory, and in the associated PR contain a brief summary of results.
Most likely, this issue will be broken into sub-issues for each package.
@ryanhill1 Can I work on the cirq to qiskit (and vice-versa)?
@ryanhill1 I'd also like to work on the others, if Jessica's working on the first 2
@TheGupta2012 @JessicaJohnBritto yep both of you are welcome!
@JessicaJohnBritto On Discord you asked about a good place to get started for cirq to/from qiskit coverage tests. I'll answer here so others can reference as well.
A good starting point for you could be from the test_gate_intersect_qiskit_cirq() test function. It imports gate dictionaries from the cirq gate_archive and qiskit gate_archive, and uses the cirq_gate_test_circuit() and qiskit_gate_test_circuit() helper functions to construct a cirq/qiskit circuit using just one gate at a time. And then attempts to make the conversion.
Each of these gate archive files contains an incomplete list. So you will want to add more supported gates for each to determine a good estimate for how many out of the total cirq gates fail to be converted, and same thing for qiskit.
In the above example, we used a sub-set to test just the gates which are explicitly shared between the two. For benchmarking, we don't want to restrict the gate set in this way. Instead, we want to determine exactly which gates are not supported for conversions each way, and have a programmatic way of doing so i.e. a procedure that can be easily updated and re-run in the future. Let me know if that helps!
Hey there! It was a great experience working on this issue, and I'm glad that I could contribute to the project. Looking forward to taking on more challenges in the future üôè !
