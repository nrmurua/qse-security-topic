The validate_parameter() method of the GaussianSquare pulse will raise an error if you call it after the pulse is created. This happen because the width and the risefall_sigma_ratio are both set.
After looking at the source code, I figured this was an internal function that is called before the pulse if completed. It should be expected that you can't call this function for any given pulse (Drag or Gaussian too for exemple.)
Perhaps raise a different error in this case (the case of having a completed pulse.)
Perhaps two solutions that are both equivalent, one that I don't really know what it represent to change the name of this particular function.
This is mostly a question of how we design interfaces for subclassing.  In this case, it perhaps would have been better to make this internal hook function private, as you mention, but since it's now out there in the wild, it's hard for us to walk that back.  The documentation route you mentioned is a good solution, though - we can just add some text to the docstring of ParametricPulse.validate_parameters (which should largely be inherited by the other classes) to say that it's an internal check for subclasses, and not part of the user-facing API.
