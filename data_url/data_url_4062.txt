buffer implementation between various types of operations.
ETA end of this week (Oct 20)
@imranashraf Answer to your email.
Hi Imran,
To answer your questions on buffers:
Hi Adriaan,
some quick questions regarding the concept of buffers.
mw-mw buffers should be there for two back to back mw operations on the same qubit?
YES
OR
mw-mw buffers should be there for two back to back mw operations even on the different
qubits connected with the same mw generator?
YES, unless possible for gates to be simultaneous
OR
mw-mw buffers should be there for two back to back mw operations irrespective of
the involved qubit or waveform generator.
YES, unless possible for gates to be simultaneous
I have edited your examples to clarify some things.
N.B. 1 : prepz is not a microwave operation. It is a long wait and should be treated as such. Right now it is a microwave operation only because the Dummy type (#50 ) is not supported.
N.B. 2: whenever it is possible to do gates simultaneous they should be. Otherwise the buffers should be added.
N.B. 3: qwg is a specif device containing for awg channels. I think the correct constraint here is "if the same awg channels are used". You probably know this but I want to avoid confusion.
Examples:
this one is easy and yes there should be mw-mw buffer
Not if possible to do simultaneaous
Yes if not possible to do simultaneous
Yes if possible to do simultaneous
There are other combinations with mix-match of flux, readout but probably getting an answer
to these cases will also help me answer those questions.
Best,
imran
I hope this answers your questions
@AdriaanRol thanks for the clarification. To summarize/generalize it:
"if there are two sets of operations back to back (which means they cannot be simultaneous due to resource constraints), then there should always be a buffer between these operations depending upon the type of operations."
This raises another question, as there can be different operations in each set, then the inserted buffer should be a maximum of two buffers, right?
Example:
Buffer-buffer delays and instruction latencies for cc-light are now available on cclight_eqasm_compiler branch implemented in 822bab6.
test_ccl_buffers  tests and document various buffer-buffer delay insertions.
test_ccl_latencies tests and documents various +ve/-ve instruction latencies.
All tests passing.
