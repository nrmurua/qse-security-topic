Description of the issue
Since #4870 breaks the assumption that two operations acting on disjoint qubits always commute, circuit.append() should use protocols.commute to find the leftmost moment in which an operation can be inserted.
As part of the work done for CCO, this was implemented by adding a special case of checking whether the current operation is a CCO and if yes, whether the previous moment has a measurement with matching control keys.

This is problematic because it works only in one direction and breaks optimizers which relies on doing operations on the circuit in reverse order.
How to reproduce the issue
Cirq version
0.14.0.dev
Cirq sync: we support the general idea here (ensure append works in both directions), but we need to be careful about using protocols.commute for it. For example, appending X(q1) after CX(q0, q1) should keep the X after the CX, even though the two commute.
