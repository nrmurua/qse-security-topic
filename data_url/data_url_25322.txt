In AsyncBaseExecutor for example, we do the following calls in this order: setup, run, and teardown, which are essentially responsible for setting up the infrastructure, running the task function in that infrastructure and then tearing that infra down respectively.
But we are not taking care of the case where run step might fail - which will mean teardown is never called. This means for any failed task the infra will still be up and running without notifying the user at all. Hence, the proposal is to put the run step in a try and teardown in a finally block so that the teardown always happens if the setup step was successful.
Essentially this might be something that we want happening, in order to prevent unnecessary costs to the user:
The tests for this should make sure the infra is teared down after a failed task. A similar change might also be required for the BaseExecutor to support this for the non-async aware executors.
No response
