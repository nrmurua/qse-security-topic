Description of the issue
Cirq operations apply an underlying effect (gate, circuit etc.) on a given set of qubits. We often assume that the unitary of an operation is the same as it's underlying gate / circuit. However, this assumption breaks for ParallelGateOperations, which apply an underlying single qubit gate (eg: cirq.X) on a N different qubits.
To fix this, we should create a new gate class ParallelGate (or ParallelSingleQubitGate?) which takes an underlying sub_gate and num_qubits on which the sub_gate should be applied in parallel. ParallelGateOperation should then store ParallelGate as the underlying gate. The semantics here would then be similar to ControlledGate and ControlledOperations.
This is part of organizing gate relationships #3242
Cirq version
0.12.0
If we have ParallelGate, can we drop ParallelGateOperation? I would think ParallelGate that specifies the number of copies it contains (which is necessary to know the unitary) can just use a plain Operation when applying it to qubits.
