qiskit versions have issues: 0.25.1, 0.25.4
qiskit.execute(..., parameter_bind=[param_dict])    # #param_dict: a python dictionary
got error message:
...
File "/home/kfq/.local/lib/python3.8/site-packages/qiskit/providers/aer/backends/aerbackend.py", line 156, in run
qobj = assemble(circuits, self)
File "/home/kfq/.local/lib/python3.8/site-packages/qiskit/compiler/assembler.py", line 150, in assemble
bound_experiments, run_config = _expand_parameters(circuits=experiments,
File "/home/kfq/.local/lib/python3.8/site-packages/qiskit/compiler/assembler.py", line 441, in _expand_parameters
raise QiskitError(
qiskit.exceptions.QiskitError: 'Mismatch between run_config.parameter_binds and all circuit parameters. Parameter binds: [] Circuit parameters: [ParameterView([Parameter(theta)])]'
Same expression can be executed with qiskit 0.24.1 without any issue.
I solved this issue by doing:
circuit = circuit.bind_parameters({p: [0, 1, 2]}) # p is a ParameterVector
Then you can execute the circuit.
Looks like this is  AerBackend.run() calls  execute_function.execute(...) without passing **run_options, which becomes a problem when assembles._expand_parameters gets called.
AerBackend is set up to add the run options after the circuit is assembled, so adding these to execute should fix it.
Same problem here. What should I do to run it without error after all?  Does anyone know?
@m-i-w 's description of the problem is spot on (there is an open issue and WIP PR in Aer to resolve this, slated for the next Aer release: Qiskit/qiskit-aer#1249 ). Until then, @Faridelnik 's workaround should allow you to run without error.
This should be resolved by Qiskit/qiskit-aer#1317 in the next Aer release.
