Found this while running density matrix simulations in a loop passing in the same python object as initial state each time. Fails input density matrix validity check on the second iteration. not sure if bug or hack for higher performance. I remember pointing out something similar in the wavefunction simulator to @dabacon  late last year and I think it was deemed a bug. Thoughts in this case?
Yeah I think initial states should be decoupled from the state used in the simulation.  There is a similar problem in that the state is reused in the moment by moment iterator: #3100
@trevormccrt can you give an example of this failing?  Is it the initial state that is being mutated?
Yes. What i did to produce this error was very simple. start with an initial state density matrix of type np.complex64. Then in a for loop run various circuits starting from the same initial state. I found that on the second iteration the initial state object had been mutated. This would lead to a "density matrix is not hermetian" error at the start of the second iteration during input checking. Basically just the following snippet in a loop for various values of circuit:
 actual_final = cirq.DensityMatrixSimulator().simulate( circuit, initial_state=qubit_rho_zero, qubit_order=qubits).final_density_matrix
Wrapping qubit_rho_zero in np.copy solved the issue for me.
