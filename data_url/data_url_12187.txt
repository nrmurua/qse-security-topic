I want to program my own variation quantum eigensolver for my own practice.
The Hamiltonian considering is a two level system, so Pauli-z gate.
The ansatz state is rotated by the ry gate.
The problem is, the program works fine, if I use the defined function once, which returns the measurement result for a certain parameter angle. For example, if I set the angle to pi, it returns -1.0 as expected.
But, it fails, if I use this function iteratively, for example, by making use of for-loop.
In this case, the measurement result converges to 0, but not to -1.
What I think is, the classical register does not initialize the measurement result, if I use it repeatedly.
How can I fix it?
Thank you very much in advance!
This is my code:
@OChiB do you mind reformat your script? you can use "```python ```" to wrapper your script.
I guess that there is something wrong in the calculation of your expection, it should be c1 - c0.
On the other hand, Aqua provides APIs to build VQE. Here is the equvelent script as yours.
and I do get the result is -1.
@chunfuchen Thank you for your reply!
Regarding to the expectation calculation. It shouldn't be wrong, since this expectation value return -1 for the angle pi.
And I think this is not the main issue, since the essential problem lies on the iterative algorithm, not in the calculation of the expectation value itself (since otherwise the expectation value should give 1 or -1, but not 0).
I tried to run your code, but I get
TypeError: '>=' not supported between instances of 'QuantumRegister' and 'int'
I have updated the qiskit, qiskit-aqua, and qiskit-chemistry, but this also doesn't work.
@OChiB  I am using qiskit 0.7.2, do you mind upgrading your qiskit to the newest version?
here is my env
@OChiB I found a bug in your code, you should move the declaration of QuantumCircuit into your def expec(theta) function otherwise, the qc is a reference, which means you keep appending the ry gate.
After I move the declaration of QuantumCircuit into your def expec(theta) function, it converges to -1
@chunfuchen Oh thank you very much !! I could fix it!!
