Hi all,
I'm trying to run a basic example in the openfermion-forest integration and I keep bumping into the error
File "ProjectQ-test.py", line 51, in <module> molecule.load() File "/home/jasonkang/python_install_packages/OpenFermion/src/openfermion/hamiltonians/_molecular_data.py", line 647, in lo ad with h5py.File("{}.hdf5".format(self.filename), "r") as f: File "/home/jasonkang/anaconda3/lib/python3.7/site-packages/h5py/_hl/files.py", line 312, in __init__ fid = make_fid(name, mode, userblock_size, fapl, swmr=swmr) File "/home/jasonkang/anaconda3/lib/python3.7/site-packages/h5py/_hl/files.py", line 142, in make_fid fid = h5f.open(name, flags, fapl=fapl) File "h5py/_objects.pyx", line 54, in h5py._objects.with_phil.wrapper File "h5py/_objects.pyx", line 55, in h5py._objects.with_phil.wrapper File "h5py/h5f.pyx", line 78, in h5py.h5f.open OSError: Unable to open file (unable to open file: name = '/home/jasonkang/python_install_packages/OpenFermion/src/openfermio n/data/H3_sto-3g_doublet_h3.hdf5', errno = 2, error message = 'No such file or directory', flags = 0, o_flags = 0)
How exactly does initializing a molecule in OpenFermion work? When I instigate a new molecular class, does it automatically create such an entry in the data folder of my OpenFermion install? Or do I have to already have that data in order to work with the MolecularData class.
Thank you!
OpenFermion comes with a few data examples pre-loaded but mostly for testing purposes (see https://github.com/quantumlib/OpenFermion/tree/master/src/openfermion/data). The molecule you specify is not one that comes preloaded. There are a few more examples you can download from the OpenFermion cloud library (https://github.com/quantumlib/OpenFermion/tree/master/cloud_library) but so far that features has not been very utilized so there are only a couple of data sets.
If you want to compute the Hamiltonians for new molecules we certainly support that. But you need to use one of our electronic structure plugins such as OpenFermion-PySCF (https://github.com/quantumlib/OpenFermion-PySCF) or OpenFermion-Psi4 (https://github.com/quantumlib/OpenFermion-Psi4). See those links for instructions about how to install and use. See examples in those repos for how to compute new molecules. Have fun!
I assume this addresses your questions, so I will close the issue.
