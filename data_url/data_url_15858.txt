The transpiler pass TimeUnitConversion is included in the preset pass managers and will unconditionally copy all Instructions in a circuit, which can become expense for larger circuits, even if not running any subsequent passes which would make use of Instruction.duration.
It would be good to either exit early (without modifying the dag) if InstructionDurations is empty, or skip the pass entirely when it is known the durations are not needed.
I took a look at this briefly on Friday and I'm removing the stable backport potential flag. The big performance issue here is the TimeUnitConversion pass and running on circuits when we're not scheduling. Trying to avoid it by tying the pass's execution to the presence of a set scheduling method breaks some unit tests which are validating the unit of delays in a circuit are adjusted to dt  when that's the unit of the backend. To make this work without a change in behavior we'll have to add an analysis pass that detects whether we have any delays in the circuit and conditionally execute TimeUnitConversion based on that or a set scheduling method. Either way I feel this is a larger change than what we should backport to 0.18.x
