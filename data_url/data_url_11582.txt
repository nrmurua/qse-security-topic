I get the following error when converting a MIP to QUBO:
The InequalityToEquality() converter creates slack variables with same upperbund and lowerbound (both zero). This results in     _encode_var() function crashing at following line as var_range equals zero.
power = int(np.log2(var_range))
This can be reproduced by trying to encode a least or equal constraint with all positive coefficients in LHS and zero in RHS, e.g. x[1] + x[2] <= 0, which can naturally happen in automatically converting large problems. This can be safely encoded as x[1] + x[2] = 0 without slack variables.
The expected behaviour is not to create such slack variables at first place.
This should be fixed at two places.
Thank you for reporting the error. We will add a check of var_range.
