Is your feature request related to a use case or problem? Please describe.
Currently a ClassicallyControlledOperation does not allow hosting of anything that includes a measurement. The primary reason is that we want to know what measurements are in scope. However it's limiting.
Additionally, if/else is just a pretty common construct that we may as well support.
Describe the solution you'd like
We should have an optional "else" branch within CCO, that will be executed if the condition is not met. Then we can expand our validation logic to allow measurements if they appear in both branches.
[optional] Describe alternatives/workarounds you've considered
Another option is to forcibly measure a 0 to any measurement key in the if branch if the condition is not met.
What is the urgency from your perspective for this issue? Is it blocking important work?
P3 - I'm not really blocked by it, it is an idea I'd like to discuss / suggestion based on principle
Cirq sync: We'll probably implement this post 1.0.
The biggest challenge here I believe will be the diagram. I can't think of a way that looks sensible or that would fit easily into our diagramming logic. Everything else is reasonably straightforward: have the CCO constructor ensure the measurement keys are equal for both branches, and update a few CCO functions to handle the else branch as well.
Actually this may not be relevant anymore. Since we allow repeated measurements on the same key, it's plausible a user may want the original measurement in some condition, or a new measurement in some other condition. So perhaps the better solution is just to remove the logic that prevents conditional measurements.
