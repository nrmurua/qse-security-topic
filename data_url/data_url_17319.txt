The transpiler is not behaving correctly with optimization_level=2 for some inputs.
Running the transpiler on the circuit  Cnot - XI -Cnot returns XI when the optimization level is set to 2.
from qiskit.compiler import transpile
from qiskit import (QuantumCircuit, ClassicalRegister, QuantumRegister, execute)
q = QuantumRegister(2, name='qn')
c = ClassicalRegister(2, name='cn')
test = QuantumCircuit(q,c)
test.barrier()
test.cx(q[0],q[1])
test.x(q[0])
test.cx(q[0],q[1])
test.barrier()
print("Initial Circuit")
print(test.draw())
test2 = transpile(test,optimization_level=2)
print("Transpiled Circuit")
print(test2.draw())
Expected behavior is probably to do nothing, which is the case in the circuit Cnot - IZ - Cnot.
It looks like the transpiler is smart enough to reduce the equivalent ZI and IX circuits and somehow is mistaking XI for IX.  Either that or it is not respecting the barriers in this one specific case.
