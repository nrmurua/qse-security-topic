Running test case QS/regtest-xastdp/C2H2-PBE-ri_region.inp
in xas_tdp_atom.F:1457
co(ia, ir, start + ico) = pos(ia, ir, 1)**lxpos(ia, ir, 2)**lypos(ia, ir, 3)**lz &
*EXP(-zet(ipgf, iset)*pos(ia, ir, 4))
I get pos(ia,ir,1)=lx=0 thus computing 0**0
Juerg's modification only fixed a small part of the issue. There are more undefined operations of the type zero**zero at lines 1479, 1507, 1535, 1493, 1531, and 1572.
To detect them, if using the gnu gfortran compiler, I suggest using the -ffpe-trap=invalid,zero,overflow option always for every compilation. Its overhead at run time is negligible.
vzecca.log
For your convenience I am attaching the file vzecca.log with my modifications to xas_tdp_atom.F
The new modifications by Juerg fix all the undefined expressions in this issue.
However, continuing to run the test case, at basis_set_types.F:1933
IF (PRESENT(pgf_radius)) gto_basis_set%pgf_radius(:, :) = pgf_radius(:, :)
the array pgf_radius is (partly) undefined.
To fix this you must initialize (to zero?) the array at aux_basis_set.F:220 after its allocation
ALLOCATE (aux_basis%pgf_radius(maxpgf, nsets))
aux_basis%pgf_radius = 0d0
