On latest master (almost, f2f7170), this
leads to
The problem is that the type is looked up by name in llvm_ir_generator (or earlier stages, although they seem to handle the rest fine), but the two classes share the same __qualname__.
If lookup by name is necessary, the mangled string should probably include the Python object ID to guard against this (or some form of content hash if separate compilation is ever going to be supported).
NAC3 does not support this construct (you cannot type-annotate foo3 and foo4, so it's fairly clear to the user that this is not possible).
Unless it is really important to have this kind of dynamic class definition (which seems pretty tricky to do in the type system - const generics would have similar functionality and is probably a better way), I propose that we close this.
