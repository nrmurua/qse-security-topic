Often I share specific circuits as a text file for benchmarking. Different simulators can just use read the text file.
It should be a simple human readable format.
There's QASM output. Not sure of the status of QASM input.
The CircuitDag class might be useful for implementing more faithful saving and loading.
@sboixo Do you have a preference for the file format?
@maffoo was asking for something similar to this today, so he probably has thoughts.
Personally I am wary of defining a serialized format when the library is still in alpha, because we can expect to break the format. Wrose, because users can define their own gates, this requires us to deal with serializing and deserializing anything and everything (i.e. it is as hard as serializing all of python which is notably hard).
A workaround solution could be to give them python code that creates the circuit (e.g. use the output of repr(circuit)).
Why doesn't QASM suffice?
We can't read in QASM yet, and it doesn't support exactly the same gate set so there's potential loss of information.
@sboixo Do you have a preference for the file format?
what about a protocol buffer? I know this is not a complete solution, but there are advantages to go in this direction
We do have the ability to turn circuits into a protocol buffer, but only for the xmon gates.
How do you turn a circuit into a protocol buffer?
It only works on xmon-compatible gates at the moment. There's various to_proto methods around which you can follow to the source somewhere in cirq.google.
xref #1880
#1880 now provides this.
