I could not reproduce it on
Could you put your code and backtraces in triple backquotes ```, it makes them much easier to read.
It seems you are running on an ARM processor (Apple M1). Could you check if the problem is with a lower level package that QuantumOptics depends on. You can make a new project environment, e.g. in a temporary folder with julia --project=(mktemp -d), add one of the packages that seem to be failing and see whether there is any useful information.
Trying this out on the 1.9 beta could be helpful as well.
Also, are you running this through Rosetta or are you running a native ARM version of julia?
I am running a native ARM version. I tried precompiling LinearSolve in a temporary directory and failed as well. From what they say here SciML/LinearSolve.jl#271 it seems to be a problem of the Julia build. I will try installing Julia with juliaup instead of brew to check if it works.
Did the version from juliaup work ok? If this is a packaging problem with homebrew, I think it would make sense to close this issue. Of course, with enough dev resources we should try to tackle downstream packaging issues, but given the limited workforce we have, it would be best to let the homebrew team figure this one out.
Yes, using the build from juliaup it worked ok! I will now close the issue.
