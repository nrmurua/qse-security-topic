Trying to run an example of the ground state of the Heisenberg hamiltonian for the tutorial
The problem happens at reg |> te |> normalize! line.
KrylovKit.eigsolve applied to mat(hami) would also crash everything.
It looks like a platform related issue because the above code works on my laptop.
My platform is Ubuntu 20.04, Julia 1.5
Could you please check if it is the mat(hami) that crashes the Julia session? (sorry, I don't have a windows OS at my hand)
Hi, thanks for the check. mat(hami) works, it gives elements of the sparse matrix.
Ok. If it is not the problem of matrix construction. It could be the issue of using the following two packages.
If I were you, I will copy and shuffle the indices of the generated sparse matrix by
and then use sp2 to check if the eigsolve and the expv in the two packages are working properly.
This is probably due to memeory leak, it takes time to locate the bug. You can also try removing @inbounds in a "suspicious" function, so that the program will error correctly when memory leckage happens.
Does the time evolution work for you? When you run |> te
I cannot reproduce this either, but I think both me and @GiggleLiu are using Linux/Mac OS, thus, it could be some bug on Windows specific. And is there an error msg? Is it segment fault?
Yes, likely that, since eigensolve(sp, 1, :SR) gives the problem.
It would be nice to construct a minimal example without using Yao what would crash the same way
How can get a random sparse matrix of the same dimension? Should it crash then... (?)
If I were you, I will copy and shuffle the indices of the generated sparse matrix by
Just tried that, still crashes.
I cannot see the error message since the session and the terminal is killed immediately after the crash.
I just caught the crashing screen.

Something with libopenblas64_.DLL...
I think this is likely a bug in Julia and is windows specific, I can reproduce this on v1.5.1 on windows now. I'll see if I can fix it or report it to Julia repo if I can't shortly. Thanks for reporting.
This should be fine on v1.4, if you need to calculate something, please use Julia v1.4 for now. @mmikhasenko
good to know, thanks for the quick investigation.
this should be fixed on 1.7 now
