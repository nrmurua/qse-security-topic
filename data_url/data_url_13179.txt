A quick overview of the recent activities here shows interest in implementing the readout error mitigation technique based on the technique of matrix inversion.
This feature request builds on the readout error technique and is based on the following paper: Link
It goes beyond the simplistic picture that errors in SPAM (state preparation and measurement) are dominant.
(1) It was shown that capturing gate execution errors makes a visible difference in error mitigation.
(2) Using matrix inversion can lead to known problems in such techniques. It is common to minimise an appropriate function that handles the constraint that the frequencies (sometimes also called probabilities) are within the internal [0,1].
These arguments have been presented in the link given above.
The proposed new technique is simple to implement and would not need significant effort if readout error mitigation is already set up and working. It only needs information about what gates are present in the circuit and a way to make two new circuits using inverse gates (see section 3.1 of the paper).
I would be interested to help implement this feature.
Hello @quantumisnotspecial, thank you for your interest in Mitiq!
If this is a bug report, please provide screenshots and/or minimum viable code to reproduce your issue, so we can do our best to help get it fixed. If you have any questions in the meantime, you can also ask us on the Unitary Fund Discord.
Thanks @quantumisnotspecial, interesting!  We'll read and discuss your proposal.
Meanwhile thanks for this feature proposal, and feel free to join our Mitiq calls on Discord.
Action for this milestone (0.24): review feature proposal.
Hi @quantumisnotspecial, we discussed your proposal in our engineering meeting and had a more careful read of the linked paper.
While we think it's an interesting idea from a research point of view, we think that the practical advantage for Mitiq in mixing gate-error and measurement-error mitigation into a unique technique is not strong enough to justify the implementation of a new module.
As a general design rule, we prefer to have a modular structure where different techniques are focused on different scopes and different errors: gate-errors, measurement errors, idle decoherence errors, etc... .
Nonetheless we would like to mention that we find some aspects of the linked paper particularly interesting, especially within the context of noise calibration rather than error mitigation. For example, the trick of cutting the circuit into 2 parts and appending the inverse may be useful for estimating the effect of noise and for calibrating arbitrary error mitigation techniques.
In the past we explored similar ideas in the context of calibration see e.g. last green questions of this calibration RFC
document, but at the moment they are not scheduled for implementation. At the moment we are focusing on benchmark circuits having a known output state and, therefore, circuit inversion tricks are not necessary. But in the future we could go in that direction too.
Based on the above points, I am closing this issue but feel free to add your comments below.
