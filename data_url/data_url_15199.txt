deleted
There is a recently released SamplingVQE which uses a Sampler instance from the newly introduced primitives . This can do CVaR via its aggregation parameter. Internally it has a _DiagonalEstimator to facilitate this. Though it seems there was bug in this which is being fixed #9221 and also a performance fix #9229. You can take a look at these. There is no standalone expectation as there was with the opflow based CVaRExpectation. Hope that helps.
I will note that opflow and QuantumInstance will shortly be deprecated and subsequently removed. The algorithms here used to be based on these and these algorithms are now PendingDeprecation (will be shortly switched to deprecated at the same time as opflow/QI), having been 'replaced' by primitive versions, such as the SamplingVQE I noted above. It uses a class, which is not exposed as public class but can still be used _DiagonalEstimator which takes a new Sampler primitive, so it can get counts, but behaves like an Estimator in computing the expectation value of an observable - in this case for a diagonal operator. This code is more forward looking. But for the moment you can choose to use either, as you like - you could always compute the CVaR expectation directly yourself from executing circuits.
