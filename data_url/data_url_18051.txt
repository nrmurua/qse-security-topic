We have had many instances of people saying that the output of their circuit, when run on the devices, does not agree with what they think it should be.  Usually, this is because the depth of their circuit is well beyond the noise timescales of the device (usually as a result of decomposing many Toffoli gates or many swap gates inserted) and the output consists of pure noise.
It is possible to get a rough idea as to when this limitation occurs, and warn the user that the output is likely noise limited.  For example, one could define a rough threshold for such behave as fastest_gate_time * depth > min(T1, T2), where T1 and T2 are averages computed from backend.parameters.
The exact time could be easily computed if #498 is solved.
I am not sure about what represents the gateTime in the backend parameters, but informations on pulses may be required also (?).
The backend needs to validate the depth as part of run(self, qobj).
There is some disagreement on whether this should be done in qiskit, or in the backend.
Advantage of doing it in Qiskit:
Disadvantage:
An option is to have an analysis pass that makes the validation. Does it make sense?
No because the transpiler does not know about a backend, only about the options it is transpiling to (like basis_gates and coupling_map).
Anyway this is the same as #1057
