If you create a DelegateParameter and pass a scale argument, it is not possible to get its cache before it is initialized. The scale gets applied to the None that resides in the source parameter and gives a TypeError.
I expected to get None back, just as you would a plain uninitialized Parameter.
A workaround is to give nan as an initial cache value. This works:
I got a TypeError:
It appears that _from_raw_value_to_raw_value applies the scale on the value even if it's None. A simple solution would be to put a big if value is not None: in the method, but this may not cover all the use cases (e.g. more intricate ways of handling the scale than dividing/multiplying).
Windows 10
qcodes 0.30.1
@haroldmeerwaldt thank you for reporting the issue!
i think your suggestion is good! but let's make the value None check only for offset and the scale, so on line https://github.com/QCoDeS/Qcodes/blob/c66a8af4ac8fa21498849a24734e4e1749952304/qcodes/instrument/parameter.py#L582 and https://github.com/QCoDeS/Qcodes/blob/c66a8af4ac8fa21498849a24734e4e1749952304/qcodes/instrument/parameter.py#L598.
Would you be willing to start a PR? and also add a few tests for this in this file https://github.com/QCoDeS/Qcodes/blob/master/qcodes/tests/parameter/test_parameter_scale_offset.py ?
@astafan8 That sounds like a good plan! Allowing None for the parser and in the inverse_val_mapping dictionary makes sense. I'll start a PR with tests.
