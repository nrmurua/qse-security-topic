when reading source code that is related to some circuits, it is often useful to be able to see the circuit.
examples are transpiler tests (which claim two pre-/post-transpile circuits are equivalent), and circuit equivalence libraries.
Examples of files that have this already:
https://github.com/Qiskit/qiskit-terra/blob/main/test/python/transpiler/test_dynamical_decoupling.py
https://github.com/Qiskit/qiskit-terra/blob/main/test/python/transpiler/test_instruction_alignments.py
Examples of files that do not but could benefit:
https://github.com/Qiskit/qiskit-terra/blob/main/qiskit/circuit/library/standard_gates/equivalence_library.py
https://github.com/Qiskit/qiskit-terra/blob/main/test/python/transpiler/test_hoare_opt.py
Can you assign me to this task? I am still new to this project. This seems like a great way to browse the source code while doing some useful work!
Assigned to you @yjt98765! Remember to read the Contributing Guidelines, and let us know if you need any help ðŸ˜„
Thank you
Assigned to you @yjt98765! Remember to read the Contributing Guidelines, and let us know if you need any help ðŸ˜„
I found a line is missing below line 652 in qiskit/circuit/library/standard_gates/equivalence_library.py.
But after I add it, the test test.python.circuit.test_gate_definitions.TestGateEquivalenceEqual.test_equivalence_phase reports an exception:
Can you help me fix it? It is not exactly related to this issue. However, if we omit it, several lines of code here would stay here serving no purpose. I did not find notes regarding this missing line in the PR that committed these lines. If this question is difficult to solve, maybe we should open a separate issue for it. Or, we can remove these lines. This equivalence is quite similar to the lines here.
This is kind of a bug in the definition of CUGate.params; it creates an array of parameters when it returns the properties, so when QuantumCircuit.assign_parameters attempts to bind the new parameters, it doesn't actually update the underlying gate.  (This is just one more reason why I really dislike implicit @property getter methods doing actual work.)  It's an unrelated bug, so best just leave the equivalence library as it is for now (that equivalence is correct), and perhaps open a bug report about this.
Simple repoducer:
The second drawing should have bound parameters, but it doesn't because the binding doesn't modify the underlying list of parameters in CUGate, but a new list.
