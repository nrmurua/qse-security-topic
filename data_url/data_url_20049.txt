Hello,
I am building liboqs on Mac.
I successfully installed all dependencies using Homebrew.
I run the following cmake command to generate the build.ninja file (I specify the location of openssl on my machine because it doesn't find it by default):
cmake -GNinja -DOPENSSL_ROOT_DIR=/Users/tylerleblond/homebrew/Cellar/openssl@1.1/1.1.1m .. 
When running ninja, it makes it very close to the end but then crashes at the step "Linking C static library lib/liboqs.a" with the following:
/bin/sh: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ar: Argument list too long
I have looked online at solutions proposed for people who have similar issues using cmake and ninja, and came across the possibility of setting the cmake flag -DCMAKE_C_USE_RESPONSE_FILE_FOR_OBJECTS=1. This did not work.
I had successfully installed an older version of liboqs in the past without running into this error. Would you happen to know what could be going on this time around?
Best,
Tyler
Hello Tyler, thanks for this report. I don't have a Mac to test myself, but maybe the list of algorithms to compile truly became too long. Just to test this assumption, could you maybe build with a few algorithms disabled (e.g., adding this to the cmake build arguments: -DOQS_ENABLE_KEM_CLASSIC_MCELIECE=OFF -DOQS_ENABLE_SIG_SPHINCS=OFF)?
Additionally, for someone in the team with a Mac at hand, could you please state the XCode version you are using? Edit/Add: We are using XCode 13.2.1 in CI testing...
Hello,
When I used those cmake build arguments, I didn't run into any errors.
FYI, my XCode version is Xcode 12.4.
Best,
Tyler
When I used those cmake build arguments, I didn't run into any errors.
Alright, then there is an issue with the length of arguments XCode can take: Those two algorithm families "contribute" the largest number of files to compile.
my XCode version is Xcode 12.4.
Any chance you could upgrade to 13.2.1? Alternatively, can you re-locate your git clone of liboqs to where you have shorter path names (e.g., to /opt/liboqs)? Sounds weird, I know, but seems to be the suggestion made here...
Thanks for your help!
Unfortunately, because of my MacOS version, I am not able to upgrade to XCode 13. Also, I am getting the same error when I move to a location with shorter path names.
Best,
Tyler
Hmm -- could you then please post/attach the output of ninja -v (and gcc -v) to take a look?
Thinking what changed since your previously successful builds -- which seemed to not have triggered this command line limitation: We have added aarch64 optimizations for some algorithms. These may or may not be sensible to retain in your build...
So I see this choice for you:
Option 2 we have already tried above by switching off ClassicMcEliece and Sphincs.
If Option 1 were interesting to you, you could do that with the command cmake -GNinja -DOQS_ENABLE_KEM_kyber_512_aarch64=OFF -DOQS_ENABLE_KEM_kyber_768_aarch64=OFF  -DOQS_ENABLE_KEM_kyber_1024_aarch64=OFF -DOQS_ENABLE_KEM_saber_lightsaber_aarch64=OFF -DOQS_ENABLE_KEM_saber_saber_aarch64=OFF -DOQS_ENABLE_KEM_saber_firesaber_aarch64=OFF -DOQS_ENABLE_SIG_dilithium_2_aarch64=OFF -DOQS_ENABLE_SIG_dilithium_3_aarch64=OFF -DOQS_ENABLE_SIG_dilithium_5_aarch64=OFF ..
If option 1 works for you (?) it might be an idea for us to consider adding a build switch to only put one implementation (baseline or optimized) into liboqs -- also sensible from a general size optimization perspective.
Hello,
Sure. When I run my original command (cmake -GNinja -DOPENSSL_ROOT_DIR=/Users/tylerleblond/homebrew/Cellar/openssl@1.1/1.1.1m ..) and then run ninja -v, I obtain the attached (long) file. I have also attached the output of gcc -v if that is useful.
As for your second suggestion, I think that I should be fine with just disabling Sphincs, as I do not need that algorithm anyway. I found that I can keep McEliece without the build crashing.
Best,
Tyler
gcc_out.txt
ninja_out.txt
Thanks for the logs, but given
I think that I should be fine with just disabling Sphincs, as I do not need that algorithm anyway
would it be OK to close the issue?
Yep! Just thought I'd attach those anyway in case it was useful to you.
Thanks again.
Best,
Tyler
