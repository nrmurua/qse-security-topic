In using any optimization algorithm it is important to have some notion of convergence.  The SPSA algorithm currently does not have any convergence criteria and need not return the best solution.
For example, consider the following plot of iterations from an actual device run:

There is currently no way to understand the convergence in a case such as this because of the "spikes" in the returned energy.  The optimizer may hit one of these spikes at the end of the maximum number of allowed iterations and the optimizer would return this value as the solution.  There is an averaging feature in the algorithm, but if one hits a spike the result returned would not be the best available.
It is important to return a convergence statement to the end user rather than blindly running to the max number of steps so as to have some confidence in the returned solution.  Especially when the answer is not known a priori  To do this one probably must have some notion of when to reject a particular iteration, so as to avoid jumps in the minimized values (both scalar energy and vectorized parameters) as well have a formal criteria for what it means for the optimizer to finish.  This is likely a statistical test, perhaps based on a floating window of values.
Closing as will do myself.
Hi @nonhermitian
I was wondering if there's an update on this. Would help my calculations quite a bit!
Thanks
We have some ideas in this direction. It is of course an heuristic, but is better than nothing. Not sure of the time frame at the moment.
