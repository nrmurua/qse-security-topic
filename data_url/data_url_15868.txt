Suppose I create a unitary of interest--say, a 3 qubit Haar random as follows
For those unaware, this just creates a 8 x 8 unitary matrix wrapped into the qiskit.extensions.unitary.UnitaryGate class, but a 8 x 8 numpy array would work just as well. Such unitaries can be added to a quantum circuit using the .unitary() method as follows
This circuit works just fine for most things, i.e. circ.draw() and doing any useful computations. However, running
throws a TypeError: only length-1 arrays can be converted to Python scalars whose Stacktrace I give in more detail later.
I found a workaround by decomposing the circuit recursively until the circuit is "low enough level to work," i.e.,
does work and gives the following
which involves the unusual multiplexer and MCGupDiag arguments which might be part of the problem?
Summarizing, the following code leads to an error
with a simple work-around being
I expect that circ.qasm() should work regardless of the complexity of circuit if I'm using in-built methods to construct it, i.e. circ.qasm() should be interoperable with circ.unitary().
Perhaps circ.qasm() should run an internal decompose() until it doesn't bug out?
I put this here for clarity but at the end to prevent clutter...

