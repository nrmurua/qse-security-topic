Running import qutip eagerly imports scipy.fft via qutip.correlation, causing all native dependencies of scipy.fft's fftpack-based implementation to load. In particular when using SciPy 1.8.1 on Linux, fftpack requires GLIBCXX_3.4.30 but contains a private copy of GLIBCXX_3.4.29 such that the import fails unless another Python package provides its own implementation of GLIBCXX_3.4.30 (typically, PyZMQ via jupyter-client). This in turn can cause import qutip to fail even when not using features backed by fftpack (e.g.: as happened in the case of microsoft/iqsharp#676).
import qutip should not cause native dependencies of scipy.fft to be imported eagerly.
No response
I'm happy to help mitigate this in QuTiP since importing less during "import qutip" would be a good thing, but not being able to import scipy.fftpack when SciPy has been installed because it vendors the wrong GLIBCXX seems like a fairly serious SciPy bug?
This did just bite me when trying to deploy QuTiP to MyBinder for my QuTiP SciPy tutorial and I can confirm this bug is incredibly annoying.
