Even though qutip 5.0.0 hasn't been released yet, I accidentally found myself on qutip 5.0.0 for some project and therefore it became more convenient to use qutip 5.0.0 with scqubits. In this issue, I'm just sharing two compatibility fixes with qutip 5.0.0 that I found. I think that when qutip 5.0.0 is released, scqubits probably needs to be pinned to qutip<5.0.0, or scqubits can be made compatible with the new qutip such that scqubit requires qutip>=5.0.0.
There are 5 occurrences of the usage of qutip.Qobj(inpt=...) in scqubits, but this argument has been renamed to arg in version 5.0.0 of qutip. Changing to qutip.Qobj(arg=...) resolves all associated errors.  (Btw I think arg and inpt are both terrible names for this argument, I'd rather call it data or something but that's not up to us.)

One of the things that worked fine in previous version of qutip, but doesn't work anymore, is:
Which now raises a ValueError because the dims of the objects are not the same. Hence, the solution is to set the dims argument to the appropriate value when setting Qobj(0), for example: qutip.Qobj(0, dims=[[100], [100]]) + qutip.qeye(100) works fine in qutip 5.0.0. The only place where this is used in scqubits is in the HilbertSpace class. Here, we can use:
to circumvent this problem.
Thanks for reporting this.
I think changing Qobj(inpt=... to Qobj(apt=... would break compatibility with qutip's 4.7.x branch, which we need to keep.
However, removing apt or inpt altogether, I think, is fine, as in both versions these are the the leading constructor arguments.
Do you have any interest in submitting a pull request for this? if so, please do, and we'll incorporate into next release... (if not, that's also fine).
Thanks again for your letting us know about this problem.
