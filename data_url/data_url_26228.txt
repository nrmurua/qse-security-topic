As stated in one of the discussions in #193, figure out what backward compatibility-related issues are resolved by using from __future__ import annotations.
If the lines are removed, the following errors are raised.
Interestingly, if from __future__ import annotations is removed from only states/werner.py, the number of errors raised is identical to the errors raised if from __future__ import annotations was removed from all files in toqito. Something similar to the 1 skip line problem in #193.
Hmm. Are you running at least Python 3.9 in the environment? I'm able to remove the from __future__ import annotations without any such issue. It seems like a lot of the errors are complaining about type not being a built-in, but as of Python 3.9 generic for type hinting have been supported:
https://docs.python.org/3/whatsnew/3.9.html#type-hinting-generics-in-standard-collections
Hmm. Are you running at least Python 3.9 in the environment?
Good catch! I might need to double-check this. I have 3 different environment for py39, py310 and py311. I was probably using py39 last night but that still doesn't explain the errors I got then.
@vprusso Would you mind providing a list of what's installed (+ their respective versions) in your virtual environment?
Without making any changes to the repo, if I try to run pytest in toqito/tests, test_state_metrics/test_matsumoto_fidelity.py::test_matsumoto_fidelity_default fails due to an AssertionError for Python 3.10.11 and Python 3.11.3. If I dig deep, there is some module not found issue related to is_density and is_positive_semidefinite which causes this 1 test failure. In both Python versions, removing from __future__ import annotations does not cause any problems.
But in a virtual environment of Python 3.9.16, test_state_metrics/test_matsumoto_fidelity.py::test_matsumoto_fidelity_default  does not fail. Here, removing from __future__ import annotations leads to errors listed in the issue description.
Yep, here is a minimal pip freeze that might be helpful:
Let me know if this is useful or not!
Closing this issue because the errors raised seem to be specific to the Python version (3.9.16, 3.9.18)
Thinking it might be better to drop Python 3.9.
Something is wrong with my local environment which leads test_state_metrics/test_matsumoto_fidelity.py::test_matsumoto_fidelity_default to fail. tested the errors out through a github actions job.
