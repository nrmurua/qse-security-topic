Using this: https://github.com/release-drafter/release-drafter or similar
@crazy4pi314 Just to check - the release notes are a list of all of the PR's that went into releasing the latest version like shown here ?
Yeah, you can see the running doc we have in the repo here: https://github.com/unitaryfund/mitiq/blob/master/CHANGELOG.md Ideally the action can just grab the text from this file/and or help generate it.
Yes, I was confused as to why this was created as an issue considering there's a changelog. The discussion at the community meeting clarified this. Thanks !
@crazy4pi314 Do you want the categories for this to be separated by quantum and non-quantum changes ? Looking at the list of issue labels, I am thinking both could have sub-categories - bug fix, documentation change/addition, enhancement or feature.  From what I understand, every PR that get's merged will have to be labeled properly in order to show up in the release notes.

Another option is to automate changelog.md update by comparing commits between soon to be released version and previously released version. Then there won't be an extra page for release notes.
I don't see a strong need to have the labels separate categories for the listings, I think we would need to have more rigorous labeling conventions as you suggest üòã I'll raise this in the community call on friday, but let's treat label specific sections as a later upgrade üëç
Decided at Mitiq meeting to go with https://github.com/release-drafter/release-drafter and this will be triggered on PRs to the release branch.
TBD: How to deal with labeling PRs. Any convention is fine for now, may want to add requirement + auto labeler in the future.
Above linked PR does not solve this issue.
In case anyone else wants to work on this, here's what I tried or was planning to try :
I first tried to use github-changelog-generator to automate updates to Changelog.md. The changelog generator is available as a workflow here. The issue with using this workflow is an error with how the generator uses tags. Even if you try to ignore tags, the generator still fails to add a commit to the changelog file with an error related to --since-tag. There's a discussion about this at the project's channel as well but the issue will not be resolved soon due to lack of contributors. If this action would have worked properly then there would have been an additional action to auto commit the lines added in changelog back to master via this action.
In addition, since you want a commit message to be read by above actions (or any other such automated action) to add to changelog, there would have been a proposed change to the format of commit messages.  Since the old changelog file is updated manually, it was renamed as History.md.  A successful workflow would have added a new Changelog.md with appended lines from History.md.
Here's a list of automated changelog/release actions I was planning on trying :
This issue had no activity for 2 months, and will be closed in one week unless there is new activity. Cheers!
