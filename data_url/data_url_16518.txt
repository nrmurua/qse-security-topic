The function signature for getting backend cals for different gates is not obvious:
Can we do something like this?
@ajavadia, The signature is get(name, qubits, **params) and is typed pretty clearly. We won't be able to restructure the order without breaking existing code. Many gates also don't have parameters, but all have qubits, it makes sense for qubits to be a required argument.
s = cals.get('u3', (0,) , np.pi, np.pi, np.pi) also works.
This is the primary reason I wanted pulse.u3(qubit, *params) instead of pulse.u3(*params, qubit). These create an instruction Apply(qubit, gate) rather than a Gate.
I'll close this discussion as "stale" now - the API does seem to be clearly defined, and as mentioned, it's a big user pain to change interfaces around.  If there's more to say, feel free to re-open.
