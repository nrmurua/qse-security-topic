Is your feature request related to a use case or problem? Please describe.
Currently there are protocols for getting the set of measurement keys (and one for control keys). For subcircuits with lots of repetitions, this could produce large sets. This could get unwieldy when testing commutation and other things.
Describe the solution you'd like
It would be nice to have a protocol that just produces the shape. Instead of returning keys {0:key, 1:key,..., N:key}, we would represent this as a single "shape" structure like {slice(0, N):key}. This would be more efficient, and also allow representation of unbounded or indeterminate repetitions, such as if we allowed repetition count to be paramerterizable (#3266).
What is the urgency from your perspective for this issue? Is it blocking important work?
P2 - we should do it in the next couple of quarters
From cirq sync:
Closely tied to reusable measurement keys concept. Will probably get addressed while implementing  reusable measurement keys
cc @95-martin-orion
Sounds like it's not going to be 100% addressed, as we'll keep flatten_repetitions as optional. I have a sample implementation of this in 8a5f71d. This allows subcircuits to repeat indefinitely, and still handles commutativity when placing circuitops.
Small note: the only use case in which this would be useful is the case in which we want to have parameterized repetition counts in subcircuits (#3266) on non-flattened subcircuits. In flattened subcircuits, there's no need for it because the keys are repeated. And in (theoretical) repeat-until operations, those wouldn't make sense in non-flattened subcircuits anyway because you need a repeated measurement for the break condition, which requires a flattened subcircuit.
Parameterized repetition counts are currently blocked by #3619.
