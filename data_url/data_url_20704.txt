openssl speed would also (want to) do encrypt/decrypt -- this wouldn't be exactly workable on QSC KEMs. So, would the following proposal be OK to address this issue: We'd add to openssl speed OQS-specific tests for encode/decode, sign/verify, keygen (basically looping over the respective OQS_EVP_METHODS in crypto/ec/oqs_meth.c ) ?
For SIGs hopefully we could indeed loop over the EVP methods as you suggest.
For the KEMs, I think we would add these by paralleling what's there for one of the ECDH curves (e.g., nistp256).  Looking at what we did for openssl speed in OpenSSL 1.0.2, we were able to iterate over the list of OQS KEM algorithms at run time.  Seems we should be able to replicate that in 1.1.1.
OK, I upgraded the speed code from 1.0.2 to 1.1.1 (https://github.com/baentsch/openssl/blob/speed/apps/speed.c) but I’m not sure it’s exactly what we want:
This delivers nicely all KEMs’ speed test results (via the OpenSSL speed mechanism) but it has no relationship as to the KEMs we actually support in OpenSSL, incl. the hybrid ones…
--> What’s your take: Shall we reduce the numbers or KEMs/SIGs available to openssl speed testing to those that are also supported in crypto/ec/oqs_meth OR do we want to keep running all? For the latter I could issue a PR right away but I’d argue for the former as the latter is basically already provided by liboqs-provided test apps (speed_kem, speed_sig).
I think it is fine that speed only gives the PQ algorithm's performance, not the hybrid performance.  As for whether speed should work for all algorithms in liboqs or only ones that have been lifted to somewhere in OQS-OpenSSL, I don't have a strong opinion; it would probably be slightly less confusing for people if speed only showed results for OQS algorithms that they could actually use elsewhere in OQS-OpenSSL, but if filtering that out in speed is complicated, it may not be worth the effort.
Filtering does require extra effort... OK - then I complete the ported code with SIG tests and create a PR. Maybe in so doing I get a better idea for the KEMs...
