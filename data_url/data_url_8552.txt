There is a section in qutip/init.py that checks the cython version, then re cythonizes all the pyx. It prints a warning if cython is not found. So after install, during which all the cython modules get built, during the first import of qutip all the building happens again. This seems unnecessary, and is actually an issue if we are making a pre-built package. I have patched out this section in the conda-forge feedstock. All but 7 of the tests are successful.
Cython is not actually needed at run time for most of QuTiP. Why is it sometimes needed at runtime?
Should we look remove this section from the init.py, and put some warning in the methods that use cython at runtime?
It is there because one has to build all the cython modules in the cy folder. Since cython is used for time dependent stuff, we stopped packaging the c code itself and just let the user build it since cython is a required package
On Mar 4, 2016, at 10:05, Alexander Pitchford notifications@github.com wrote:
There is a section in qutip/init.py that checks the cython version, then re cythonizes all the pyx. It prints a warning if cython is not found. So after install, during which all the cython modules get built, during the first import of qutip all the building happens again. This seems unnecessary, and is actually an issue if we are making a pre-built package. I have patched out this section in the conda-forge feedstock. All but 7 of the tests are successful.
Cython is not actually needed at run time for most of QuTiP. Why is it sometimes needed at runtime?
Should we look remove this section from the init.py, and put some warning in the methods that use cython at runtime?
â€”
Reply to this email directly or view it on GitHub.
Untracked with Trackbuster
As mentioned previous I have patched out the cython check and installs in init in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement.
I install in an environment without cython and then run tests:
289 tests in 690s
7 skip, 6 errors, 1 fail
Then I install cython and mingwpy and run tests again:
320 tests 2371s
7 skip, 10 errors, 1 fail
I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows.
At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the init.py
I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them.
I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.
Ok, well I found out why the test_correlation.py and test_mcsolve.py don't run without cython. There is a bug, I will raise an issue for this.
I think we resolved the double Cythonize issue, so closing.
