RPCs returning a TList(TIntXX), return corrupted data for integers outside the IntXX range
Retruning a list of integers from an RPC results in data corruption if any integers are outside the range of the integer returned by the RPC. This is the case for both Int32 and Int64. This event is indicated by a message logged on debug level.
The relevant message reads:
artiq.coredevice.comm_kernel:rpc service: 3 [<artiq_worker_rpc_ints.RPCIntCorruption object at 0x7f1a7756d940>] {} ! error("'l' format requires -2147483648 <= number <= 2147483647")
The analagous situation when returning Integers form RPCs is handled much more verbosely. Returning out-of-range integers from RPCs raises an exception:
root:Terminating with exception (RPCReturnValueError: type mismatch: cannot serialize 2147483648 as 32-bit int
Related comment from @sbourdeauducq
#1628 (comment)
Run the Following example:
This prints:
The user should be alerted. Raising an exception, or logging a warning seem appropreate.
The reason for this is, there is a silent bug in comm_kernel.py:CommKernel::_send_rpc_value

Fixed in d7dd75e
