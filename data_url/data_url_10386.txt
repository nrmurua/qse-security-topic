legacy_load_config() says, "Assuming the new config file dwave.conf is not found...
For when users have only a legacy .dwrc file,  client = dwave.cloud.Client.from_config() works as expected:
But specifying a profile does not work consistently to the above:
I think this is because when no profile is specified, load_config_from_files()'s line "filenames = get_configfile_paths()" returns empty so the function returns a placeholder config (<backports.configparser.ConfigParser at 0x8a37160>) to load_profile_from_files(), which returns a placeholder section to load_config(), which returns it to Client.from_config(), which will then call legacy_load_config().
But when a profile is specified, load_profile_from_files(profile='profile-a') creates an OrderedDict() out of the placeholder config that raises a key error in:
Nice catch, @JoelPasvolsky! This bug was introduced when redesigning config loading behaviour (fail explicitly if file/profile is specified). The legacy fallback case has to follow the same logic. Will fix. Thanks!
Thanks, @randomir , no urgency, when GitHub lets me know it's fixed, I'll update examples for the profile case in legacy_load_config().
