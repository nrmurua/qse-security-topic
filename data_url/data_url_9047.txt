A useful feature for this package (e.g. for something like simulating shadow tomography) would be to add functionality for randomly sampling Clifford circuits.
If there is no obvious way of doing this a-priori with the code as it is now, I can have a go at implementing this myself - the procedure itself is not difficult though doing it in such a way that keeps up with Stims impressive scaling performance may require some time.
Best,
QCmonk
Could you be more specific about what is being sampled? There is a method stim.Tableau.random(n) that selects a uniformly random n-qubit Clifford operation from the set of all possible n-qubit Clifford operations.
Ah! That is precisely what I was thinking - my fault for not reading the docs properly.
Apologies for resurrecting this @Strilanc but is there no way to convert a stim.Tableau object into a stim.TableauSimulator class? There seems to be a disconnect between the three modes of simulation class (Circuit, Tableau, TableauSimulator). I understand they each aim to fulfil a different purpose but they have different functionality that would be useful in the others. Namely there is no stim.TableauSimulator.random method which seems a bit strange.
You can use stim.TableauSimulator.set_inverse_tableau(...) to put a tableau into the tableau simulator.
(If you have the non-inverse tableau you can use stim.Tableau.inverse() or just tableau**-1 to get the inverse.)
I see. That will certainly do the trick, thank you.
