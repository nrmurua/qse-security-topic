Based on the older design of QEngineOCLMulti, QPager dispatches different QEngine pages via std::future in parallel. This should not be necessary, for QEngineCPU or QEngineOcl. As those and QHybrid are designed to be generally asynchronous, QPager is theoretically not the place to introduce a second asynchronous layer. This causes problems with operating system threading limits.
The best solution is likely to simply remove std::future in QPager, if I observe that benchmarks are not hurt. If benchmarks suffer, a single asynchronous dispatch thread queue, like in QEngineCPU, is probably the way to implement QPager meta-parallelism. This should help stability of QUnit over QPager.
Looking at this a little more, to first pass, only the parallelism that is theoretically redundant on QInterface, by design, can be removed first, and tested. This is neatly excised from the existing code.
Addressed by #636.
