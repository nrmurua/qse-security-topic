pickle.load's default procedure is to call cls.__new__(cls) to generate an object. Since SingletonGate overrides __new__ and behaves differently based on the arguments to __new__, pickle.load will generate an immutable object even when the pickled object was mutable (since SingletonGate(*args, **kwargs) pass the arguments to __new__ and __init__ but pickle.load does not by default).
This gives:
A mutable SingletonGate should  pass through pickle and still have the same duration, condition, label, and unit.
This is fixed in #10871. I Just wanted to make an issue about it to refer to.
This issue was discovered by a test in qiskit-experiments that used a conditional gate. When the circuits using the conditonal gate were transpiled on Linux, the circuits were passed through pickle as part of Python's multiprocessing and the conditional gate lost its condition.
Closed by #10871
