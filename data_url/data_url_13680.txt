We already use functools.wraps for the converter decorator. The reason was to make folding functions visible in the documentations.
However wraps is also useful for other reasons, e.g., for the way in which docstrings and names are passed from the input to the wrapped functions.  So we could consider using it also in the body of mitiq.zne.zne_decorator and/or  mitiq.zne.mitigate_executor
Not sure if this is a good practice or not.
@andreamari Yep this is a good idea. I implemented this for mitiq.zne.mitigate_executor in the above PR, though I couldn't figure out how to do it for the zne_decorator. The issue is that zne_decorator isn't so much a decorator as a generating function that makes a decorator. It has this form because we need to pass arguments to it. I tried a few ways to get it to work, including setting
which I though would work, but didn't.
The current implementation of #234 actually works also for the decorator. See comments in #234
I believe this was closed by #234 @andreamari please do reopen if that's not the case
