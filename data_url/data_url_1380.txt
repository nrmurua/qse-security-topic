Description of the issue
The call to qis.expectation_from_state_vector by default has check_preconditions = True. Maybe we need to set it False / provide a way for users to set it False when running simulations via simulate_expectation_values ?
How to reproduce the issue
A minimal example:
Click below to view output log
Cirq version
0.15.0.dev
cc @95-martin-orion
A quick workaround for anyone stuck on this is to add dtype=np.complex128 to their simulator, e.g.:
This isn't guaranteed to work for all instances of the issue, but it should reduce rounding errors enough to prevent the majority of cases.
A peculiarity I found: the state-vector validation code uses the square of the norm rather than the norm. This isn't terrible - since all values are expected to be close to 1, the norm and its square are fairly close. But what's odd is that both reported failure cases have a norm-squared which fails the check, but a norm which passes.
EDIT: Further tests confirm that the actual norm can also be driven out of the validation tolerance.
@tanujkhattar, I'm very hesistant to change the simulate_expectation_values API for this as this is a Cirq-specific issue, but that API is shared by external simulators.
Using the Cirq simulators, you can locally reproduce the behavior of simulate_expectation_values by calling simulate and manually extracting expectation values from the result with PauliSum.expectation_from_state_vector:
I think that this and the workaround above ought to be sufficient for this use case. Happy to add documentation if we feel it's needed anywhere, otherwise this can be closed.
SGTM. It'd be nice if we have this in the documentation somewhere, but apart from that I'm happy to close.
