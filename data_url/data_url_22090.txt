In #762 @jordens points to a bug.
And you are submitting two events to the config channel at the same time. One gets dropped and then you are only setting one limit. Add some delay before for the second limit. I'll force that in the next commits.
Please stop the noise.
This bug persists in 3.0.dev+1207.g5b26e5de. Second call to config channel is silently dropped without delay.
You do get a collision error in the core log.
Related to #691?
Yes. Thanks for digging that out.
You do get a collision error in the core log.
Configuration that doesn't advance the timeline should not cause a collision error.
No. Having two events at the same time for the config channel is almost always a mistake that should become visible. There should not be silent replacement. For the other channels it is reasonable to replace in that case.
Add some delay before for the second limit.  I'll force that in the next commits.
You've already agreed to add a delay that avoids the collision error. Please extend to all the config functions. set_div, set_duc_max, etc.
Where did I agree to that?
You are intentionally misinterpreting me. I said that I would force serialization by signalling RTIOCollisions.
In #762 @jordens said
And you are submitting two events to the config channel at the same time. One gets dropped and then you are only setting one limit. Add some delay before for the second limit. I'll force that in the next commits.
My interpretation of "I'll force that in the next commits" was different. I thought you were indicating agreement to add a delay to sawg.config.* as in reset(). My bad. As it stands I confirm that when the user responds to said "force" and adds a delay, no RTIO collision errors are generated and the sawg output is as expected.
For those following at home... When delay(1*us) is commented out here's what a collision error looks like as reported by artiq_corelog.
And here's where to read about RTIO Collisions
in the manual: artiq/doc/manual/_build/html/rtio.html?highlight=rtio%20collision#collisions
