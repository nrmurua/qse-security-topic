Hi all,
#2727 is higher priority.
For NixOS/nixpkgs#78779 I tried building Cirq tag 0.7.0, and got several test failures. Are these in the main tree or local to me? And any tips on resolving them? (note: this is after disabling the failures from #2727, which also appear here).
Failure 2 looks like same issue as #2727.
Thanks in advance!
The first issue seems to be a boring floating-point-comparison error. Replacing with np.isclose() in the test would work
If I had to guess on the second, it looks like something in the google protobuf libraries. What versions are you using and what is pinned in cirq's requirements?
Yes, I realized that about the first error. Does it appear in your CI tests?
I'm using protobuf3.8. Nix's default is 3.7, which I also tested with. Error persisted in both configs.
Cirq pinned 3.8.
@drewrisinger
pinned 3.8
Python 3.8? We don't run that on our CI yet.
I think they're talking about protobuf 3.8
The first one just looks like accuracy issue which should be fixed.
The second one, about bool, is a duplicate of #2727
For the first we will need a version of np.is_close or np.are_almost_equal that works for python dicts.
Failure 2 is resolved by #2986. Failure 1 is resolved by changing the following line: 
I've also found a similar issue to Failure 1 in test_convert_to_ion_gates() when I test (cirq v0.7, v0.8) via Travis: https://travis-ci.org/github/drewrisinger/nur-packages/jobs/685881776#L6573-L6621.
I'm going to try to fix this one as well via pytest.approx. EDIT: I don't think this one can easily be fixed by pytest.approx b/c we would have to approximate the class cirq.PhasedXPowGate
Hi @drewrisinger is this still an issue for Cirq 0.8?
Yes, it looks like it's been resolved. Likely due to Nixpkgs updating their protobuf version.
Relevant test config:
