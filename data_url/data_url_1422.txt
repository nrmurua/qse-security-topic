As seen in the qsim nightly compatibility runs. CC @daxfohl.
These errors seem to indicate that the values in Result._records sometimes unpack to two-element values. It's possible that this is a result of interaction between qsimcirq and the new Result behavior, but if so that indicates backwards-incompatibility that needs to be addressed.
This actually occurred to me last night, that something like this might happen.
So in simulator.py, we changed the pydoc around abstract method SimulatesSamples._run to say it's a 3D array, updated SimulatorBase._run to do so, and back in SimulatesSamples.run_sweep_iter we expect a 3D response. I had overlooked the fact that external simulators might implement SimulatesSamples but not SimulatorBase. (Nothing in cirq proper does).
My initial thought is that the best approach would be to update the ResultDict initializer such that, instead of separate measurements and records args, instead there's a single data argument that can be either 2D or 3D, and ResultDict checks data.ndim and populates the corresponding member variable.
Do you mind taking it since I don't have any recent experience with qsim? (Also maybe create another test like simulator_test.py::test_async_sample except have _run return a 2D array and verify that it succeeds).
May be worth looking at #4449 simultaneously. The qubits are there now, just need to get pushed into Result.
