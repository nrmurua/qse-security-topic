I updated cp2k to ca5cdc8 at two different workstations and found that
mpirun -n N cp2k ... with N>3
can not read saved wavefunctions in some cases. The code simply stops, all cores are busy and nothing happens.
If N=1,2,3 it works.
With older versions, at least 153f268, it works.
toolchain was used to update all including gcc and openmpi
psmp  version, OMP_NUM_THREADS can be different, nothing helps
I have no idea. An example of simple input with this problem is below.
`@SET Project        Li28_energy
@set basis_set_path BASIS_MOLOPT
@set potential_path GTH_POTENTIALS
@set basis_set_li   SZV-MOLOPT-SR-GTH
@set potential_li   GTH-PADE-q3
!GTH-PBE-q3 GTH-PADE-q3
@set xc_functional  pade
!PBE pade
@set cutoff         300
@set added_mos      10
@set max_scf        50
@set eps_scf        1e-6
@set lx             6.0
@set ly             6.0
!---------------------------------------------------------------------------------------------------
&GLOBAL
PROJECT               ${Project}
RUN_TYPE              ENERGY
!NEGF
PRINT_LEVEL           LOW #MEDIUM #SILENT #MEDIUM #HIGH #DEBUG
EXTENDED_FFT_LENGTHS  .true.
&END GLOBAL
&FORCE_EVAL
METHOD Quickstep
&DFT
BASIS_SET_FILE_NAME ${basis_set_path}
POTENTIAL_FILE_NAME ${potential_path}
&MGRID
CUTOFF ${cutoff}
&END MGRID
&SCF
MAX_SCF   ${max_scf}
EPS_SCF   ${eps_scf}
SCF_GUESS restart
!atomic
ADDED_MOS ${added_mos}
&SMEAR
ELECTRONIC_TEMPERATURE [K] 10
METHOD fermi_dirac
&END SMEAR
&MIXING
ALPHA   0.3
METHOD  broyden_mixing
NBUFFER 8
&END MIXING
&PRINT
&RESTART
FILENAME RESTART
&END RESTART
&END PRINT
&END SCF
&POISSON
PERIODIC xyz
&END POISSON
&XC
&XC_FUNCTIONAL ${xc_functional}
&END XC_FUNCTIONAL
&END XC
&END DFT
&SUBSYS
&CELL
ABC    ${lx} ${ly} 83.720
!83.720
PERIODIC xyz
&END CELL
&COORD
Li            0.00000000           0.00000000           0.00000000 L2
Li            0.00000000           0.00000000           2.99000000 L2
Li            0.00000000           0.00000000           5.98000000 L2
Li            0.00000000           0.00000000           8.97000000 L2
Li            0.00000000           0.00000000          11.96000000 L1
Li            0.00000000           0.00000000          14.95000000 L1
Li            0.00000000           0.00000000          17.94000000 L1
Li            0.00000000           0.00000000          20.93000000 L1
Li            0.00000000           0.00000000          23.92000000 L0
Li            0.00000000           0.00000000          26.91000000 L0
Li            0.00000000           0.00000000          29.90000000 L0
Li            0.00000000           0.00000000          32.89000000 L0
Li            0.00000000           0.00000000          35.88000000 S
Li            0.00000000           0.00000000          38.87000000 S
Li            0.00000000           0.00000000          41.86000000 S
Li            0.00000000           0.00000000          44.85000000 S
Li            0.00000000           0.00000000          47.84000000 R0
Li            0.00000000           0.00000000          50.83000000 R0
Li            0.00000000           0.00000000          53.82000000 R0
Li            0.00000000           0.00000000          56.81000000 R0
Li            0.00000000           0.00000000          59.80000000 R1
Li            0.00000000           0.00000000          62.79000000 R1
Li            0.00000000           0.00000000          65.78000000 R1
Li            0.00000000           0.00000000          68.77000000 R1
Li            0.00000000           0.00000000          71.76000000 R2
Li            0.00000000           0.00000000          74.75000000 R2
Li            0.00000000           0.00000000          77.74000000 R2
Li            0.00000000           0.00000000          80.73000000 R2
&END COORD
&KIND Li
BASIS_SET ${basis_set_li}
POTENTIAL ${potential_li}
&END KIND
&END SUBSYS
&END FORCE_EVAL`
I found that the problem is related to  &SMEAR, if one removes it, restart works with mpirun -n N with large N.
It depends also on the basis set in a strange way.
For example, if replace  SZV-MOLOPT-SR-GTH to DZVP-MOLOPT-SR-GTH, 'mpirun -n 16' starts to work for one restart but second restart fails... Still 'mpirun -n 4' or 'mpirun -n 8' can not be restarted!
?
I found the source of the problem but not the basic ground.
It is ELPA.
Following the code, I came to
SUBROUTINE make_basis_lowdin(vmatrix, ncol, matrix_s)
then finally to
SUBROUTINE choose_eigv_solver(matrix, eigenvectors, eigenvalues, info)
and the comment
!>      - Do not use ELPA for small matrices and use instead ScaLAPACK as fallback (10.05.2021, MK)
So, I recompiled without ELPA and everything is working now.
There is no need to recompile without ELPA, because you can change the default library for diagonalization to ScaLAPACK using the PREFERRED_DIAG_LIBRARY keyword in the &GLOBAL section
It seems this issue got resolved.
