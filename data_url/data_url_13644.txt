Since the examples are written with arbitrary observables, these are really quite useful, and we might want to consider making them part of the library.
Although Mitiq is sort of middleware, it would be nice (especially for us) to not have to think about how Qiskit simulation works and just do
We could generalize the noisy executors to input the type of noise as well as the noise level. And could potentially do a Qiskit qpu backend, although this may be more complicated. Regardless, people can still define their own executor, so we don't lose anything here.
Thoughts?
These are useful. They strike me as something that the different libraries themselves should provide. Could we upstream these executors into their respective libraries?
That could be cleanest in terms of library modularity and maintenance.
Then we'd just update the docs with nice one-liner executors (as it should be :) )
Tagging @karalekas for his view
I think having a library of executors would be a great idea (that's what I started to do in #339 for pyquil/QCS). I also agree with you @willzeng, that it would be nice if these existed upstream (and thus were maintained by others) but I think that might be a tough sell (we'd essentially be asking people to maintain a separate API for us). Thus, I don't think it's unreasonable to start by putting the executors in mitiq now and then trying to get third-party buy-in later.
I believe we agreed that example executors should be part of the library. #339 has been merged and #379 is specifically for Qiskit executors.
Closing this on account of the agreement and newer, more specific issues (i.e., this is now superseded by #379).
