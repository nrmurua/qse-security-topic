Hello,
First Thank you for your collaborative work!!!
Perhaps i can collaborate and try to merge one of my project.
But now, I try to use the NA module of pyrpl with many decades down to low frequency, i hope that it's possible (ideally i hope to go to 1mHz, i see that NA can drive at 2.91e-2).
So i have a problem with the rbw. Ideally, i don't need filter, because my electrochemical electronic already compense the DC offset. But i don't understand the use of the rbw in the formula Ï„=avg_per_point/rbw.
Also, i find a problem for using this rbw. For example i try to get NA between 1Hz and 1kHz, but rbw cause problem: it s work for rbw >= 7.589e1 , but NA stopped for rbw < 7.589e1 ("NA data not yet ready").
Last trouble: I don't understand the IQ modulation for this test:
I can draw on NA as many point that I want between 1Hz and 2 Hz, and points are draw very fastly. I don't understand that because the sum of the Real and Im can only be true exactly at the pi and 2pi phase of the modulation, so at 1Hz modulation, point can only be true at least all the 0,5s.
I work with the "python3-only" branch, because using of python 3.7 (last issue of Samuel)
Thank you.
Damien
Hi,
One problem you will encounter with point 1 is that the frequency setting register 'shift_phase' currently has 32 bits, and if you add more, you cannot update it in a single write operation, which can break the NA logic if not done carefully. Basically, the frequency setting register should become a 64bit register of a new type "LongFrequencyRegister", derived from "Frequency Register" and "LongRegister", and should get an address of two consecutive 4-byte blocks, where I recommend 0x104 and 0x108 for minimum code changes. Then you need to assign a new free address for the start_frequency register, eg 0x128 and 0x12C. It is not a lot of work, so if this feature is important to you let me know and I can also do it.
3 was indeed a bug in the python 3 branch, fixed by Samuel today
Ok at first I thought we were not talking about this bug since I understood we were talking about a bug in the master branch, but indeed, after re-reading the thread above, that was most probably the bug I solved today (the bug was only present on the python3-only branch I believe)
