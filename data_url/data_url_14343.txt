When the transpiler is able to reduce the body of a control flow operation to an identity it currently leaves the control flow operation but should probably be removed.
operation should be removed
No response
This gets into classical optimisations (what if the loop-condition evaluation has side effects?) that I think are outside the domain of Terra.  We can do the quantum optimisation, then leave it to a later part of the stack to sort out any classical effects.
What side effects can there be for a for-loop which doesn't modify or access anything outside of its body? I'm somewhat more concerned that some part of the transpiler could count this as an operation which does something when making a transpiler decision. A mistake perhaps, but not one I can't be sure doesn't occur.
There's nothing right now, but this is about where I see general separation of responsibilities with Terra handling classical compilation / optimisation.  "empty bodies can have their control-flow removed" makes an implicit assumption about the classical components of a circuit, and I'm somewhat keen for Terra not to even start down that path, certainly not right now before we've got properly defined roles.
For example, with while instead, if the while loop condition is based on measuring a qubit, even an empty body can never be removed because the single evaluation has a side effect.  For for loops, there is a move to support sorts of external functions both in OQ3 and in hardware, and the return value could be used in a for loop's index set.  Terra can't reason about such functions (they might be impure, e.g. mutate memory somewhere / used as a callback), so if we start allowing the assumption of "empty for-loop bodies can be removed" now, it would be harder to track every place that assumption has been made if/when we have to remove it because we added support.
Basically, the point is: an empty body doesn't imply that the control-flow structure is a no-op.  I'm keen for Terra not to start making assumptions about what might be in the classical components, especially as our processing for it is massively increasing.
