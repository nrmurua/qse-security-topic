It is currently unclear how a user can construct their own custom gates dynamically for use in a QuantumCircuit. In OpenQASM it is clear how to define a custom gate using a gate declaration, but doing the same in QISKit is unclear.
Documentation describing how to construct a custom gate to perform on a circuit should be present. Maybe even a method on the QuantumCircuit class. Or some way to define a custom gate dynamically, i.e. without subclassing CompositeGate.
An example I could find is this. Excerpt:
First off, it is clear that this uses the private method _attach to construct the composite gate. Furthermore, it uses gate classes (e.g. CnotGate) as opposed to the often-used circuit.cx(Â·) notation in QISKit.
It would be great if one could construct a subcircuit with the same ease as constructing a circuit, and then be able to call that subcircuit from the main circuit. The way this compiles to OpenQASM should also be fairly apparent.
On another note, I was also confused by the inability to call other circuits inside a QuantumProgram, what is the point of a Program class if it just contains a list of disjunctive circuits? Why can it contain multiple circuits? To me, currently, it seems to just be wrapper for running on hardware and not a program description.
It would also be nice if an example were included in the pydoc. (As an aside, I'd like more of that in the project too! Had to scratch my head more than once on how to use certain classes and functions.)
I would like to construct a circuit with certain 'function call'-like behavior. Without constructing a custom gate I'd have to inline the circuit, which is repeated a 100 million times. Thus that would be a serious headache. Further, I'd have to write some code that inlines these functions recursively, with function calls-in-calls (they are acyclic though).
I tried to get inspiration from the Unroller for reading in OpenQASM, but for the example of an adder with custom gate definitions the produced circuit simply inlines all the gates referenced in the example.
I ran:
where qasm_text is the string of the adder circuit.
Possibly related to #316
Closed because duplicate.
@eddieschoute I saw that you use:
I'm using qiskit 0.7.2 and I didn't find an Unroller class. Can you please say what imports did you used and which version of qiskit?
It's in the opening post:
I think they moved unrollers or reworked them at some point recently.
Thanks a lot!
