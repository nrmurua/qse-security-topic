This isn't related to the transpiler, but will greatly help us with the quantum devices extension that we are building for qBraid Lab, see image below. The idea of the extension (which will be available in the right sidebar of Lab) is to give users an idea of what quantum devices are online and available at any given time, along with relevant information about the device (e.g. numQubits, topology, id / arn, etc.) We are basically recreating the IBMQ and AWS devices pages, but combining them as one single Lab extension.
Looking at the left side of the lab extension screenshot, we can tell that 5 of the AWS devices are not online. However, we currently don't provide the user any information beyond this. In the actual Amazon Braket console, they provide a live "count-down" to when each of these offline devices will next be online based on their availability zones.


In this issue, we want to implement a function that returns the hours, minutes, seconds until a given AwsDevice will next be available. This can be implemented in a stand-alone file in the qbraid/devices/aws module. It should take in an AWS Device ARN (string) as argument (e.g. arn:aws:braket:eu-west-2::device/qpu/oqc/Lucy), and return a tuple containing the (hours, minutes, seconds) until that device is next available. If the device is currently available, it should return a similar tuple, but instead give the (hours, minutes, seconds) until the device will no longer be available.
Most of the relevant code needed to implement the function can be taken directly from the braket.aws.AwsDevice.is_available method. You will just have to tweak the function to return the time until next available instead of a boolean indicating if it is currently available.
It may be hard to write formal unit tests for this function. I encourage writing tests for any helper functions where they seem logical, but full coverage is not required or expected here. As long as we can be sure that it works, that's good enough.
Some weird issue while I working on this issue on qbraid lab:
sometime jupyter don't let me input:

its keep running, even there is return:

current solution: re-execute, until it successfully work
current solution: delete package at the location
@junliangtan1 Yes, this is because of the verify_config() function which is called whenever a device_wrapper() is applied. It's behavior is to look for the default s3 bucket/folder in ~/.aws/config, and if it doesn't find it, prompts the user for those values with a dynamic text input. This was back when Amazon Braket would throw an error if you didn't specify those values explicitly. Now, with the latest updates, this really isn't needed anymore, so I'll probably just take it out in the next release.
