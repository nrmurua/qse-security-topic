If you put the canvas inside a div with resize: both; overflow: auto, this will add a little 'grabby tab' to the bottom right of the viewer that the user can drag around to change its size. This fixes a problem where the viewer is too small or too large and the user can't do anything about it. And you can emphasize the viewing size by adding a border and giving it a bit of a margin.
@Strilanc Took a look at this. Off the top of my head, thought this could be solved easily for every widget in cirq-web by modifying _create_html_content in widget.py. End to end tests that take a screenshot of the html output and the python tests which check the actual HTML string would need to be changed to reflect this.
I made the changes above on my local machine. 3 things:
I think that the solution to this problem incorporates this solution here, and also this canvas resizing documentation provided by three.js. The key is getting the resizable wrapper div to act just like the browser window in these demos. As time permits with graduation and everything, I may be able to take a stab at it, otherwise I think it's just valuable to have this here for anyone who's interested.
