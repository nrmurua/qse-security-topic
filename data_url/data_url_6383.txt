First I had to do this to get as far as I did, the documentation didn't include the flags to the source and the build directory..
qc/ cd qrack/build && cmake -S .. -B .
-- Errors whether I use gmake or bsd make
qc/ make or gmake
In file included from /usr/include/c++/v1/functional:494:
/usr/include/c++/v1/memory:3710:5: error: destructor called on non-final 'Qrack::StateVectorSparse' that has virtual functions but non-virtual destructor [-Werror,-Wdelete-non-abstract-non-virtual-dtor]
_data.second()._Tp();
^
/usr/include/c++/v1/memory:3671:9: note: in instantiation of member function 'std::__1::__shared_ptr_emplace<Qrack::StateVectorSparse, std::__1::allocatorQrack::StateVectorSparse >::__on_zero_shared' requested here
__shared_ptr_emplace(_Alloc __a, _Args&& ...__args)
^
/usr/include/c++/v1/memory:4331:26: note: in instantiation of function template specialization 'std::__1::__shared_ptr_emplace<Qrack::StateVectorSparse, std::__1::allocatorQrack::StateVectorSparse >::__shared_ptr_emplace<unsigned long &>' requested here
::new(__hold2.get()) _CntrlBlk(__a2, _VSTD::forward<_Args>(__args)...);
^
/usr/include/c++/v1/memory:4710:29: note: in instantiation of function template specialization 'std::__1::shared_ptrQrack::StateVectorSparse::make_shared<unsigned long &>' requested here
return shared_ptr<_Tp>::make_shared(_VSTD::forward<_Args>(__args)...);
^
/home/nick/qc/qrack/src/qengine/state.cpp:839:21: note: in instantiation of function template specialization 'std::__1::make_shared<Qrack::StateVectorSparse, unsigned long &>' requested here
return std::make_shared(elemCount);
^
/usr/include/c++/v1/memory:3710:23: note: qualify call to silence this warning
_data.second()._Tp();
I have no idea why it struck out most of that?
Issue seems to be related to GCC/G++ 9.2.0 which was what was on my system.. I'm getting farther using older GCC versions.
GCC/G++ 4.8 got further but still failed
Trying GCC/G++ 6, then 8 (which my linux system with G++ 8.x built fine)
Worked great with GCC/G++ 6 and gmake
cmake -D CMAKE_C_COMPILER=gcc6 -D CMAKE_CXX_COMPILER=g++6 -S .. -B .
Nick, thank you for tracking the issue, by the way! Hopefully this is of use to other folks with similar build environments, and I'm taking note.
