We can have the template generator take more inputs to built better templates, possibly with more protocol blocks and customized network topology.
Just mentioning that I am working on this and plan to do a PR on 14 May for Unitary Hack :-)
As of right now, I plan to add options for:
Are there any other additions desired? Also, is there any input regarding whether it is preferred to limit the number of nodes or change the script to support more? (I tried with 100 and it failed)
Nice! Here are some ideas (Host == node, just to be consistent with QuNetSim classes):
I'll keep thinking about it... Thanks!
To help with this, I ended up spending a lot of time refactoring the method contained in that PR about generating topologies within the Network class. As it is written, it ignores everything already contained in the network and just generates a certain topology made up of a certain number of hosts, names them all with integer values, and makes the connections. The changes I made are:
I mention all of this because I know my changes are a bit different from how it's mentioned in Issue #88. If you'd like it to remain unchanged, I will need to refactor my edits, which is fine. I just want to make sure whatever I write is in keeping with the intended enhancement before I start writing tests for everything.
Ahh ok, actually this sounds more flexible and a robust implementation of the Issue #88. I think a good route would be to make a PR with just the network class changes and then build on that for this issue. Maybe we can discuss with the author of the open PR if they'd like to add to your work somehow as to not completely wipe out their work... I'm not sure what the best approach for this would be... Maybe they can write the documentation for it... Or maybe I can merge both somehow...
OK, I will do that. I still haven't perfected my Git-jitsu, but I'll see if I can make a branch from his branch so that his commits are maintained for the record. There is surely a way to do that.
While my version is substantially diffferent, it was built from his work, so his input is definitely not wiped out. It was the foundation I built upon.
Sounds good! I think one way to do it could be if I merge the current PR into a QuNetSim branch like network-topology and then you take that branch, make your modifications, and then make a PR to master from there.
Update: Ok the changes from MrRobot are on network-topology. You can take those changes now (My gitjitsu is also lacking.. I don't know exactly how to get those latest changes in your fork...)
That's ok - I was able to make a branch from his branch. :-)
I'll get the tests written in the next few days and open a PR attached to issue #88 as soon as I'm done, since the original author should get the Unitary Hack credit, anyway. But I'll hold off on the templater refactor PR at least until Unitary Hack begins on Friday, if not until the weekend.
Hi juzt for the record thank you @andre-a-alves for your consideration. @stephendiadamo, there were some questions left open at the beginning of the original PR that you never answered, but I assume they are being handles and solved by andre's PR.
@MrRobot2211 Sorry for that, I somehow overlooked those questions.
which other topologies should be handled?\
The ones I can think of off the top of my head: star, linear, Erdös-Rényi random, 1-to-many, many-to-1, bipartite.
should linear be 2-way or 1-way ?
Two way is probably better, but maybe you can use a parameter to have both.
which is the heuristic used to organize the tests?
You can use the connection list property of the Hosts to determine if the topology matches the expected after you call the network functions.
If the network already has nodes and connections shoul it be reset?
The nodes, no, the connections, maybe as a parameter to the method. I think Andrea has worked on this a bit.
Sorry, I thought you were done with your PR. If you like, you can open a new one and make any changes to address these answers.
tahk you. I was waiting for your review as you had said you were going to do it later. I'll see what I can do.
@MrRobot2211 Would you like me to do a PR to your branch for the work I'd done building on your topology generator? That way you can finish with the topology generator, it gets submitted entirely in your PR, and I already have an interface I understand and can work with to build the templater.
