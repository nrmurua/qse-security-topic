The following code should success but it fails:
The issue is that the line self._observable = tuple(observable) in the init method is ignoring the coefficient. The coefficient has to be +1 or -1 to be valid.
This is a very bad bug if you are e.g. multiplying overlapping observables together to get composite measurements, as the result of doing so can be negative. For example XX * ZZ = -YY.
Another bug due to a similar issue, where the constructor expects iterable of a pauli and hence the sign gets ignored.
Similarly, passing a dense pauli string to itself also resets the coefficient. i.e.
My proposal to fix this bug would be:
Note that this would be a breaking change because
If we wish to avoid a breaking change, then we'd have to include an additional coefficient parameter to the constructor, but then it allows us to do ugly things like cirq.PauliMeasurementGate(cirq.DensePauliString('Z', coefficient=-1), coefficient = -1) -- should this measure Z or -Z ?
LMK your thoughts. I'll also bring this up in the upcoming cirq sync and will send a PR for the agreed upon version.
