Because we are using our own format for test vectors, and thereafter a hash of those, our testvector checks end up ensuring consistency of our implementations with themselves over time.  But we don't have any check against the "canonical" implementation fro the NIST submissions, so it could be that our first version (which we used to generate the hash of the test vectors) is already distinct/incompatible/wrong.  We should have some check against the "ground truth" established by the code in the NIST submissions.
I think that's very useful. I see that you replaced the AES implementation that they depended on OpenSSL for with a call to our own; with this dependency resolved, I don't really see any reason for doing our own test vector generation anymore.
EDIT: Well, 'less rounds' is probably a good argument. Then again, we could do less rounds of NIST's KAT generation, and include a few hashes in META.yml (i.e., a hash of 1 round, 5 rounds and a hash of the full thing)
More rounds is probably good to have, but I also like CI tests that finish quickly. :)  Yes I suppose we could have multiple hashes.  On the one hand yes we could get rid of our own test vector generation, but I wasn't necessarily implying this, I just wanted to check that I hadn't screwed up any implementations I'd ported over.
Fixed by #111
