Resolving this issue requires doing the following parts (not all in the same PR):
Introduce a 0-qubit WaitOperation with a cirq.value.Duration attribute. Modify circuit drawing code to draw it (see _draw_moment_in_diagram in cirq/circuits/circuit.py). It's not immediately clear to me the best way to define the concept of waiting, e.g. maybe it should be applied to specific qubits; there could be debate around it (e.g. should it allow a symbolic duration?). But a 0-qubit operation seems like a reasonable way.
Create a cirq.t1_decay method (crib from cirq.rabi_oscillations) which runs the circuit X(a), wait(t), measure(a) with increasing values of t.
Add an example to examples/ that defines a noise model that looks for wait gates and adds proportional decay, and then uses the t1_decay to infer the parameter passed into that noise model.
It feels like this is what scheduled operation was built for?
Yes, but it would be nice if you could do a delay without having to go full schedule.
