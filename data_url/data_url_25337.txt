When _run_task encounters an error when instantiating an executor, the workflow can hang. This occurs for the following reason.
There are two sources of failure in _run_task: Executor.execute(), and instantiating executors. Only the former is handled correctly.
When electrons raise exceptions in _run_task(), the exception is caught by _run_task and returned in the node result. The failed node result triggers a handler that "poisons" the task queue to signal the dispatcher to stop submitting tasks and clean up.
Unfortunately, exceptions from instantiating executors are simply re-raised. This behavior is incorrect because it bypasses all node handlers and will cause the dispatcher to listen on the tasks_queue indefinitely if additional tasks remain to be submitted.
The solution is to always return a node_result from _run_task; all exceptions must be caught and handled.
