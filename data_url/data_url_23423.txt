Some of the instrument drivers are not thread safe. This means that a Loop could case problems with the use_threads option set to True.
We should at least document the thread safety of instruments (parameters) and consider setting use_threads to False
It's true, in as far as we're shipping v0.1 with multiprocessing off, use_threads should also be off. It is only safe for use with remote instruments, where each server is single-threaded so you can only parallelize by explicitly putting the instruments to run in parallel on different servers.
We could imagine adding an RLock to each instrument, that it could use around any method it wants to keep thread-safe, though offhand this seems tricky to make a) robust against deadlocks, and b) transparent enough that driver authors don't have to constantly worry about it. Definitely not something to add to the first release (but the documentation and use_threads change are)
@alexcjohnson qcodes should be lock free ðŸŒ´
@peendebak  right, they can't be thread safe actually even less so after #323 f.ex.
The same for sockets. Pyvisa  is thread safe.
