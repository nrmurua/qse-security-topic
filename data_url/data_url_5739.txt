Suppose that a job fails. For example, it contains a circuit with gates that don't belong to the backend's set of basis gates.
The job failure looks pretty different if we run it on a real device or on a simulator:
I'd like to point out that this is a real and even annoying problem. I'm writing code for qiskit-experiments. Our experiments typically run on devices, but our tests and tutorials must run on the simulator (when applicable, i.e. measurement level 2 etc.), either directly or via a fake backend. Now:
Specifically I have a concrete bug in qiskit-experiments right now (Qiskit-Extensions/qiskit-experiments#866) that I can test and debug only on a device. When I fix it, I'll want to add a test to our test suite, that will be able to catch the bug in the future if it returns. To overcome what I've just described, here is what I intend to do (I still don't know if it will work): for the sake of the test, I'll write a subclass of AerSimulator and a subclass of AerJob; I'll tweak their behavior to mimic devices.
Code:
Output:
(We see the same behavior also when we use the regular, non-stabilizer simulator with the ch gate, which is not in its basis gates).
Identical behavior of jobs, regardless of their origin.
Specifically I have a concrete bug in qiskit-experiments right now (Qiskit-Extensions/qiskit-experiments#866) that I can test and debug only on a device. When I fix it, I'll want to add a test to our test suite, that will be able to catch the bug in the future if it returns. To overcome what I've just described, here is what I intend to do (I still don't know if it will work): for the sake of the test, I'll write a subclass of AerSimulator and a subclass of AerJob; I'll tweak their behavior to mimic devices.
This is how the hack looks like:
I think Aer and IBMQ handles job status differently.
IBMQ: JobStatus.ERROR if experiments or Job scheduler fail
Aer: JobStatus.ERROR if Job scheduler (thread pool executor) fails
I proposed a new option ibmq_semantics=True in #1575 and would like to discuss whether it is reasonable.
Additional cases where Aer's behavior differs from devices:
As #1575 is rejected, Aer can not maintain two semantics. Also, because Aer needs to identify fails of an executor (including thread pool and DASK executor) and experiments, JobStatus.ERROR should inform only errors of executors and can not use the same semantics with IBMQ provider. I think similar semantics differences will be appeared if third party provider is used and only callers can fix them.
