Hi,
I'm attempting to set up CP2K on a couple of machines, one has a 3080 and the other has an A6000 (both are  ARCH_NUM=86).
I can't see direct support for these in the --gpu-ver flag, with the closest being the A100 (ARCH_NUM=80).
From what I can see, the SM_80 binary will run on SM_86, but won't utilise the full FP32 throughput.
Just wondered if there's something I'm missing, or if targeting the A100 is the best way forward.
I also have several laptops with SM_75 GPUs. For these should I use V100?
Cheers,
Zach
Yes, using the parameters from the same GPU generation should generally yield the best results.
Currently, the --gpu-ver flag really only affects DBCSR because of its auto-tuned kernels.
I ended up targetting SM_70 across all machines - I assume this will still work but with reduced performance.
I couldn't get elpa to build with SM_80, and then I found this marekandreas/elpa#15 which deterred me from trying more.
This is the end of make.log for elpa in build_nvidia:
The exact command that fails on the 3080 machine is:
Oddly the same command is ran successfully on my laptop (but targetting SM_70).
I'm guessing something in the SM_80 specific support breaks it.
There's nothing funky in env on either machine - no LD_LIBRARY_PATH etc.
Maybe you have some suggestions?
Yes, support for SM_80, ie. Nvidia A100, is unfortunately not well tested because we have only limited access to that hardware nor the funding to run it on the cloud.
I have also met the same issue. Is there any solution? Many Thanks.
The new release (end of December) will have the A100 kernels for DBCSR.
I'm not sure about the ELPA problem, could you try to build ELPA standalone?
Yes, I did. I tried different compilers (gnu and intel compilers), but the error remained. It seems like a misuse of gcc,  not g++,  to compile a C++ program. I also tried to fix the Makefile or change the configure options and failed.
Yes, I did. I tried different compilers (gnu and intel compilers), but the error remained. It seems like a misuse of gcc, not g++, to compile a C++ program. I also tried to fix the Makefile or change the configure options and failed.
Then I suggest raising the issue with ELPA people. I can see this entry. Maybe SPACK or Easybuild has already an A100 compilation?
And this other entry is relevant:
marekandreas/elpa#18
So maybe the toolchain is missing -lstdc++? @oschuett any clue?
Yes, that works for me. Thanks again.
Also, in my tests the newly generated kernels for the A100 were only marginally faster on the A100 than the V100 ones, hardware improvements seemed to have a much bigger influence atm.
Hello, just a follow up to this discussion.
The newest release, 2023.1, still fails to build with the flag --gpu-ver=A100.
The issue is resolved, as alazzaro suggests, by adding -lstdc++ to the LIBS environment variable. I had to add this flag inside of ./scripts/stage5/install_elpa.sh, relative to the toolchain directory.
Still happens with 2023.2 and A100. Could -lstdc++ still be added as a conditional and would you accept such a pull request?
