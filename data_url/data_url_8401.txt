I am working with the Fermi-Hubbard model, so I have terms like

where   is the (Fermionic) annihilation operator for site i. I represent this operator in QuTiP as a tensor product of qutip.qeye(2) and qutip.destroy(2) but this QuTiP operator does not obey the Fermionic anticommutation relations. Is there a way in QuTiP to enforce this?
In other words, I want  to behave like

instead of

like my current QuTiP implementation.
I feel like I might be overseeing something. Thanks in advance!
Can you please post a code snippet of how you are defining the operators?
Also take a look at this discussion,
https://groups.google.com/forum/m/#!topic/qutip/jloEQ4Z3IDE
Thank you for your response! I made a code snippet that describes how I define my operators. The discussion that you mention (https://groups.google.com/forum/m/#!topic/qutip/jloEQ4Z3IDE) has the same approach as in the code snippet below since qutip.destroy(2) == qutip.sigmam().dag().
Can I define c0 and c1 such that s01 and s10 have opposite sign, as I should have when they obey Fermionic anticommutation relations?
You need to enforce the correct commutation relations using something like the Jordan-Wigner transformation
https://en.wikipedia.org/wiki/Jordan%E2%80%93Wigner_transformation
Dear @spmvg, It could be interesting to look into implementing something along this line in QuTiP, even a small snippet. Or looking into possible integrations with QuSpin and OpenFermion, which implement fermionic commutation relations, although generally looking at other applications. If you develop on this, please feel free to get in touch. Cheers, Nathan
I think this works:
c0 = qutip.tensor([qutip.destroy(2), identity(2)])
c1 = qutip.tensor([sigmaz(), qutip.destroy(2)])
More generally c_k should be tensored with k copies of sigmaz() to the left and n-k copies of identity to the right. When operators are applied on vacuum in descending order, by definition there is no fermion to the left of the operator so the sigmaz() is irrelevant. When operators are applied in the opposite order, a negative is picked up. Thus every pair of commutation relations is satisfied. I think that is sufficient.
@IIAOPSW answer seems sufficient, so closing
