This test fails:
The output should be ON, but it's OFF.
Checked it in quirk:

Are we rotating in the wrong direction?
I think this might have to do with people doing exp(-iHt) instead of exp(iHt), and we've forgotten the minus sign somewhere.
It's definitely the case that the matrix returned by ExpZGate is not correctly matching the operation being performed by the simulator. It's rotating in the opposite direction. I'm not sure which is wrong, the matrix or the simulator, but they definitely don't agree!
Our definition is
Exp is exp(iZt)
so I don't see the problem with the test_s_gate.
But that first one looks wrong to me, I'll take a look
(I+iZ)(I+iY)(I-iZ)(I-iX)
(I+iX)(I-iX)=I
So it should be Off.
Do our definitions differ from Quirk?
@Strilanc  Quirk has Z^(1/2) = diag(1,i) = exp(i pi/ 4) diag(exp(-i pi /4), exp(i pi /4)) which is exp(-i pi/4 Z) up to the global phase, so yeah Quirk has the opposite sign of what we've defined.
@maffoo what does pyle use?  I'm fine changing this (though will suck for downstream users) since the minus sign corresponds to the geometric rotation on the Bloch sphere.
Okay, after discussing with Matthew, we've decided to go with a consistently right-handed convention, meaning S == Z**0.5 == ExpW(half_turns=0.5) and that ExpZ(t) is exp(-iZt pi) instead of exp(+iZt pi). I will update the simulator to do this, and go through documentation looking for missing signs.
Dave, I'll leave updating remote simulator stuff to you.
Fixed by #256
@Strilanc I'm still confused. Is it not supposed to be the case that ExpZ(t) == Z ** t? It seems that this should be true based on the __str__ method of ExpZGate:
However, the class RotZGate has
which is equivalent to exp(i * Z t pi / 2). But you said that ExpZ(t) should be exp(-iZt pi), maybe you missed a half but the minus sign is there.
@Strilanc would you mind clarifying my point above?
Never mind, I missed a minus sign. The definition of RotZGate is equivalent to exp(-iZ t pi/2). All is well.
