Description of the issue
Subcircuits with repeat_until can have non-deterministic number of measurements for a given key. ResultDict expects a flat array of measurement results. This can cause exceptions when run with multiple repetitions.
How to reproduce the issue
Error:
Cirq version
0.15.0.dev
@95-martin-orion @maffoo WDYT?
This is definitely an issue, but at least it appears contained to this case - AFAIK there's no situation where a measurement would have a different number of qubits across multiple repetitions / appearances within a repetition.
Numpy doesn't seem to have a nice solution for this. The closest I found was numpy.ma.array (aka masked arrays), which require a bunch of overhead and still don't give the desired behavior in situations like arr=[[1], [2, 3]]; len(arr[0]). What currently consumes this data? Could we get away with a simple list-of-lists, or placeholders for unrealized measurements?
Alternatively, this might be a sign that we finally need the "do not expose in results" tag for measurements...
In a case like this I would probably lean toward padding the measurement arrays with zeros to keep the overall shape rectangular. Since the keys that go into computing the loop termination condition are part of the result, the code that analyzes the result can figure out where things terminated on any given repetition of the circuit. I haven't thought too much about this, though.
