The template optimization pass of the transpiler allows users to provide templates, in the form of QuantumCircuits, to optimize larger quantum circuits. These template quantum circuits are immediately converted to DAGDependency when given to TemplateOptimization(TransformationPass)'s __init__ method. The conversion from QuantumCircuit to DAGDependency handles gates with parameters in a sub-optimal fashion. Indeed, the converter assumes that gates do not commute as soon as they have a ParameterExpression, see below. This conservative assumption is justified as symbolic calculation on gates is not supported and may not be desirable. However, this limits the usability of the template matching with parametric templates as the DAGDependency is not optimal.
The full potential of template optimization with parametric templates is recovered if the user can provide templates either as QuantumCircuit's or directly as DAGDependency's. For templates with parameters the user can therefore provide the optimal DAGDependency circumventing the conservative assumption in the QuantumCircuit to DAGDependency.
The two circuits below show how parameters influence the construction of the DAGDependency. The circuit
results in an optimal DAGDependency as it results in V-shaped graph. The circuit
has a sub-optimal DAGDependency as it results in a line-shaped graph due to beta.
