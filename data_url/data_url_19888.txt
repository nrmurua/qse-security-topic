liboqs integrates various code bases under one "quantum-safe friendly" API. For some algorithms, integration is done manually, for some automated (copy_from_upstream, copy_from_xkcp). While care has been taken to document the resultant "zoo of licenses", more locations than one exist for this, e.g., "spdx-identifiers" in all source code files, a "summary spdx-identifier" in the  algorithm documentation sheets, separate "LICENSE" files (originating with but possibly not in line with the upstream code bases) and a central LICENSE file  valid only for the liboqs API, pointing to the sub-folder LICENSE files.
For research purposes, where publication (of code and results) is norm and goal, it arguably is sufficient that code has a license -- which liboqs already provides. For integration into commercial products (including OS distributions) this arguably is insufficient (see e.g., #1437).
If the goal is to be able to create binaries suitable for inclusion into commercial software distros (?), e.g., RedHat, all code in liboqs arguably needs to have unambiguous license statements. Given the large corpus of "external" code (liboqs already counts 225 "LICENSE" files -- even before the inclusion of LMS/XMSS) this needs to be fully automated, such as to allow creation of binaries that can be used in commercial distributions (e.g., MIT, Apache2) and those that can be used in truly open, e.g., research settings (e.g., CC0, GPL).
This issue is to propose work to review and automate all license handling within liboqs -- with the ultimate goal to allow liboqs (and its subprojects and users) to select at build time only those algorithms/code bases using specific licenses, e.g., "commercialization friendly" (e.g., MIT, Apache) or "fully open source" (e.g., GPL) or "research friendly" (arguably any).
Thoughts about the need (and timeline and willingness to support this work) for this particularly welcome from anyone possibly having a commercial use case in mind, e.g., @vsoftco @christianpaquin @bhess @crockeea @beldmit @thb-sb  (already thumbs up or down would be helpful to gauge interest in this boring "legalese" issue :)
I'd be happy to help!
Excellent suggestion, Michael!  Yes I think it makes sense to have an automated process for this, and to include the check of the output in the test suite.
Suggest to close as per #1437 (comment): This would basically benefit companies worried about licensing terms. And as that concern seems to be remedied by (manually) ensuring STD algorithms being MIT or Apache2 as a FOSS project we may save the effort. This of course does not preclude implementation by someone commercially interested in the feature. Keeping it open for some time to gather feedback: It still feels valuable, but as no-one found time to implement, it cannot be that valuable... Maybe worthwhile implementing only in a non-research branch/version?
