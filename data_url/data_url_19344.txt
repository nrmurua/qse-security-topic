In order to transfer this code to qibo: circuit += [cirq.ZZ(*bits)**symbols[6]]
How do I define a new gate object ZZ?
is it using gates.Unitary(unitary, *q, trainable=True, name=None)
or other gates to follow the approach?
here is my solution:
matrixZZ = K.np.kron(matrices.Z,matrices.Z)
c.add(symbols[6]*gates.Unitary(matrixZZ, 0, 1))
does it look ok?
here is my solution: matrixZZ = K.np.kron(matrices.Z,matrices.Z) c.add(symbols[6]*gates.Unitary(matrixZZ, 0, 1))
does it look ok?
Yes, this should work. You can also use numpy directly to create the matrix:
What will probably not work is the multiplication between symbols[6] and the gate. What is symbols[6]? Is it a sympy.Symbol or a number?
here is my solution: matrixZZ = K.np.kron(matrices.Z,matrices.Z) c.add(symbols[6]*gates.Unitary(matrixZZ, 0, 1))
does it look ok?
Yes, this should work. You can also use numpy directly to create the matrix:
What will probably not work is the multiplication between symbols[6] and the gate. What is symbols[6]? Is it a sympy.Symbol or a number?
symbols[6] here is a number. I am trying to code these two lines:
@ihpcdingwj can we close this issue?
@ihpcdingwj if you are still implementing this please merge the latest master to your branch and add the gates using the new layout. This should be simpler than before, you basically have to:
Let us know if you have any issues.
I took some liberties and added Rxx, Ryy, Rzz gates as how @stavros11 recommended. To get the XX, YY and ZZ gates, the parameter would have to be specified as pi.
All in rnn branch: 53dbf73
Is this ok?
Is this ok?
Thanks @damarkian. Yes, it looks perfect to me. If you can also add some tests for these gates similarly to here, then please open a PR so that we can merge this to master for everyone to use.
The test_rz -> test_rzz couldn't be replicated directly, so I wrote my own test_rzz with similar logic.
Otherwise, rxx and ryy are similar to rx and ry tests, respectively.
Here.
@damarkian thanks. The tests look good to me, please open a PR so that we can review and merge. There is no need to implement any other features, only the new gates and tests. Then you can continue with other developments in a different branch on top of this.
You may have noticed that there is an issue with tests in GitHub's CI. This is not related to your work and we will fix separately.
