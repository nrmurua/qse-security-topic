The testsuite should not depend on the status of the internet connection. Coding on trains and planes is fun and should be supported :)
It is a common practice to mock the external requests using a library like mock doc. The calls to remote APIs are replaced by reads to local files.
I did something like that in the past and it could be useful initially (not sure if my way is totally correct neither).
We have something in place because of Travis. IIRC, the plan was enabling non-internet connection testing on
Travis, and if this worked as expected, roll out the feature so everyone can enable or disable it, am I right @diego-plan9 ?
We have something in place because of Travis. IIRC, the plan was enabling non-internet connection testing on Travis, and if this worked as expected, roll out the feature so everyone can enable or disable it, am I right @diego-plan9 ?
Yes, there is a WIP that mocks the calls to the API that is still not up mostly due to deciding the logic on applying the mocking. I'll retake it, specially since we also had a number of travis failures due to timeouts and network issues recently.
After some face-to-face discussion, we decided to solve this issue with a local REST server. Possible candidates:
To summarize the motivation, since these are integration tests, we want to test the maximum surface at the same time we enable the possibility of testing without network access. So the idea is to record the answers from the real servers and use them during offline.
