When the dispatcher first receives a lattice, it persists the transport graph to the datastore. However, the metadata for the lattice, nodes, and edges are written in separate DB transactions. If the Covalent server were to crash in the middle of a Result.persist() operation, the DB could be left in an inconsistent state, where only part of a lattice is written.
To prevent this, we ought to perform all writes that logically belong together in a single transaction.
@cjao is this resolved?
Will be fixed by PR 1495.
