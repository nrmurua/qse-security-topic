A helper _optionals.HAS_JAX does not work in unit tests. An exception is thrown, see the stack trace. Outside unit tests everything looks good. Initially, an idea was to write a test that works in both cases with and without JAX installed. While this issue probably is not in Qiskit, but in JAX, I'm opening it to let you know.
Here is the stack trace:
Run the test. The JAX test fails, while the matplotlib one works fine. JAX and MPL are installed.
No exception should be risen.
Wait for an update in JAX?
Looks like the object is working ok, but jax itself (or more accurately, a dependency of jax) uses the imp module which raises a DeprecationWarning, and we error on unhandled warnings during test execution.
Does it similarly fail if you use it in a @unittest.skipUnless(_optionals.HAS_JAX) decorator?  I would expect that in that case, the tests should pass, because the jax import will happen during test discovery instead.
It's generally not advisable to write a test that changes its behaviour based on the environment, because it can be very hard to debug failures, and you get inconsistent coverage of the "backup" path. It'd be better to have one test that always uses the alternative (let's say Numpy), and a second test that has the skipUnless decorator but always uses jax if run.
That's right, the Qiskit code looks fine.
I added the decorator and, as you expected, the test passed. And this is a good idea, instead of having two tests in one script I can split JAX/No JAX tests into two independent scripts and the problem is solved! Thanks for the hint!
