Creating a circuit via copy allows to give an invalid name (not a string), that is then checked only when the circuit is transpiled.
In this case the copy() api raises no error when passing a circuit as name (see API: copy)
Run this python script:
Produces this output and error:
I would expect the copy method to check the name of the circuit, and raise an error if it is not a string, whereas now it is allowed without any check (see here).
Even this is allowed:
Outputting:
I think the copy method should check the name of the circuit, and raise an error if it is not a string, so that the error is more precise on the line of the copy() call rather than the transpile().
This is somewhat a regular part of Python programming; the language doesn't enforce type checking.  You'll always be able to put badly typed objects into Python classes, since the language fundamentally doesn't have access control.
That said, in this particular case, we do do the manual check in QuantumCircuit.__init__, it's not very costly to do, and doesn't have greater performance implications, so it's reasonable that we could do the check in QuantumCircuit.copy as well.
@jakelishman @MattePalte
I would like to solve this issue and contribute to Qiskit. Can you please assign me?
Thank you
running tox -elint-incr on my repository gives the following error:
ERROR: sympy is imported via qiskit.circuit.quantumcircuit
But sympy is not being imported. Why is this error showing up?
And by the way, I have fixed this issue and am in the testing phase. Will make a pull request once the above error gets solved.
EDIT - I think it is showing up because qiskit/circuit/parameter.py is importing sympy
@Abhiraj-Shrotriya
For various reasons, Sympy is optionally imported. Tox flags that as an error, but this is not the case in the CI tests. If this is the only error you are facing, you should pass the CI tests.
Updating my branch to the latest version of Qiskit:main breaks my Pull Request. The CI tests ( which of course take time) need to rerun. Some of these re-tests fail which passed in the original run.
Will not updating my branch affect merging process?
You don't need to update your branch to main unless there are merge conflicts.  We'll handle that automatically during the final merge window.
