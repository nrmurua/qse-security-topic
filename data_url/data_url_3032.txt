Currently XmonSimulator.simulate_measurement causes the current state to collapse.
This means that in order to simulate X sample measurements after a long unitary evolution, we need to simulate the evolution X times, then carry out the measurement after each evolution. It would be nice to be able to save the current state prior to the measurement. That way, after doing a single long unitary evolution, we could just reload the final state X times and simulate measurement on it.
For the short term you should be able to hack this in since the simulator.Result has get and set state.  So you can make two circuits, one with the measurement, one without, and then use the first to get the state before the measurement and the second to simulate the measurements.
@dkafri  Would returning the measurement probabilities and not collapsing the state be more useful then repeated measurements?
Good enough for me. Thanks!
