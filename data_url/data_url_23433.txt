There's already a pull request for timestamp instrument #79 to add time to a measurement but it would also be useful to be able to use time in a Loop to trigger a measurement so that a parameter could be measured periodically. It seems to me this isn't covered at the moment given that measurement takes some time so using qc.Wait(5) doesn't actually guarantee a measurement every 5 seconds for example. I'm opening this as a discussion as to how this might be implemented and also if anyone else had thoughts/requirements for this.
I think this would be very useful!
I like this, but removing the help wanted for now as there's no thing that needs to be "done" before the feature is discussed :D
@nataliejpg @MerlinSmiles  this is in a nutshell having the option to run a sweep over time, correct?
@giulioungaretti yes, but also adding timestamps to datapoints without having a dedicated time instrument that needs to be measured (I think they should always be there...).
It's basically the ability to start the next iteration of the Loop after a set amount of time instead of just when it has completed the tasks (problem then being what should happen if the tasks in the loop take longer than that amount of time). Also timestamps as Merlin says.
@MerlinSmiles got it
@nataliejpg  not sure I get what you mean. The next iteration over another parameter ?
i.e.
yielding :
yes, exactly üëç
@nataliejpg @MerlinSmiles @giulioungaretti Timed measurements are something we want as well, but I would like to keep them outside the default qcodes Loop.
For example adding timestamps by default (instead of having a TimeStamp instrument) adds overhead and complexity to the qcodes.Loop. Also timed measurements would add complexity to the Loop. I would prefer a specialized loop structure, or the right set of tools for people to write their own loop.
@peendebak I don't think having a timestamp is really what is suggested here (although thats also obviously useful and I can see the case for having it as an option and not a default). I would like the ability to do times measurements in the loop, of course not as a default but it would be really useful if you want to take temporally evenly spaced measurements and not rely on the contents of the loop taking the same amount to time to execute each step and having to guess how long that will be.
@AdriaanRol  am I right in thinking that you basically want this but to have it running in a background loop and have the data used in the snapshot of any measurements that are run at the same time... is that about right?
@peendebak just to be on the same page, which overhead are you talking about ?
In terms of performances, having a timestamp IS negligible:
10000000 loops, best of 3: 139 ns per loop  (worst 0,001 milliseconds).
Complexity, also not so sure what you mean üê∏
@giulioungaretti , I agree with @peendebak, mostly for the complexity argument.
I think that qcodes should strive to get it's basic functionality working in a very modular way. The moment timestamps get integrated into the loop, the dataformat becomes more complex and therefore less modular. Currently the Loop does not do everything we require, this is not a problem as we can write our own loop and still adhere to the standard.
It should be fairly trivial to do a timestamp parameter.get at each point in the loop to reach the desired effect. This way it is trivial to turn on and has limited overhead (as you've benchmarked).
@nataliejpg I am indeed talking about timed measurements, similar to how you describe them.  However I consider this a different issue from the one discussed here. Which is a timestamp on measurements.  For now I have working hack but I'll probably make another issue for that.
@AdriaanRol  'Timed measurement' as described by both of us are exactly what this issue is about. Timestamp is  #79 which was closed. I think it important to keep the distinction though as the functionality is really different.
In that case I apologize. Let's indeed try to avoid issues getting mixed up :)
