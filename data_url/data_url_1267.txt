Description of the issue
Protobuf versions of various transient dependencies do no match for Cirq 1.0.0. For those of us who prefer to peg versions, this represents a problem.
How to reproduce the issue
Cirq version
1.0.0
Discussion from Cirq Cync: Pavol to investigate and determine whether this issue is reproducible and what the current status of protobuf libraries and downstream dependencies are.
+1 this issue. pip-compile is becoming an important part of the python ecosystem and does not work whenever cirq is involved
Thanks for looking into this, @pavoljuhas. If I'm reading the output above correctly, this looks like a problem with google-api-core. The first line says:
protobuf!=3.20.0,!=3.20.1,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<4.0.0dev,>=3.19.5 (from google-api-core[grpc]==1.33.2->cirq-google==1.0.0->cirq==1.0.0->-r reqs.in (line 1))
That's a bit hard to parse, but the <4.0.0dev looks like google-api-core[grpc] want proto 3. However the last line
protobuf>=4.21.6 (from grpcio-status==1.50.0->google-api-core[grpc]==1.33.2->cirq-google==1.0.0->cirq==1.0.0->-r reqs.in (line 1))
Makes it look like google-api-core is pulling in a version of grpcio-status that wants a newer proto version. Can we fix this by doing something like pinning the grpcio-status version to one that is compatible with older protobuf? That would be a less drastic solution that updating to protobuf 4 if we can make it work.
Can we fix this by doing something like pinning the grpcio-status version to one that is compatible with older protobuf? That would be a less drastic solution that updating to protobuf 4 if we can make it work.
Good point, please see #5953.
@ianhellstrom - it turns out that cirq dependencies can be successfully resolved by using
pip-compile --resolver=backtracking
The backtracking resolver will become the new default for pip-compile.
Without the --resolver option the pip-compile shows a warning to that effect:
WARNING: using legacy resolver is deprecated and will be removed in future versions. The default resolver will be change to 'backtracking' in 7.0.0 version. Specify --resolver=backtracking to silence this warning.
Hope this works to get the pip-compile running.  Please reopen if there are still problems.
Note: #5953 has a fix for legacy resolver, but we chose not to merge, because --resolver=backtracking produces the same output.
