Is the mod operation (%) meant to be usable in kernels? If so, it fails.
Using the mod operation (%) in a kernel method in such a way that it can't be optimized away by the compiler fails yielding an error message.
run code:
Print out
1.0
root:Terminating with exception (LoadError: cannot load kernel: symbol lookup error: fmod)
Traceback (most recent call last):
File "/home/rabi/artiq-dev/artiq/artiq/master/worker_impl.py", line 287, in main
exp_inst.run()
File "/home/rabi/gitlab/brittonlab/artiq-lab/hucul-west/repository/test_programs/mod_test.py", line 13, in run
self.krun(5.0)
File "/home/rabi/artiq-dev/artiq/artiq/language/core.py", line 54, in run_on_core
return getattr(self, arg).run(run_on_core, ((self,) + k_args), k_kwargs)
File "/home/rabi/artiq-dev/artiq/artiq/coredevice/core.py", line 129, in run
self.comm.load(kernel_library)
File "/home/rabi/artiq-dev/artiq/artiq/coredevice/comm_kernel.py", line 240, in load
raise LoadError(self._read_string())
artiq.coredevice.comm_kernel.LoadError: cannot load kernel: symbol lookup error: fmod
Operating System: Ubuntu 18.04.3 LTS
ARTIQ version: 4.0.dev0+1298.ge4d48a78
conda_list.txt
Hardware involved: Kasli v1.1
Not the issue, but you seem to have made a mess of your conda environment:
I recommend switching to ARTIQ-5, reflash the board to get the fix (if this is for a M-Labs or QUARTIQ purchased system, you should have -5 and -6 firmware builds for it), and use the Nix packages instead of conda since you are running Linux.
