Add support for new Pulse instructions:
Delay, SetPhase, ShiftPhase, SetFrequency, ShiftFrequency
My initial thought is that Delay, SetPhase, and ShiftPhase will all naturally fit into the current interpretation scheme that the simulator uses for pulses in the PulseQObj. E.g. the deprecated FrameChange instruction was already supported in the PulseQobj interpretations, so updating that portion may be all that is necessary for the phase instructions.
SetFrequency and ShiftFrequency on the other hand will require a change in the way frequencies are dealt with; currently frequency is a static property of the "differential equation model", and there is currently no mechanism/process for updating this model mid-simulation. Some options:
Option 2 is more involved but more in-line with future plans - a solver's behaviour can make use of the carrier frequency (entering/exiting frames automatically, making RWA, etc) - but if the frequency is also treated as an arbitrary time-dependent function this won't be possible. Also, the ability to do such updates is necessary for future extensions involving more complicated simulation flows (e.g. handling control flow, performing measurements mid-experiment, etc).
As a first step we can:
Perhaps we can easily implement SetFrequency and ShiftFrequency by multiplying the pulse envelope with a modulation.
Not being actively developed.
I'm getting an error when trying to make use of SetFrequency or ShiftFrequency on a DriveChannel of FakeArmonk:
Debugging it seems to uncover that the instruction doesn't end up in the pulse_library of the qobj.to_dict()['config'].
It seems related to the above. @DanPuzzuoli - when you say this is no longer being actively being developed do you mean the PulseSimulator in general? This feature only?  Should I view FakeBackends / PulseSimulator as being deprecated? I'm a little confused because I see that SetPhase and ShiftPhase were implemented. Additionally, setting schedule_los on assemble works for PulseSimulator, so wondering how that is being done.
And if it isn't going to be supported, then I think a more informative error message would be helpful.
