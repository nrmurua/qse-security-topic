In the cirq simulator, the qubit_order parameter specifies the "basis" in which the state vector will be expressed, and this can contain extra "idle" qubits that do not run any gates. QSimSimulator returns a resulting state vector with the wrong shape and also raises an exception when trying to produce the string representation of the result:
It's even worse in my experience: the QSimSimulator simply segfaults and dies.
Until this is fixed, the simplest workaround for this is to add identity gates on any qubits you want to appear in the final state; then qubit_order should reorder them correctly.
Yes, that's the approach I've taken.
I think this is a problem with the cirq simulator interface, and in fact it's not clear to me why the cirq simulator behaves as it does. In general a QubitOrder is just a way to compare qubits and not necessarily an explicit list, but it seems the simulator treats explicit lists specially. I think a better API would be to specify an explicit "basis" to use (which could be a QubitOrder applied to circuit.all_qubits()).
