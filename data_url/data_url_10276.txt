dwavesystems/dwave-preprocessing#45
Hi @yurivict , dwave-system, dwave-cloud-client, dwave-preprocessing, dwave-drivers, dwave-samplers, etc are all namespace packages. Specifically pkgutil-style.
But they conflict with each other because they all install the same file.
This is intentional. It allows all of those individually installed packages to share the same dwave namespace. That's also why the file is identical in all of them. See namespace packages. At some point in the future we may switch to using native namespace packages which do not require an __init__.py, but since we first started using them when we still supported Python 2, we still use the pkgutil-style.
In such case the correct structure would be to have one base package that installs __init__.py and then have any number of other packages that depend on it which don't install __init__.py.
Package managers reject file conflicts - such packages can't be installed at the same time.
Our supported package installer, pip, handles the conflict by creating the following structure:
I believe it keeps the first installed __init__.py from that namespace and ignores subsequent ones, but I would need to go deeper into the docs to confirm which __init__.py is used.
What would happen if these files would be different? Would one of them be ignored? This would lead to a breakage.
If they were different then yes, many would be ignored. Which is why we keep them identical, as required by the docs I linked above. Relevant section:
