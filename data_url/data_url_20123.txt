Compiling liboqs with SIKEp503-compressed enabled and SIKEp503 disabled (e.g. by compiling with -DOQS_MINIMAL_BUILD=ON -DOQS_KEM_DEFAULT=OQS_KEM_alg_sike_p503_compressed) results in undefined symbols at link time:
This is because of some namespacing that we add to the upstream code.
Both P503.c and P503_compressed.c define a symbol called p503x2. To avoid redefinition errors when building both parameter sets, we have some #defines that turn p503x2 into oqs_kem_sike_p503x2 and oqs_kem_sike_compressed_p503x2.
The problem is that fp_x64_asm.S only ever looks for oqs_kem_sike_p503x2:
I suggest moving the constants from P503.c and P503_compressed.c to a new compilation unit. This will avoid the redefinition problem and reduce code size.
FYI the ARM64 code avoids this problem by keeping a copy of the required constants in the .S file. The constants are not very large, so it would be reasonable to do the same for x86_64.
I'll bring this up with the upstream maintainers, to avoid having too big of a diff between the projects. (FYI, @patricklonga)
FYI, I'll take a look at this when I'm back at the keyboard, starting next week.
I don't get the undefined symbol anymore (when configuring with cmake -GNinja -DOQS_MINIMAL_BUILD="OQS_KEM_alg_sike_p503_compressed;OQS_ENABLE_SIG_dilithium_3" ..); the build system refactoring must have fixed that. The p***x* values are redefined in the compressed and non-compressed variants, so I think this can be closed.
