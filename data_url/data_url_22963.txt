Hi, maybe this is a documentation issue only and not a request, can you please clarify?
It doesn't seem like it's currently possible for the "arbitrary" signal generator to generate actually arbitrary signals. I tried setting asg.data = [some custom numpy array], but the actual output only wants to give me sine waves.
The waveform list is limited to a few standard waveforms (cosines and ramps etc.) Shouldn't there be a "custom" waveform?
Is there some way to easily do this?  I remember the old redpitaya apps had this feature where you could upload a text document. They removed it in later versions of their gui, which is one of the reasons I don't use theirs anymore.
Looking at the source of @data.setter it seems it just uploads a list to a space in the redpitaya's FPGA memory, so custom signal generation should be possible?
Sorry, this is probably straightforward, but I didn't see how to do this / this use case  from the API docs. Thanks!
Hi, sorry, I feel kind of silly. It does work as I expect. But maybe it should be noted in the docs somewhere. For others looking;
asg.data = np.array(your_data_array) 
asg.waveform doesn't return correct results if you call asg.data  directly, because it doesn't know about this change. That's why I was getting confused.
I agree, I like asg.waveform = np.array(...); it's good to keep data low level.
By the way, it seems like line 55 in asg.py will never be executed - a ValueError on line 18 will happen before that.
Also passing a non-numpy array should raise an exception. I tried passing a list by mistake via asg.data, and get obscure errors:
ERROR:pyrpl.redpitaya_client:Error occured in reading attempt 0. Reconnecting at addr 0x40210000 to _writes value [1 1 1 ..., 0 0 0] by client 26
Another issue: changing asg.trigger_source from immediate to off, then back again, changes asg.data to the waveform described by asg.waveform, but maybe once the api is changed to allow custom then this won't be an issue.?
I don't want to pile on, but in general setting up custom waveforms is pretty unintuitive.
asg.waveform = 'custom2'
ERROR:pyrpl.attributes:Value 'custom2' is not an option for SelectAttribute waveform of module asg0 with options OrderedDict([('sin', 'sin'), ('cos', 'cos'), ('ramp', 'ramp'), ('halframp', 'halframp'), ('square', 'square'), ('dc', 'dc'), ('noise', 'noise')])
I've temporarily fixed this by having a "custom" option specified in waveforms when it is building the asg.  Is there a way to add other waveforms without having to edit the code?
`
you mean by using the API, such as a command asg.add_waveform(data) or the like?
the only currently working solution is to directly write to asg.data, which however
But nevertheless, please explain a bit the ideal solution from your point of view.
I think using an add_waveform is better.
The main issue is that leaving the waveform with an incorrect name, it's possible to accidentally have it recreate the incorrect waveform. I don't have it in front of me right now but I remember when testing that just writing the data, but leaving the 'sin' could somehow accidentally produce a sine wave. Maybe it was when changing triggers?
An add_waveform that alleviates this issue, so it would need to assign a name as well.
