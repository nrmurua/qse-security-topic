module path: instrument_drivers.vendor_name.nameonthefront :
class name: nameonthefront
f.e.x
path:  instrument_drivers.alazartech.ATS850
class name: ATS850
Good that you give the example of the ATS, what do we do if @damazter is awesome and wrote a driver that is compatible with multiple different types of ATS's? (same applies to my source drivers for R&S, they already work for multiple types).
I guess the convention of naming after the model kind of breaks there....
lol @AdriaanRol  that is indeed a tricky case.
I see very few options:
We have standardized on creating a generic class i.e. with x in the name and create thin subclasses for all relevant models with and specific code in the subclass
