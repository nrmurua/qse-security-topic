It would be useful to have a method SummedOp.coeffs analogous to PauliSumOp.coeffs. This would allow the same code to extract coefficients from both via duck typing (eg in PhaseEstimation)
If I understand the enhancement correctly, we need a method to pull the coefficients for the operators listed for the lazy sum, scaled by the overall SummedOp coefficient.
Does this seem to be starting off on the right path?
Going off of the discussion of PauliSumOp.coeffs typing in #5547 / #5560 and noting that  oplist is taken in as a typing.List, I figure that a List[complex] return type might be appropriate.
Testing this:
Hi @woodsp-ibm,
Any thoughts on what we have here so far? I think this might meet the use case @jlapeyre is suggesting.
However, I'm slightly concerned about how the typing may interact in SummedOp. In particular, it seems coefficients can be ParameterExpression objects, in which case maybe I need to consider the case of calling ParameterExpression._apply_operation, which is documented as:
Base method implementing math operations between Parameters and either a constant or a second ParameterExpression.
Let me know if I should create a pull request to allow others to review/test more easily.
Hi @john-judge . Thanks for the contribution. I think this is on the right track. You are correct here:
In particular, it seems coefficients can be ParameterExpression objects
I'm pretty sure that your implementation above already correctly handles ParameterExpression.
Yes, please make a PR, if you like.
Hi @john-judge are you still working on this? If you have any further questions let us know :)
@javabster I'm not actively working on this at the moment. I'm fine if anyone wants to jump in and finish this. Next step would be to write tests including for the ParameterExpression case to include in  a PR. If there are no takers I may pick this back up in about a month when I find some time.
I am a newbie with a desire to learn. I would love to work on this issue.
@a-freakish Great to hear, please do pick this one up! Let me know if you have any questions and I can try to answer.
