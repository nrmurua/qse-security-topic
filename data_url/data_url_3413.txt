In PR #867, @jlbosse noted that although PauliTerm objects can only be constructed with a single op (on a single qubit), they can be multiplied together to produce a multi-qubit PauliTerm. This has come up before (a while ago) in #120. In that issue and in the previously mentioned PR, the solution was to create a new class method to allow for this functionality, but we might want to consider changing the constructor itself. This issue is for discussing that idea.
Somewhat related: The PauliTerm.from_compact_str() method also supports only one qubit operators and PauliSum.from_compact_str() is missing altogether. In PR #867 I had some code remedying this. If you want me to, I can create another PR with just that code. It would be the exact complement to PauliTerm.__str__() or PauliSum.__str__() respectively, but not work with Qubit Placeholders.
About the constructor: How about making something akin to PauliTerm.from_list() the default constructor? Or (not very pythonic) make the constructor choose between its current implementation and PauliTerm.from_list() depending on the argument types?
