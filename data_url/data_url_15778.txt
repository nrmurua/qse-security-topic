Tweedledum is moving to supporting macOS>=10.15 and making anything < 10.15 best effort support. See: boschmitt/tweedledum#159 (comment) In Qiskit we've normally supported macOS >=10.9 and build all our binary packages accordingly. However we're now at a bit of an impasse because we've had tweedledum as a hard requirement since the 0.18.0 release. For the pending tweedledum 1.1.1 release @boschmitt built the wheels by hand to continue supporting the older macOS versions for us. But the question of macOS version support still stands and moving forward I think we're going to see more of this. (for example mthree, which is a downstream consumer of terra only supports macOS>=10.14: https://pypi.org/project/mthree/#description ).
The open question is which versions of macOS do we support moving forward. I'm not proposing we change our binary builds (we should continue to build for 10.9) but maybe we document a higher minimum version to have a seamless install experience. I'm personally not a mac user so I'm not necessarily aware of all the implications of doing this.
78% of all OSX users would still be covered with this change:
https://gs.statcounter.com/macos-version-market-share/desktop/worldwide
78% sounds worryingly low to me, to be honest.  I've kept the Macbook I got from Imperial on 10.14, for example, because 10.15 introduced new annoying things for any non-bundled C toolchain, and more restrictions on what processes can and can't do.  That said, as long as we keep the binary builds using the 10.9 API, and it's just a documentation note that <10.15 may not be properly supported, I think that'll be fine.
We discussed this last week among @Qiskit/terra-core and came to the conclusion that we still want to provide full support for older macOS versions, mostly for supporting older macOS hardware, since apple is pretty aggressive with culling support of their older hardware with newer macOS releases. Requiring macOS users have a mac from 2012 or newer wasn't something we wanted to do. As for tweedledum support if this means we might have to move it back to optional and come up with a different phase oracle solution This also would potentially preclude future expansion of the use of tweedledum (this was part of the move to make it a hard requirement in #6588, the wide use of the phase oracle for grovers and the potential use of tweedledum in more of qiskit including the transpiler). I think for now we've decided to try and maintain the same qiskit macOS support policy so I'm going to close this, and we can look at tweedledum specifically as part of #6981 or a new issue. But we're not at a critical point yet because tweedledum 1.1.1 fixed the packaging issues (by building the wheels manually).
