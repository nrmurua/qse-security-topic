The current release allows the user to set a custom initial state and a configuration that includes state preparation errors. However, the way a "badly prepared" state is based on pretending that it is left on the ground-state the entire time, with no terms in the Hamiltonian acting on it. This means that a custom initial state preparing some atoms on a state other than the ground is in a potential conflict with a state preparation error, which for our intentions effectively forces a state to stay in the ground the entire time.
The most complete approach here would be to check, on each run, if the atoms that have been randomly selected to be on "badly prepared" are on the ground-state and if not, either: 1. Force them to be on the ground-state, or 2. Interrupt the run.
Option 1. is non-trivial, computationally heavy and perhaps even non-sensical when the total state is entangled. We could consider using iff the state is a product state, but that also can be resource-intensive to check from the whole state vector.
Option 2. is counting on luck, essentially hoping that only states starting from the "ground-state" are picked to be "badly prepared". If this does not happen, the run would be interrupted, potentially wasting all the elapsed time.
As both options above seem unsatisfactory, I would say that the solution, at least for the time being, is to forbid the setting of a custom initial state when state preparation errors are involved in the simulation.
As this is technically a bug on the current release, it should be treated as an hotfix to be merged directly into master.
We decided to just forbid the combination of the two modes, ie not to pursue either of the more elaborate options.
