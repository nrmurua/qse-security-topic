The main QiskitTestClass is bound to either BasicQiskitTestClass or FullQiskitTestClass, depending on whether fixtures and testtools are available, and if the QISKIT_TEST_CAPTURE_STREAMS environment variable is set.  These two classes have differences in enforcement of certain behaviours, meaning that when running local tests without setting the envvar, you may see spurious passes in new tests.  If you use tox to run the tests locally, it should always arrange the setup such that FullQiskitTestCase gets used (like in the CI), but if you're just doing quick-and-dirty tests with python -munittest or stestr, you might get BasicQiskitTestCase.
In particular, the Full setUp and tearDown methods require subclasses to explicitly call super().setUp() (and similar), and the Full class silences a lot of deprecation warnings which Basic doesn't.
Test file mytest.py
Now, assuming testtools is available
Both should throw the same error.
Only functionality which entirely depends on the presence of testtools should be different between the two classes.  A lot of extra functionality (deprecation warnings, etc) could be moved into BaseQiskitTestCase and shared.
See: Qiskit/qiskit-aer@fdf2cda, #6743 (comment)
