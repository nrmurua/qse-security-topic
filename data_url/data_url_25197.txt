When setting the executor kwarg in the @ct.lattice decorator, I receive the following error message in the post-processing step of the workflow.
Note: setting the executor kwarg in the @ct.electron (but not @ct.lattice) works fine and the workflow goes to completion. This seems very closely related to #1733, which is perhaps not fully solved.

The workflow post-processing step should complete.
I need to see if the same behavior occurs on main.
Thank you for the detailed bug report @Andrew-S-Rosen  and for taking the time to include a comprehensive example! Your issue is well-explained, and the provided code snippet is immensely helpful for debugging.
It appears that setting the executor keyword argument in the @ct.lattice decorator is causing unintended behavior in the post-processing step.  It seems like setting the executor attribute within the decorator may inadvertently be modifying the value of the workflow_executor parameter, and thus causing the error you're observing. This does look like a bug on our end.
a temporary workaround would be to explicitly set the workflow_executor parameter when the lattice level executor is overridden. Thank you for providing that solution as well. example -
But this is indeed a bug, we will tag it along for a solution.
Thank you for the insight from your perspective! That does seem very reasonable, and I appreciate the potential workaround. I will give that a go and see how things fare! Much appreciated, as always!
@kessler-frost, @wjcunningham7: I've narrowed down things a fair bit. Specifically, playing around with commit ad5b742 is very insightful. If you remove the default executor_data field, the workflow completes successfully. If you add executor_data back in (as in the commit), the post-process step fails. Of course, we don't want to delete it otherwise we'll likely run into the sublattice issue again. But hopefully this should help with debugging where the root cause of the issue is!
Edit: I feel like it might have to do with this block.
Side-note: It will probably be worth adding tests for #1736 and for the example raised here once we sort out the root cause. I had an initial attempt in #1799, which I can re-open once this error is patched or someone from the team can copy when they patch this issue.
This issue is a part of Hacktoberfest.  Closing this issue will earn you 2 points.
Edit: I feel like it might have to do with this block.
@Andrew-S-Rosen You're absolutely right. Will be fixed in #1849 .
