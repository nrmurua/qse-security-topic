When calling the register function which uses a provider which provides backends of the same name as ones previously registered no warning is given.
An exception should be raised if a backend of the same name is already registered. In addition, the register function should provide some way of changing the names of the backends available with the provider being registered e.g. by prefixing/postfixing all backends with a string.
This could happen through the backend.__init__(configuration) call.
It appears that the new provider is added but when getting a backend by name it only gets the first registered.
The behavior when registering two providers that provide backends with the same name is indeed "undefined" (as you mention, in practice get_backend() will always pick up the first provider, as it basically iterates through them in the order they were inserted) - I agree we should at least warn about this behavior one way or the other.
I'm not sure however if we should add some extra mechanism for coping with this scenario via register() -  perhaps it would just make sense to consider it "slightly advanced usage outside the scope of the helper functions", and solve it via documentation that guides those users towards using the Providers directly, as in:
My main doubt is if we can achieve an implementation that provides support for the feature and at the same time keep the helper functions as simple as possible, as I fear solving via small tweaks such as changing the "canonical" names of the backends might end up being a bit confusing and defeating the purpose of the wrapper functions as a whole. What does the rest of the team think?
Some methods of interfacing with new providers at the wrapper level from today's discussion,
Method 1
Method 2
Method 3
What I was suggesting is that the backend name, perhaps just at the wrapper level, can be composed of a part which the backend defines, e.g. 'qasm_simulator_cpp', plus a name defined for the provider, e.g. 'newpro'. Then in response to qiskit.available_backends() you may get ['newpro_qasm_simulator_cpp', 'local_qasm_simulator_cpp'].
Registration could perhaps be handled like,
It seems this was fixed in 0.5.5, in particular at #584  and #602 - please reopen if it is not the case.
