I have found that using the evolve function, I obtain different results whether I use the qibojit backend or not.
The stdout obtained without qibojit is the following:
[Qibo 0.1.6|WARNING|2022-02-09 20:25:40]: numpy backend uses 'np.einsum' [qibojit_issue.zip](https://github.com/qiboteam/qibo/files/8044044/qibojit_issue.zip) [qibojit_issue.zip](https://github.com/qiboteam/qibo/files/8044046/qibojit_issue.zip) and supports CPU only. Consider installing the qibojit or qibotf backends for increased performance and to enable GPU acceleration.     Medium state tensor:  [0.49960005-0.01999467j 0.49960005-0.01999467j 0.49960005-0.01999467j 0.49960005-0.01999467j] Expected value of medium state:  1.9999999999999991 Final state tensor:  [0.49840085-0.03995735j 0.49840085-0.03995735j 0.49840085-0.03995735j 0.49840085-0.03995735j] Expected value of final state:  1.999999999999998
and then using qibojit:
[Qibo 0.1.6|INFO|2022-02-09 20:26:33]: Using qibojit backend on /CPU:0 Medium state tensor:  [0.49840085-0.03995735j 0.49840085-0.03995735j 0.49840085-0.03995735j 0.49840085-0.03995735j] Expected value of medium state:  1.999999999999998 Final state tensor:  [0.49840085-0.03995735j 0.49840085-0.03995735j 0.49840085-0.03995735j 0.49840085-0.03995735j] Expected value of final state:  1.999999999999998
where you can see that the "medium states" and their expected values are different.
qibojit_issue.zip
@carlacarov, thanks for reporting this issue. In principle the behaviour you observe is consistent with our backend implementation.
Qibojit and qibotf perform in-place state vector updates, thus the object is unique and its content changes at every evolve step. This is a requirement in order to limit memory usage, and thus allow the possibility to simulate circuits with a large number of qubits. On the other hand, numpy and tensorflow backends, do not perform in-place updates, thus your code works fine, however is memory inefficient given that you are storing implicitly 3 states, while qibojit/qibotf stores just 1.
However, in order to fix this issue with qibojit/qibotf you can simply copy the result array for medium_state, e.g.:
Then the output is:
We will include some documentation about this point, thank you for reporting it.
That is very helpful, thank you!
