I understand it's been hard to enforce a convention for this and it is different across drivers, but could we at least converge on a recommended one and enforce that as much as possible?
Possibly this would be at least partly resolved (and also make it backwards compatible) to have a parser so that at least setting 'True' or 'on' or '1' would all map to the expected instrument setting . I understand that what the get function should return is a bit trickier (as I would argue for 1 and 0 but I also realise that could be problematic if an instrument has more settings than on and off; maybe we could make a decision on this and then enforce it though, can't be worse than the mix of things that currently exists?)
+1 to this.
Even if it is an edict from the core developers it would be quite helpful to have some clarity on this while writing drivers.
In addition, a parameter class that is in the qcodes base that can handle different variants of 1/0, 'on'/'off', True/False, as opposed to several implementations that exist per driver would be quite helpful.
IMHO all these should use a bool validator but at the moment they do not.
We may need to generalize the validator a bit to make it more flexible
My two cents align with @spauka and @nataliejpg , we should have a name for such a thing (a flickswitch?) and have it live higher up. It should accept True, 'on', 'ON', and 1 as the same thing.
further to this I was wondering where these sorts of functions should/do live? I've discovered williams   newlinestripper in the AWG5014 driver and think the same thing should also be in a couple of other drivers but at this point I feel I should pull it out of the awg driver and make them all use the same get_parser, just not sure where to put that, with the validators? Can then get on and make a pull request for this and also a first suggestion for the initial on/off/1/0 implementation :)
find myself again copy and pasting an on/off parser between instrument drivers and shuddering as I do it... this isn't a huge deal I realise but also the longer it's left the more work it will be to clean up if/when we do decide how to resolve it :(
