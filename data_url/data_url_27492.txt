I noticed that each pulse in a pulse_sequence gets targeted twice when calling layout.target_pulse_sequence(pulse_sequence).
Both are in the method _target_pulse of the layout class.
@nulinspiratie
@lgnjanssen This is correct, I'm not seeing the problem though. In the first case, although the pulse interface targets the pulse, it does not use the targeted pulse. It simply does so to check if the pulse can be targeted. It would probably be cleaner if there was an interface.has_pulse_implementation, but other than that I don't see a problem.
I just think it's not clean (and unnecessary) to call thetarget_pulse method of each PulseImplementation twice. As a user writing an interface, I simply don't expect that method to be called twice on every implementation so I could see how this can cause hard to understand behavior depending on how I write target_pulse.
I think having a separate interface.has_pulse_implementation would definitely be an improvement. We could even use interface.has_pulse_implementation inside the interface.get_pulse_implementation method to eliminate code duplication.
