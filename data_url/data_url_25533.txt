Description
As part of the earlier database, there used to be a description atribute at a lattice & electron level (This was maintained via the doc field in the database). This field is no longer available in the new DB schema (verified until v10). There is a need to re-introduce this since this needs to be shown on the GUI to the user.
Proposed implementation
Note : Until such a time, this field gets introduced, the GUI will not display any description
Hi @FyzHsn - Pls have a look at this and tag/re-assign it to whoever is appropriate.
Cc @Prasy12 @ArunPsiog @santoshkumarradha
@cjao / @FyzHsn  since it is from pickled_func.__doc__, should this be added in the transportable object's meta data ?
Edit: 
@mshkanth Are you not using the function string file as a proxy for the workflow description?
@mshkanth Are you not using the function string file as a proxy for the workflow description?
@FyzHsn - Description is a different field on the GUI from the function_string. We currently display the function_string seperately on the GUI and hence cannot also use it as a proxy for the description.
@santoshkumarradha TransportableObject does store the __doc__ attribute if it exists:
@mshkanth If a function is represented as a TransportableObject, you can access its docstring via TransportableObject.attrs["doc"]
@mshkanth Are you not using the function string file as a proxy for the workflow description?
@FyzHsn - Description is a different field on the GUI from the function_string. We currently display the function_string seperately on the GUI and hence cannot also use it as a proxy for the description.
Ahaa I see!
@mshkanth Can this issue be closed?
@mshkanth Can this issue be closed?
Assigned back to myself. Will clarify with the team and close.
@kessler-frost I see an open PR for doc-strings attributes, is this related to that ?
@santoshkumarradha I cannot find it, can you share the link for that open PR?
@mshkanth If a function is represented as a TransportableObject, you can access its docstring via TransportableObject.attrs["doc"]
As of the latest develop, this should be amended to TransportableObject.attrs["__doc__"].
@mshkanth If a function is represented as a TransportableObject, you can access its docstring via TransportableObject.attrs["doc"]
As of the latest develop, this should be amended to TransportableObject.attrs["__doc__"].
@cjao
I dispatched Astronomy workflow under the tutorials folder and I called the doc attribute with the help of the above method. For instance, the dispatch generated the results.pkl and I unpickled the file. So I did
unpickled_object.attrs["doc"] And it generated a string like the one below
str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.
Is the above method correct?
CC : @Prasy12
@mpvgithub Yes, that looks like the docstring for str
@santoshkumarradha
so this can be considered as description to be displayed on the UI?
CC: @cjao @Prasy12
@mshkanth If a function is represented as a TransportableObject, you can access its docstring via TransportableObject.attrs["doc"]
As of the latest develop, this should be amended to TransportableObject.attrs["__doc__"].
@cjao
I dispatched Astronomy workflow under the tutorials folder and I called the doc attribute with the help of the above method. For instance, the dispatch generated the results.pkl and I unpickled the file. So I did
unpickled_object.attrs["doc"] And it generated a string like the one below
str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.
Is the above method correct?
CC : @Prasy12
@santoshkumarradha Is this the required description field to be shown?
@cjao In the v12 schema version, the docstring for lattice is stored in a "doctring_filename" txt file. Is the output of that the same as TransportableObject.attrs["doc"]?
If that is the case "doctring_filename"  seems to be there only for lattices and not for electrons.
cc: @mpvgithub @santoshkumarradha
Hi @Prasy12, the file docstring_filename has the same contents as TransportableObject.attrs["__doc__"] for the lattice's workflow function. I added it just because the Lattice object has a __doc__ attribute which duplicates the contents of Lattice.workflow_function.attrs["__doc__"]. It's not strictly necessary, just there so that the db schema perfectly matches the Lattice object's attributes.
For consistency the Electrons table should also have the same field, but I overlooked that.
@cjao
Can we expect a similar one for electrons table as well?
@Prasy12 Not in v12, but in v13 which would also fix #1027 .
@santoshkumarradha What is the priority on this?
