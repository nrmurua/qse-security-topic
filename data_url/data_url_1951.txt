test_single_qubit_op_to_framed_phase_form_output_on_example_case has flaked out on me.
This looks like it is blocking submissions to master, so may not even be a flake.
it looks like the code that fixes for global phase isn't working for this case?  Cannot repo on my local box.
Hypothesis is that this might be a numpy update.  https://pypi.org/project/numpy/#history was just updated to 1.19.  I confirmed that the last successful build was on 1.18 and the new failures are 1.19.  Checking to see if pinning fixes.
Confirmed that penning to 1.16 numpy makes test pass.
confirmed that is also fine a numpy 1.18
confirmed that
The same test case will pass with numpy=1.19.0 on my local machine (amd64, ubuntu 16.04.6). I dived into the difference between my local run and the github action CI, and the eigen vector from np.linalg.eig(mat) of  https://github.com/quantumlib/Cirq/blob/master/cirq/optimizers/decompositions.py#L142 differs.
This test is failing for me. It's currently xfailed on windows with a reference to #2468 which is closed
@mpharrigan may you please share your debugging information to us? e.g.
Is this the only blocker for numpy 1.19? @dabacon, are you actively working on fixing the test? We'd like to upgrade cirq internally but are already on 1.19 and so get some dependency conflicts (pip complains; we aren't actually affected by the broken test with the older cirq version). I'd be happy to help out here.
The real test for single_qubit_op_to_framed_phase_form is in test_single_qubit_op_to_framed_phase_form_equivalent_on_known_and_random that covers the actual decomposition. The test that fails depends on a particular order and factors of the eigenvectors that makes it fail on different platforms and numpy versions. The solution to this is to remove the test.
On my Mac (where the tests pass):
On a failed Ubuntu test:
If I multiply up by sqrt(2) the diff is even more obvious:
Left side is Mac (passes) right side is Ubuntu (failed):

The second eigenvector (column vector in vec) matches, it is [1j, 1], however the first one Ubuntu numpy version has the eigenvector [-1j, 1] while the Mac one [1, j] i.e there is a factor of 1j difference.
It seems like that a factor of norm 1 of the eigenvectors is not guaranteed in numpy. Which should be fine in the case of this particular decomposition.
As for the windows tests, both the order of the eigenvectors and their factors are different from the Mac execution:
My experiments are recorded as Github Action runs here: balopat#3
