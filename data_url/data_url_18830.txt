In the official documentation Register concatenation and slicing, an index set is defined as
An index set can be specified by a single integer (signed or unsigned), a comma-separated list of integers contained in braces {a,b,c,â€¦}, or a range.
In the same page of the official documentation Array concatenation and slicing, we can read
Arrays can be sliced just like quantum registers using index sets.
So, if I am understanding this correctly, it means that the following code should be correct:
In the current grammar qasm3Parser.g4#L164, we can read this comment:
// setExpression is only valid when being used as a single index: registers
// can support it for creating aliases, but arrays cannot.
So there are 2 options:
Personally, I would even make setExpression valid everywhere a rangeExpression is valid, making the following correct:
but there might be some intricacies that I do not see yet.
The "discrete set" indexing into an array is a mistake - I think we should remove that implication from the spec text.  It doesn't match with the intended data model of all indexing into arrays behaving as if they are regularly strided views onto some backing data (or are scalar values).
