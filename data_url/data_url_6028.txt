'qiskit-terra': '0.13.0'
'qiskit-aer': '0.5.0'
'qiskit-ignis': '0.3.0'
'qiskit-ibmq-provider': '0.6.0'
'qiskit-aqua': '0.6.5'
'qiskit': '0.18.0'
Python 3.7.4
macOS Catalina 10.15.4
Trying to run the following 6-qubit diagonal gate
ZZ_diag = [(1+0j), (0.9999938539272861-0.003506010218657304j), (0.9999712907214781-0.007577448965261559j), (0.9996557881602176-0.026235571230182175j), (0.9999917114387171-0.004071492830075798j), (0.999971290721478-0.007577448965261559j), (0.99980414409425-0.0197907415718467j), (0.9992607708724145-0.03844361839716993j), (0.9999953376814606-0.0030536233136255657j), (0.9999784856028603-0.006559598418355501j), (0.9999434898619723-0.010630949283084121j), (0.9995710138945487-0.02928802113191882j), (0.999912453227945-0.013232002103706918j), (0.9998599161587111-0.01673762405763971j), (0.9995808935509766-0.028948872997589872j), (0.9988666686752686-0.04759598942737086j), (0.9999833653411203-0.005767932129250246j), (0.9999569969416585-0.009273848576493259j), (0.9999109503288229-0.013345089453063095j), (0.9994878342329566-0.032001081549124545j), (0.9999515928234062-0.009839309423572756j), (0.9999109503288227-0.013345089453063095j), (0.9996733610391926-0.025557214805290447j), (0.9990224083286415-0.04420664720650616j), (0.999792792837875-0.020356114301161313j), (0.9997152792939195-0.02386127293923216j), (0.9996098420908731-0.027931408755371537j), (0.9989145980345333-0.04657924251752774j), (0.9995338040113966-0.030531535148220747j), (0.9994206169297362-0.03403572322994302j), (0.9989303445018319-0.04624031610457419j), (0.9978935749588642-0.06487228264688161j), (0.9998151756380812-0.019225362513944265j), (0.9995576620222293-0.029740213392883352j), (0.9996407924624452-0.026800859035748748j), (0.9986233896044517-0.05245308127188258j), (0.9997286126830952-0.023295943482360304j), (0.9994282900616978-0.033809658743472915j), (0.9992388717501355-0.03900868087381952j), (0.9979082231952452-0.06464656278030352j), (0.9997518071660664-0.022278331808825276j), (0.9994621863570419-0.03279234731459923j), (0.9995542920906691-0.029853260510721253j), (0.9984585617522654-0.055502256382937265j), (0.9994732550095735-0.03245323590287577j), (0.9990766314092572-0.042963758819855084j), (0.998839594072391-0.04816082758113969j), (0.9972741389706538-0.07378544395976858j), (0.9979878758314089-0.06340504470081545j), (0.9972657876554889-0.07389823253554288j), (0.9974787758291596-0.07096542658478973j), (0.9953283688372706-0.09654759545290346j), (0.9977214507628506-0.06746781964516697j), (0.9969566456329688-0.07795798052963303j), (0.9965375811580353-0.08314354659077211j), (0.9940748686335276-0.10869754160621119j), (0.9969566456329689-0.07795798052963304j), (0.9960815487822496-0.08843951704726902j), (0.996337301108057-0.08551013051511919j), (0.9938139037227656-0.11105820441244764j), (0.9961114982688866-0.08810154945580478j), (0.9951297595464919-0.09857363574983549j), (0.9946034677972767-0.10374941853153113j), (0.9916124342323186-0.12924697395240914j)]
I obtain the following circuit result
Result(backend_name='qasm_simulator', backend_version='0.5.0', date=datetime.datetime(2020, 4, 20, 10, 21, 13, 933239), job_id='c80499a1-f568-4a8b-8d49-56b1bc7d65c1', qobj_id='', results=[], status='ERROR: Failed to load qobj: "diagonal" matrix is not unitary.', success=False, time_taken=0.010355949401855469)
I have however checked that np.diag(ZZ_diag).dot(np.diag(ZZ_diag).conj().T) is the identity matrix, so the diagonal is indeed unitary.
Run a 6-qubit circuits that includes the diagonal entry stated above (introduced in the circuit by
circ.diagonal(ZZ_diag,qr))
Expected the diagonal unitary to run and actually get a result with success=True
Maybe a precission issue with is_unitary?
@adcorcol You're correct, this looks like tolerance issue that we are checking in the simulator that it is unitary with much higher precision than Numpy is able to provide.
