Hello !
Computer science student here, I was fidgeting around with the library, and i saw that on the secret agreement method using p751, there is the following comment : Output: a shared secret SharedSecretB that consists of one element in GF(p751^2) encoded in 188 bytes.
Now, 751 * 2 = 1502, and 188 * 8 = 1504. That would mean that two bits are redundant, right ?
However, when running the following mock program :
we see no particular pattern in either the first or last byte. My question is, where are the two missing bits ?
Thanks in advance,
MRandl
Elements (a+b*i) over GF(p751^2), where "a" and "b" are defined over GF(p751), are encoded as {a, b}, with "a" in the lowest memory portion. In turn each of these elements over GF(p751) are encoded as 94 octets in little endian format (i.e., the least significant octet is located in the lowest memory address).
This means that the top bits of elements "a" and "b" are clear (in your example top bits of the bytes secretAgreementA[93] and secretAgreementA[187] should be zero).
Thanks a lot! Sorry to have bothered.
