related to #213 #410
list of examples here: https://qiskit.org/providers#multi-platforms
I am not sure if we want to make an extension package or just include it in the device wrapper because different framework device classes might take lots of space.
we basically want to make a class provider
https://qiskit.org/documentation/apidoc/providers.html#writing-a-new-provider
Example:
Totally agree. And would allow something like QbraidProvider.get_devices() that would invoke programmatic get devices
(#139) to IBM / AWS based on dynamic importer (i.e. return devices list #226 based on which packages are installed). Started on this part in dev branch with _qdevice.py and QuantumClient, similar idea.
This Provider / Client class should also be where users can add any 3rd party (IBM/AWS) credentials. Right now these authentication and configs processes are very sloppy e.g. isolated get_ibm_provider() function (which right now isn't working properly and causing unit test failure) and methods like _qbraid_s3_folder() that gets default s3 bucket/folder from config file, which does not belong in BraketDevice wrapper class. All of this can be cleaned up a lot with a QbraidProvider class.
