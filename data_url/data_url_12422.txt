It seems a useful and general capability in TFQ would be a user facing parameter resolver.  Instead of:
I would like to be able to generate the list of bitstrings via a TensorFlow op, so that I would need to resolve the circuits via something like:
where tfq.layers.ResolveParameters would live next to tfq.layers.AddCircuit in the circuit construction module.  It would fill in any subset of symbols.
This is an interesting idea, do you think we need a full blown layer (i.e. are there multiple differen input signatures we want to support ? ) Also this layer would block differentiability on symbols that get resolved in them along the way (since there would be no way to pass them back). Are we ok with this ?
I can imagine a few input signatures, output always 1-D tensor of circuits:
In the use case I have, the symbols which are substituted for values will not be differentiated.
Sounds good. This looks like it would be a fair amount of work, but nothing super difficult. I'm guessing this would roughly entail:
Are you interested in taking this on ?
These sound like good steps to me :)  I am interested in taking this on, it will be helpful for our research use-case (making the circuit fill-in be part of the TF graph)
