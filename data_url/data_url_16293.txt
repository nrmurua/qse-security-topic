I create an Initialize instruction and pass it to the Aer statevector_simulator. But, the resulting amplitudes differ by a phase from the expected result. For example
EDIT (08APR2021): A closer to minimal example is given in the comment following this one.
EDIT (07APR2021): one line in this example has been edited to remove the dependence on aqua (which is deprecated)
state_array_out differs from state_array by a factor of i.  Uncommenting the line init_circ.data = init_circ.data[2:3] removes the qubit initializations, but does not change the result.
The docstring for Initialize is
This doesn't explicitly say that a global phase is respected. But, I suppose it should be. I also wonder why "assuming the qubits are in the zero state" is included since reset instructions are inserted. (EDIT: The last point is addressed in #5190)
Here is an example that is closer to a Mnon-WE
If, in the above example, we instead take
then the output array  state_array_from_matrix is correct and is the same as the input array.
I opened this issue because it was brought to my attention, but I don't recall where.
The current behavior can be considered correct under some circumstances. If the register is the entire quantum system, then the global phase is irrelevant, so that introducing gates to correct the phase is wasteful. It seems that may be what is happening here. So a couple of questions are
If it is easy to fix the global phase (e.g. by just setting the QuantumCircuit.global_phase attribute) I think we should fix it, it might be confusing if the output of the initialize instructions doesn't match the input.
