Hi, when constructing a TN with psi.gate_(), is it possible customize your tensor? (e.g., fix off diagonal terms or define certain functions in the tensor) Thanks!
Hi, I'm not totally sure I understand this question - with the gate function you can apply an arbitrary array already. Maybe you could give some more specific details?
I think you're already there! just call psi.gate_(T, where) now?
Oh I think I didn't parse the parametrized in the title of this issue, is the aim to optimize the TN w.r.t to the parameters, and thus you need PTensor instances?
In which case have a look in circuit.py at how this is achieved for the preset gates. e.g.:

that implements the function in a autoray compatible way (so many backends can be used), and creates a parametrized array which you could then optimize with respect to.
However, if you just want to construct the TN and contract it e.g., then the parametrized machinery is not necessary.
Hi @jcmgray, I'm trying to create a custom parameterised gate for applying to a quantum circuit. I have tried to copy how 'fsim' is implemented in circuit.py:
After plugging this into a loss-function/optimizer, the apply_gate is causing the error ValueError: The gate 'GIVENS' cannot be parametrized., I tried to solve this by explicitly adding 'GIVENS' to ALL_PARAM_GATES, but this didn't work. Am I missing something?
This line:
redefines ALL_PARAM_GATES locally, not within circuit.py. It should work if you modify the circuit.py source (feel free to submit a PR with the new gate too), or you modify the variable inplace with ALL_PARAM_GATES.add('GIVENS').
Long term it might be worth adding adding an API so that we can add more custom gates easily.
As of 576edce, you should be able to just use:
I'd happily accept a PR adding this gate to quimb proper if you thought that would be useful.
Yes, any part of quimb that uses autoray.do like above supports autodiff.
