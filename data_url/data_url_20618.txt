Will you create another stable release snapshot before merging in 1.1.1i?
last snapshot was on Aug 11, a while ago.
Would it be useful to you?
Hi Doug, it is. I think regular release tag is very useful.
It's good to use tested stable code, and at meantime having some critical update. for example, integrating with 1.1.1h last time which has some CVE fixes. In order to having 1.1.1h, I have to use latest branch right now.
Since our fork is experimental, I don't see an urgent need to echo the releases of our upstream projects. The inclusion of 1.1.1i is part of our ongoing effort to make sure our next PQ-relevant release is as up-to-date as possible.
agreed, not for 1.1.1i
i'm talking about 1.1.1h which is NOT in last release aug snapshot.
should we have a snapshot which includes 1.1.1h ?
We would also have to do a liboqs 0.5.0 release since the suite of supported algorithms has changed since the last liboqs release.
Is there sth missing for a 0.5.0 liboqs release? Might this be a worth-while YE goal?
We would also have to do a liboqs 0.5.0 release since the suite of supported algorithms has changed since the last liboqs release.
yes.
We talked about this in our status meeting today and the consensus was that now is not the right time for a liboqs 0.5.0 release, since we have some but not all Round 3 implementations in right now.  As a result that would also mean not tagging an OpenSSL release now.
Our continuous integration tests for liboqs trigger OpenSSL builds as well, so if the goal is to have a known liboqs/OpenSSL pair that work together consistently, it would be possible to determine commit IDs of such pairs from the past week.
We talked about this in our status meeting today and the consensus was that now is not the right time for a liboqs 0.5.0 release, since we have some but not all Round 3 implementations in right now. As a result that would also mean not tagging an OpenSSL release now.
Our continuous integration tests for liboqs trigger OpenSSL builds as well, so if the goal is to have a known liboqs/OpenSSL pair that work together consistently, it would be possible to determine commit IDs of such pairs from the past week.
thanks for update.
