It would be great if we could cancel active jobs from the client itself, either en masse or individually, without needing to use the futures directly.
The use case here is for situations like using the composites in Ocean, where you may have to go several levels deep (sampleset._future._future etc) to get to the QPU job in order to cancel it.
Not sure what exactly you have in mind. Something like this:
or
or
The last one of those I plan to have relatively soon. I want to refactor the client to better use newly deployed SAPI features for listing problems and downloading problem/answer data.
That refactor will also address #345 (open PR to implement #186), and provide much more elegant and general interface (Future.from_problem_id factory), to problems past and present.
The cancel_all() can only be (partially) implemented after we have support to download problem IDs from SAPI (partial because only the last 1000 problems submitted will be available).
The second form is just a wrapper for the third.
Any of these would be great (as long as you can access the problem IDs for the last two).
Being able to get the last 1000 problem IDs, and then using one of these cancel methods basically solves my problem. However, would it make sense for Client to track the IDs of all the problems submitted through it during its lifetime? Or say, the ID of just the last problem submitted? That way there's no need to hit SAPI at all if you just want to cancel any current active jobs.
Tracking problems locally makes some sense, but not if you have a distributed application, or just multiple local clients.
We've built-in a rudimentary filtering in SAPI, so I'm able to fetch ids for last N in_progress jobs.
Stay tuned. ðŸ˜ƒ
