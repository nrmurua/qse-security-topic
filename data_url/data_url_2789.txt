Example use case: I have a Trotter step that has angles with names like T_{pq} and V_{pq}. I want to use the Trotter step as a template where the angles are parameters. When I try to assign the correct values to the parameters, I end up writing regular expressions to match the angle type and indices. It would be much more convenient to be able to use (T, p, q) as the Symbol name.
Hmm but then we can't guarantee that we can print it out ... and perhaps I'm missing other reasons it needs to be a string?
Well calling str on something never fails, right?
Symbols also need to be serialized into proto fields of type string.
Any issue with simply using str? Well, it might be ugly sometimes but people can always choose to just use strings.
How about you define a class TrotterSymbol(Symbol) which has the name but also stores those properties for you? Then it will work with the existing code for sure.
That just makes me think that we should have a class LetterWithSubscripts(Symbol) here.
That seems like a nice class, but I think we should wait for more use cases to appear before adding it to cirq proper. Put it in openfermion-cirq for now and we'll pull it over if someone else suggests it.
Ok I agree that the way to go is to create Symbol subclasses.
