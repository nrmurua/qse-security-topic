The '_' in the name of QuantumRegister forces the following character to be rendered as subscript
In this example see the 'r' is rendered as a subscript.

The problem vanishes when the number of qubits is increased to 2 or more.

from qiskit import QuantumRegister, QuantumCircuit
num_of_qubits=1
q_reg=QuantumRegister(num_of_qubits, 'q_reg')
qc=QuantumCircuit(q_reg)
qc.draw(output='mpl')
This should be the output:

No response
Thanks for spotting this. Actually the second case is incorrect as well. It should be q_reg0.
@javabster Can you assign this to me? Thanks.
@enavarro51 , actually I was working on this, now, since you have asked for the permission. You go ahead with this and I tell you my recent progress in this:
Go to qiskit/visualization/matplotlib.py#L456
I changed this:
words = [word.replace("", r"_") if word.count("") > 1 else word for word in words]
to this:
words = [word.replace("", r"_") if word.count("") >= 1 else word for word in words]
and got the image I mentioned in the what should happen section above.
and you put "^" in place of "_" and see new hosts of problems
Now, you take it from here :)
Thanks, @MozammilQ. I believe this is a bit of a deeper problem with register naming. We'll probably need to get some input from the IBM side for this. OpenQASM 3.0 says this about names.
"Names of gates, variables, and constants — In OpenQASM 2, the names of registers
and gates must begin with a lower-case alphabetic ASCII character. This constraint is
relaxed in OpenQASM 3: identifiers may now begin with other characters, such as capital
letters, underscores, and a range of unicode characters. For example, angular values used
as gate arguments may now be represented by greek letters. (The identifier π is reserved in
OpenQASM 3 to represent the same constant as pi.) Note that OpenQASM 3 has a slightly
different set of keywords from OpenQASM 2. This may cause errors in OpenQASM circuits
which happen to use a keyword from version 3 as an identifier name: such identifiers would
have to be renamed in order for the source to be valid OpenQASM 3."
In OpenQASM 2.0, names were restricted to alphanumeric and underscores. This means '^' should not have been allowed in register names. In #3827 an attempt was made to fix more than one underscore in a name displaying with matplotlib. But that solution was not complete and no tests were added, so part of that problem is showing up now.
The final problem is that the text_width calculation in matplotlib strips out the underscores, which for multiple underscores in a name, results in an incorrect text_width which can lead to letters being cut off to the left.
So a solution could be to put a validity check for what are proper 2.0 and 3.0 names., do the replacement of '_' with '\_', and finally fix the text_width calcs to properly handle '_'.
Oh Nice! I didn't know that the problem could be this deep, @enavarro51 thanks for sharing the information, you do have a deeper understanding of the problem :)
