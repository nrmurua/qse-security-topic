There should be some clean way for the user to update the executor of an Electron once it is has been defined or imported from some external Python package. See #1646 for the full context.
@santoshkumarradha has good suggestions here: #1646 (comment)
hey @arosen93 , this is a long backlogged item on our plate. Ideally the best UX is to have something like
Could @kessler-frost confirm if using energy_electron.metadata["executor"]=MyExecutor() would be a valid solution? I'm uncertain if it would properly set everything needed. I recall encountering some issues with UX1 in the past, but perhaps they have since been resolved and we can revisit the matter.
Meanwhile I am just curious if using a UX2 would be a good fit for creating custom electron packages.
In certain scenarios, UX2 may be more suitable as it allows for the creation of multiple electron instances with unique parameters through a factory pattern. This is not achievable in UX1, which is designed to return a singleton electron instance with a specific tied instance. Infact our initial interest in UX1 was coming in from a perspective of changing executor inside an interactive notebook after electrons have been defined.
LMK your thoughts.
Modifying the electron_object.metadata directly, but this doesn't seem like a "suggested" approach.
