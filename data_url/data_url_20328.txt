There are several problems with the recently merged KAT checks on master:
The problem is that rand_nist.c calls OpenSSL's AES 256 implementation via the OpenSSL EVP API.  We don't have AES 256 in our src/crypto/aes.h implementation.
So our options are:
3 seems like the proper choice -- and it will also allow us to build KATs on Windows.
To do 3, we need to:
What's the status of this item?
I didn't have a chance to look at that yet; I'm hoping to get to it this week.
I just took a look. rand_nist is failing because of its dependency on OpenSSL, as noted above. @smashra, do you have a PR somewhere I could look at with some refactored code pulling in @dstebila's new AES code?
I'm also wondering how important it is to build/verify KATs on Windows. The point of KATs is to make sure an alg is well implemented; and our Linux build would catch errors. The Windows build is to allow devs to use the library on Windows; ideally KAT support would be there but it's not essential, IMHO.
Perhaps we can merge PR #386 and create another issue to track adding kat_kem to Visual Studio
Resolved by #386
I added issue #388 to track adding kat_kem to VisualStudio.
