Instead of this:
RZ(-3.141592653589793) 0
let's print this:
RZ(-pi) 0 which is valid quil.
This will aid in program understanding.
Hint to implementers: look at the format_parameter function in quilbase
Hello,
I implemented this last night using np.float32 and fractions.Fraction.  I wanted to verify the expected behavior before making a pull request.  Here are some printed results, which after obvious adjustments to the test cases pass tests for python2 and python3.
The main idea is to use fractions.Fraction to see if np.float32(element/np.pi) == np.float32(p/q) for some fraction p/q with q <= 140 (arbitrary cutoff).  One important edge case to think about is
In python2 and python3,
This is the main need for considering these subtleties.
Was this the sort of solution you had in mind?
You could use np.isclose instead of comparing floats directly to deal with your second issue.
This looks good, the only thing I'd change is just reducing q to be much smaller, maybe 8. We only want to pretty print in the simplest of common cases like 3pi/4, pi/8, etc. Anything beyond that doesn't come up very often.
Looking forward to checking out your PR!
