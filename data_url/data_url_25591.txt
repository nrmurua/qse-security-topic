Currently there is a lot of boiler plate for executer plugin, We need to make it easy to create custom executers without all the fancy bells. For example, all the user needs to construct could be made into this
In baseexecuter, we can wrap this self.execute function with something else that does various things we are doing right now, like setting status to running, changing conda env, module loading etc... Ideally we want users to do as minimal things as possible to create plugins. Inspiration from prefectâ€™s
Please add your planning poker estimate with ZenHub @kessler-frost
Where is the user expected to specify other relevant state to the executor, such as SSH credentials or Slurm options? Are the existing base init options like log_stdout, log_stderr, still going to be customizable by the user?
Where is the user expected to specify other relevant state to the executor, such as SSH credentials or Slurm options?
That will depend on the user when they create the executor, we will only be providing an interface to the main executable function.
Are the existing base init options like log_stdout, log_stderr, still going to be customizable by the user?
Yes, for more advanced users, they will just access these values from super if needed.
