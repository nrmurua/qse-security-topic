Compiling a kernel method fails in the symbolize method when the 'line' variable contains a trailing carriage return.
When we try to execute an experiment on the core device, we sometimes get a "ValueError: invalid literal for int() with base 10: '?\r'" on line 226 of targets.py (full error output is below).
For one of our experiments, there is a line that is parsed as "?\r".  i.e. set to "?" but with a carriage return appended at the end.  This might be due to some non-standard formatting in our code but I haven't tracked it down to a specific line.  This is fixed, however, if I change line 222 in artiq/compiler/targets.py from
if line == "?":
to
if line.strip() == "?": 
We have not been able to find the exact source of the appended carriage return.
kernel method should compile
A specific kernel method does not compile.  Here is the error log output:
Can you attach a file that causes the problem?
This doesn't seem to be happening in Artiq version 3.7.  It is not, at least, for our experiment that was failing in Artiq 3.6.  After debugging under version 3.6, it seemed like the issue had something to do with using multiple return statements in a kernel method when using inheritance.  The incorrectly parsed line come from a kernel method that had three return statements.  I only wen't down the rabit hole so far, and wasn't able to pin point the exact problem.  But it seems like this isn't a problem in version 3.7.
