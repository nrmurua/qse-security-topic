The get_inverse method currently returns DaggerGate objects.  For small gates (single-qubit gates, CNOT, etc), is there a reason to save these as, eg, DaggerGate(CNOTGate) rather than just computing the adjoint (in this case, again CNOT)?
The rough use case is something like
U^dg @ O @ U @ psi,
where U is given by some circuit.
One might then want to print the full circuit, including reversed gates, to qasm (currently not possible with DaggerGate).  Also to get gate counts where DaggerGate(CNOTGate) is just counted as CNOTGate
Awesome suggestion! We can accomplish this by adding a get_inverse method to the gates themselves, with a default being the current DaggerGate setup.
Most of the constant gates that are in BQSKitâ€™s library have their inverse implemented as well.  Many of those gates e.g. (Cliffords, CNOT, SWAP) are their own inverse.  Some e.g. (T, S) have their inverse as a separate gate (tdg, sdg).
You should be able to invert the parameterized gates simply by negating the parameters (and then re-normalizing to the 0-2pi range if desired).
I'm giving this one a shot, looks interesting!
