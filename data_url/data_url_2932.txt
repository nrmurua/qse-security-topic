Very awkward to get an XmonQubit out of the frozen set, usually I just end up creating my own.
Not sure if it is worth exposing but maybe adding a qubit_at(row, col) method would help and it could also throw if outside the range of supported locations (especially nice when writing code against odd shaped lattices)
+1. It's related to #263 as well.
An obvious fix is to keep the qubits internally as a list and convert them to a set if necessary. That would prevent the order in which they were added.
I've been playing with adding slicing support on xmon device using numpy masked arrays, then you can do device[row, col] to get a qubit in a particular position, but you can also use the full power of numpy array slicing to do things like device[:, col] to get all qubits in a particular column, say. I'm still playing with this, but I can try to put a PR up.
