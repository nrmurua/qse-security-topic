Description of the issue
Today GridDeviceMetadata always stores qubit_pairs such that the left <= right (lexicographically) in a pair, so the pair (right, left) is not in GridDeviceMetadata.qubit_pairs.
Is this intended behavior? AFAIU the DeviceSpecification proto doesn't guarantee an ordering within a qubit target. The caller could sort the pair before checking against qubit_pairs, in which case the fix is a docstring change for qubit_pairs. Or alternatively qubit_pairs can be implemented with a special set that accepts pairs in both directions.
How to reproduce the issue
Flip one of the qubits here and rerun the test.
Cirq version
0.14
@MichaelBroughton
We assume that GridDevice will always be symmetrical, so if there's a device where a 2-qubit gate can only be done in one direction, then we should create a new gate type and corresponding new device metadata type.
For device specification proto: Calibration metrics are not in the device proto but assume bidirectionality. Device specification proto can specify one-way edges. So, we should introduce a new asymmetric type or raise an error.
To clarify, this bug is indeed about the bidirectional case. The bug (or feature?) is that a pair (l, r) is only considered to be in qubit_pairs if l < r, even though (r, l) is a valid pair. Today the DeviceSpecification is allowed to specify either (l, r) or (r, l).
We could either make GridDeviceMetadata keep the requirement that l < r, in which case the docstring needs to be updated and the caller can sort the pair, or remove that requirement.
I think this should be automatic.  GridDeviceMetaData should sort the pairs automatically for you, removing the burden from the caller, and making the behavior consistent.
That's my preference as well. Will send out a fix.
