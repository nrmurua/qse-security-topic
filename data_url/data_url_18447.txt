My proposal here is to add a slot to the compiler class ( https://github.com/rigetti/quilc/blob/master/src/define-compiler.lisp#L367 ) which stores a generator for random instruction sequences to which the compiler applies. If this is empty, we can fall back on the logic already in translator-tests.lisp, but for cases where it's difficult to deduce what instructions will pass a guarded compiler, we can rely on the compiler author to manufacture them for us.
You could extend define-compiler to consume a global option which records this generator, but I think it'd look cleaner in the source to just setf the slot outside of the define-compiler form. A downside to this "cleanliness" is that re-defining the compiler during development runs the risk of destroying the contents of this slot. I don't know how I'd prefer to handle that.
