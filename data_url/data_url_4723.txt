This issue has been tagged for a bounty during unitaryHACK
It would be great to have a compiler in Strawberry Fields that:
This could significantly reduce overhead during computation.
As an example, consider the following diagram:

This circuit contains a mixture of Gaussian gates (green) and non-Gaussian gates (red). While the cross-Kerr gate in the middle of the circuit prevents us from combining all Gaussian gates, we can create two Gaussian gates, S1 and S2:

Note that this grouping is not unique! We could have potentially included the second beamsplitter within S1, rather than S2 as we did.
I am interested in working on this issue. Which file/folder should I start looking into?
Hi @lilianchih, that's great! ðŸ™‚
The best place to start is to look at the existing compilers in SF, located here: https://github.com/XanaduAI/strawberryfields/tree/master/strawberryfields/compilers
I would also be interested in giving a shot at this one. And I am open for collaborationÂ @lilianchih.
I have a few ideas.
I guess, the main goal is the minimize the total number of combined gaussian gates at the end. A simple heuristic, would be to start from the beginning of the circuit, combine as most gates as possible and then start a new group when it is not possible to include gate anymore in the previous group.
Also, I think it is possible to use a dynamic programming approach to get the optimal solution. But, this would required a bit more thinking.
@maxtremblay I am happy to collaborate.
I am also thinking about the greedy algorithm that you described. I think it is optimal in the sense that it results in the minimum number of groups.
Neat ideas @lilianchih and @maxtremblay ! You could also represent the program as a directed acyclic graph and use some of the tools from networkx to start reducing nodes until you are only left with Gaussian transformation interleaved with non Gaussian ones.
A very basic test for your_compiler would go as follows:
Heres an edit to that test to make it more complex, it uses three qumodes:
Here is my commit with a working implementation of Gaussian Merge: https://github.com/federico0112/StrawberyFields_GaussianMerge/commit/633052d292a9092b29cfbce5436ba367be9a773e
Implemented in #591
