14:42 < rjo> ysionneau: good that you added the -or1k suffix to the llvmlite package.
14:43 < rjo> ysionneau: but: it would be really great if we could also install that under that name
(llvmlite_or1k) in the package tree
14:43 < rjo> because then you can actually install your regular native llvmlite in parallel with the
one linked against the or1k-llvm
14:45 < rjo> afaict there would just be a bunch of s/llvmlite/llvmlite_or1k/ in the artiq source.
14:45 < rjo> the native llvmlite is used by numba, which i tend to use.
14:46 < ysionneau> ah ok
14:46 < rjo> ok if i file an issue for this to keep track?
14:46 < ysionneau> yes sure
14:46 < ysionneau> but I'm not sure I understand exactly how to do that
14:46 < ysionneau> in $HOME/miniconda3/pkgs the name of the package is already -or1k
14:47 < rjo> yes. but in the install tree.
14:47 < ysionneau> ah in pkgs/llvmlite-or1k-0.2.1-py34_0/lib/python3.4/site-packages
14:47 < ysionneau> ok
14:47 < ysionneau> I guess it's a setup.py option?
14:47 < ysionneau> to change the package name
14:47 < rjo> less an option. more a field.
14:47 < rjo> exactly.
14:48 < rjo> would need to patch that.
I was able to generate a conda package for linux-32 and linux-64 (and run the transforms.py unit test).
But it won't compile under win32 (with Visual Studio) if I set -DBUILD_SHARED_LIBS=ON :/
@whitequark any idea how to fix the win32 build when generating shared libs?
What's the error message?
Here is the entire compile log on win-32: http://pastebin.com/A94KMNVG
some words are in French, sorry about that.
ok, let me build it locally
If you want to reproduce in the same conditions, from artiq root you can do :
cd conda
conda build llvmdev-or1k
(you need either anaconda or miniconda + visual studio installed)
plus you need to modify bld.bat in llvmdev-or1k to add the -DBUILD_SHARED_LIBS=ON
ugh, it requires win8.1. don't have it...
What is requiring  win8.1 ? I only have win 7
VS2013: https://github.com/m-labs/artiq/blob/master/conda/llvmdev-or1k/bld.bat#L6
I don't have win7 either, anyway
I have VS2013 in my win 7 vm.
Beware there are two VS2013, one to build weird win8.1 tablet apps, and one labeled "VS Express 2013 for Desktop" which is the good one for normal desktop applications.
hm, the MS website and the installer insist it requires 8.1
do you want the x86 or amd64 one?
For now I'm building only win32 packages so x86 one.
ok. fyi win32 is the API name for the x86_64 system as well, so that's a bit confusing
Ah ok, didn't know that, that's a bit misleading.
By the way, you really should build Debug binaries, or at least MinSizeRel if a few GB of debug info is too much. The optimizations are taking a lot of time and there's little use to them.
Reproduced.
Haha, so, well. "Shared libraries are not supported on Windows" http://llvm.org/docs/CMake.html
Ooook, awesome. Thanks ^^
Would you recommend going back to using static library for linux+win? Or just for Windows?
I would think that the advantage of consistency across platforms outweighs any gains from using shared libraries.
I would suspect that the numba folks have put a lot of thought into these questions. Maybe just sticking what they do is smart.
They just use llvmlite.
They package llvm and llvmlite for all OS.
Fixed in 90ba9f7
The patch that renames the package should not be called "add all targets".
@jboulder could you run the anaconda python interpreter and run : import llvmlite_or1k.binding as llvm please?
If it does not work, it means your llvmlite-or1k conda package is not up to date.
In that case I would suggest you do something like:
conda remove llvmlite-or1k
rm -rf $HOME/anaconda3/pkgs/llvmlite-or1k-0.2.1*
conda install llvmlite-or1k
Follow suggested resolution.
Does ARTIQ work? no...
Update artiq, the latest one definitely imports llvmlite_or1k there and not llvmlite.
OK. Good to go now. :)
Mandelbrot is beautiful.
