Description of the issue
The usage context is to run hybrid variational circuit fast. For a small circuit of 2 qubits, consisting of ZZFeatureMap and RealAmplitude, I find cirq.resolve_parameters to be ~15x slower than if I were to reconstruct the circuit from scratch with concrete numbers replacing the parameters instead.
How to reproduce the issue
Result:
Cirq version
You can get the cirq version by printing cirq.__version__. From the command line:
Past issue: #1899 and its resolution #3205.
With Qiskit:
Tracking down the slowest part of cirq.resolve_parameters for this example, >90% of the time is spent on 
Replacing import sympy with import symengine as sympy throughout the library, I got
@NoureldinYosri  to test if its potentially a library loading issue by rerunning the test multiple times.
We should also look at symengine and see if it breaks any of our tests.
well it's not a library loading issue.
I can take up this issue.
@rht I merged this PR #6128 a couple weeks back to improve performance quite a bit. Let me know if things look good on your end!
Yeah, it does speed up a lot to be usable for experimentation, thanks a lot for it!
I did try using symengine on top of #6128, but it slowed the elapsed time instead.
Closed via #6128.
