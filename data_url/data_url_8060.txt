Entering a wrong dissipation operator in e_ops can make the Python kernel crash. (No exception raised, no traceback.)
In the example below, the user is erroneously entering state.dag() * state instead of state * state.dag(). The former evaluates to a number (still represented by a Qobj though), the latter is a suitable projection operator.
Raise an exception, ideally with information alerting the user to the fact that the provided jump operator is not a valid operator.
No response
Looks like the kernel crash is caused within cy_expect_psi (in this case called from sesolve in line 381 on qutip-4.6.X). Could check for dimensional compatibility of the provided Qobj's at the entry points of mesolve and sesolve?
Thank you for finding. We will fix that quickly.
I tried to run the code posted by @jkochNU, and it runs successfully in my machine. Though, the result is that the expectation value is a array of zeros. Given that the initial state is the eigenvalue of the Hamiltonian, we should expect it to be all ones instead of all zeros.
Here is my qutip.about:
