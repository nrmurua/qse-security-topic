Once, the Result.persist and Result.load_from_db (This is not required any longer) have been implemented, we are ready to switch the older save and load methods with these implementations. This now means that the dispatcher will be using the DB after this change is made.
The persist/load_from_db methods would be analogous to Result.save() and ResultsManager.get_result(). Their implementation however will be more delicate since the Result object is being split into many pieces. Extensive testing will be needed to ensure that the DataStore faithfully captures the Result object, and that the persist/load operations are inverses of each other.
Acceptance criteria
@FyzHsn For the first acceptance criterion, would we basically just have to remove this line

"Where do electron outputs get written and does that impact DB implementation?"
The node result is retrieved from the executor.

Node result is generated and returned by run_task

run_task is added to the thread pool

Callback is added and thread is executed

Callback calls update_node_result

DB is updated

Conclusion: The electron results are already handled in the DB by update_node.
Notes regarding the implementation in 7a5850f
get_result_from_db and the methods that depend on it will not return an object that has a transport graph. it returns a "dumb" result object constructed from data in the lattice table.
When constructing the result object to be returned, I'm not sure I'm handling lattice kwargs correctly.
