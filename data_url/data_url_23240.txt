Dont think this is related to lock():
KeyError                                  Traceback (most recent call last)
C:\Users\Remi\Documents\GitHub\pyrpl\pyrpl\pyrpl.pyc in _save_window_position(self)
530
531     def _save_window_position(self):
--> 532         if self.c["dock_positions"]!=bytes(self.rp.main_window.saveState()):
533             self.c["dock_positions"] = bytes(self.rp.main_window.saveState())
534         try:
C:\Users\Remi\Documents\GitHub\pyrpl\pyrpl\memory.pyc in getitem(self, item)
196         self._reload()
197         try:
--> 198             return self._data[item]
199         except KeyError:
200             for defaultbranch in self._defaults:
KeyError: 'dock_positions'
Could you explain what benefit we get from those dock positions? Is it possible to save them in cleartext format?
Is this issue solved or does it still exists ?
I dont know. But is it possible to put the dock positions in cleartext into
the config file?
On Nov 2, 2016 10:53 AM, "SamuelDeleglise" notifications@github.com wrote:
Is this issue solved or does it still exists ?
—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub, or mute the thread.
That would require to reprogram manually the function that was developed by the Qt developers...
Is it so annoying?
By the way samuel, are you familiar with the concept of 'code smell' (see
wiki)? Maybe my view is biased but I have the impression we introduced a
lot of smelly code in the past few months, I guess we should do a serious
cleanout around christmas..
On Nov 2, 2016 5:25 PM, "Leonhard Neuhaus" l.neuhaus@web.de wrote:
I find it annoying especially since im afraid that binary data in a .yml
file might cause problems on different platforms. I suggest we do some
robust exception catching around the routine that loads and stores these
data so that pyrpl doesnt have to rely on them. Does this dock stuff make
my window position stuff obsolete or can it be merged together?
I still use your window position to position the main window within the screen, however, the positions and states of the dockwidgets (are they docked or free) are stored in the binary string. I am not sure converting binary data into a string is so dangerous... I would be more affraid of the bugs we could introduce by recoding all the dockwidget state saving/restoring logic.
Regarding code refactoring. That's sure it would make sense, also adding more comments and unittests
Well, the issue above proves that the dock positions have compromised the
lock functionality before for whatever reason, binary data or not-so-robust
Qt interface. So can we at least handle any exceptions from this?
On Nov 2, 2016 5:37 PM, "SamuelDeleglise" notifications@github.com wrote:
I still use your window position to position the main window within the
screen, however, the positions and states of the dockwidgets (are they
docked or free) are stored in the binary string. I am not sure converting
binary data into a string is so dangerous... I would be more affraid of the
bugs we could introduce by recoding all the dockwidget state
saving/restoring logic.
Regarding code refactoring. That's sure it would make sense, also adding
more comments and unittests
—
You are receiving this because you commented.
Reply to this email directly, view it on GitHub
#79 (comment), or mute
the thread
https://github.com/notifications/unsubscribe-auth/ARbSr3CYx7071B30PpRLf4_-n3o2F8Izks5q6LwsgaJpZM4J7v-K
.
Ok, the problem was that the dock position entry wasnt in an older config
file. There is a default config file logic for this kind of situation that
should be used when functions are added. Check default.yml and the
associated logic of the memorytree class, or just add default dock position
binary data to default.yml in the hope that that works
On Nov 2, 2016 5:40 PM, "Leonhard Neuhaus" l.neuhaus@web.de wrote:
Well, the issue above proves that the dock positions have compromised the
lock functionality before for whatever reason, binary data or not-so-robust
Qt interface. So can we at least handle any exceptions from this?
On Nov 2, 2016 5:37 PM, "SamuelDeleglise" notifications@github.com
wrote:
I still use your window position to position the main window within the
screen, however, the positions and states of the dockwidgets (are they
docked or free) are stored in the binary string. I am not sure converting
binary data into a string is so dangerous... I would be more affraid of the
bugs we could introduce by recoding all the dockwidget state
saving/restoring logic.
Regarding code refactoring. That's sure it would make sense, also adding
more comments and unittests
—
You are receiving this because you commented.
Reply to this email directly, view it on GitHub
#79 (comment), or mute
the thread
https://github.com/notifications/unsubscribe-auth/ARbSr3CYx7071B30PpRLf4_-n3o2F8Izks5q6LwsgaJpZM4J7v-K
.
I didn't know about the default.yml file, Instead, if the key is not found, it saves the current position before attempting to read it.
In principle, the Qt function restoreState doesn't throw exceptions, even if the binary data is corrupt, it returns a non-zero-value (C convention). I log this value
At this stage, it is in principle safe, whatever the config file state is...
