@jlapeyre recently noticed that you can get the compiler to spin its wheels by passing in a program that uses PRAGMA PRESERVE_BLOCK and within that block touches some illegal (dead) qubit.  It seems reasonable to me that, since one of the intentions of a preserved block is to prevent rewiring logical qubits, if any illegal qubit is referenced an error should be raised (because it will never be rewired to a legal qubit).
loosely related PRESERVE_BLOCK infiniloop bug: #441
Oh, yeah, I totally forgot about that.  #489 closes this issue, but not #441. And having solved this issue, I'm still none-the-wiser about #441
Actually, I kinda do.
In
the compiler will for whatever reason choose for the partial rewiring L2P #(2 3 0 1).  When it reaches the preserved block, which references qubit 1, it can't rewire it since it lives in a preserved block.  Somewhere in the logic for advancing the rewiring there should be a check that the rewiring can reasonably be applied (i.e. a preserved block does not use previously rewired qubits).
Likewise the logic that builds the partial rewiring should make sure it takes into account preserved block qubits.
