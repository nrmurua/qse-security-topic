functools.lru_cache is not thread safe. It has been used into several places to maintain the cache and thus should be replaced by some thread safe caching.
could try cachetools: https://cachetools.readthedocs.io/en/latest/
The code for functools.lru_cache (at https://github.com/python/cpython/blob/3.6/Lib/functools.py#L470) notes that "The internals of the lru_cache are encapsulated for thread safety".
functools.lru_cache is not thread safe. It has been used into several places to maintain the cache and thus should be replaced by some thread safe caching.
It seems that functools.lru_cache is thread-safe. I agree with som-dev .
That means lock just supports for lru_cache itself, not supports for user function
That means lock just supports for lru_cache itself, not supports for user function
Totally right. It doesn't work like a singleton, but allows the same function to be called for a few times, in a different threads if they started around the same time. Lock is not over the actual function call.
