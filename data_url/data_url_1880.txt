We have both @dabacon to comment on the details.
I think this refers to the circuit-transforming optimizers and whether they should modify a circuit in place or return a copy with the desired modifications.
As a point of evidence, in ReCirq qaoa experiment I wrap all circuit transformers into a functional version with mutate=False as a default keyword argument: https://github.com/quantumlib/ReCirq/blob/master/recirq/qaoa/gates_and_compilation.py#L670
Cirq Cynque discussion:
This approach is especially nice when combined with pipeline operators. IDK if there's a way to do that in python. (Mostly F# background).
Transformers superceed this. Always returns new circuit. Closing.
