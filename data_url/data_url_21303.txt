When running the dashboard on Windows one does not typically have access to the Python stdout if the process crashes (as one normally uses pythonw to avoid clutter from the Windows terminals). This means it can be difficult to capture error tracebacks from infrequent bugs.
The dashboard should log its output to a rolling set of log files, so one can always access the traceback from crashes.
Logging to files is generally useful, also for master/ctlmgr.
For debugging the type of crash that @cjbe is talking about, and can potentially be e.g. a hard crash inside C++ Qt code, Python logging will not help.
Best is to redirect stderr and stdout to files in this case. @cjbe how exactly are you starting the dashboard? conda does not properly support pythonw so I guess you wrote your own script?
The master already supports logging to files, and the controller manager already supports sending its logs to the master.
@sbourdeauducq typically we start the dashboard from a Windows batch script:
Okay, what about simply redirecting to a log file in that script? The dashboard does not normally produce a lot of output.
command >> log.txt 2>&1
Yes - this seems to be the right kind of thing to do. However I don't see how to do this without causing a residual windows terminal left floating around (but this might just be my lack of Windows knowledge).
If this doesn't work, maybe try this instead:
https://www.reddit.com/r/Python/comments/4szp90/how_to_test_pythonwexe/
