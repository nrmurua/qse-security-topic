@santoshkumarradha commented on Wed Dec 15 2021
Currently we do https://github.com/AgnostiqHQ/covalent-staging/blob/9348253dbb3037616e18c12b7b5b0d83c3f21b62/covalent/_results_manager/results_manager.py#L68 to check if result is updated. This is bit of a bad design as when running in wait mode, we are reading a file that is actively be written to by the dispatcher without proper flushing. Ideally we would want to wait till the file has been modified and then read it again and flush it properly and not read it infinitely in a while loop. We should use more standard observer tools/patterns for watching like watchdog - https://github.com/gorakhargosh/watchdog
@santoshkumarradha @wjcunningham7 design question for you.
The issue of constantly reading the file in wait mode was handled in #483. Is that enough to address this issue?
If not, then I think the next step is to more elegantly handle server/client communication so we're not using a while True. We can alert the client that the result is not ready and instruct it to make the request again after some amount of time.
A more complex but potentially more stable and performant solution suggested by @venkatBala  is to use a message queue to notify when the results is ready and use a websocket to pass this notification to the client.
LMK which approach you prefer on this issue
@scottwn I believe option 2 will be minimal work with a reasonable improvement.  If so, please proceed with that option.
