There are multiple issues present with the upload of .elf files. In the default case that auto-upload is enabled, those issues only manifest in error messages, but the upload itself works. With auto-upload disabled no error is thrown but .elf files are also not uploaded. However, this is compensated by another bug which makes it difficult to actually deactivate auto-upload.
The following lines:
Cause the following error:
This is caused by self._upload_job in zihdawg.py still being at it's default value, being None. This can relatively easily be fixed by modifying ELFManager._update_upload_job_status while still keeping validation of successful upload in the follow way:
While this is not changed the problem can be circumvented on the user side by first arming the program, which works but throws the same error, which can now be caught, and then running the program:
I am unsure while this error does not occur for other users. If my solution is satisfactory I can create a pull request to deploy the fix.
More problematic is what happens when auto-upload is disabled, which can be seen by this:
not causing an error on program run. This is a problem however because it turns out that the the program is not actually uploaded. This can easily be checked by either observing no output signal from the awg or by checking that sequence on devXXXX in LabOne stays empty. This is caused by the following:
Upon this:
Manual upload is supposed to be triggered if compiler/upload is 0 by zihdawg._start_elf_upload(elf_file). In there it is checked wehter the program is already uploaded in order to not perform unnecessary uploads by the following:
The problem is that current_elf != elf_file is always False as elf/file does not return the uploaded file but rather the compiled one as current_elf. This can be seen in the docs:

As elf_file is set when instructing the ZIdriver to compile the file, these values are always equal (see top-left corner):

It does not appear possible to me to get the actually uploaded .elf file to check for successful upload. Note that this must be possible in some way as apparently LabOne can do this as the sequence on devXXXX-tab suggests.
Possible solutions:
It appears to be impossible to disable Auto Upload from the LabOne interface in 20.07, the Auto Upload button simply does nothing. Unsetting it resets to be set on page refresh (which is different to other settings) and changing it's state has no influence on compiler/upload, it is always 1 if not set from the API. Setting it to 0 from the API does also have no influence on LabOne while the result is apparently registered and applied in the device itself. Therefore Auto-Upload is always enabled for almost all users.
sadly, the new _update_upload_job_status does not fix the issue as it runs into more problems regarding None-values for me.
@Nomos11 Have the error's persisted? I just tested my solution and it still works.
