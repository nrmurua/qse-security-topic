Running a VF2PostLayout on a quantum circuit with an initial layout that is optimal, i.e. already has the lowest cost for the given target quantum computer, returns VF2PostLayoutStopReason.NO_SOLUTION_FOUND and None as post_layout in the property set of the pass.
VF2PostLayoutStopReason.SOLUTION_FOUND
Layout({
2: Qubit(QuantumRegister(4, 'q'), 1),
1: Qubit(QuantumRegister(4, 'q'), 2),
3: Qubit(QuantumRegister(4, 'q'), 0)
})
VF2PostLayoutStopReason.NO_SOLUTION_FOUND
None
VF2PostLayout should always populate the post_layout field, if the pass can determine a layout that does not require the insertion of swap gates. Alternatively, VF2PostLayout should indicate that there is such a layout but that it already equals the initial layout of the input quantum circuit.
A typical use case where this issue becomes relevant is an user that determines a quantum circuit compliant with the coupling map of the target quantum computer outside of Qiskit and only wants to adapt their mapped quantum circuit to the current calibration data before submitting their quantum circuit to the queue. VF2PostLayout is presented as the prime solution for this task in arXiv:2209.15512 and it works really well but caused some confusion in the described case.
I will shortly submit a PR that extends the VF2PostLayout with a NO_BETTER_SOLUTION_FOUND indication in the described corner case.
