Uhm, seems to be something very strange going on with the tensor() function:
ptrace is not the inverse of tensor.
Yeah, sorry, I just realized that. tensor() works just as it should in my example. I was trying to come up with a minimal example for a problem I encountered when using tensor() together with superoperators and "vectorized" operators. So I'll post that example instead. Not sure if the problem lies with tensor or with the superoperators and/or vectorized operators (possibly related to issue #237?). Also maybe I'm just using it wrong.
tensor doesnt work on superoperators. there is a function super_tensor. maybe it does what you want?
Right, the trouble with tensoring superoperators using tensor() is that it doesn't properly reshuffle indices to maintain the isomorphism . That is, . The super_tensor function does the reshuffling to respect that isomorphism.
Thanks for the explanation Chris (author of the super_tensor function!). To add to this explanation, it might be worth noting that while creating operators for composite hilbert spaces using tensor is a pure tensor product, creating superoperators for operators applied left and right is not a pure tensor product, since one of the components are transposed.
Thanks, this seems to be what I need. I'm still not sure how to use it for my example. What I want to do is this: Given superoperators , I would like to construct , meaning , so that in code, I can write something like C*tensor(rho,sigma). Could you explain the syntax for this using super_tensor with an example?
I thought it would be like this, but seems not:
I couldn't see the math there (the images are broken for some reason), but from the code, I think I see the problem. super_tensor(L, L) is indeed what you want, but the rhovec Qobj still doesn't act right under ordinary tensors for the same reason. The version of super_tensor that I contributed doesn't do much of anything useful for states (this would be a nice improvement, to be sure), but in the meantime you can probably work around by using operator_to_vector(tensor(vector_to_operator(rhovec), vector_to_operator(rhovec))):
If you're interested in learning more about tensor products on superoperators, the reshuffling operator used in super_tensor was taking from Chris Wood's paper on the topic.
