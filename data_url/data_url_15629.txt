There is a regex check for proper register names in register.py, but it uses match instead of fullmatch, which means it really only checks that the first char is a lower-case alpha. This means a user can enter invalid OpenQASM register names.
It can also cause several different problems with the matplotlib and latex drawers.
Invalid register names should not be allowed.
I think a solution like #7157 for the register names would be good. In that PR, instead of raising if an invalid name is entered, names are converted to a valid form.
I don't think we should require register names to be valid OpenQASM 2 identifiers; QASM is a separate thing, and OpenQASM 3 will make many more identifiers valid anyway, by expanding into various parts of Unicode.  The solution in #7157 is still appropriate, though; we can just require the exporter to escape any names that it outputs.
Actually I was following this from register.py. It doesn't really work since it uses match instead of fullmatch. As long as the first char is lower alpha, it matches, so the rest can be anything. If we don't want to restrict register names, then this code should probably be removed. We'd still need to address the issue with the drawers.
Oh, my mistake sorry - I didn't realise that we were already restricting the names on creation.  If it were up to me, I'd remove that provision entirely and have the QASM exporters handle escaping register names, but since we've got it for now, I think improving the verification would be better, rather than escaping the names.  If we escape the names, you'd get more confusing errors, where say my register and my_register might both be escaped to the same string, and you'd see "can't have two registers of the same name" rather than "my register is an invalid name".
If we defer escaping to the exporters, they can handle naming collisions by appending a counter or something, because they'll be working with the full context.
I think these are the issues.
So I think this just needs a decision as to what is the least worse.
Fixed by #9100.
