I was running an Intro to Quantum Computing workshop and realized that the same (textbook) teleportation circuit on Quantum Composer I have used for this demo in the past, is now bugged.
The IBM Quantum Composer shows wrong probabilities for the quantum teleportation circuit https://qiskit.org/textbook/ch-algorithms/teleportation.html#5.1-IBM-hardware-and-Deferred-Measurement-
Make the following circuit in Quantum Composer.  Here it teleports the |0> state

Here it is supposed to teleport the |+> = H |0> state, but the probabilities are (incorrectly) the same as for teleporting the |0> state!

The same circuit on Aer simulator gives the correct probabilities.

I don't know what simulator Quantum Composer uses.
I now have a better understanding of the issue.  I still believe this to be a bug with Quantum Composer.
I now understand that the statevector simulator shows the probabilities / amplitudes for the unmeasured outcomes.  For the outcomes which are measured somewhere in the circuit, its behavior is to behave as if it were a single shot, collapsing to a single measurement outcome.
I understand that in Qiskit Aer, this single measurement outcome that the statevector simulator collapses to is random, according with the probabilities of each possible measurement outcome.
However, specifically in Quantum Composer, the measurement outcome looks to me to be deterministic.  I suspect that the seed randomizer is not correctly re-randomizing, or at least there is no apparent way to start a new single "shot".  No matter how I delete and re-drag-in the Hadamard gate at the top-leftmost of the above quantum teleportation circuit, or the measurement at the bottom rightmost, the measurement outcome the bottommost qubit collapses to is always 0, although it is supposed to be in an equal superposition of 0 and 1.  The same applies with just a single-qubit circuit where the Hadamard gate is applied and then measured.  I believe that without this bug fixed, measurement in Quantum Composer is unrealistic and highly confusing to learn and teach with.
For the benefit of others who might also find this puzzling, here is a summary of the discussion I've had with @the-legend-of-lia about this issue, to the best of my understanding.
First, we look at the teleportation circuit without measurements, applied to the state 2/3 of the way between |0> and |L>:

The "Probabilities" view on the bottom left shows the probabilities for joint measurement outcomes of all qubits, while the "Statevector" view on the bottom right shows the statevector as a amplitude and phase. Both views describe a situation where qubits q0 and q1 are both in the |+> state while the qubit q2 is in the state originally prepared on q0. We can easily check this using the composer:

Now, as remarked above by @the-legend-of-lia, something confusing happens when a measurement is introduced. Let's look at the same circuit with measurements on q0 and q1:

The quantum state of q0 and q1 is pseudo-randomly collapsed by the measurements (this is a simulator, after all!), to the state |11> in the picture above. Last time I checked, this was the same behaviour displayed by the statevector simulator in Python, which is indeed extremely confusing when measurements are involved. I fully agree with @the-legend-of-lia that this severly limits the usefulness of the quantum composer as a teaching tool many real-world applications of quantum computing: indeed, this is one of the reasons why I never adopted it in the courses I hold (where I adopted the Python library instead). That said, I don't think this is a bug, but rather the unfortunate result of a design choice.
A simple solution could be to have different views available depending on whether the circuit has measurements or not:
PS. The teleportation protocol—using classical corrections—can also be implemented using the composer, and suffers from the same issue:

(Implementing the 0b11 correction with the Y gate is more elegant, but it would have introduced a global phase of i to the statevector, changing the colours in the picture and making it less obvious that it has the same result.)
The issue can also be observed simply by applying a Hadamard gate to a qubit and applying measurement on the composer. Every time it seems to collapse to state |1> no matter how many times you try.
I'm closing this issue since it does not concern the qiskit-aer simulator.
I don't know how the composer does its simulation, but i expect it is only doing a single-shot statevector-like simulation and returning the final state probabilities conditional on a single sample of any intermediate circuit measurements. If it has a fixed seend somewhere that might explain lack of variation in these sampled outcomes for intermediate measurements, but that is just a guess.
