See below.
Output:
I'm not sure, but if you add a different QuantumRegister this does update the qubits:
As written, I wouldn't call this a bug - you access the private member QuantumCircuit._qubits, and we can't make any guarantees about what happens when you modify our private variables.  This happens because there are actually two places the qubits are stored (._qubits and ._qubit_set), and it's the latter that's used to see if a qubit already exists in the circuit.
However, we don't currently have a safe public way of removing qubits or registers from the circuit class, in part because it doesn't seem to make a huge amount of sense (why add a register if you need to remove it again?), and the operation would always be at risk of throwing an error (if any instructions use those qubits).  If you have a solid use case for needing it, we could consider it as a feature request.
Seems related to #3995.
Thanks!
However, we don't currently have a safe public way of removing qubits or registers from the circuit class, in part because it doesn't seem to make a huge amount of sense (why add a register if you need to remove it again?), and the operation would always be at risk of throwing an error (if any instructions use those qubits). If you have a solid use case for needing it, we could consider it as a feature request.
The use case here is interoperability with other libraries. I was using a useful function to modify the operations in my circuit, but the function would also modify the qubits. So after calling it I wanted to change back to the original qubits (and generally have the same register structure since the results of executing a circuit are formatted differently based on this.)
I feel fine closing this since I am accessing private variables. The ultimate feature request here would be a QuantumCircuit.transform_registers method - clearing qubits/registers was one step towards this - so if this sounds interesting I'm happy to open a feature request. Otherwise thanks for the help!
What would transform_registers do? ðŸ™‚
Transform the qubits (and registers) of the circuit to the new provided ones.
E.g.
Should allow different register sizes (e.g., a circuit with one 2-qubit register and one 3-qubit register to get transformed to one 6-qubit register, and vice versa), error on wrong number of bits in new registers, etc.
This looks interesting @rmlarose. I wonder, did you end up opening a feature request for this or dicussing it somewhere (e.g., Slack)?
I did not, the entire discussion is contained here.
Seems like a good candidate for a new feature request, you could probably add an issue and discuss if it'd be good to implement. Please let me know if you decide to open one as I would be interested in its development.
Thanks for your interest @epelaaez! I opened a feature request in #6960 and will close this issue.
