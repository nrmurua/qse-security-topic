I'm a novice with these sorts of things, so any help appreciated. I'm on a Mac running Monterey 12.1. I have a conda environment activated, and from inside that I write 'pip install stim' in the terminal. Here's the output:
I've tried upgrading my pip - no joy. When I type 'clang --version' I get:
What else can I try / what other info can I give that might be useful? Thanks in advance!
I wasn't expecting to be able to, but I'm able to reproduce this by using pip install stim --no-binary stim. It produces a very useful warning saying that the headers argument given in setup.py is not recognized. Which would explain why it's not including all the headers files I told it to.
Shouldn't be too bad to fix, although it might result in headers files being packaged into the binary wheels (ugh). I thought this case was being verified by cibuildwheels during the continuous integration testing, which is how this bug slipped in (I must have read somewhere that there was a headers argument, tried it, saw CI pass, and thought that was the end of it). I'll have to add a check to verify it to ensure it doesn't break again.
A secondary issue here is that you're installing the sdist instead of a binary wheel. This suggests stim is missing some important case in its wheel coverage. It's possible just bumping the version of cibuildwheel will be sufficient to fix this, as they do add cases over time and a few of their commits to mention arm64.
@OzYossarian when you install numpy, does it also build from source, or does it just download something in ~10s and move on? If it does download something, what is the filename of what it downloaded? Specifically interested in the wheel file (.whl). For example: numpy-1.22.3-cp310-cp310-win_amd64.whl.
Thanks for the quick replies! Re: the numpy install, here's the output from uninstalling and reinstalling it within this conda environment. The wheel file looks like numpy-1.22.3-cp310-cp310-macosx_11_0_arm64.whl:
Okay, osx arm64; I am in fact not building that. Hopefully bumping cibuildwheel fixes that since they do list it as supported.
Sweeeeet, thanks for the fix!
It turns out cibuildwheel (on github actions) does not support building those wheels :/ . Maybe I should just expense an M2 mac...
Anyways, I'll have the stim.h thing fixed.
The fix is merged. Once it passes CI on main it will be automatically deployed as a timestamped dev version to pypi. I'll let you know what to install when it's out, to verify it worked.
Try pip install stim==1.9.dev1649881693 and see if that builds.
@OzYossarian any updates on if it worked?
Sorry for the slow reply - yes it did! Thanks very much for the fix. Output is:
Took about 4 minutes - don't know if that's slower than normal, but either way it's successfully installed. Thanks!
Great!
