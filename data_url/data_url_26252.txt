There are to definition
First
sum of negative eigvalue of partially traced rho ...ptr
Second
(Nuclear_norm(ptr)-1)/2
But the give different value
I noticed and just for hermitian rho
(Nuclear_norm(ptr) -np.tr(ptr)/2
Is equivalent to first defination
Sorry, I'm having some difficulty parsing this. Could you put in an exact snippet of code explaining the discrepancy you're noticing?
For example in iq package
https://github.com/iitis/qi/blob/master/QIExtras.m#L401
Negativity[[Rho], {m, n_}] := Plus@@abs[Select[Eigenvalues[PartialTranspose[[Rho], {m, n}, {1}]], # < 0 &]];
After do partial transpose
Select negative eigvalue and add Thier absolute value
In qutip
Both methods are implemented
https://github.com/qutip/qutip/blob/master/qutip/entropy.py#L138
((rho_pt.dag() * rho_pt).sqrtm().tr().real - 1)/2.0
Which is equivalent to your implementation
But they give different result
Try do it for hermitian matrix mh
m=np.array([
[0,1,2,3],
[4,5,6,7],
[8,9,10,11]
[12,13,14,15]])
mh=(m+m.conj().T)/2
By the way
Instead of
(Norm(mh,ord='nuc')-1)/2
Which give different result from eigvalue method
Do
(Norm(mh,ord='nuc')-np.trace(mh))/2
Which give same answer
