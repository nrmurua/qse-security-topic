Hi Team ,
First of all,
Is it possible to send pk and sk generated from crystals-kyber-javascript (https://github.com/antontutoveanu/crystals-kyber-javascript) to liboqs python script
If yes,
I am so doing it but error occur
Without seeing the complete code you are using that leads to the error above, it's hard to comment. If you are using persistent data structures between the implementations (?) the likelihood is high, though, that this won't work as AFAIK there is no standard for encoding QSC data structures.
Well, I am doing the following encoding in order to generate kyber ciphertext, shared_secret key
E.g. :
Node js pk : [ 218, 196,  85,  62,  50 ........]
Now converting the pk to base64 string : [F3GZEAM4GCkBRhhBU ........]
Now converting the base64 string to a2b_base64 format : [ b'\x10\x07Att2\x08T\x18q\x11\x91 .........]
so now when i submit the pk [ b'\x10\x07Att2\x08T\x18q\x11\x91 .........] to python kyber algo in order to generate the shared_secret key it gives error : ValueError: byte string too long
one thing more
if I manually decrease the size of pk [ b'\x10.........] then python kyber algo  GENERATE the  shared_secret key, ciphertext. But I know this is the wrong way because we cannot decrypt the ciphertext with the secret key
so all I was thinking either the python algo take longer input or Node JS must generate smaller pk output, Rest you guys decide :)
Can you please share the code you use to do what you describe? From the text above I do not understand what you are doing.
so all I was thinking either the python algo take longer input or Node JS must generate smaller pk output,
This may be the case and that is what I referred to when writing
there is no standard for encoding QSC data structures
So it simply may be impossible to exchange key material between the two implementations.
Well, I am doing the following encoding in order to generate kyber ciphertext, shared_secret key
E.g. : Node js pk : [ 218, 196, 85, 62, 50 ........] Now converting the pk to base64 string : [F3GZEAM4GCkBRhhBU ........] Now converting the base64 string to a2b_base64 format : [ b'\x10\x07Att2\x08T\x18q\x11\x91 .........]
\x10 is is not the hex representation of decimal 218, so you have made some error in your translation of datatypes.
I know I just took a random value in example, all I want to tell you that python kyber algo is not accepting the longer pk value
liboqs is checked that it works on the known answer test values originally issued by the Kyber team, using the I/O format specified by the Kyber team. I can't speak to whether another implementation outside our control uses the same format.
Just a code outline for understanding
Node Js Code
Python Code
Thanks, @baentsch and @dstebila for your support, yesterday I added some more translation at Node Js level before passing its pk value to python kyber algo
Now it's working,
Now, Node Js sk is able to decrypt the ct generated by python kyber algo by taking Node Js pk
Now it's working
Great to hear. As this seems to prove interoperability between two different Kyber code bases, would you want to consider contributing your code upstream?
Yes definitely I would love to, so should I provide the solution in terms of issue or create a pull request at Read me because this is something extra
I don't know that: You should check with the maintainer(s) of https://github.com/antontutoveanu/crystals-kyber-javascript how (s)he wants to handle that. Maybe create an issue labelled "Ensure interoperability with liboqs implementation" (for which your code could be proof/test).
