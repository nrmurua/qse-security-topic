The performance of simulations with large noise models greatly decreased in Aer 0.10.0 This is worst for FakeBackend simulators for large number of qubit devices since they have a lot of error terms in their noise models.
Times on 0.9.1
Times on 0.10.0
This is about a 1000x slowdown to run
After some debugging I believe this is due to #1141 which changed QuantumError instructions to use QuantumCircuit internally instead of qobj.
The assembly of these circuits to qobj is now being called through the C++ pybind code and has a huge overhead. Doing this before calling the C++ code via calling noise_model.to_dict as part of run also results in big overhead.
Oddly this issue also only seems to effect some version of python, particularly 3.7 which may be due to how assemble is implemented wrt python multiprocessing.
So far I've managed to largely fix the problem by manually assemble quantum errors and bypassing the terra assemble function using
instead of current
With this change I get
