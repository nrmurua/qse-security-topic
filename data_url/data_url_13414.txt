Mitiq needs more error mitigation techniques.
Is there any experiment on gate-level dynamical decoupling?
This work from Lidar’s group was run on IBM and Rigetti with gate level control: https://arxiv.org/abs/1807.08768
Shared Google document on dynamical decoupling (new link): https://docs.google.com/document/d/1cRwFCTn6kUjI1P0kNydtevxIYtE4r8Omd_iWK0Pe8qo/edit?usp=sharing
This issue had no activity for 2 months, and will be closed in one week unless there is new activity. Cheers!
Out of curiosity, what would the usecase for this be? As opposed to error mitigation techniques, dynamical decoupling generally requires pulse-level control1, as well as a priori knowledge as to the interaction with the bath that you want to suppress. Some sequences like XY4 and XY16 do a good job at suppressing wide ranges of static Hamiltonians, but even then you generally only get a filter on time-dependent noise that necessarily amplifies noise commensurate with the pulse interval τ used in your XY controls.
(or at least precise timing of discrete gates and guarantees about what lower-level optimizations are being performed) ↩
Hi @cgranade, this is a good point which also emerged during our last Mitiq meeting on Discord.
Given the general structure of Mitiq, it would be better to apply dynamical decoupling at the gate-level (without pulse-level control). Even if there are all the difficulties that you mentioned in your comment, there is some hope that this could work (see e.g. the paper in the description of this issue).
However, I agree that we should not take for granted the practical feasibility of the gate-level approach.
Probably, before directly adding a new module in Mitiq, it could be safer to have minimal working example. E.g. it could be wise to first have a notebook showing that what we want to do actually works on hardware. This is not wasted time since, if it works,  the notebook could become one of the Mitiq examples.
I think the thing I want to understand when adding this feature is that we have a good sense/definition of what fits into our definition of error mitigation. This is the first lower level technique that involves more hardware specificity than we have included before. All of its good and helpful, but can we think of things that help quantum users prevent, mitigate, or correct errors that we would see as not in scope for Mitiq?
This issue had no activity for 2 months, and will be closed in one week unless there is new activity. Cheers!
@nathanshammah Should we push this to the next milestone as there isn't anyone actively working on it for this milestone?
Design for this is found here #1103
This issue had no activity for 2 months, and will be closed in one week unless there is new activity. Cheers!
This is still under development? Who is currently assigned?
Hi @willzeng,
We are working on it.
In the current milestone we aim for a MVP for dynamical decoupling, but this issue won't be closed. The full implementation of DDD is planned for Q2 and will likely happen in the next milestone.  At that moment we can close this issue.
I think this is mostly done now, can we close?
Yep!
