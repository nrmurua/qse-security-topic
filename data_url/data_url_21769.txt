No SMA input supplied to Kasli. Why does Si5324 report locked?
It uses its internal oscillator. Kasli clocking is set in the target definition. The rtio_clock config entry is only used on kc705 (see the manual).
OK. Current doc is confusing. Please move rtio_clock config instructions from here to here.
Kasli Opticlock variant doc says "Kasli is supplied with 100 MHz reference at its SMA input" but target definition is self.config["SI5324_EXT_REF"] = None. This looks inconsistent.
self.config["SI5324_EXT_REF"] = None
I don't think that does what you think it does...
I gather this is creating a key with empty value. Presence or absence of key as a way of toggling a bool is opaque. The only reference I can find to SI5324_EXT_REF in source relates to Sayma.
To explain more (and @jordens should correct me if I'm wrong since it's been a while since I thought about this):
Is that about right @jordens or am I missing something?
I gather this is creating a key with empty value. Presence or absence of key as a way of toggling a bool is opaque. The only reference I can find to SI5324_EXT_REF in source relates to Sayma.
@jbqubit I think we either need to fund a major documentation effort from migen->misoc->artiq or live with having to do a bit of digging through sources to understand these things.
When you build Kasli, look in the rust sources that are generated. You'll find that each entry in self.config leads to a config option in the rust sources.
The only reference I can find to SI5324_EXT_REF in source relates to Sayma.
https://github.com/m-labs/artiq/search?q=SI5324_EXT_REF&unscoped_q=SI5324_EXT_REF
It's also in the runtime
each entry in self.config leads to a config option in the rust sources
Thanks for the explanation @hartytp. Yes. I was thrown off by the odd logic not(si5324_sayma_ref).
if you give it a clock then it will lock to it, otherwise it will free-run.
In the case of no external clock, boot diagnostics imply locking when it's really free-running.
@hartytp almost. IIRC there is no fallback. It either does one or the other. Automatic fallback was rejected because of presumed user confusion. It might also be worse noise-wise or even inaccurate
because of divider limits. Would need some looking into.
The si5324 fallback mode also won't work because that needs the other input. But a one shot runtime fallback could be done.
@hartytp almost. IIRC there is no fallback. It either does one or the other.
Ack. So, with OptiClock, what happens when one doesn't supply a reference via the SMA? Why does it report lock? Just an un-driven input buffer free oscillating?
It doesn't report lock.
@jordens ok well then I don't understand the uart trace posted above
That's old code.
Aah .:) right that changed recently. Should have spotted that.
@jbqubit specifically, see d0ee2c2
a947867 implements the legacy kc705 behavior.
More advanced configuration of the Si5324 without firmware recompilation would be a separate issue.
