With the new migration of ProductFormula to qiskit.synthesis the pending support for Abelian Grouping remains incomplete. #7045 has been closed as it is outdated. Trotterization of sparse Hamiltonians could be made practical for larger amounts of qubits.
It could also be helpful to support simultaneous diagonalization as a feature of Operator. The functionality would take in list[Pauli] and return tuple[list[Pauli], Operator]. Here the first element of the tuple would be list of same size, and the second element would be the Operator that represents the diagonal circuit.
This functionality could implicitly use the existing grouping methods in Qiskit, such as qubit-wise commuting (link)
Consider a simple example that uses qubit-wise commuting:
It is more likely that Operator will be used directly, there is no extra burden of using heavier approaches such as general commuting. This can be done directly using spectral decomposition. Qutip has functionality for this approach here. This functionality does not exist in more fundamental libraries such as NumPy or SciPy perhaps because this is specific to Quantum Computing.
