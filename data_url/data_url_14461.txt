I notice that QuantumCircuit.decompose ignores some parameter expressions when I modify them via Instruction.params.
I'm not sure that this is a valid way to update parameter expressions, but it is used in the gradient framework.
https://github.com/Qiskit/qiskit-terra/blob/b510d6a65d0c64b9543b4d31c2789b07a4cd75c4/qiskit/opflow/gradients/circuit_gradients/param_shift.py#L228
In the following example, decompose generates Ry(Î¸[0] + 1) while the first parameter of RealAmplitudes is updated with Î¸[0] + 1.
output
expected result is as follows.
No idea.
If this is a wrong way to update parameter expressions, could you let me know the right way? I want to update the gradient framework.
That's a funny timing! We were actually just looking into this with @mrossinek and @Zoufalc and the issue is that
https://github.com/Qiskit/qiskit-terra/blob/b510d6a65d0c64b9543b4d31c2789b07a4cd75c4/qiskit/opflow/gradients/circuit_gradients/param_shift.py#L228
is not a valid way to update the parameters (as you suggested already). Updating like that only changes the current gate instance and doesn't propagate the update down to the definition of the gate. Hence the update gets lost once you decompose.
I was working on a fix, but getting the product rule right if you have the same parameters in a circuit multiple times makes this a bit more involved. Getting #7487 merged would make this simpler since that allows to directly update parameters in a single instruction instead of at all places in a circuit.
Thank you for your information! I wait for the merge of the PR.
This issue is essentially same as #7486. So, I close this one.
This issue won't be closed by #7487 but will need another PR, could you keep this issue open so we can keep track of this bug? ðŸ™‚
Alright. I then reopen this.
But in any case, going via instruction.params is not a supported way of binding parameters and one should always go via circuit.assign_parameters (or bind_parameters) ðŸ™‚
Thanks. I'm wondering of how to apply assign_parameters or bind_parameters to a particular gate of a circuit. In my example of the description, Î¸[0] is shared by two gates and I want to update one of them.
That's the feature we're adding in #7487 by adding a Instruction.assign_parameter method that allows to bind a (single) parameter in an Instruction to a new value
Sounds great!
