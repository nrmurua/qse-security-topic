Currently, we have a function generate_linear_qubit_operator in utils/_linear_qubit_operator.py which takes a QubitOperator and outputs a LinearQubitOperator or ParallelLinearQubitOperator (subclasses of scipy.sparse.linalg.LinearOperator) which can be used, for instance, in scipy.sparse eigenvalue routines. This class can be made a lot more useful by improving the implementation of LinearQubitOperator._matvec.
The code below uses Cirq and constitutes a functional implementation of LinearQubitOperator._matvec:
I found that this implementation gives an 80-100x speedup at large (at least 16 qubits) system sizes with smaller but still significant gains at smaller ones.
The task for this issue is basically to port this code over into an implementation of LinearQubitOperator._matvec. The class ParallelLinearQubitOperator can then be deleted since it would be obsolete.
