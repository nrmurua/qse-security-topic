We were running the "Steady State Solvers: Optomechanical System" from QuTiP examples, but were repeatedly getting errors. Specifically, line 466 of steadystate.py tries to query max_iter_refine from ss_args, but this line is also executed when using a scipy solver, causing a KeyError.
We were using scipy specifically so that use_precond is a valid option.
Hi the steadystate has some problem with optional keyword and scipy/mkl solver.
To have the notebook work, if you have mkl installed, you can change the cell calling steadystate to:
Without mkl installed, skip the 'direct' method.
Help Wanted: Some rework of the keywords_args treatment, testing solver/method mixes ('direct' + 'scipy' should work but don't) updating notebooks and docstring, etc. would be appreciated.
Hi @Ericgig , could you be a little more specific about what reworking the kwargs treatment would entail? Also if you could emphasize more concretely what you're looking for in updates to the notebooks and docs, that would be great.
I do have some other observations.
Hi @tehruhn.
The call to steadystate take different kwargs depending on whether scipy of mkl is solved. It make an error if you give it a keyword not belonging to the right solver. I believe it should be better to accept all keyword and ignore the unused one. If you want to rework it, I would suggest to set the most stable solver/method as a default. I heard the default method sometime fails (#1077).
