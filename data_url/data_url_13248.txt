Expectation values of Mitiq observables are buggy if circuits have measurements
It seems that change of basis rotations are applied after measurement gates instead of before.
The Circuit to measure X(q(0)) should have a single measurement gate applied after the Ry rotation (instead of two measurement gates).
Use the about() function to summarize information on operating system, python version and dependencies.
Assigned to @nickdgardner , thanks!
This is the intended behavior - measure_in  adds single-qubit rotations and measurements to the end of a circuit, regardless of what the circuit is. There could be use cases where you want intermediate measurements in the circuit. Where did this come up? and what is the proposed change?
@andreamari @rmlarose I was looking into the issue but I'll hold off until this question is resolved.
This is the intended behavior - measure_in adds single-qubit rotations and measurements to the end of a circuit, regardless of what the circuit is. There could be use cases where you want intermediate measurements in the circuit. Where did this come up? and what is the proposed change?
The situation that I had in mind is the the quite typical setting in which there are just terminal measurements in the input circuit and I expected that one could evaluate expectation values of arbitrary observables (by changing the basis before the measurements).
But I also understand your design view and it makes sense to me. In practice this means that, when using a Mitiq obervable, in most cases the user should just define circuits without measurements since Mitiq will take care of appending them.
@nickdgardner, sorry if you spent time on this. I am closing this issue since it refers to a bug that is not a bug.
It may still be worth adding a warning in the docs about terminal measurements + observable or maybe an actual Python warning in measure_in when the circuit has pre-existing terminal measurements. If you are interested, feel free to make a new issue and/or a new PR about ways of warning the user.
Thanks Andrea, that all SGTM. +1 to a note in documentation, probably the observables doc. +0.5 to a warning - I'd like to see a larger user base experiencing this issue before it's actually implemented.
The situation that I had in mind is the the quite typical setting in which there are just terminal measurements in the input circuit and I expected that one could evaluate expectation values of arbitrary observables (by changing the basis before the measurements).
Yes, the problem here is the observables wouldn't be arbitrary then - they would have to have support on the measured qubits. Or you would have to check if there's already a measurement on some qubits and not on others. Both of these are messes.
@andreamari No worries it was still useful for learning the code base--I'll do an issue + PR to add a warning in the docs about this.
Great, thanks @nickdgardner!
Just came across the test which references this issue: 
The test fails locally (which makes sense this no action was taken here)
Do we want to remove the test now?
Ok for removing the test! Good catch
