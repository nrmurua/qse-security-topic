===> Now, every module has a list parameter_names containing the name of the relevant parameters
a function set_state(dic) ==> That sets the state from the dictionnary
a function get_state() ===> that returns a dictionnary
Using the list property_names, the same functionality is implemented:
a function set_state(dic) ==> That sets the state from the dictionnary
a function get_state() ===> that returns a dictionnary
== For now, module level and gui level are completely independent, and the lists parameter_names (in class Module) and property_names (in class ModuleWidget) have to be maintained independently. I think, it is better to stick with this in order not to introduce coupling between these 2 layers...
== The function save (in the gui) appends this dictionary to the curve parameters
I am not sure if we want to reload previous settings of all modules at startup (for instance with a 1 s autosave timer) ? This could make the scripts harder to debug since initial conditions would depend on the history... Otherwise, that is easy to do, just let me know.
Is this finished?
is implemented in pullrequest #83
