Something along these lines, with minimal or non dependencies.
I worked on some initial ideas about this here: https://github.com/1ucian0/qiskit-terra/tree/ascii_visualizer
I'm leaving this here because I'm switching gears right now and it might be useful. For now, it works like this:
Output:
Compare with the LaTeX output:

If you want to work on this, feel free to contact me, submit a PR to this branch, or submit a patch to this file.
can we make it a filled in circuit for the cnot. Open means controlled on 0. I am not sure if there are an ascii. Also, could you make a circuit with all the operations (i did in the tutorial list them all) and then I can let you know if the gates make sense visually.
But this looks great.
Because it is hard to guarantee the console's charset, I would like to keep the minimum set to extended ASCII. In other words, characters from here: https://theasciicode.com.ar/
Here, some options:
I would like the solid.
Also i think all the gates should be capital.
Measurement can we have a box around a capital M
The name of the default basis is in lowercase letters, are you sure you want to transform all the box labels to capital?
cx changed to solid in 02297f4
Name are capital in b343bba
New iteration:
output:
I kept the measurements different in width so they are easy to distinguish from conditionals
Cool. The capital is just for visualization. Maybe I agree with you but then we have to change all the others (latex) given our convention in gates that lower case are derived gates of the fundamental U and CX.
All the standard gates have a latex representation that we should try to follow.
Second ccx should be like the cx with two black controls.
All the standard gates have a latex representation that we should try to follow.
Shouldn't they be expressed in a QASM comment?
Second ccx should be like the cx with two black controls.
Oh. Indeed. It was just to test multiqubit gates, because #880. Fixed in 4adc382.
I mean all the ones in the latex drawer @ajavadia made have a representation like us quantum guys like to see them. I would follow that.
For example in your case above the crz is like a control-z(theta)
but this looks cool.
Nice.
I think CX should be a control-X gate. Not a + sign. Similarly for CCX, etc.
Also the box that checks the classical condition: is that extensible to multiple classical bits? If so that's cool, it can check for example if a classical register is equal to 0x5. But if not, and it always checks single bits against 0x0 and 0x1, then I would just make that regular controls (black circle for 1, white circle for 0).
Right now, this is the behavior for conditionals. Is this what you have in mind?
Output
