The farming regtester shows spurious runtime failures at least since commit 5662ec2 or even earlier:
there are also other warnings which may or may not be related to this error, but the final failure always seems to be in SIRIUS.
Take https://dashboard.cp2k.org/archive/farming/commit_5662ec2d2499822cdefef3903ffa141617351ede.txt as an example.
@mtaillefumier any ideas?
Yes, the earliest one with the exact same error I could find is 1cac109 e15be0a but there are similar failures even before that, starting around c2e2fb2  or even a8ceefa
Always depends on whether the following warnings are always there:
the e15be0a is the oldest one I could find where the error occurred in SIRIUS: https://dashboard.cp2k.org/archive/farming/commit_e15be0ade511d2cac17f54d98021b188e548ba89.txt
But since this seems to be a more general error I went further back and c2e2fb2 or even a8ceefa may be where it started:
https://dashboard.cp2k.org/archive/farming/commit_c2e2fb2b93042a6629a6151c0af6203f6efe217c.txt
https://dashboard.cp2k.org/archive/farming/commit_a8ceefa4ea63aab9f9ccd9c2020b8f520b9b6f70.txt
But it could be even earlier since it's a spurious error/race condition.
I already opened electronic-structure/SIRIUS#520.
For the record, we run farming tests on PizDaint, without SIRIUS, and we've never seen a similar problem...
One of the problems here is that SIRIUS lets a C++ exception escalate through the C/Fortran interface and there is no way of handling it there. So the first step should be to install a catch-all, return a proper error code and let CP2K abort instead.
and one way of figuring out whether it's SIRIUS or not would be to exclude SIRIUS-tests in the Farming-tests and trigger a couple of runs to see whether the errors seen in c2e2fb2 or a8ceefa reappear (again, not implying that those commits introduced the issue).
I got the (similar) issue.
Source code, cp2k-7.1.tar.bz2.
Tried to build with gcc v8.3 and MKL v2020.4.304.
make -j 8 ARCH=local VERSION="sopt sdbg ssmp popt pdbg psmp" fails,
but
make -j 8 ARCH=local VERSION="popt psmp" works.
Finally,
make -j 8 ARCH=local VERSION="popt psmp" test reports error.
I found these messages from file error_summary.
@iamid0 thanks for chiming in, do you have the possibility to check with CP2K built from the current master (git checkout)?
@iamid0 thanks for chiming in, do you have the possibility to check with CP2K built from the current master (git checkout)?
I will try out as soon as possible.
Thanks for your quick reply.  ^_^
@iamid0 thanks for chiming in, do you have the possibility to check with CP2K built from the current master (git checkout)?
./install_cp2k_toolchain.sh --no-check-certificate --install-all --mpi-mode=mpich --math-mode=mkl --with-gcc=system --with-openmpi=no --with-reflapack=no --with-libsmm=no --with-mkl=system
echo $MKLROOT
/opt/intel/compilers_and_libraries_2020.4.304/linux/mkl
which mpirun
/opt/apps/cp2k/tools/toolchain/install/mpich-3.3.2/bin/mpirun
which gcc
/opt/rh/devtoolset-8/root/usr/bin/gcc
gcc -v
gcc version 8.3.1 20190311 (Red Hat 8.3.1-3) (GCC)
make -j 8 ARCH=local VERSION="ssmp psmp" test reports the following,
regtesting location summary file: /opt/apps/cp2k/regtesting/local/psmp/TEST-local-psmp-2020-12-11_23-24-30/summary.txt
regtesting location error_summary file: /opt/apps/cp2k/regtesting/local/psmp/TEST-local-psmp-2020-12-11_23-24-30/error_summary
regtesting location memory_summary file: /opt/apps/cp2k/regtesting/local/psmp/TEST-local-psmp-2020-12-11_23-24-30/memory_summary
regtesting location output dir: /opt/apps/cp2k/regtesting/local/psmp/TEST-local-psmp-2020-12-11_23-24-30
regtesting location last dir: /opt/apps/cp2k/regtesting/local/psmp/LAST-local-psmp
--------------------------------- Timings --------------------------------
Plot: name="timings", title="Timing Distribution", ylabel="time [s]"
PlotPoint: name="100th_percentile", plot="timings", label="100th %ile", y=410.08, yerr=0.0
PlotPoint: name="99th_percentile", plot="timings", label="99th %ile", y=167.1687999999996, yerr=0.0
PlotPoint: name="98th_percentile", plot="timings", label="98th %ile", y=67.64160000000005, yerr=0.0
PlotPoint: name="95th_percentile", plot="timings", label="95th %ile", y=25.545999999999914, yerr=0.0
PlotPoint: name="90th_percentile", plot="timings", label="90th %ile", y=8.39, yerr=0.0
PlotPoint: name="80th_percentile", plot="timings", label="80th %ile", y=3.9040000000000052, yerr=0.0
--------------------------------- Summary --------------------------------
Number of FAILED  tests 13
Number of WRONG   tests 0
Number of CORRECT tests 3397
Total number of   tests 3410
GREPME 13 0 3397 0 3410 X
Summary: correct: 3397 / 3410; failed: 13; 240min
Status: FAILED
grep 'BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES' /opt/apps/cp2k/regtesting/local/psmp/TEST-local-psmp-2020-12-11_23-24-30/error_summary reports,
=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES
=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES
=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES
=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES
=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES
=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES
=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES
=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES
=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES
=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES
=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES
The error message looks like this,
YOUR APPLICATION TERMINATED WITH THE EXIT STRING: Killed (signal 9)
This typically refers to a problem with your application.
Please see the FAQ page for debugging suggestions
EXIT CODE:  9  MEANING:  RUNTIME FAIL
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
@iamid0: in one of the output files in  /opt/apps/cp2k/regtesting/local/psmp/TEST-local-psmp-2020-12-11_23-24-30 you should find the detailed error log of the failed runs. Could you maybe attach them here?
@iamid0: in one of the output files in  /opt/apps/cp2k/regtesting/local/psmp/TEST-local-psmp-2020-12-11_23-24-30 you should find the detailed error log of the failed runs. Could you maybe attach them here?
All error messages are gone if I ran the following settings before make test.
ulimit -d unlimited
ulimit -m unlimited
ulimit -s unlimited
ulimit -t unlimited
ulimit -v unlimited
The source code is cloned from the master branch.
Out of curiosity, have you tried with only ulimit -s unlimited? This problem seems very related to stack sizes...
I think your finding is very relevant and can justify the issue.
After one year without progress we're now simply excluding SIRIUS from our farming tests.
For further discussions see electronic-structure/SIRIUS#520.
