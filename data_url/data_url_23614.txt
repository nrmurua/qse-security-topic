@QCoDeS/core know what I'm talking about. It's annoying as hell and might point to some scary underlying problem. We should really try to figure out what is going on.
http://hypothesis.readthedocs.io/en/latest/reproducing.html
As stated in PR 1131, we "fixed" the test_subscriptions test by calling flush_to_database explicitly instead of waiting a period of time before calling "add_result". Even if this fixes the "test_subscriptions" test, there is still some underlying problem because of which data is not flushed to the database at expected times. This still needs to be investigated.
In this travis run https://travis-ci.org/QCoDeS/Qcodes/builds/390728436?utm_source=github_status&utm_medium=notification test_subscriptions_getting_all_points failed again even with this fix
And here test_subscriptions failed: https://travis-ci.org/QCoDeS/Qcodes/builds/391788144?utm_source=github_status&utm_medium=notification
-Darn!
Thank you for collecting the failed runs. I will look into that soon...
as @jenshnielsen suggested, perhaps, the problem is in the resolution of monotonic() calls. It might help to substitute them with performance counter.
@astafan8 I think it's worth trying. Do you want to give it a go?
sure, i'm on it :) I am still the one whom this issue is assigned.
@jenshnielsen @WilliamHPNielsen I think i've found the problem. I've also implemented a solution that works. But I think there is some problem with responsibilities between objects. Also, I got a general impression that subscribers are implemented in not a clean way, and may be potentially thread unsafe. I'll expand on it later in a PR or even in a new issue.
This PR 1159 contains solution. It may not be 100% good though. What is 100% good is redesign of the Subscribers infrastructure and general dataset module clean-up.
closing since the PR 1159 with the fix is merged.
