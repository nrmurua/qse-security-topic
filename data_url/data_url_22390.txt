Using 1.0 rc3 on windows I was looking at creating subclasses for experiments. It could be useful if you have similar experiments to avoid building everything again. I have two scripts in the same folder,
and
In the GUI, I can see two entries Class and Class1, which both seem to correspond to Class, there's also an entry for  Subclass. All three entries seem to run fine.
Aside from the additional entry in the GUI are there any issues with structuring experiments like this? Would it be better just to copy and paste the code from the class and add extra function instead of using subclasses?
Derive from HasEnvironment instead of EnvExperiment if you do not want it listed in the GUI. Then Subclass(Experiment, Class) to get Subclass listed.
And note that your parent class does not have to derive from anything, unless you want it to access datasets, device db, etc. For using @kernel all you need is a core attribute.
That worked, thanks.
I'm thinking of having all the subcomponents we could use for various experiments in one specific python script and just import from there. For example,
in `repository\subcomponents\subcomponent_test.py' we could have
with an __init__.py file in the folder, then import those subcomponents to the various experiments. Does that seem sensible or is there a better way of doing this?
Sounds OK a priori. Note that you do not have to use inheritance but can also create several sub-experiments - see the arguments_demo example.
