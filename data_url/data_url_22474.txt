This raises DDSBatchError.
I guess the compiler fails to call __exit__ of the context manager under certain conditions.
Also, please add this to the rtio unittests after it works.
What is core_dds?
Unable to reproduce. I had to add the following changes to device_db.pyon:
The code prints 9.9999e-05 every time.
Fails here. Try reducing the initial value of dt so that you get some underflows.
Still works with dt = seconds_to_mu(1*ns).
Out of curiosity, what does it print then?
1e-09
That's obviously broken in another way, you definitely cannot program DDSes in 1ns.
Well the bottom line is I still can't reproduce it. So, give me your complete environment, or something.
Fix this new bug first, then I guess you should be able to reproduce it.
Which new bug?
Underflow not raised (or not caught) when dt=1ns.
It is not "new". There have been no changes in compiler semantics at all since you filed this issue. It's some kind of misconfiguration, see my device_db.pyon above.
Your device db is identical to mine (I actually use the exact one which is committed), and it's new in the sense that I had not seen it before.
Also I cannot imagine any sort of misconfiguration that won't make the DDS error out at 1ns programming rate. There must be some serious bug in the code.
No, it wasn't... like I said it was misconfiguration. "arguments": {"bus_channel": 0, "channel": 1} instead of "bus_channel": 26.
In this case __exit__ is not called because the exception is raised from __enter__:
Oh, that's the wrong exception.
Hm. Even when attempting to push DDS commands on a TTLOut PHY, I'd have expected SequenceError or Collision at dt=1ns.
