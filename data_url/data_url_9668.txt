FPGA world suffers a lot from fragmentation - some tools produce Verilog, some VHDL, some - only subsets of them, creating low-level LLVM-like alternative will help everyone, so HDL implementations will opt only for generating this low-level HDL and routing/synthesizers accept it. LLVM or WebAssembly - you can see how many languages and targets are supported now by both. With more open source tools for FPGA this is more feasible now than ever. Most of the people suggest to adapt FIRRTL for this. Please check the discussion and provide a feedback if you have any. There is a good paper on FIRRTL design and its reusability across different tools and frameworks.
See f4pga/ideas#19
Thanks for bringing FIRRTL to our attention. However, our downstream tool accepts only EDIF netlists, and a workflow of C → c2verilog → Verilog → Yosys/ABC → EDIF handles this just fine for the present.  Perhaps in the future a richer HDL approach would be worth investigating, however.
Because c2verilog satisfies a very specific need of ours, I don't think I have anything useful to add to the SymbiFlow ideas thread.
Regards,
— Scott
