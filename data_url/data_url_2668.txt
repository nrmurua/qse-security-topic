The specific case I ran into was applying a PauliStringPhasor to the empty Pauli string, which is a global phasing operation. I was unable to print out the circuit, due to this terror:
I think the right thing to do here is, when an operation has no targets, to give it a fake target qubit called something like "[GLOBAL PHASE]". Alternatively, we could check when inserting operations into a moment that they do not have an empty qubit tuple.
I think the fake thing is wonky. It's not at all obvious to me what it means (why is it targeting a global phase and not a qubit?)  I'd rather we keep people from building obviously(?) incorrect circuits.
I disagree that the circuits are incorrect. This kind of thing just tends to happen when you programmatically generate circuits: sometimes you apply an operation to zero qubits in the same way that sometimes you end up trimming an empty string. For example, a zero-qubit QFT is a well-defined (if unusual) thing.
If we want optimizations to preserve global phase, we may even need a concept like this.
Think we are moving towards having empty qubit sets?  At least this is for the global phase operation.
Yeah, I think this is obsoleted by the introduction of the GlobalPhaseOperation.
