In the manual, it's stated that for the LSB of the 24-bit word determines the direction of TTL0 and the MSB that of TTL23. However, if you look at the TCA6424A, manual, page 19, the mapping is slightly different (if you match pins to TTLs).
It would probably be easiest for the user if modify the set function to match the manual. There's probably a better way of doing it but I think this will work,
In artiq/artiq/coredevice/i2c.py,
This won't work (no string operations in kernels and the syntax isn't even correct), doing it with string format operations is hacky, and QC2-specific code does not belong in the TCA6424A driver.
Why aren't the pins connected in a simple way on the hardware anyway?
Like I said, the pins are connected to the matching TTL line. P00 - TTL0, P01 - TTL1 etc. The TCA just programmes these pins in a weird way.
The qc2 code doesn't belong here but it could make sense to have the 24-bit word for the TCA match the pins on the TCA instead of the way the TCA does it natively.
Oh, OK. I was confused by your code that does some very unusual shuffling of 4-bit nibbles.
If I understand the datasheet correctly, the problem is you need to send the 8 LSBs of the 24-bit word first, then the middle 8 bits, then the 8 MSBs - in other words it's little-endian. Correct?
Yup.
On May 21, 2016 01:43, "Sébastien Bourdeauducq" notifications@github.com
wrote:
Oh, OK. I was confused by your code that does some very unusual shuffling
of 4-bit nibbles.
If I understand the datasheet correctly, the problem is you need to send
the 8 LSBs of the 24-bit word first, then the middle 8 bits, then the 8
MSBs - in other words it's little-endian. Correct?
—
You are receiving this because you authored the thread.
Reply to this email directly or view it on GitHub
#437 (comment)
