As highlighted in #40, the QSimSimulator only supports an all-zero initial state. To fix this, we should inject the necessary X gates at the start of the circuit when a non-zero initial state is requested.
In principle, qsim supports non-zero initial states. Injecting the necessary X gates might lead to unnecessary performance overhead. It should be done in a different way.
I was going to raise an issue on unexpected behavior when providing initial states, then I found this one. Until a longer-term solution emerges, do you think it would be worthwhile to raise a warning/error when initial_state is not None? (This certainly would have saved me some debugging time!)
That's a good point, @rmlarose - I'll add an error for this.
@sergeisakov, what do you have in mind for this? As it stands users need to manually add the X gates anyways, so in lieu of a more efficient solution injecting X gates at least wouldn't make performance any worse than it already is.
I was wrong.  Adding the necessary X gates should not lead to any performance overhead as those X gates will be fused to some other gates. However, adding X gates will support only classical initial states. The support for general initial states requires some additions to qsimcirq (note that the qsim library supports general initial states) in pybind_interface/pybind_main.cpp and in qsimcirq/qsim_simulator.py.
