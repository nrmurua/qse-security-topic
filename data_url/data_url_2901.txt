@Strilanc I was wrong about a comment I made previously at OpenFermion-Cirq ... ExpandComposite actually recursively expands gates, instead of just expanding once by default. This causes a recursion error with gates in OpenFermion-Cirq.
Bringing the discussion back here... @Strilanc said
My latest thoughts on this are that we should specialize "CompositeGate" somehow to indicate the intended goal. E.g. we have "XmonCompositeGate" in the google namespace.
This conversation seems now to be about how we should support specific gate sets. @Strilanc's suggestion is that a gate is determined to be a member of a gate set through class membership. My latest suggestion is to directly pass a set of gates as a gate set to ExpandComposite, which I think is more flexible.
To build on what Kevin suggested, I think the most robust thing is to pass a predicate to ExpandComposite that indicates whether or not to expand a gate or not. The predicate could simply test membership in a set of gates, but also allows, e.g., decomposing RotXGate depending on the value of the half_turns attribute.
Fixed by #607
