The current live specification says:
Using subroutines, we can define an X-basis measurement with the program def xmeasure qubit q -> bit { h q; return measure q; }. We can also define more general classes of single-qubit measurements as def pmeasure(angle[32] theta) qubit q -> bit { rz(theta) q; h q; return measure q; }. The type declarations are necessary if we want to mix qubit and register arguments. For example, we might define a parity check subroutine that takes qubits and registers
However, the paper (https://arxiv.org/pdf/2104.14722.pdf) uses the following code sample:
The current ANTLR grammar follows the manner of the paper:
I believe that the live specification needs correction about definition of subroutine arguments, as follows.
Agree, I think this is just a mistake in the specification text here.
Closed by #285
