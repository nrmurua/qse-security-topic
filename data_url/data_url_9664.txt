Adding unit tests also at this early development stage will prove useful as it reduces tech debt. Tests could be grouped into a tests folder, divided into modules that mirror the main modules, such as test_pulses.py. Tests can be checked with pytest, which I advise using instead of other packages. Tests should be as simple as possible.
[This first step then can be the starting point for continuous development / continuous integration cycle, to follow. Even without setting up packaging for the installation of Pulser, CI tests with Github Actions or Travis CI can then call pytest from the root folder and check on different operating systems that things work. This would be a different issue though.]
Happy to help, yet they may best be made by whoever wrote the functions or classes in the first place.
Closing this due to PR #9 and the new issue #11 taking care of CI (and related testing).
