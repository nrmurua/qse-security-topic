A little bit of probing reveals that many conversions from stabilizer formalism to ket representation are happening during test_stabilizer benchmarks with a QUnit -> QStabilizerHybrid stack. These should be totally unnecessary. The issue is to find out why these conversions are happening and fix the edge cases that lead to them.
Currently, the stabilizer benchmark runs on QUnit -> QStabilizerHybrid without any conversions to ket representation. However, this has been achieved by deactivating the buffering system of QUnit, if its shard unit type is a QStabilizerHybrid. All edge case gates it passes to QStabilizerHybrid should be Clifford, in this case, so buffering ultimately needs to be turned back on for QStabilizerHybrid, once these edge cases are covered.
Measurement that's compatible with Decompose()/Dispose() is significantly trickier to fix without conversion to ket representation, but that should also ultimately be handled.
This was resolved a while ago. QUnit over QStabilizerHybrid is efficient as could be expected over a Clifford algebra. This changed incrementally, but it's basically resolved, by now.
