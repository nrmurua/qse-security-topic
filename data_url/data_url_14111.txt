when running the following code I get the error: QiskitError: 'Mismatch between run_config.parameter_binds and all circuit parameters. Parameter binds: [] Circuit parameters: [ParameterView([ParameterVectorElement(θ[0]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[14]), ParameterVectorElement(θ[15]), ParameterVectorElement(θ[16]), ParameterVectorElement(θ[17]), ParameterVectorElement(θ[18]), ParameterVectorElement(θ[19]), ParameterVectorElement(θ[20]), ParameterVectorElement(θ[21]), ParameterVectorElement(θ[22]), ParameterVectorElement(θ[23]), ParameterVectorElement(θ[24]), ParameterVectorElement(θ[25]), ParameterVectorElement(θ[26]), ParameterVectorElement(θ[27]), ParameterVectorElement(θ[28]), ParameterVectorElement(θ[29]), ParameterVectorElement(θ[30]), ParameterVectorElement(θ[31]), ParameterVectorElement(θ[32]), ParameterVectorElement(θ[33]), ParameterVectorElement(θ[34]), ParameterVectorElement(θ[35])])]'
Given that running a very similar piece of code, substituting the real hardware with an aer simulator the code runs smoothly and returns the expected answer.
No response
You are supplying a backend type to SamplerVQE where it needs a Sampler (something of type BaseSampler).
sampler (BaseSampler) – The sampler primitive to sample the circuits.
You would need to use the Sampler from the Qiskit Runtime to work with real devices (or the remote simulator). See https://qiskit.org/ecosystem/ibm-runtime/tutorials/how-to-getting-started-with-sampler.html
For what you are doing there is a similar example in Qiskit Optimization tutorials here. Its using the reference Sampler from Qiskit in this case but you would use the Sampler from Runtime, ideally using a runtime Session. The runtime docs have further information.
Hello! I'm currently working on the project with @bert799 , and we've encountered an issue while running the provided code snippet. We tried implementing the Sampler from Qiskit Runtime, as suggested in the documentation. However, when attempting to execute the code, it seems to get stuck in an infinite loop while running on the IBM simulator.
Below is the code snippet we're using:
Additionally, here are the logs that the code snippet is generating:
The code seems to repeatedly execute the job submission without producing the expected output or completing the execution.
We've been following the structure documented in the Qiskit Optimization tutorials, and while we're attempting to use the Qiskit Runtime Sampler, the code doesn't seem to provide the expected output and remains in continuous execution on the simulator.
Could you please advise us on how to resolve this issue or provide guidance on properly integrating the Sampler from Qiskit Runtime within our code to work with IBM's backend service?
Thank you in advance for any help or suggestions! We're relatively new to this, so we appreciate your patience and guidance :)
Creating and configuring the Runtime Sampler is covered by the docs I linked above i.e. here https://qiskit.org/ecosystem/ibm-runtime/
SamplingVQE is a variational algorithm where the minimum value of an objective function it defines is determined by the optimizer. The objective function will execute circuits to compute the function value at any given point the optimizer chooses - the point is used to set the parameters in the ansatz. The optimizer will have some strategy to locate minimum from the initial_point, which is random by default though can be set. This will end up sending a job for each execution and each point until the optimizer reaches a minimum value or hits  its maxiter. What you can also do is to setup the callback for SamplngVQE via which you can monitor the progress - this tutorial was done for VQE callback but it should be the same way for SamplingVQE.
You can also check the overall algorithm/code is working as expected, completely locally, by using qiskit.primitives Sampler, or the sampler from Aer qiskit_aer.primitives Sampler, instead of using the remote simulator.
One further thing I will note is that qiskit.algorithms has been deprecated in Qiskit and instead you are recommended to use qiskit_algorithms where the code was relocated to. And since it was deprecated a while ago it has already been deleted from Qiskit here ahead of the next release. You should simply be able to pip install qiskit-algorithms and then change the import so that instead of qiskit.algorithms its qiskit_algorithms i.e replace the . by _.
