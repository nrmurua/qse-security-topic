Current Problem
Currently at Forschungszentrum Juelich we are trying to integrate 'dwave-ocean-sdk==4.2.0' (which depends on 'dwave-networkx==0.8.10') into our HPC software stack. Since there is much more software installed in this environment this forces us to use the provided versions of software dependencies of 'dwave-networkx' rather than installing our own dependencies in order to avoid version collisions.
Our HPC environment provides 'Python==3.9.6' and 'decorator==5.0.9', whereas the 'setup.py' of your package requires 'decorator>=4.1.0,<5.0.0'. As mentioned above, downgrading our version of 'decorator' would most likely affect many other Python packages downstream so we would like to avoid this.
Proposed Solution
Would it be possible for you to check if using 'dwave-networkx' with 'decorator==5.0.9' instead of 'decorator<5' would cause any problems with your package? If you can confirm that this introduces no problems I can easily patch 'setup.py' and proceed with the installation without having to wait for a new version of your package to be released.
Alternatives Considered
Downgrading our 'decorator' version --> will potentially break other stuff on our side.
Waiting for a newer 'dwave-ocean-sdk' compatible with our 'decorator' version --> could delay our plans to launch JUNIQ and make our D-Wave system available to users.
Thanks in advance :)
I have tested it and there seem to be no issues with using a newer decorator. I will loosen or remove the requirement today, though it will take a little while for that change to propagate to the SDK.
That's great news, thanks for the quick reply!
