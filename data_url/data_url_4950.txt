The about page reads
QuEST allows you to simulate as many qubits as you can fit in memory. The state vector for n qubits, when using a decimal precision with b bytes per number (e.g. 8 for a double), requires b 2^(qb ‚Äì 29) GB. Using double precision, and considering a generous memory overhead, QuEST can simulate...
This statement is somehow misleading that it only points out the memory consumption of one state vector, leaving a false impression that memory usage is largely determined by one state vector.
However in distributed computing situations, MPI is mandatory, and whenever MPI is enabled, a Qureg needs twice the space of a state vector, due to ComplexArray pairStateVec. This means that when estimating memory usage, we must multiply b 2^(qb ‚Äì 29) by 2 to get an idea of the overall memory usage.
It is impossible to make out that I need 2x the memory to store essentially two state vectors without actually looking into the implementation of QuEST. Actually my application gets killed several times on our student cluster because I had wrong estimations of how much memory is needed.
Could you please at least mention the additional memory requirement on the website? Many thanks!
Hi there,
The nuances of memory costs of distributed simulation have been added to the doc of createQureg.
Sorry for any confusion!
üëçüëç
