I'm trying to use C++11, so naively I thought it could work if I changed to -std=c++11 in line 221 of QuEST/QuEST/CMakeLists.txt
But I still get the error
I think this should be a simple fix, but I'm just not too familiar with CMake so I don't know how to specify the appropriate flag. So any help on how to set (if it plays nice with QuEST) -std=c++11 for the compilation would be great!
Edit:
I got #include <random> to work in QuEST/tests/main.cpp without any errors and compiling cmake .. -G "MinGW" -DTESTING=ON. But when I try to use my own source file QuEST/build/main.cpp and compile cmake .. -G "MinGW" -DUSER_SOURCE="main.cpp", I get the same above error.
Hi David,
I'm no CMake expert myself, but I did setup CMake for the unit testing to use C++14 (see CMakeLists.txt)
I did so via
Btw, I have to apologise for ever recommending MinGW to compile QuEST on Windows. I've since made a derivative project (QuESTlink) MSVC compatible directly, which I'll eventually do also for QuEST.
Thanks for the reference that definitely helped! It was a bit finicky but I got this working by compiling QuEST first following your comment #181 (comment), and then adding
to my CMake script, and compiling that again with mingw32-make. Apparently my default make alias used GNU Make 3.81, while mingw32-make uses GNU Make 4.1. I'm not fully understanding exactly how that changes things but the former gave me errors and the latter did not. So I'll leave it at that and compile like #181 (comment) from now on and close the issue. Thanks for the help!
