We find qibojit is not able to handle two cases: when data specified as complex128 or not specified type.
Following are two example codes:
Example code #1:
import numpy as np
import qibo
from qclassifier import QuantumClassifer #qclassifier is in "qibo/examples/qcnn_classifier"
qibo.set_backend("qibojit")
#qibo.set_backend("numpy")
nqubits = 4
nlayers = 2
nclasses = 2
initial_state = np.zeros(2**nqubits)
initial_state[0] = 1.
initial_state = np.complex128(initial_state)
circuit = QuantumClassifer(nclasses,nqubits,nlayers,True)
measured_qubits = int(np.ceil(np.log2(nclasses)))
np.random.seed(2)
initial_parameters = (2* np.pi* np.random.rand(20))
for bias in range(measured_qubits):
initial_parameters[bias] = 0.0
qc = circuit.Classifier_circuit(initial_parameters)
print(qc(initial_state=initial_state))
print(qc(initial_state=initial_state))
Expected behavior
If we specify initial state as other data types, like np.float32, np.float64, np.complex64, the two lines output are the same, which are correct. If we specify initial state as np.complex128, the printed two lines are different when it run on qibojit, while the same run on numpy. It looks for the second print, qc uses initial state after the first print, not uses the true "initial state" for case qibojit and complex128.
output for qibojit and complex128:

output for other cases:

Example code #2:
import numpy as np
import qibo
from qibo.models import QFT
qibo.set_backend("qibojit")
initial_state = np.zeros(2**10)
initial_state[0] = 1.
initial_state = np.complex128(initial_state)
circuit = QFT(10)
print(circuit(initial_state=initial_state))
print(circuit(initial_state=initial_state))
Desktop (please complete the following information):
@ihpcdingwj thanks for reporting this. As documented here, the qibojit backend performs in-place updates for the state object, therefore you should expect that repeating the circuit execution the final state will change because the initial_state object is updated in-place. The numpy and tensorflow backends are less memory efficient, therefore the circuit execution creates a copy of the final state.
