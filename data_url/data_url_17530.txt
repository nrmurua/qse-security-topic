I construct a custom n-controlled rotation-x gate and ideally, I'd represent this as NCRX(controls, target). However, because controls needs to be variadice, I end up with NCRX(target, *controls).
Internally, I then stored this with
I have the following gate definition which works, but does not when I do the above.
When I simulate the qargs get reversed and the target qubit ends up being the 0'th qubit. The problem lies in circuit_to_dag.pi
Here, it is assumed that params are passed in the same order to the contsructor. But as can be seen in the example construct previously, this is not always the case.
Either make it clear that the user cannot store qargs in an arbitrary order, or somehow figure out the ordering with which the constructor needs to be called.
Need example of  usage of NcrxGate.
Minor cleanup of @eddieschoute 's code above is:
It's been two years, but the intended use is to implement a multi-controlled rotation. So I suppose it would be something like NcrxGate(pi/2, q_target, q_control0, q_control1, q_control2,...) so that you can easily splat the variadic input (the controls)
Sorry you got pinged after so long - we've been trying to go back through and clean up old GitHub issues at the end of the year, so everything's getting touched right now.
For this issue, I'm going to close it now as out-of-date - in #1816 the constructor of Gate was changed such that it no longer takes a list of qargs. That context is only known by the circuit now, so I suspect the issues here are fixed by that, and we successfully have other variadic gates like MCXGate.  Feel free to re-open if there's some part of modern Terra that makes something you want to do impossible.
