It has recently been noted that the name qreg does not convey its underlying semantics well. When we talk about registers classically in C++, this often carries with it an implicit endian-ness and therefore programmers may expect qubits ordered in a specific way when using the qreg. Under the hood, the qreg (and as it is described currently in the spec) defines an owning-container of qubits that can be created at runtime (std::vector-like) or at compile time (std::array-like). The typical use case is to leverage qreg with its vector-like semantics. In this case, the ordering of the qubits is opposite what one might expect from reading the name qreg.
We should update the specification with two new types: cudaq::qvector and cudaq::qarray, which will split apart the existing cudaq::qreg type into these two separate types. qvector will provide a runtime-dynamic owning container of qudits and the qarray will provide a compile-time owning container of qudits.
We will retain qreg in the specification document for a short time, but mark it as deprecated. After this short time (before a stable version 1.0), we will remove qreg from the document.
