When I import I get an error:
The same exception on Linux/Windows.
When I build terra from the just cloned sources via pip install . in a brand new clean conda environment (with pip install -r requirements.txt), then run python, and run from qiskit.opflow import I I get an exception above. Same in Linux and Windows. All good on Mac (thanks to @t-imamichi).
If I build a wheel via python setup.py bdist_wheel first, install terra from that wheel and then do the same, the problem disappears.
No exceptions should be thrown
What exactly is your exact workflow that's having errors? Pip install on a checkout works fine for me on linux.
That being said my guess is that your issue is a python namespace thing. If you're running from the root of a checkout python doesn't know to use the installed copy in the site-packages and instead uses the qiskit path in the checkout for the code. If it does that then it won't have the compiled extensions because those are built by setuptools for the installed copy. If you want to run from the repo root where there is the namespace conflict you can use python setup.py build_ext --inplace which will compile the cython extensions in place in the repo and then python will be able to use the copy in the checkout.
This is what I do. ~/qiskit-terra is the root of terra. dev-terra-new was a clean conda env, now it is not that clean, a few install/uninstall were run.
The problem originally appeared in IDE, where I have project and I tried to run a script.
ok, then yeah it's exactly what I suspected earlier. Since you're running in the root of the checkout python is interpreting the ./qiskit directory in the repository as the qiskit namespace for importing (this is a common trap that everyone falls into in python). You can see this in the full traceback: "/home/anton/qiskit-terra/qiskit/quantum_info/states/statevector.py" it is using the version in the git checkout not your pip installed version (which includes the binaries). If it were using the pip installed copy the path in the traceback would be: /home/anton/anaconda3/envs/dev-terra-new/lib/python3.9/site-packages/qiskit (or something like that). You can solve this 1 of 2 ways, either change your working directory to something that doesn't have ./qiskit in the directory which will prevent the namespace conflict. Or just run python setup.py build_ext --inplace which will compile the extensions and put them inplace in the git repo and then when python is using the local repo instead of the pip installed version the binary is present.
Thanks a lot, running python setup.py build_ext --inplace solved the problem. And this is important to be able to run scripts from IDE with the latest changes.
So now I'm just curious, why I did not hit this issue earlier.
