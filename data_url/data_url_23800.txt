I encountered some issues with starting instrument drivers in the normal way (so not with  server_name=None). Reduced to a minimal example:
The output of the script is:
Why is the script executed twice? If I remove the  if __name__ ==  '__main__'  : condition, then the script generates an error when starting the IVVI driver. This error message gives no clue what is going on, so it is hard to debug.
This has to do with how multiprocessing works with the 'spawn' method: in order to recreate the environment necessary in the new process, it re-imports all the modules it needs, including the main module. I'm not quite sure why it needs the main module in this case, but it apparently thinks it does. So everything at the top level in this module gets executed again.
Then when you omit if __name__ == '__main__', on starting the new process it immediately tries to make another copy of the instrument! obviously not a good idea, though I'm not sure why it's giving an Empty error. Better than kicking off an infinite recursion of new processes, which we could also have imagined it doing!
FWIW, if I do this on my Mac and omit qcodes.set_mp_method('spawn') it does not reimport the main module.
So your solution is the correct one: whenever multiprocessing is involved, never execute any code at the top level of a saved module; only define objects, and execute code inside an if __name__ == '__main__' block.
Requires better error message that points to the right docs.
Closed because the multiprocessing implementation proved to be too buggy and thus ⚡️ 'ed.
