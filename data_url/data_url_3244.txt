A DefGate's matrix can be obtained using the "matrix" property. This property:
uses numpy.vectorize to convert the gate "specification" matrix to a matrix of Expressions.  The data type is set by Numpy's vectorize._vectorize_call() which doesn't set the type correctly if the matrix contains a mix of datatypes. For example, in the "works" matrix in the example shown below, the first element (quil_sin(omega)) is non-numeric, so Numpy constructs an array of objects (otype='O') and the conversion succeeds. In contrast, in the "fails" matrix in the example shown below, the first element (0) is numeric, so Numpy constructs an array of numeric types (otype='D') and then fails when it encounters the object type in the second element (quil_sin(omega)).
This problem can be overcome by setting the otype argument to np.vectorize, as shown in the example below. In the example the matrix contains Expressions, so otype='O' is required, but if the matrix only contained numeric types then  otype='O' should suffice.
To demonstrate the issue, run the code as shown below.
To show how the issue can be overcome, in the run function:
pyQuil: 4.0.3
Operating System: Fedora 38
Python Version (python -V): 3.9.9
