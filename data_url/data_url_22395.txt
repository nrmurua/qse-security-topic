I have two different DAC driver classes for my two types of DACs.  They both are subclasses of this class:
I can use either DAC in separate experiments without problems.  However, if I try to use them in the same experiment I get an error.  Here is the simplest experiment in which I could get the error to occur:
The calls to voltage_to_dac_word in build work fine, but the calls in run result in the following error:
The problem goes away if I get rid of the DACcal class and put its functionality directly in the two DAC driver classes.
@whitequark
Yes. There is currently no support for inheritance at all. @sbourdeauducq, which idioms we cannot live with?
There is currently no support for inheritance at all.
There is some, the DDS uses it...
That works by accident.
Simply supporting class C: def x(); class A(C); class B(C); with code duplication done by the compiler sounds simple enough and would solve this problem (and most of them I guess).
If it's not too much more work, supporting multiple inheritance would be useful also.  The AD5370 driver that I wrote inherits from both @jordens 's AD5360 class and my DACcal class.
There's no difference to whether single or multiple inheritance is used, just what method is resolved after all.
