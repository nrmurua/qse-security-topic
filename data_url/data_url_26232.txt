The GitHub Actions (as specified here) should be configured to include a linting step that is run automatically.
In addition, when configuring and running the linter locally, any warnings or errors should be addressed prior to incorporating it within the pipeline.
@vprusso I'd like to follow up on this. I checked with black which could already reformat automatically 35 of the python files. As a separate commit I could setup black in Github Actions. Do you agree with that approach? Many thanks for the clarification!
Thank you, @FrankXenarthra ! And yes, that approach seems like the right one to me. By all means, have at it and let me know if I can provide any support. Thank you again for your contribution and interest in the project!
Just wanted to comment that an auto-formatter like black will re-format something requested by a linter like flake8.
If you use black on all files in the project and directly accept all of these changes, it might be incompatible with flake8 and/or other dev-dependencies specified for this project. I did try using it in this manner a few months ago.
@vprusso Thank you for the friendly welcome. I created this PR #188 Could you have a look if the suggestions all make sense or if I should adjust anything? Many thanks!
Edit: Thank you @purva-thakre . I've just seen your comment. I will have to check how to combine those two. Apart from flake8, what are the other dependencies?
Edit: Thank you @purva-thakre . I've just seen your comment. I will have to check how to combine those two. Apart from flake8, what are the other dependencies?
Off the top of my head, I don't remember them all right now. I figured out these incompatibilities because I have been thinking of how to create automated Actions workflows for this repo.
There should be a way to add additional content in the pyproject.toml file to deviate from the black defaults if they conflict with the flake8 specifications.
I don't believe we are doing anything super custom with flake8, so I imagine the bulk of how black jives with flake8 should be (for the most part) just fine.
Does that seem to align with what you both are aware of / have seen @purva-thakre  / @FrankXenarthra ?
Thanks again, and do let me know if there are any additional questions or anything I can help out with. Cheers!
@vprusso @purva-thakre  According to https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html the rule E203 is not PEP8 compilant so it should be ignored to be compatible to black.
I added the following to the pyproject.toml but flake8 ignores it:
[tool.flake8]                                                     max-line-length = 100                                             extend-ignore = "E203"
Is this behaviour overwritten somewhere?
@vprusso @purva-thakre I could manage to exclude E203 in flake8 now. I thought I could add this to pyproject.toml but this is not supported as mentioned by the maintainer in https://stackoverflow.com/questions/64482562/specify-per-file-ignores-with-pyproject-toml-and-flake8 . So I added it to the .flake8 file. Black and flake8 could be run together now but E203 needs to be left out. However, I don't think that's up for me to decide. Could you tell me if this is fine?
@vprusso I tested black via Github Actions now. The current version of black in the pyproject.toml is not compatible with poetry.
https://stackoverflow.com/questions/71769191/incompatibility-click-and-black-versions-with-poetry-importerror-cannot-impor/71769861#71769861
This has been fixed in:
https://github.com/psf/black/releases/tag/22.3.0
Do you agree that I create a pull request to upgrade to that minimal version?
Yep, that seems right to me. By all means, please do open a PR up for it, and thank you very much, @FrankXenarthra !
@FrankXenarthra I am closing this issue because we are moving to a better linter replacement in #286.
https://docs.astral.sh/ruff/faq/#how-does-ruffs-formatter-compare-to-black
I do apologize for this inconvenience. There are other open issues that are also good for a beginner. Feel free to comment on one such issue if you would like to work on it.
Thanks a lot for the explanation. I had no time to proceed, my apologies. In the future, I might pick a new beginner-friendly one. :)
Thanks for all the previous help, @FrankXenarthra! If there are other issues that you have the capacity to work on, definitely would be thrilled to see your contributions. In any case, thank you again, and thanks for providing the update!
