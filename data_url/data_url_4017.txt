For proof-of-concept algorithm development phase, I mostly use an ideal error-free environment. So, instead of repeating the kernel multiple times and aggregating the measurement result, it is more convenient to access the internal state vector of QX after 1 run instead of simulating state tomography.
For that, I need to put the QX's display simulator directive in the generated qasm at the designated place.
Currently, I am using the workaround way by a script, which adds a new line with "display" at the end of the generated qasm file, before invoking QX. Doing this at an arbitrary place (e.g. end of every kernel) is not trivial and sustainable by this method.
It will be useful to do this through OpenQL.
Is it possible to define a (pseudo-)gate with no qubit arguments that just adds the display (pseudo-)operation in the generated qasm.
done. you can use  it as k.display()
Using display with the generic gate command
<kernel_name>.gate("display")
is giving seg fault
<kernel_name>.display()
works fine.
Reopening as this method is to be depreciated.
openql/quick_feature_test.py  should include the generic version.
@prince-ph0en1x are you sure you pulled the latest changes from develop branch. I just tested the following three and all work as expected:
