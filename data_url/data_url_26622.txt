The make prettyclean and also make pretty don't work if there are white spaces in the path. I'm a bit scared to run make clean on this machine right now, but the result is probably similar.
The line https://github.com/cp2k/cp2k/blob/master/Makefile#L339 leads to the execution of e.g. rm -rf ~/00  if the code is in ~/00\ cp2k/ which could lead to accidental removal of unrelated files.
I'm not sure if this is just a feature of make. Maybe the whole process could be aborted after the first command fails like doing set -e in a shell script.
in parts this is due to Make unable to properly handle spaces in paths, see also this stackoverflow answer. For the line in question we can make it work for the first single directory argument but not for the one containing multiple dirs.
Wouldn't it suffice to rm -rf ./obj/prettified and not deal with the individuals files and folders?
Not sure, it seems the Makefile was prepared to also discover other directories containing prettified files, not sure what this is about:
For my version of the code this doesn't yield any results.
It seems Make is unable to deal with spaces in paths. Hence, for the time being there is nothing we can do.
in this specific case there's something we can do, especially to make sure the user doesn't accidentally nuke his home dir
broken rules and builds is one thing, but blaming make for a misguided rm -rf is not really the way to go
Fair point. So, should we put an assert at the first line and abort when pwd contains a space?
That's one thing, yes since we don't support building in a spaced directory at all.
The other thing is that in this particular case find might return a result with space in it independently of the build dir, hence unless we really do need find we should remove it and play it safe and simply do rm -rf "$(...)/obj/prettified", or delay the find into the rm -rf and use the non-posix find ... -print0 | xargs -0 rm -rf
This is obsolete as we're in the process of migrating to CMake.
