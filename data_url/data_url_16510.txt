We should add these two gates. The first one is the current native hardware gate that is tuned up (a.k.a X90p or RX(pi/2) although I think there's a global phase difference). The second one gives more efficient oracles via better Toffolis.
Let's call them SX and CSX for now (although V and CV also appear in the literature).
Then we should try to replace all usages of U2 with the SX gate (conjugated by RZ), which would put us on a path towards #4106.
Rx(pi/2) is different to Sqrt(X) by phase, which would matter if it is going to be used as a controlled gate in any decompositions.
We can decompose SX = H U1(pi/2) H = H S H , that doesn't have a global phase difference. How exactly do we express U2 in terms of SX and RZ? Alternatively we'd have U2(a, b) = U1(a) H U1(b) Z but this doesn't use SX.
writing SX in terms of two H gates is inefficient since LHS is one pulse and RHS is two pulses. you can write it as below, although it does have a global phase difference that can be added to fix up the definition once #4565 lands (I couldn't find an exact equivalence).
Similarly one can convert U2(phi, lam) to SX by: U1(lam+pi/2) --> SX --> U1(phi+pi/2) which again has a global phase difference
As for CSX should I use the exact decomposition with two H because the global phase matters there?
all global phase issues should be solvable when #4565 lands, you just add the difference as a phase to the circuit which defines the decomposition. which CSX decomposition did you have in mind?
Right, if that is merged we can update the SX gates. To have the right phase in CSX we could do csx a, b { h b; cu1(pi/2) a, b; h b; }.
