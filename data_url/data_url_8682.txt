Many of the demo examples doesn't work with current master. The error messages are for example
or
Seen on Linux and OS X.
It seems like 4fa8929 fixed the problem with the broken demos()
But if demos application is going to continue to be an official part of qutip, I think it would be better to dispatch each demo in a separate process, using "fork()  and exec()", instead of the current method of "compile() and eval()" which seems not very robust (that is, it crashes the application if something goes wrong in the example script). Also, the text-based demos can probably be dropped because I doubt anyone use that function.
But work on new qutip demos should probably be using ipython notebooks, I think, so I'm not sure how much energy we should spend on the demos application.. But on the other hand not everyone uses the ipython notebook, so the qt demos application probably might still has a role to play.. and some effort to make it more robust might be worthwhile?
Nice!
I am leaning toward removing the Qt stuff altogether... demos, aboutbox, progressbar... all of it.  To me, the Qt stuff is more hassle than it is worth.  Building takes forever, and there are many issues that have popped up for various users.  If we stick to command line output, or stuff for iPython, I think we will have enough.  iPython itself is really the future of scientific Python for the foreseeable future so I think we should concentrate on that.
Yes, the QT stuff is bit troublesome.. and it is not a core functionality in qutip. The about() and demos() does not do much harm, so deprecate them in next release we can drop them alltogether in the following release. The progressbar is a bigger problem, because (if I got this right) it is partly due to the event-loop tricks we need to do to get the qt progressbar to work we have problems with catching keyboardinterrupt properly in for example mcsolve, and this makes it difficult to abort a calculation cleanly. This is big problem in IPython notebooks, where one cannot hit Ctrl-C and Ctrl-Z until process is stopped..
Factoring the qt progressbar out of mcsolve should therefore be a priority, and the simplest way to do this would obviously be to drop the qt progressbar function completely...
I'll add a  note about this in the roadmap wiki and closing this issue now.
