PulseSimulator fails (throws an exception) on a simple schedule constructed from bell state preparation circuit.
Traceback:
PulseSimulator should not throw an exception.
N/A
A solution to the main comment in this issue is to set override the configuration parameter parametric_pulses to be [] when constructing the pulse simulator instance from backend.
However, this issue also arises in a similar use case, which would not be fixed by the above solution:
In this case, the qobj is being assembled using a fake backend, and then the pulse simulator is being invoked by the fake backend when run is called. However, in this flow, the qobj is assembled using the configuration of the fake backend, which the pulse simulator has no control over, and therefore cannot override the assembly behaviour.
Should the user just be passing the schedules directly, and the pulse simulator can assemble the qobj however it wants?
@DanPuzzuoli may I ask you to share an example of how to override the configuration parameter parametric_pulses to be [] when constructing the pulse simulator instance from backend?
Yes for sure, in the meantime, you can do this:
then use the sim_backend when assembling, instead of backend.
Basically, PulseSimulator.from_backend copies over configuration data, but overrides certain parameters based on what the simulator needs: essentially, things like sim_backend.configuration().parametric_pulses = []. So you can do this manually until we've determined a permanent solution.
In the end the plan to address this issue is simple:
