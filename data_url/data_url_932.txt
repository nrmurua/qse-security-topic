Description of the issue
Exponentiating an identity gate with PauliSumExponential and then printing it raises a ValueError, similar to #5927. I could not tell whether the pull request that fixes the aforementioned issue would fix this one too. Feel free to close this issue if this is the case.
How to reproduce the issue
ValueError: Wanted diagram info from cirq.PauliStringPhasor(((1+0j)*cirq.PauliString()), qubits=(), exponent_neg=-0.31830988618379075, exponent_pos=0.3183098861837907) for []) but got cirq.CircuitDiagramInfo(wire_symbols=(), exponent=-0.6366197723675815, connected=True, exponent_qubit_index=None, auto_exponent_parens=True)
Cirq version
1.0.0
Discussion from cirq cync:  This is likely because the exponential of the identity has no operation since the PauliStringPhasor is stripping out identity.  This should be accepted.  Probably an empty PauliString needs a proper diagram strategy.
Possible cause:  "in circuit_diagram_info_protocol there's a if max(1, len(rows)) != len(info.wire_symbols):. That max seems to break things because there's no qubits on this one."
PauliString._circuit_diagram_info_ gets around this by returning NotImplemented if it is empty, which causes the diagramming logic to put the op below the circuit along with global phase and other non-qubit ops. Same strategy would work here.
Though to note, this strategy invokes the str method to display the op, and the PauliStringPhasor.__str__ doesn't match the style of a PSP in the diagram. On the diagram it appears as [I]^0.5 but the str is (I)**0.5. Maybe that's okay?  (An empty PauliString just shows a weird isolated I under the diagram).
I'd like to try fixing this.
