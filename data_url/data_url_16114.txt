i am going to design a quantum classifier with qiskit. i coded it last year and it worked. But today, i was going to run it again, i encountered this error.
IndexError                                Traceback (most recent call last)
~/anaconda3/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py in _bit_argument_conversion(bit_representation, in_array)
752                 # circuit.h(0) -> circuit.h([qr[0]])
--> 753                 ret = [in_array[bit_representation]]
754             elif isinstance(bit_representation, slice):
IndexError: list index out of range
During handling of the above exception, another exception occurred:
CircuitError                              Traceback (most recent call last)
 in 
19
20
---> 21 g, g_bias = gradients(var_corrected, feature_train[0], y_train[0], bias_corrected)
 in gradients(params, feature, label, bias)
55 def gradients(params, feature, label, bias=0):
56     grads = np.zeros_like(params)
---> 57     imag = imaginary(params, params, feature)
58     for i in range(params.shape[0]):
59         for j in range(params.shape[1]):
 in imaginary(param1, param2, feature, shots)
34     circuit.h(q[0])
35     circuit = statepreparation(feature, circuit, [1,2,3,4])
---> 36     circuit = create_c_circuit(param1, circuit, 0, [1,2,3,4])
37     circuit.cz(q[0], q[1])
38     circuit.cz(q[0], q[2])
 in create_c_circuit(param, circuit, control, target)
44
45     for i in range(param.shape[0]):
---> 46         circuit = c_circuit_block(param[i], circuit, control, target)
47
48     return circuit
 in c_circuit_block(param, circuit, control, target)
30     circuit = cu_gate(param[1], circuit, control, target[1])
31     circuit = cu_gate(param[2], circuit, control, target[2])
---> 32     circuit = cu_gate(param[3], circuit, control, target[3])
33
34     return circuit
 in cu_gate(param, circuit, control, target)
6 def cu_gate(param, circuit, control, target):
7
----> 8     circuit.cu3(param[0],param[1],param[2], control, target)
9     return circuit
10
~/anaconda3/lib/python3.7/site-packages/qiskit/util.py in wrapper(*args, **kwargs)
120                 warnings.warn(msg, DeprecationWarning, stacklevel=2)
121                 wrapper._warned = True
--> 122             return func(*args, **kwargs)
123         wrapper._warned = False
124         return wrapper
~/anaconda3/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py in cu3(self, theta, phi, lam, control_qubit, target_qubit, label, ctrl_state)
2292         from .library.standard_gates.u3 import CU3Gate
2293         return self.append(CU3Gate(theta, phi, lam, label=label, ctrl_state=ctrl_state),
-> 2294                            [control_qubit, target_qubit], [])
2295
2296     def x(self, qubit, label=None):
~/anaconda3/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py in append(self, instruction, qargs, cargs)
834                 instruction = copy.deepcopy(instruction)
835
--> 836         expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]
837         expanded_cargs = [self.cbit_argument_conversion(carg) for carg in cargs or []]
838
~/anaconda3/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py in (.0)
834                 instruction = copy.deepcopy(instruction)
835
--> 836         expanded_qargs = [self.qbit_argument_conversion(qarg) for qarg in qargs or []]
837         expanded_cargs = [self.cbit_argument_conversion(carg) for carg in cargs or []]
838
~/anaconda3/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py in qbit_argument_conversion(self, qubit_representation)
786             List(tuple): Where each tuple is a qubit.
787         """
--> 788         return QuantumCircuit._bit_argument_conversion(qubit_representation, self.qubits)
789
790     def cbit_argument_conversion(self, clbit_representation):
~/anaconda3/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py in _bit_argument_conversion(bit_representation, in_array)
769                                                                      type(bit_representation)))
770         except IndexError:
--> 771             raise CircuitError('Index out of range.')
772         except TypeError:
773             raise CircuitError('Type error handling %s (%s)' % (bit_representation,
CircuitError: 'Index out of range.'
Hi @sassan72 , from the backtrace it's a little difficult to see where the issue might be.
Do you know the values of param, control and target here?
do you mind if i send you the code?
i can draw the circuit without any error.
params = np.array([[[pi/6,pi/4,pi/3],
[pi/3,pi/4,pi/3],
[pi/6,pi/3,pi/6],
[pi/4,pi/6,pi/6]],
[[pi/3,pi/4,pi/4],
[pi/4,pi/4,pi/3],
[pi/6,pi/4,pi/6],
[pi/4,pi/3,pi/6]],[[pi/3,pi/3,pi/3],
[pi/4,pi/4,pi/4],
[pi/6,pi/6,pi/6],
[pi/4,pi/3,pi/6]],
[[pi/3,pi/3,pi/3],
[pi/4,pi/4,pi/4],
[pi/6,pi/6,pi/6],
[pi/4,pi/3,pi/6]]])
are angle of unitary gate u3, control is qubit control, and target are qubit targets.
You should be able to attach it to the issue, if the code to replicate is not too large. Otherwise, maybe the qiskit slack or stackechange would be a better forum to work through debugging this.
this is a my new quantum state preparation for encoding the data.
def statepreparation(angle, circuit, wire):
i think the problem arises from here.
i used 1, 2, 3, controlled ry gates. before that, i only used ry gate and the code works with ry gate. But i need to encode my data with 1, 2, 3, controlled ry gates.
this is the first error.
IndexError                                Traceback (most recent call last)
~/anaconda3/lib/python3.7/site-packages/qiskit/circuit/quantumcircuit.py in _bit_argument_conversion(bit_representation, in_array)
752                 # circuit.h(0) -> circuit.h([qr[0]])
--> 753                 ret = [in_array[bit_representation]]
754             elif isinstance(bit_representation, slice):
IndexError: list index out of range
I was able to run the code above with qiskit-terra 0.24 without error, so I'm assuming the issue has been solved in the interim. Please re-open if you're still seeing this issue.
