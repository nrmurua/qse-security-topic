RippleCarryAdder offers great coverage of traditional addition/subtraction operations; operations modulo 2ᴺ are rather similar, reusing a lot of the same primitives, so it makes sense to add a section covering modular operations. Addition modulo some other number would probably be out of scope for this change - if we want to develop that direction, we should branch it off to a separate kata.
I am slightly confused by this issue. The RippleCarryAdder kata has N-bit Adder (Task 1.7 and Task 2.5) and N-bit subtractor (Task 4.1). These are in effect implementations of Addition/Subtraction modulo 2^n.
@tcNickolas can you clarify what tasks you wish to be added when say operations modulo 2^n
The existing tasks cover the normal addition, which ends up having a carry qubit to store the (N+1)-th bit of the sum (most significant). In classical computing, you would've been able to just discard this carry qubit to get the result modulo 2ᴺ, but in quantum computing you can't erase information that easily, so you need to modify the computation itself so that the last carry qubit is not computed.
Ah I see, what you mean. The task should entail either not using the carry qubit or computing it and then undoing the computation to restore it to its previous value.
I would like to take this up.
Update: Added PR #395
Sounds good! (Meanwhile I'll try to catch up on the rest of your PRs :-))
