It throws the following exceptions after running the code for a while:
https://gist.github.com/shreychowdhary/beb0bc8c9ad2d2908536a2019b72073f
while running using qiskit-aer-gpu
Its should run through without any errors which it does if I do not use the statevector_gpu backend option.
None
My code is using master branch (updated daily, it's 2020-04-15 today) I'm experiencing the same error.
@jwoehr, are any GPU tests passing for you? (If you have the git repo checked out run python -m unittest test.terra.backends.test_qasm_simulator_statevector.TestQasmSimulatorStatevectorThrustGPU)
@hhorii @doichanj Have you been able to look into this yet?
@chriseclectic I have master branch checked out, yes, but can't get that command to work for me ...  what directory should I be in to execute it?
@hhorii I got a notification from you about a similar error on the Mac but I can't find your message here ...
@jwoehr That command should be executed in the qiskit-aer git repo directory (you may need to have installed in executable mode pip install -e . for it to work properly)
@jwoehr That command should be executed in the qiskit-aer git repo directory (you may need to have installed in executable mode pip install -e . for it to work properly)
GPU simulator may have memory leak.
The status of execute error was ERROR: std::bad_alloc: cudaErrorMemoryAllocation: out of memory.
@jwoehr thank you for your report. I was able to fix it. I believe this fix will be included in the next release (5.2).
Thank you @hhorii I pull master branch daily, I'll watch for your pull request to be accepted!
@atilag @hhorii : I pulled the latest and I don't see any difference in behavior:
Here's the job dictionary after the run:
@jwoehr Your first error was on circuit15860. This means that your 0-15859-th simulation were finished successfully and 15860-th simulation failed.
Your last error was circuit0. I believe that your simulator failed without any. Its reason may be that you did not build GPU simulator.
Could you tell me you specified -DAER_THRUST_BACKEND=CUDA or not to build the master?
Ex: python setup.py bdist_wheel  -- -DAER_THRUST_BACKEND=CUDA -- -j8
I think you can find a hint of an error reason by checking result object )
@hhorii
Ex: python setup.py bdist_wheel -- -DAER_THRUST_BACKEND=CUDA -- -j8
Ha! Did not realize I had to do that :)
Where is the build process for Aer GPU documented so I can point the next person who asks me to this step?
Ouch, I just find out about this message.
And you are right, the install process is documented but not the build one.
I'll document it!
