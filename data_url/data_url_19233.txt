When executing a circuit that contains channels (noise) or collapse measurements using state vectors, qibo will automatically repeat execution multiple times (specified by the given nshots) and each time the channel will act non-deterministically. Then the circuit can return different things:
Currently CircuitResult attempts to accommodate all the different "modes" of execution which makes it a bit hard to use. I may be useful to collect the different "modes" of execution and possibly return different custom objects in each case.
A proposal would be:
For density_matrix=True we can follow the same pattern, except that for 5, 6 we can still return a QuantumState containing the density matrix. Or we could even have separate Statevector and DensityMatrix objects to be more explicit.
This is a quick sketch, any suggestions are welcome.
After a discussion with @stavros11 we decided that, as nshots is usually tightly connected to whether we perform a measurement or not, to set a default value nshots=1000. This simplify a bit the cases we have:
if density_matrix=True case 3 can be handled:
At the moment I am not sure whether it is better to add a third object CircuitOutput that contains both the QuantumState and the MeasurementOutcomes , what would you suggest @stavros11.
Thank you for the summary @BrunoLiegiBastonLiegi. I agree with these categories, just mentioning two additional points:
At the moment I am not sure whether it is better to add a third object CircuitOutput that contains both the QuantumState and the MeasurementOutcomes , what would you suggest @stavros11.
I think there is some value in having a custom object over the tuple (QuantumState, MeasurementOutcomes), in order to keep the same interface. Eg.
If result2 was something else (eg. a tuple) we would create an assymetry.
Instead of CircuitOutput we could also keep the CircuitResult name for this case, to minimize the interface changes with the current version. This way for point 2 (which is probably the most commonly used mode) there will be no change from the user side (even if we change the internals). Let me know if you agree.
