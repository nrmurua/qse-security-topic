We keep running into differences between compilers and versions of compilers that make it hard to write code that a) just universally compiles and b) doesn't raise any compliants.
... about problems with _m256i having alignment requirements but _m256i_u not existing in certain versions of gcc / clang ...
The problem is that we want the PQClean code to compile with all the sensible warnings turned on, just copy/pasting code from a folder into your own project without thinking too much. That's obviously what enables having scripts such as the copy_from_pqclean.sh.  Having to figure out what compiler warnings you have to turn off per scheme is just messy â€” and you need to do that for each individual compiler because AFAIK there's no way to disable them inline (cf. #[allow(warning)] in Rust).
I'm thinking more and more we should relax our #ifdef requirements. Perhaps it would be a good idea to have a compat.h file in common; this file could contain
See also #382 (comment)
A similar recurring issue is the need for a macro that handles appending _ to symbols used in assembly files for MacOS.
Along these lines: an align.h with ifdefs and compiler-specific attributes may also be interesting to clean up the alignment mess...
