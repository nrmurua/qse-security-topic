We currently have ControlledGate and ControlledOperation as generic types which are useful to represent controlled versions of an underlying sub_type. For many common gates, we also have explicit types defined for controlled versions of those gates (eg: X, CX, CCX etc.).
The general pattern to get a controlled_gate from a gate is to call gate.controlled() and to get a controlled_operation from an operation, one should call operation.controlled_by().
There are a few inconsistencies in user experience while dealing with these types, which should be fixed. Some examples are as follows:
Issue: Both op1 and op2 are same operations (control on qubits 1, 2, 3, 4 and target on 0), but the equality tests false because their subtypes & controls are different (TOFFOLI(3, 4, 0) vs  TOFFOLI(2, 1, 0)).
Proposed Solution: If num_controls > 2, cirq.X.controlled() should return a cirq.ControlledGate(sub_gate = 'X', num_controls = num_controls) instead of first converting to a TOFFOLI. Similar changes to should be done for other gates like Z, CZ, CX etc.
Issue: Both op1 and op2 are the same operations, but their types are different. We have custom overrides for gate.controlled for many common gates to return specialized versions of the controlled gate, but these overrides are ignored when we call controlled_by from the corresponding operation.
Proposed Solution: GateOperation should override the controlled_by function to first construct the controlled_gate via gate.controlled() and then apply this controlled_gate on qubits to get a controlled_operation.
It would be nice if can make it harder for instances like cirq.ControlledGate(sub_gate = cirq.X, num_controls = 1) to exist, and always have cirq.CNOT in it's place. Maybe by constructing the controlled gates / ops via a factory that always forwards the requests to gate.controlled  / op.controlled_by ?
Update: Part of #3242
Discussed on Cirq Cynque:
I have a related point that may or may not make sense to be part of #4167.
I consider GlobalPhase to be part of the C*Z family and would expect cirq.GlobalPhaseOperation(exp(1j*pi*ht).controlled_by(q) to be equal to cirq.Z(q)**ht.  Should GlobalPhaseOperation also be special-cased?
