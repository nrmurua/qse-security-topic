In doing some performance profiling internally, we noticed in a particular benchmark that we were spending approximately 7% of the total time in Circuit._validate_op_tree_qids, with much of that time spent in the qid_shape protocol. I'm sure there are ways to speed this up, but it got me thinking about why we do this validation on insertion at all. Doing this when inserting into a circuit is inefficient especially since the identical operation may be inserted many times into various circuits as they are transformed, so it may get validated repeatedly. It would seem to me that we should remove this method from circuit and instead make it the responsibility of Operation to check qid shapes on construction.
Interestingly it looks like there is already validation when you apply Gate to qubits.  It's a bit of a redirect, because it appears in the consrtructor to GateOperation (which call gate.validate_args(qubits)).  So we can just remove the validation.  I've got a PR to do this if we decide this is correct.  I don't see a reason why it isn't correct.
@tanujkhattar asks: Can we move the validation to the GateOperation class?
Well it is used by other operations, like in going from ControledGate to ControlledOperation.
Fixed by #4669.
