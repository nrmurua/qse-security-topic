Exceptions can cause memory corruption now (#943, #1491) as they can contain pointers to stack memory and we only keep one copy of the exception object at a time, which cannot handle multiple in-flight exceptions.
Implement exception allocation and deallocation, similar to __cxa_allocate_exception and __cxa_free_exception. We may want to allocate them in the kernel CPU heap, or provide a special exception heap for exceptions (and terminate the kernel immediately when we cannot allocate more exception objects). We should also perform escape analysis to avoid users from using the exception object outside of the catch block, as we should free it when we exit the catch block.
We may also implement #1587 together with this.
This could be a good source of inspiration for implementing it
Adding to ARTIQ-7 milestone as we want to keep runtime compatibility with NAC3.
