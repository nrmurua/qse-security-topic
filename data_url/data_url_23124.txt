avg: 1
curve_name: networkanalyzer curve
input: iq1
acbandwidth: 1214.2558524467113
output_direct: 'off'
start_freq: 0
stop_freq: 50000.0
rbw: 151.7819815558389
avg_per_point: 1
points: 1001
amplitude: 0.01
logscale: true
infer_open_loop_tf: false
running_state: running_continuous
Value Error: cannot convert floqt NaN to integer
somehow i dont quite trust the new acquisition logic. Also one urgently needs a documentation for it, since people such as Remi don't know how to use the scope any more.
Ok, it looks like this problem only occurs when in logscale. So there is still an issue with the axis formatting
logscale should therefore be included in unittest
ERROR:concurrent.futures:exception calling callback for <Future at 0x15f194d0 state=finished returned tuple>
Traceback (most recent call last):
File "C:\Python27\lib\site-packages\concurrent\futures_base.py", line 299, in _invoke_callbacks
callback(self)
File "C:\Users\Remi\Documents\GitHub\pyrpl\pyrpl\software_modules\network_analyzer.py", line 177, in _new_point_arrived
self._scan_finished()
File "C:\Users\Remi\Documents\GitHub\pyrpl\pyrpl\software_modules\network_analyzer.py", line 233, in _scan_finished
self._module._start_acquisition()
File "C:\Users\Remi\Documents\GitHub\pyrpl\pyrpl\software_modules\network_analyzer.py", line 491, in _start_acquisition
self._update_data_x()
File "C:\Users\Remi\Documents\GitHub\pyrpl\pyrpl\software_modules\network_analyzer.py", line 556, in _update_data_x
validate_and_normalize(val, self)  # retrieve the real freqs...
File "C:\Users\Remi\Documents\GitHub\pyrpl\pyrpl\attributes.py", line 856, in validate_and_normalize
FloatRegister.validate_and_normalize(self, value, module),
File "C:\Users\Remi\Documents\GitHub\pyrpl\pyrpl\attributes.py", line 782, in validate_and_normalize
return super(FloatRegister, self).validate_and_normalize(int(round(value/self.increment))*self.increment, module)
ValueError: cannot convert float NaN to integer
For the moment I solved the problem with putting Iq.frequency.incement as minimum for start and stop, It looks like the iq doesn t acquire na quadratures normally when frequency=0...
Does it make sense to you that iq na acquisition is not working with 0 frequency?
no. the only problem might be the logscale of the x-axis. i believe zero-frequency is a borderline case we dont have to consider.
however, there is a new problem that used to not be there:
needs commit by sam for evaluation
I believe this is fixed
