Currently, when we plot a register, they are all shown in green. Just like it's possible to do some plotting customization, as specifying masked qubits, I would also like to be able to specify individual colors for each qubit.
The signature of Register.draw and RegDrawer._draw_2D would be added a new parameter:
This parameter would basically apply where "darkgreen" currently does, hence the point of the qubit as well as the transparent disk and the circle when the "draw_half_radius" is set to True.
Does the user need to specify a color for every qubit or does it default to "darkgreen"?
I think it depends on whether the current default darkgreen color is meant to stay. If so, we can allow the user not to specify the colors of all atoms. Otherwise, it's better to enforce the user to specify all of them, so that if some day the default color changes, it won't overlap the marking color they will have chosen.
I'm not sure I follow that logic. What I'm suggesting is that whenever the user chooses not to specify the color of a qubit, we use a default. Even if that default changes, it will never overlap the color of qubits they have chosen.
In practice, it would be something like this:
What I mean is that for example, if the user decides to mark a few qubits to orange, and that later on Pulser switches the default color to orange, the mark of the qubits won't be visible anymore. But if the user precises all colors (orange and dark green for example), even if the default color of Pulser changes, marks will still be distinguishable.
Ok, I understand now. I think it is unlikely that the default color will change and even more unlikely that we accidentally change it to something that matches the user's choice.
Okay, it's all good for me. Is there any other point you would like to discuss about before I start on this?
No, that's all, feel free to proceed.
