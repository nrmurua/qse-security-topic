Going to support broadcast for  batched register, something like this
This realization requrires modifications of intrinsic functions (not shown here).
Any comments?
why not just let register support broadcast?
broadcastable is the broadcast interface. Do you mean implement broadcast directly? what's the advantage of doing this?
directly inherit broadcast will not cause an extra API.
We don't want to create so much API, or this will be too noisy and not Julian. Julia types are duck typed, if you implement broadcast then it is broadcast-able, you don't need to create an API for this.
broadcastable is the offically recommended interface. JuliaLang/julia#26435
I see. But shouldn't we should provide the batch as multi-process/multi-threaded? rather than a Tuple. Or what's the meaning of a batch.
Can broadcast support parallelism?
We probably need to implement pmap for parallism.
Generator seems better than Tuple for a single threading task.
Generator seems better than Tuple for a single threading task.
To return a generator:
But what do you mean for single threaded? better performance?
I would prefer process rather than threading for batch on CPUs, because usually each single task in a batch can take a long time, use process is easier to dispatch on multiple CPUs.
BTW, what is rank3?
Cool, thanks for your suggestion.
Batch wise operations should not use multiple processing, we donâ€™t want data communication. This is the same as matrix operations.
rank3 is the (active, remaining, batch) tensor representation for reg. I can not find a better name.
They call it cube in Eigen and some other libs.
I see, then threaded would be better, or you won't want to use batch if this does not have any significant besides sugars.
