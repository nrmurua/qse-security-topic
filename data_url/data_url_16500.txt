It's known that Delays prevent Schedules from being merged. Here's a simple example:
sched 0
d0 |--------    Delay ------|
u0 |----- SamplePulse ---|
sched 1
d0 |--------    Delay ------|
u4 |----- SamplePulse ---|
I want to do final = sched0.insert(0, sched1), but I get an error 'Overlap on channel DriveChannel(0) over time range [0, <T_f>]'
It should be valid to merge these. In particular, this came up while a user (Jin-sung Kim) was experimenting with simultaneous CNOTs.
This is a somewhat tricky request, because sometimes we add a Delay to really mean "please don't do anything during this time". We've discussed having a boolean or a new instruction to force nothing to happen. Perhaps for now, we should allow delays to be replaced or split by new instructions. The in progress replace method of Schedules might come in handy.
If you are a contributor who would like to take this on, please type up a short description of the approach you plan to take.
I can try to work on this.
I was thinking on adding an (internal) function, which, given timeslot, splits all the Delays of the schedule on this timeslot: e.g., if there is a Delay (0,100) and timeslot [(10,20), (40,50)], we'll replace the former with a set of Delays [(0,10), (20,40), (50,100)]. Applying this function to each of the schedules with the timeslot of the other one, we'll prevent intersection of the Delays with other instruction. The same function can be made to ignore Delay with a specific boolean flag in future, if needed. We may also separately merge the consecutive Delays which may appear after processing.
Thanks for the interest!  Since the issue is rather old, and I don't know about the pulse module, I'll assign @nkanazawa1989 to it to have a look over and see if it's still in need of solving, and if your proposed approach makes sense.
We are kind of discouraging creating Schedule directly, since evaluation of time slot is performance bottleneck as shown in #8029 . Current primary interface of pulse module is the builder context. The above example is
If user explicitly adds delay in d0 channel in above example, sched will become
rather than raising an error.
Given the above discussion from Naoki, the pulse maintainer, I'll close this issue now as "wontfix".  If there's more to say, please feel free to re-open.
