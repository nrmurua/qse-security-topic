A method on the Gate class to raise it to a power.
The base implementation is easy. Corner cases:
1 -> self
0 -> Identity (I'm not sure about this as identity currently implies wait).
-1 -> inverse
-2 -> inverse().power(2)
0.5 -> square root of gate
power(2) means returning a decomposable instruction, right?
power(2) means returning a decomposable instruction, right?
yep.
In that case, for the sake of type consistency, I think would be better to always return an instruction.
Supporting rational exponentiation requires root method. So, if #2811 is merged, this issue will be on hold, blocked by #2810.
