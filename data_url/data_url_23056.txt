I believe this is due to the QString API version that is automatically set to version 2.0 in qtpy and which is enforced to 1.0 in pyinstruments.
This is definitely not a bug of Pyrpl, but rather of pyinstruments, but I still document it here to avoid problems in the mean time.
I am not sure how easy it will be to make pyinstruments compatible. I will probably try to make it directly pyqt3 compatible.
Actually, the following is enough to have a bug:
I created a branch of pyinstruments that is compatible with Python 3 and PyQt5. The branch is "pyqt5".
There is probably some bugs left with instrument drivers, but nothing terrible. The one I am most worried about is the dotnet interface with the VSA, (I am not sure if you are still using it ?). I could not find the way to have the clr module to work properly with the VSA under python 3 right now (In fact, I don't quite remember how we were supposed to do with python 2 anyways...).
clr requires version 2.0 to work properly with our code. so pip install pythonnet==2.0 used to work in python 2. does this do the job in python 3?
Mmmh, unfortunately it doesn't look so simple: I get the following error.
Looking at the pypi page for pythonnet, the support for python 3 only seems to begin at version 2.1 (pip install pythonnet==2.1 works like a charm, but crashes with the VSA...).
So, this makes a full port of pyinstruments to python 3 depend on our ability to get the VSA driver running in python 3 (maybe there is another package that allows using the dotnet interface in python 3)?
However, a totally different issue, which prevents using the old version of  pyinstruments with the new pyrpl version, is the above-stated error
Maybe we can just fix that one?
I tried:
Then, I also tried
However, I get errors when I try to create a Curve. So instead of using pyinstruments master, I have been using pyinstruments branch pyqt5. After small bugfixes in python 2.7, I can do the following:
I think this is all we need to continue using the most recent pyrpl with pyinstruments in python 2.7.
I am in favour or pushing pyinstruments.pyqt5 to pyinstruments.master
@lneuhaus why do you require pythonnet 2.0, can you point to any specific regression?
@denfromufa Thanks for joining the discussion. Just for info, this issue is mostly related to another Python package "pyinstruments" which is not public at the moment.
The dependency on pythonnet 2.0 and incompatibility with higher versions was found by quick trial and error, and is purely related to trying to make the dotnet driver for the Keysight VSA Software (version 19.5) work.
If you like, I will post an issue with the actual error message in https://github.com/pythonnet/pythonnet/issues whenever the problem comes up again.
@SamuelDeleglise do you have the VSA software error message with clr version >= 2.1 at hand?
I will try to post the error message later today, however, I can maybe clarify what I did with pyinstruments.
In fact the branch pyqt5 is at tje same tie supposed to work with pyqt5 and python3. In fact, I didn t test at all the compatibility witj python 2.7, but as you said, it should be straight forward to make it compatible with both python2 and python 3.
The good news is that the python 3 version seems to work now with the lattest version of most libraries (django, qwt...). I have already made a python 3 environment on our experiebt computer and it seems to be reasonably bug free now. The only remaining issue is the vsa software, but we are not using it right now
Hi Samuel,
I think i pushed the two small corrections for python 2.7 to pyinstruments, so it should equally well work in that version. However it today seems that pyinstruments is disabled:

Did you do that or is it an error?
Shit, I believe it s because my educational offer for github has expired. I asked for a renewal today... Another option would be to make the repository public
Whatever optioin you prefer. I personally do not think that there is a great problem if it is made public, and a small amount of pyrpl users might benefit from pyinstruments. Also, the installation issues are somewhat manageable now with Anaconda, in particular given the relatively small amount of potential users (the fear of using another group's - possibly very buggy - software is pretty high imho, unless it is really well documented and established).
OK, I checked again, with clr>=2.1 there is not even an error message since the whole python interpreter crashes. You just get the windows pop-up "Python a cess√© de fonctionner"
In the kernel console, I get the following:
I guess github reopened my unlimited private repository plan in the mean time. Do you have access to pyinstruments again ?
seems this is okay now. can we close this issue?
