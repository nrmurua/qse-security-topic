The documentation says
https://github.com/Qiskit/qiskit-aqua/blob/b040e2c2f90f49a401551190475f4dc0f3706c7a/qiskit/aqua/operators/__init__.py#L62
Read the docs.
The documentation should say something like
See the comment above.
In fact expectations of observables in operator flow do return real values represented as a python complex (a complex floating point number). Unless there is a good reason to do this, they should return python type float.
I see the confusion and you're right for a certain vanilla case of measurement. But the doc is actually correct, because we allow arbitrary multiplication of Operators by complex numbers, which allows us to construct more sophisticated measurement operators (e.g. a complex combination of Pauli measurements). So the case in the docs captures something like (.6+.3j)*(~Zero), which is a measurement that will return a complex number when composed with a StateFn, e.g. Zero or One.
Hey! Should the documentation be updated with another example to convey a clear meaning?
@jlapeyre Should the documentation somewhere be enhanced to cater to this? If so I'll transfer to Terra since it needs to be done on the opflow now moved there.
@woodsp-ibm Yes, please do transfer to Terra. It should be dealt with somehow.  Maybe just documenting the behavior. I'll revisit this.
@jlapeyre is this still open? With the primitives as main workflow to evaluate expectation values, can we close this?
Otherwise we add a sentence saying that the values can be complex due to coefficients or if the left and right state are not the same (as supported by opflow by e.g. directly evaluating and not going via hardware/simulators).
Closing now as stale, especially with the deprecation of opflow.  Feel free to re-open if there's more to say.
