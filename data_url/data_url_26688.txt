The regression tester detects memory leaks in libvori:
@Brehministrator fyi
@mkrack , @dev-zero : Thanks for reporting, I will take care of it. We need to add an additional interface call from CP2k to libvori when the calculation is finished (currently does not exist). Otherwise, the library can't clean up in the end.
@Brehministrator you are probably already aware of it, but entry_voronoi_or_bqb might be called more than once from the same CP2K process (but not in parallel, due to farming). It might be beneficial to have a single finalize once (and do the init as-needed as it is now).
@dev-zero : Yes, I am aware that there can be multiple calls to "entry_voronoi_or_bqb" from different points in the code. This is all fine as long as the real-space grid resolution and the atom count/types do not change.
Yes, a single "finalize" call to the library when CP2k ends execution would be good. But I don't know where to place it. Can you prepare a simple pull request which adds a call to "libvori_finalize" when everything is finished? I will add this function to the next release of the library. It can be called even if no libvori functions had been used before - then, it will simply do nothing. It will only free resources which have been allocated before.
Thanks! Martin
@dev-zero : Yes, I am aware that there can be multiple calls to "entry_voronoi_or_bqb" from different points in the code. This is all fine as long as the real-space grid resolution and the atom count/types do not change.
When running through Farming or libcp2k you could possibly end up multiple times at entry_voronoi_or_bqp with completely different systems without having the CP2K process restarted between the runs, as far as I know.
Yes, a single "finalize" call to the library when CP2k ends execution would be good. But I don't know where to place it. Can you prepare a simple pull request which adds a call to "libvori_finalize" when everything is finished? I will add this function to the next release of the library. It can be called even if no libvori functions had been used before - then, it will simply do nothing. It will only free resources which have been allocated before.
Sure, will do.
