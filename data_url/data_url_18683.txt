We frequently work with powers of 2, in particular, matrices whose dimensions are 2^n x 2^n. Sometimes we need to compute n.
The way we compute n for x = 2^n is (1- (integer-length x)) when x is a known power of two.
First, write a function called ilog2 which does this computation, and second, replace all instances of 1- integer-length with this function to make the code clearer.
(1- (integer-length x)) actually computes (- (floor (log x 2)) 1), but only the minuend sounds like "the base-2 integer logarithm of x". It makes me somewhat uncomfortable to call this shifted version ilog2.
@ecpeterson: For n > 0:
Isn't ilog2 properly a logarithm?
For a perfect power of 2 x, integer length is computing (log (+ x 1) 2). This is from the CLHS page says that integer-length could be implemented as (for non-negative argument):
Yes, youâ€™re right, my mistake. 2^3 is, in fact, 8.
