Parameters are not implemented on a parametrized circuit in the order defined by a user, but alphabetically. The circuit diagram shows the insertion order, but binding parameters is not done in the same order.
In the following example, I want to assign value [1, 2, 3] to [theta, gamma, lam].
The circuit diagram shows the order I defined, .i.e. theta, gamma , lam but the values are assigned in the alphabetical order rather than the insertion order, therefore, the parameters get wrong values.
The list of the parameters should be bound in the order that is given by a user.
No response
This is the documented behaviour of QuantumCircuit.assign_parameters:
The order matches QuantumCircuit.parameters, which is alphabetical with the exception that elements of a ParameterVector are numerically sequential.  I'm fairly sure we have downstream algorithms/applications code that depends on this order being maintained, so this is likely a can't/won't fix.
Thank you for the reply @jakelishman. But shouldn't at least circuit diagram show the order that is actually used? The figure totally misleads how the parameters are bound.
The circuit diagram is showing how they're used; when you bind with an iterable as opposed to a dictionary, the parameters are (by design) bound in alphabetical order.  In your case, you can do something like:
which will explicitly pair each parameter with its value.
We decided against sorting by insertion because then the order in which you call the gate, a seemingly random choice, would have an effect on how the array of values will be bound. That would've likely been a source of bugs in particular in the applications and implementation-wise it would be more effort since it would require book-keeping of the parameter order when ever we transpile or modify the circuit. Sorting by name is a global order which doesn't have these drawbacks ðŸ™‚
@jakelishman ahh, yes, that's right, the circuit diagram is showing the way it should. I was confused when looking at the circuit picture with the values assigned together. I know the way using dictionary but preferred the other way as it is shorter without knowing a default order would overwrite the insertion order. But now that I know that, will use dictionary. Thanks. @Cryoris Hi Julien, yeah, I understand the concern now. what you said totally makes sense. Thanks for the explanation!
Thanks for the explanation Julien, and I'm glad this is all ok. I'll close the issue now, but feel free to open a new one if there are bugs in the handling.
