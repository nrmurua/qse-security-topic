Hello,
I have some suggestions for improvements in some functions in metrics.py. I'd be happy to put together a PR.
The current implementation of average_gate_fidelity is based on the Kraus representation of the input quantum channel. If the input is a superoperator, it is first converted to its Kraus representation (involving diagonalization) before computing the average gate fidelity, which sacrifices performance and accuracy. There is a direct formula starting from a superoperator, see, e.g., https://qiskit.org/documentation/stubs/qiskit.quantum_info.average_gate_fidelity.html relating the average gate fidelity to the process fidelity, and https://qiskit.org/documentation/stubs/qiskit.quantum_info.process_fidelity.html#qiskit.quantum_info.process_fidelity to compute that from a superoperator. I think it would be better to use that direct formula if the input is not already in Kraus form!
There is also a function process_fidelity in Qutip, but I'm having a hard time understanding what it's intended for. It doesn't seem to be the process fidelity explained in the Qiskit docs above. The arguments of Qutip's process_fidelity are called U1 and U2 suggesting they are expected to be unitary, but this is not checked. It is computed as (U1 * U2).tr(), which is not between 0 and 1, and doesn't give 1 as I'd expect if U1==U2. Does someone know the intended use of that function? If not, I'd implement the process fidelity as described in the Qiskit docs here, with several version depending on whether the input is Kraus, a superoperator, and maybe a chi matrix.
Lastly, there is an issue with the tests - the lines
actually skip all the tests in the file if cvxpy is not available, not just the ones in the Test_dnorm class. The test output, if cvxpy is not installed, is
That issue seems to be addressed on the dev.major branch. Would it make sense to take the test file from there and use it in the master branch also?
Thanks!
@fhopfmueller Thank you for looking into these various issues! PRs would be very much appreciated. Perhaps lets do separate PRs for the tests, then process_fidelity and then average_gate_fidelity?
I would like to release 4.7 in the not too distance future, so one option is to target dev.major / 5 directly (in which case the tests are already fixed).
Hi @hodgestar , sounds good! I submitted the first PR for the tests.
For the process_fidelity and average_gate_fidelity PRs, I can definitely send them on the weekend, I can't promise before that unfortunately.
I'm happy to target either version with the other PRs, please let me know what makes more sense!
Closing this since the last PR has been merged. Thanks for your advice and help,  @Ericgig @hodgestar !
