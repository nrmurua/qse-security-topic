It seems that the measurement in dev.major does not truncate the probabilities correctly. It is probably caused by some changes in the last month and leads to a test failing in qutip-qip. The last test running was 24 days ago and was successful.
I don't see any code in the measurement that manually tidies up the state. In qutip-4.7 it is also directly compared to 0.

So my guess is that, in dev.major, the final states fail to be automatically truncated.
They are expected to behave the same.
No response
I see it as v4 being wrong instead of dev.major. It should not truncate small values with an hidden tolerance.
Here it's the sparse matrix operations which drop small values to stay sparse that cause the change. In v5, these operations are done using dense matrices. However this should have been the case for a long time...
The test p != 0 is always risky with floating number, we should use p >= tol with a documented tolerance instead. The atol from core options would work here, but we could also have the tolerance as an optional input to measurement functions.
It would be good to understand why the qutip-qip test started failing now. Perhaps it is related to the new specializations for dense that were merged on Friday? Previously some operations that went via the sparse data layer may have been tidied up and now they are not.
The use of p != 0 existed in version 4 and is, I think, correct in this particular case.  If a POVM is supplied as a list of operators, and some of those operators have zero probability, then one cannot provide a normalized final density matrix, but one still needs to return a value to the user, since they specifically asked about that POVM.
Perhaps qutip-qip could apply a tolerance itself on the returned probabilities?
We could also add an atol parameter to some measurement functions for v5, but I think that ship has sailed for 4.7.
Perhaps it is related to the new specializations for dense that were merged on Friday? Previously some operations that went via the sparse data layer may have been tidied up and now they are not.
That could be the reason. I posted this just in case there are some undesired changes that got merged accidentally. It is not difficult to fix it on the side of qutip-qip. Just add a filter to the probabilities and states.
I agree that we could use the atol from core options by default and perhaps add a tolerance parameter to some measurement functions.
