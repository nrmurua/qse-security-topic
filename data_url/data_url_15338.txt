https://github.com/Qiskit/qiskit-terra/blob/36c91add58a6649fd0788c2abc7a5a236e2e6098/qiskit/transpiler/passes/calibration/rzx_builder.py?plain=#L82-L83
I found bug from the two way for insert the parameters from release note
First way it works if there is defaults available which is V1 Backends
but this won't work because backend.drive_channel(bit) will pop up the error(but some of the fake backends won't pop up the error)
it should pop up the correct error message
maybe should have a better error message or better check statement for it.
Identical error when using Pulse efficient transpilation on different backends (here below with auckland)
Fails with error  "QiskitError: 'Calibrations can only be added to Pulse-enabled backends'"
when PassManager([RZXCalibrationBuilderNoEcho(backend)] executes.
Even though backend.configuration().open_pulse is True
fails when checking
instruction map and qubit channel mapping return correct information
inst_map = backend.defaults().instruction_schedule_map
channel_map = backend.configuration().qubit_channel_mapping
@nkanazawa1989 or @wshanks: could you have a look at this?
I can't reproduce the error in the example in the OP. It looks like it was addressed by @nkanazawa1989 in #8444.
@nkanazawa1989 also shifted RZXCalibrationBuilder code around recently in #8276, but from what I can tell passing it just a backend rather than an instruction_schedule_map and qubit_channel_mapping has not been correct syntax recently (@patdenim's example).
both work as expected with qiskit-terra 0.21.2, I think the bug is already fixed in #8444, thank you.
The error with PassManager([RZXCalibrationBuilderNoEcho(backend)] is still present to me
I'm using version {'qiskit-terra': '0.21.2', 'qiskit-aer': '0.10.4', 'qiskit-ignis': None, 'qiskit-ibmq-provider': '0.19.2', 'qiskit': '0.37.2', 'qiskit-nature': '0.4.4', 'qiskit-finance': '0.3.4', 'qiskit-optimization': '0.4.0', 'qiskit-machine-learning': '0.4.0'}
same error message using auckland ("Calibrations can only be added to Pulse-enabled backends")
@patdenim Your example is not a valid use of RZXCalibrationBuilder because it requires an InstructionScheduleMap:
https://github.com/Qiskit/qiskit-terra/blob/fdb62bea1eac6822b96e8dcd2fe19e7aee10027e/qiskit/transpiler/passes/calibration/builders.py#L105-L127
I think the error message is misleading, though maybe it is helpful in a larger flow where those arguments can not be supplied.
The code has actually changed since the release though:
https://github.com/Qiskit/qiskit-terra/blob/070b9e214718b413f3d2f1142ffdc07d1d750c91/qiskit/transpiler/passes/calibration/rzx_builder.py#L61-L92
Now your example will not give an immediate error but it will still run into a problem later when it tries to use the backend as an inst_map.
@wshanks Ouch, my mistake. Was using a bad code RZXCalibrationBuilderNoEcho(backend) instead of RZXCalibrationBuilderNoEcho(instruction_schedule_map=inst_map, qubit_channel_mapping=channel_map)
Sorry again.  Thks
