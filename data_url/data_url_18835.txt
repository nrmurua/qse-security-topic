In OQ, the word "string" should probably refer to a data type as it does in almost all programming languages. It seems that "bitstring" has a more or less precise meaning as a string with restricted values1.
But the word "string" is sometime used incorrectly. For instance here2

In the OpenQASM language true and false are not strings. It's more accurate to say that they are identifiers. But, in this case, I would prefer something like
The two boolean literals are true and false)
Of course, you can read a text file of OQ3 source into a Python string. And then you can talk about, or extract, the strings "true" and "false". But the specification shouldn't be talking about this, it should be talking about the elements of OQ3.
I think it would have been better to introduce syntax to create a bit array from a string. Something like bitstring("1001"). As the spec stands, it is impossible to introduce a string data type in the future. Or for an implementation to include it as an extension. This choice will likely be regretted in the future. ↩
The UI doesn't seem to offer an interface to get permalinks to lines of rst, like you can do with code. For code, if the file is in-repo, then it even renders nicely. However, appending ?plain=1 to the URL of the rst file does give you the same interface that you get for code. ↩
