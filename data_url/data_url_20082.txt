When building liboqs on s390x (#1100), everything builds and tests pass, except the KAT for FrodoKEM-SHAKE and BIKE. The most plausible cause to me are endianness issues (s390x is a big-endian architecture).
I open the issue here because Frodo and BIKE are direct contributions to liboqs.
See the build log:
https://app.travis-ci.com/github/bhess/liboqs/jobs/541322083
Frodo seems to already have macros defined to support big-endian and the -AES versions pass the tests.
Looking at the code, I think the way a_cols is accessed here could be problematic:

BIKE seems to be explicit about it that the code only supports little-endian:
https://github.com/awslabs/bike-kem/blob/master/cmake/arch.cmake
It could therefore be best to just disable it in big-endian builds for now.
It could therefore be best to just disable it in big-endian builds for now.
Explicitly tagging @dkostic for an opinion on this.
For Frodo it is indeed just the way a_cols is accessed, as described above. PR #1103 includes a small fix for Frodo. KAT pass after the fix.
Hello, I'm very sorry for the long delay (I was on a personal leave for a few weeks). Yes, disabling BIKE in big-endian builds for now is completely fine.
Thanks Dusan. @bhess my understanding is that #1103 disabled CI testing for BIKE on S390x but still built the algorithm as part of liboqs. Would it be appropriate to disable it in the build itself?
@bhess my understanding is that #1103 disabled CI testing for BIKE on S390x but still built the algorithm as part of liboqs. Would it be appropriate to disable it in the build itself?
I think the -DOQS_ENABLE_KEM_BIKE=OFF switch used in the CI build also disables building it as part of liboqs. Thinking about it, for a more permanent solution it's perhaps better to disable it in alg_support.cmake for s390x builds.
@bhess my understanding is that #1103 disabled CI testing for BIKE on S390x but still built the algorithm as part of liboqs. Would it be appropriate to disable it in the build itself?
I think the -DOQS_ENABLE_KEM_BIKE=OFF switch used in the CI build also disables building it as part of liboqs. Thinking about it, for a more permanent solution it's perhaps better to disable it in alg_support.cmake for s390x builds.
Yes that's what I was thinking as well.
Ok I can do a PR for this.
Resolved by #1115.
