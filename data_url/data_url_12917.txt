linear_synth requires that it operates on no more than six qubits via an assertion: https://github.com/boschmitt/tweedledum/blob/master/include/tweedledum/algorithms/synthesis/linear_synth.hpp#L169. Six qubits feels extremely low. If the quality of the solution does not scale well with qubit number, then perhaps this should just be a warning in the documentation (with a suggested alternative).
Hi Mark,
Six qubits is indeed low, but saying this method does not scale well with qubit number would be an understatement, the truth is this method does not scale all. Keep in mind it generates all linear combinations, i.e. (1 << num_qubits) - 1!, which for the most cases, if not all, is an overkill. Moreover, only to run linear_synth_gray would take a big amount of memory. So to prevent myself and others from shooting ourselves in the foot, I decided to impose such restriction.
It is true that the number 6 was arbitrarily chosen and we could make it slightly bigger. I think we could go as far as 32 qubits, but no further as it would require bigger changes to the implementation.
I will have a look a bit into this code, as it is a bit old, just to make sure I can indeed make this number bigger. Do you have a specific number in mind? Or would you go to the maximum?
