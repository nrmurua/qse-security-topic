Can quantum work on Large-scale distributed platformï¼Ÿsuch as several gpus?
A quantum computer works with bits which can be superimposed called the Qubits. Classical Hardware like GPU's or CPU's won't work with the computations those are powered by the Quantum Mechanics, although after the computation is ended a classical computer understandable response is generated. However Quantum Computers , which can be used to implement quantum logic gates can be distributed can each of these discrete Quantum Computers can be connected together using Quantum Networks. However Quantum Computing can help large distributed platforms to work as they exhibit a great property called Entanglement, which performs the classical distributed task like leader election with a great efficiency.
If you are interested in the scaling capabilities of TensorFlow Quantum when it is being used for circuit simulation (not real quantum hardware) I can also mention this:
I've also quickly modified the QCNN tutorial to work on multiple nodes and parallelize over data (This isn't a very exciting use of multiple nodes, but it is a nice first example of using TFQ with multiple nodes once you get a network setup).
Does this answer your question ?
@ MichaelBroughton   @ swastiknath  Thank you for your reply! I want to make use of TFQ for  quantum circuit simulation on  multiple GPUs or CPUs . Does tf.distribute.experimental.MultiWorkerMirroredStrategy() allow quantum circuit simulation to run on several CPUS? In the sentence"so if you want to offload your computation onto lots of nodes in a cluster",what does "cluster"mean? Does it mean cluster_state_bit(quantum data)? Or does it mean CPU?
@amandalqy  You cannot use distributed GPU's to offload the circuit simulation. It only works on CPUs as paralleling these workload into discrete GPU's will create much overhead which  tf.distribute.experimental.MultiWorkerMirroredStrategy() cannot handle as of now, but collaborators are working. It can work with multiple CPUs. Cluster means you can rather than using a single device can connect many CPU powered devices to offload your workload while using the simulation.
@amandalqy Is this issue resolved or are there still some outstanding questions ?
@MichaelBroughton @ swastiknath Thank you for your reply! Can the available simulator run on several computers that share a LAN or in the same cloud? How many qubits can the tensorflow quantum simulator support at most? Thank you!
So the simulator tensorflow quantum uses runs one circuit on one machine. In TensorFlow Quantum I might have a batch of 30 different circuits. TFQ lets me do things like: simulate 15 of those circuits on one computer over LAN (or cloud) and 15 on another in parallel. We use full state vector simulation so we can comfortably do a little over 30 qubits.
From a simulation perspective, one way to think of things is like this:
TFQ lets you use lots of distributed compute resources to simulate lots and lots of moderately sized circuits.
A Tensor network simulator (Like the one used here: https://arxiv.org/pdf/1710.05867.pdf ) lets you use lots of distributed compute resources to simulate one really big circuit (usually with limited depth and precision etc.)
Thanks a lot! It helps me a lot!
Does the tensor network simulator have the decomposition function of CZ gate for a big circuit running on  lots of distributed machines?Thank you!
I don't really understand what you are asking, but I will say this:
Many simulation efforts that want to push the number of qubits up into the 35+ range past what is possible with just state vector simulation do so by trading the exponential cost in qubit count for an exponential cost in circuit depth (Tensor networks can do this, but there are other ways). In certain situations a heuristic that can be used in simulation to greatly improve the runtime is to identify subsystems in the circuit that have few gates crossing between them (CZ is nice because it has a low Schmidt rank), with a little extra bookkeeping you can simulate the subsystems nearly independently of one another in order to simulate sampling from the original system. If you are still interested I would recommend reading more papers that experiment with different techniques for high qubit count simulation, they will do a better job explaining things than I will.
To re-iterate we do NOT use tensor network simulation in TFQ. We use full state vector simulation. Our goal isn't big circuits it's many moderately sized circuits.
Going to close this issue since Tensor network simulation is getting off topic.
