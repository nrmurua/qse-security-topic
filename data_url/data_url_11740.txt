I believe that the CONTRIBUTING.md file could be improved if some or all of the following ideas where implemented. I would like to discuss this before starting to integrate some ideas into the file.
Rather than listing the instructions on how to compile Aqua from source I would link to here. That way we do not have duplicated instructions and can ensure consistency when updating these instructions. This could also be done uniformly across all Qiskit elements.
Rather than having some of the hints like make lint and make test in a comment in the header of the PR template (which are even already ticked), I would suggest moving these into the footer of the PR and actually using GFM's task list which the user will have to tick off once they did perform these checks.
The guidelines already recommend that the user runs make lint and make style locally. One could go a step further and provide an example implementation of a pre-commit git hook which asserts passing these tests before allowing the user to commit. Simply having this suggestion documented would not hurt in my opinion. I already have a protoype of such a git hook implementation which I am happy to share.
Thanks for raising this, Max.
Regarding client side hooks scripts, they reside under your repo .git/hooks folder.  I understand we would create a hook script, keep in aqua github repo  and have some shell script  in the repo that, the first time you clone aqua, you would run yourself so that symlinks are created from our hook script to your .git/hooks folder. If you don’t do it, the hook never runs, no way to enforce that you do it. That is a new procedure to be added to the guidelines. I believe @ajavadia should be consulted about consistence with the other qiskit repos that don’t have this. A complete aqua pylint takes ~40 seconds in my machine and requires a python env with all the dependencies including Terra/ignis pip installed. With a hook the user won’t be able to commit outside a working python environment.
The contributing file was modelled after Terra and the other elements so contributing to qiskit, whether Aqua, Terra etc has the same guidelines. As they should all be pretty much the same the thought is to have just one more central copy and refer to this for the bulk of the guidelines including only specifics for the element if needed. Hopefully this change will be done soon.
Also the  PR/Issue templates for the elements are intended to all be the same so contributing to any is the same throughout qiskit.
I think @woodsp-ibm's comment is a very good point! Unified contribution guidelines should be a must across all the elements of Qiskit. I am trying to think of a good way of handling this, though. The easiest is probably to have a central equivalent to the CONTRIBUTING.md file somewhere on the Qiskit website or in the docs and have each element link to that site. In there, we could then tackle some of the aspects mentioned above (e.g. central link to the installation instructions and possible a sample pre-commit hook (more on that further down)).
I agree, again, that these should be unified across the Qiskit elements. However, in this case, afaik the templates have to reside in each repository in order for them to be active. Thus, we would have to ensure that these are kept up-to-date across the elements manually (at least I can't think of a clever, hassle-free way of automating this right now). Thus I would propose to implement some of my suggested changes above and propose them in a PR to each element separately and link to this discussion. I will have to check the templates of the other elements first, though, to see if they are in a consistent state right now.
@manoelmarques is absolutely right: these hooks reside in a local clone of a repo and there is no way for us to enforce that they are being used. But that was also not my intention. I merely wanted to add a suggestion for developers to use such a hook.
I must also say I am surprised at the speed which Manoel reported.. I found that make lint on Aqua takes ~120s on my machine. But what I have in mind for the hook script is to only lint the files which are actually being changed in a commit. Thus, the overhead for small commits is minor while for larger commits it can indeed slow down your workflow. However, I found the benefit of clean commits in terms of linting far outweighs the time I have to spent on fixing all linting issues later on.
Manoel mentioned another good point that linting will only succeed within an environment with a complete Qiskit installation. I am unsure whether this is a drawback, though.
For the Contributing Guidelines as I mentioned the work to have some common text for all Qiskit would be done soon. A PR was in fact done yesterday to further extend the section that was in the Qiskit docs with more information based on the contributing.md files Qiskit/qiskit#686 Once this is merged then the contributing .md here will comprise a link to that along with any text that is needed to describe any unique aspects. Unique aspects will likely be addressed over time to have better consistency.
For the PR/Issue templates - the goal was to have/keep them all the same. The last time I recall a change being made that same change was done to all the element's templates to keep them consistent inline with this goal. If they are not the same, due to some change not being propagated, then that should be looked at.
On the environment, my understanding was more like without a hook, such as you describe, one can commit from any command line, UI tool etc. With the hook you would only be able to make commits if said programs are running in the "qiskit dev environment" that you set up for the hook/lint to work. Maybe you said the same thing but with the word 'complete' it seemed more like you would have to install all qiskit - Aqua depends on other elements (Terra, Ignis) which are mandatory but Aer is optional. So one does not need a 'complete' install in that aspect.
For issue and pr templates github does let us set organization wide defaults, however if a repo has their own template that overrides the default. That being said the templates are slightly different for each repo, like terra's doesn't mention a changelog in the pr template anymore because that is now generated: https://github.com/Qiskit/qiskit-terra/blob/master/CONTRIBUTING.md#changelog-generation but it does mention writing a release note which none of the other repos have adopted yet. Ideally I'd like to get all the elements using the same workflow I've built up for terra on such things, but I realize that will take time.
As for needing the full qiskit environment to run lint and tests a change I've been meaning to push for some time here is to add a tox.ini. Using tox for the entrypoint for running tests solves the python packaging problem for running tests because integrates building a venv for each type of test run. So we remove the burden of installing everything correctly by hand before running tests. It's a very useful tool which most python projects use for this reason. It's also in use by most of the other elements at this point too.
Okay I see there have been quite some changes regarding this issue. Thus, I think the only open points of this discussion are the unified Contributing guidelines and the PR/Issue templates. But I think this needs to be coordinated across the different elements in a different fashion rather than in this issue here.
Regarding the pylint pre-commit hook: I think that this is definitely not something that everyone would want to use. Personally I like it a lot but I agree that it might interfere too much with the workflow of others so I would retract my suggestions of adding it to the repository officially.
Nonetheless if there is some interest I could prepare my pre-commit hook as a Gist and link it here. Just as a reference in case anybody happens to read this and wants to give it a try. What do you think?
