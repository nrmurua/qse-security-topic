The negative phases should be transformed into positive ones in the range [0, 2*pi), and the values should be all zeros.
Reproduces how often: (What percentage of the time does it reproduce?)
For any unitary above dimension 4 that I tried.
System information: (post the output of import stawberryfields as sf; sf.about())
I suspect the numpy.fmod in the implementation should simply be replaced by the regular modulus operator, and relevant tests should be added.
We should also add a test for the case sf.decompositions.rectangular_symmetric(np.identity(4)[::-1])!
PR #196 makes all returned phases positive, but still results in nonzero (positive) external phase values for unitaries that can be obtained by composition of Mach-Zehner elements and final phase shifts with all phases equal to zero. For example (see below)for nine modes, this procedure gives the matrix np.identity(9)[::-1], but the decomposition yields different values. Nevertheless, the test in test_decompositions.py that composes an original unitary with a recomposed decomposed version passes, meaning that both these decompositions are valid. Thus, the decomposition is not unique for certain settings, notably when internal_phase is 0 or pi.
This can be understood when looking at one of the last MZI's in an interferometer that realizes a 'bar' or 'cross': its 'external' phase shift is directly imprinted onto one output mode, which goes straight through the Mach-Zehnder part without interfering with the other input mode, and eventually gets imprinted a final phase from the final phase shifter that is necessary to guarantee decomposability of arbitrary unitaries.
Conclusion: it is unclear to me which decomposition should be chosen out of the infinite possibilities in this case. But the current decomposition, as it is in strawberry fields, is not wrong.
yiels
@lneuhaus, what's the status of this issue?
I will close this, because the current functionality in SF is not wrong, it just picks one out of many possible decompositions. A similar issue was fixed in #311.
