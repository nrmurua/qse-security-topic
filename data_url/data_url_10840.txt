Description
For the particular example below, MaxGap is not returning the maximum possible gap. Instead, it is returning a smaller gap. If min_classical_gap is set to a value that is slightly larger than this smaller gap, the solver immediately fails at the first solver.solve(..) in generation.py. (i.e. The gap size is not even searched as the min_classical_gap is considered to be too large.)
To Reproduce
Expected behavior
Expected at least a gap of 4 because ..
Should also add checks to make sure that the gap is greater than or equal to the expected gap (i.e. a known answer).
Currently in the MaxGap unit tests, "[t]he gap is checked for whether it obeys the min classical gap constraint, and whether it is the largest gap for a given BQM. However, this gap may not necessarily be the largest gap for the given set of constraints (i.e. configurations, energy ranges), and this is not checked for in this function." (taken from the docstring that I wrote for test_generation.generate_and_check(..)).
Edit: I have moved the above request into its own separate issue, #85.
The Expected Behaviour section is incorrect. For each type of spin configuration, we are only interested in the MINIMUM objective value. Specifically, for the spins a=-1, b=-1
Since 0.5 is an excited state for a=-1, b=-1 for this objective function, this objective function is NOT a valid solution. Hence, this issue is not a bug report.
PR #91 has unit tests that will show that the concerns raised in this issue are not necessary.
