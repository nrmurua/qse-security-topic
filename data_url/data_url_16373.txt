By design, passmanager instances cannot be reused. We don't have a mechanisms to "reset" the pass instances that are associated to the passmanager. As a consequence, running a passmanager twice might lead to unexpected results.
However, I noticed that many users write code like this, inadvertently getting wrong results:
The correct code should be this:
I suggest to raise or warning if PassManager.run method is run more than once.
I can try it @1ucian0 Can you assign it to me?
Sure. Thanks!
Agree that if there is no way to reset a passmanager then there should be a warning/error. BUT - my preference would be to find a way to do the resetting. Is there some strong reason why we can't make passmanagers reusable? Because the incorrect example code that luciano posted is much more natural (I have some code like that) and it would be good if we could make it work.
The problem is not the passmanager itself, but the passes. Passes instances cannot me reused. We could have a reset method on them. However, the fact that there is no "reset instance" patter makes me think that there might be unattended consequences to that.
Ill think over it. In the meanwhile, the warning. What do you think?
Maybe rather than have the warning at the PassManager level, have warnings for reusing each pass? This way, as passes get modified to allow reuse of instances, the warnings can get removed at the proper level of granularity?
Also, warning at the PassManager level wouldn't warn on the following, which also reuses pass instances:
Agree that there's a deeper issue here. We already re-run pass instances regularly, even within a single call to PassManager.run() (e.g. during a do_while optimization loop like https://github.com/Qiskit/qiskit-terra/blob/779fa14/qiskit/transpiler/preset_passmanagers/level3.py#L192 ).
We've had for a while the best-practice that passes shouldn't store internal state (outside of what's directly derived from their constructor arguments) that might invalidate repeated calls to run, but I don't think that's widely known or documented anywhere, and is only sometimes caught in code review. (I'm now noticing https://github.com/Qiskit/qiskit-terra/blob/d7e469e/qiskit/transpiler/passes/optimization/commutation_analysis.py#L37 . Maybe this or something like it was responsible for the original issue you were seeing?)
Maybe this or something like it was responsible for the original issue you were seeing?
Yeap. HoareOptimizer has a similar issue.
Closing this issue as invalid, because passmanagers should be able to be run more than once. The passes should be stateless. I submitted #4998 and #4999 for the two examples mentioned in this issue.
