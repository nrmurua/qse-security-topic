Say I pass a configuration like this into QISKit, i.e. qiskit.execute(circuit, 'local_qasm_simulator', shots=shots, config=simulator_config):
The C++ QASM simulator understands what these parameters mean, but QISKit doesn't successfully encode the "data" field.
An exception is raised in the JSON encoder.
Pass in the configuration above in a call to execute the C++ simulator.
The call to execute simulates a quantum circuit with noise and returns a classical bit string for each shot (accessible by a call to get_data on the result object).
As a workaround, I added these two lines to the default method of QASMSimulatorEncoder in the Python backend code for the C++ simulator:
This seems to fix the problem.
@awcross1 can you paste the exception you observe, please? Your solution seems correct, I would love to see it in context? Why don't you try opening a pull request?
@awcross1 Your example works if you pass the data as a list not a set.
And in fact the documentation for the simulator says this should be list, not set.
So unless there's a reason you would want to pass your config as set, I think this is expected behavior (not a bug).
Closing this issue, feel free to reopen if you feel it is not solved.
