One can reduce the number of variables of the DM by N(N+1)/2 when operating on the upper (or lower) triangle of the DM only.  This leads to a overdetermined least-squares problem that can be solved in SciPy. Since the scaling of these solution methods depends heavily on N, this should hopefully lead to a good speed up.
I have started this enhancement.
Sounds cool. It would be nice with an early PR on this so one could follow the progress and test/bm it before it lands in master.
This addition will appear in pull #166.
This does not implement very well without enlarging the size of the system to include nonlinear constraints.  In some sense, our equations already have this built in, so there is not much to be gained from this.  In addition, solving nonlinear constraints for sparse matrices is not implemented in SciPy.
