`#circuit_qasm = Circuit.code_qasm
print("Circuit Statistics")
print("Gate Counts:", bqskit_circuit.gate_counts)
print("Logical Connectivity:", bqskit_circuit.coupling_graph)`
Output :
Circuit Statistics
Gate Counts: {HGate: 16, CNOTGate: 18, SGate: 5, U3Gate: 15, XGate: 1, measurement: 1}
Logical Connectivity: CouplingGraph({(3, 4), (4, 9), (3, 7), (4, 6), (5, 7), (0, 2), (8, 9), (0, 5), (1, 6), (0, 8), (2, 5), (1, 3), (1, 9), (2, 8), (6, 8), (4, 5), (3, 9), (5, 6), (4, 8), (3, 6), (5, 9), (0, 1), (0, 7), (2, 4), (1, 2), (0, 4), (2, 7), (1, 5), (1, 8), (7, 9), (6, 7), (4, 7), (3, 5), (3, 8), (5, 8), (0, 3), (0, 9), (1, 4), (0, 6), (2, 3), (2, 9), (1, 7), (2, 6), (6, 9), (7, 8)})                                                                                                                                  # Compile the circuit
from bqskit import compile
out_circuit = compile(bqskit_circuit)
CancelledError                            Traceback (most recent call last)
Cell In[19], line 3
1 # Compile the circuit
2 from bqskit import compile
----> 3 out_circuit = compile(bqskit_circuit)
5 # Print new statistics
6 print("Compiled Circuit Statistics")
File ~/anaconda3/envs/fire/lib/python3.9/site-packages/bqskit/compiler/compile.py:320, in compile(input, model, optimization_level, max_synthesis_size, synthesis_epsilon, error_threshold, error_sim_size, compiler, *compiler_args, **compiler_kwargs)
314     raise TypeError(
315         'Expected Compiler object for compiler parameter'
316         f', got {type(compiler)}.',
317     )
319 # Perform the compilation
--> 320 out = compiler.compile(task)
322 # Log error if necessary
323 if error_threshold is not None:
File ~/anaconda3/envs/fire/lib/python3.9/site-packages/bqskit/compiler/compiler.py:142, in Compiler.compile(self, task)
140 _logger.info('Compiling task: %s' % task.task_id)
141 self.submit(task)
--> 142 result = self.result(task)
143 return result
File ~/anaconda3/envs/fire/lib/python3.9/site-packages/bqskit/compiler/compiler.py:130, in Compiler.result(self, task)
128 def result(self, task: CompilationTask) -> Circuit:
129     """Block until the CompilationTask is finished, return its result."""
--> 130     circ = self.tasks[task.task_id].result()[0]
131     return circ
File ~/anaconda3/envs/fire/lib/python3.9/site-packages/distributed/client.py:286, in Future.result(self, timeout)
284     raise exc.with_traceback(tb)
285 elif self.status == "cancelled":
--> 286     raise result
287 else:
288     return result
CancelledError: run-551f6618-26b8-45d0-b753-453420e9b1af
As per our discussion over email this has been resolved in the 1.1 pre-release. Closing for now, feel free to re-open if it re-appears.
