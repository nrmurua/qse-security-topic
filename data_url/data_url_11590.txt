The optimization tutorial (tutorials/optimization/6_examples_max_cut_and_tsp.ipynb) is failing while builing docs in Qiskit metapackage.
https://travis-ci.com/github/Qiskit/qiskit/jobs/371710386#L738
I see. When an answer is infeasible (e.g. visiting city1, city2 and city3 first), this error can happen.
We can call tsp.tsp_feasible(x) inside tsp.get_tsp_solution(x) to check feasibility of x. When the answer is feasible, we can process current tsp.get_tsp_solution(x) codes. When the answer is infeasible, we can output some messages or output infeasible answers directly (e.g. visiting city1, city2 and city3 first can be represented like [[1,2,3],,])
What do you think? @woodsp-ibm
By the way, infeasible answers are created randomly. It seems that the random seed for SPSA is not fixed (aqua.globals.randm is called to create random numbers inside SPSA), and it's causing the problem. We'd better fix it in the tutorial.
@a-matsuo As the tutorial seeds the transpiler and simulator, it would be a good idea to seed Aqua to ensure any random elements in there give a predictable outcome each time since as you have noticed SPSA has random aspects. In the original tutorial, that was done using the old declarative, everything was seeded including Aqua via the declarative logic. It seems that the seeding of Aqua was lost when the notebook was made purely programmatic. Given that the statevector simulator is used it seems that SPSA, which was more designed to work in a noisy environment, could be replaced by a more classical one, if one so chose.
I believe this issue has been addressed by the two above referenced PRs and hence should be closed.
