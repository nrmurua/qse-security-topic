Randomised testing turned up a case in SabreSwap (since the merge of #8388) where it appeared to throw away a measurement gate: see #2645 (comment).  Tweaking the qubits and conditionals there results in different parts of the circuit being dropped.
It seems to be related to conditionals, but I'm not 100% sure.
For example,
gives
while changing the cx(0, 2) to cx(0, 1) and the h(2) to h(0) causes the circuit to be invalidly re-ordered:
(mathematically that re-ordering is technically valid, since we assume qubits start in $\lvert0\rangle$ so the clbit can ideally never be 1, but Sabre doesn't know that at this point, so it's doing something wrong.)
Classical wire ordering should be respected as well, even if the wires are only in conditions.
Looks like the Rust-ified version of Sabre is back to its old tricks of not correctly respecting wires in conditions, somehow or another.  We fixed similar issues in #7952 and #8041, so something similar might be up again (though not exactly the same, since those added regression tests).  Dropping inputs has previously meant that the wire predecessor / successor counts aren't being handled correctly.
