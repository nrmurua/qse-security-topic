Running stim.Circuit().diagram('interactive') works in Google Colab, but doesn't seem to in the web environment provided by jupyter notebook.
The following:
Yields the following in a localhosted jupyter notebook:

And yields the following in Google Colab.

Versions:
Python 3.10.9
notebook==6.5.4
stim==1.11.0
Some followup information:
Completing the following steps:
Yields the following:
Running the notebook for the first time yields the following view:

In this state, the hotkeys used by crumble are inconsistently intercepted.
For example, clicking on an empty part of the menu bar and pressing H brings up Jupyter Notebook's hotkey panel, and ALSO highlights the H operation in crumble's gate-grid menu.
However, clicking on a code or text cell to get a text cursor and pressing H fails to type the letter, and still highlights the H operation in crumble's menu.
If you click on one of the qubits in crumble's qubit grid, then click outside of the crumble interface, the qubit will still be highlighted. Pressing H will add the H gate to that qubit, even if the cursor is elsewhere.
Pressing esc fails to change the focus; the hotkey interception remains.
At this point, re-running the cells yields the original, blank crumble interface from the first post.
The hotkey interception issues persist after re-running the cells.
In Google Chrome's inspect menu, the following error is available after re-running the cells.

After re-running the cells to get an empty crumble interface, if you save and reload the page, you get back to the visible-crumble view from step 1 without having to run the code.
The hotkey interception persists, and the inspect error is not present after reloading.
Other info:
Hesitant conclusions/guesses:
Ah, this is almost definitely the bug where Jupyter doesn't isolate HTML results into iframes. I probably need to do the isolation myself.
This seems to work pretty well to my first impression.
I've done some very limited testing with an ugly fix that just wraps the whole thing in an iframe: augustehirth@4924e36
Ways to get crumble to run in an iframe:
Something to test out is trying this fix for the SVG viewer and the 3d model viewer, which also have this isolation issue. The 3d viewer actually works around it jankily, and I'd prefer if it was just iframe'd.
Getting it to work for the SVGs and the 3d models would also have the benefit of practicing on a simpler case.
This branch: main...augustehirth:Stim:iframe_everything
puts SVG, GLTF and HTML type diagrams in an iframe when they pass through _repr_html_.
It looks and works fine, but still requires manually fixing the width and height of the iframe at line:
https://github.com/augustehirth/Stim/blob/1c98343e9657e04ee4f81b905bbefab9a9bd4a5a/src/stim/cmd/command_diagram.pybind.cc#L88
This might cause issues with differently shape browsers/windows and such, but I don't know how to get it to autoscale like crumble does.
