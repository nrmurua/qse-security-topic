The code is written for Python 2.7, and will not compile without a lot of changes in 3.4+
Has anyone created a version that runs on 3.4 or 3.5 ?
I've tried to port the code to Python3+. This was done with the 2to3 and reindent built-in scripts. However, I've run across some errors.
In addition to the other issue I've opened, I get:
That being said, the version on my fork technically runs in both versions of python. I plan on making a pull request once all of the errors have been fixed.
I've added a simple hash function that hashes by the name of the quantum register. I've also provided an inactive hash function that will hash by the more complex members of the register.
Also, I found a fix to the other issue I had opened.
So, I now have a fully-functioning (all tests pass) Python3 version of the code. The hash function mentioned above could probably use some tweaking by someone more familiar with the codebase, but in the meantime, I'll submit a pull request.
I needed to do a lot of tweaking to run QuantumComputer.py  in Python 3.
The file attached is a QuantumComputer.py abreviated to qc5.py  (in .docx file...)
All modifications has a tag #MVCM in old code line, just above the new code.
I am not sure of its correct functioning!
Depending on the sequence of commands, it has errors.
y q [0];
cx q [3], q [0];
"File" C: \ Users \ User \ Dropbox \ QUBIT \ FONTES \ qc5.py ", line 432, in get_quantum_register_containing
Raise ValueError ("qubit% s not found"% name)
ValueError: qubit not found
bloch q [4];
h q [4];
cx q [3], q [0];
"File" C: \ Users \ User \ Dropbox \ QUBIT \ FONTES \ qc5.py ", line 363, in num_qubits
If state.shape [1]! = 1 or num_qubits not in [1,2,3,4,5]:
IndexError: tuple index out of range
h q[1];
cx q[1], q[2];
measure q[1];
measure q[2];
File "C:\Users\Usuario\Dropbox\QUBIT\IBM_lab\qc5.py", line 432, in get_quantum_register_containing
raise ValueError("qubit %s not found" % name)
ValueError: qubit q2 not found
May be the bug (in Py3 version) is in function CX...
I do not know the logic rules enough... so it's being rather difficult to correct these problems.
The source of qc5.py (QuantumComputer converted to Py3) is attached.
p.s.
I also added a '?' command to inspect the qubits after each operation, and some "print"s on source to track the results.   (a fast, rough and ugly adaptation...)
qc5.docx
Hi,
Our qc5.docx file looks a lot different than  my QuantumComputer.py file (even aside from the changes you've had to make). Are you sure you're using the latest commit of LSaldyt/QuantumComputing/master ? This is the only place where the changes I've mentioned have occurred. There is an open pull request  #6  to merge this branch with the rest of the repository.
If the problem is with the latest branch of my fork, I'm still glad to help.
Cheers,
Lucas
Hi Marcus,
I'll look into this.
But for reference, the diff of the porting commit only shows the addition of parentheses to the print calls in pretty_print_probabilities.
So, it looks to me like the problem isn't coming from that function. I'll look into this further
Diff reference:
Running your example on the latest master branch of github.com/LSaldyt/QuantumComputing:
Running the same example on the latest master branch of github.com/corbett/QuantumComputing:
For me at least, the output is entirely identical in both the Python2 and Python3 versions of the software.
If you're asking about the inner workings of QuantumComputer.py, you're probably better off asking @corbett, since she authored the software. All I did was port it, and I only have marginal knowledge of quantum circuitry and this particular software implementation.
Thanks,
Lucas
Oh Lucas,
I did not think at all that his adjustments were responsible for the odd result in reverse order.
Sorry if I expressed myself in a very unclear way.
I'm not used to the GitHub platform, and I do not know exactly how, or who, to report on the improvement of the source code.
I know Dr. Christine Corbett is the author, but I imagine she has very little time to deal with this apparently finished project.
I really appreciate your attention, and I'll try to get in touch with Dr. Christine.
Thanks!
No worries, and good luck contacting Dr. Christine.
Tell me if I can help you further
Thanks,
Lucas
The original issue , regarding port to Python 3, appears to have been solved.
Thank you
