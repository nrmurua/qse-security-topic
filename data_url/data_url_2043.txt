Following PR #2715, the simple_noise_from_calibration_metrics will support three noise types:
This issue tracks the addition of other noise types to this converter. Candidates include:
One of the challenges in supporting per-gate amplitude damping is that noise models do not have device information when they are applied to a set of moments. This prevents an accurate estimation of the duration of each moment, which makes applying time-dependent amplitude damping difficult.
With the addition of two-qubit Pauli error metrics (PR #2761) we can model gate depolarization more precisely by controlling depolarization probability on the gate type.
With the addition of two-qubit Pauli error metrics (PR #2761) we can model gate depolarization more precisely by controlling depolarization probability on the gate type.
In that PR, @viathor notes that two-qubit Pauli error is defined as the chance of at least one qubit experiencing error, modeled by the formula:
Since this model is symmetric, with each possible combination of Paulis (aside from the identity) having equal probability r_p / (4^n  - 1), the single-qubit error rate r_pk should come out to be:
since there are 3 * 4^(n-1) combinations of Pauli errors on n qubits which have an error on a given qubit k.
Copying discussion from #2864:
@mpharrigan: The noise models are models. All models are wrong but some models are useful. Instead of beating ourselves over the head trying to get the current zero-degrees-of-freedom model to be predictive, free the parameters and see what you can get. [Normal caveats apply: make sure you have separate test/train/validation sets]
@95-martin-orion: This is a good point. IIUC, what you're suggesting would look something like this:
The entire "metrics-to-noise" concept has evolved wildly since this issue was opened - for the current state, see #4666 and related PRs. As those PRs generate noise which we've verified to be within normal hardware variance, I don't see an urgent need for the error types described above.
If we decide to pursue other error modes (e.g. leakage into the |2> state), we can open a separate issue for that.
