Hey Team,
I have a doubt regarding the other variants that are not marked with * to generate key and certificates. I have set SPHINCS256-128F-SIMPLE variant to true in the generate.yml file. I have run the generate.py and make generateobjects also.
My doubt is that should I again execute ninja install and ninja in the liboqs folder and then the commands in openssl folders also?
My doubt is that should I again execute ninja install and ninja in the liboqs folder and then the commands in openssl folders also?
The former should not be necessary if you built liboqs successfully with all algorithms (incl. SPHINCS256-128F-SIMPLE) before. You definitely need to re-run make in the openssl build tree after running make generate_crypto_objects (best run make clean before to be sure no old build artifacts survive).
Hi Michael,
Thanks for helping,
I have added my implementation of SPHINCSSHAKE256128FSIMPLE in the respective functions of crypto_sign_keypair, crypto_sign_signature, crypto_sign_verify respectively. In order to ensure that my code is being executed, I have added a print statement saying ("Keygen by SAM !!!") . I have successfully built the liboqs without any error.
I have made the corresponding changes in the cmakelists.txt as well as in the cmake folder


Then I modified the generate.yml and followed the steps thereafter in code generation
In the openssl folder I ran make after a make clean
I was able to generate the keys successfully, although I did not see the print statement ("Keygen by SAM!!!") getting printed
Your thoughts on it could be very much helpful. I have also enclosed a screenshot for your kind perusal.

The same when I did for SPHINCSSHAKE256128FROBUST, I was successful

So you have added a new implementation for SPHINCSSHAKE256128FSIMPLE and want to see it working in OpenSSL? Did you verify it works in liboqs (e.g., by successfully running test_sig SPHINCS+-SHAKE256-128f-simple)? If so, can you please show the output of openssl speed help? This should show all compiled-in OQS algorithms. If sphincsshake256128fsimple is not shown in this list, it has not been correctly enabled and compiled in. Also, please only show logfiles, not screenshots: The latter are only showing very little information and can't be searched.
Hi Michael,
I have run the test_sig and it was successful. I was facing the error because I had set the path wrong for the cmake. Now I am able to successfully execute my implementation.
Thank you for the prompt responses and the timely help!
Thank you for the prompt responses and the timely help!
You're welcome. Please feel free to let us know if you have improvements on the current code base (for SPHINCS). Maybe best in the liboqs project.
