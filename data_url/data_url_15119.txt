I started to experiment the first time with qiskit runtime instead of the aer_simulator on which my code is running perfectly fine. The error I got is the following:
'Unable to retrieve job result. (...) WARNING Backend (qasm_simulator) does not support dynamical decoupling. (...)'
To reproduce just run the code:
(Some imports migth be not needed)
!pip install pylatexenc
!pip install qiskit
!pip install qiskit-ibm-runtime
from qiskit import transpile
from qiskit import execute
import qiskit.quantum_info as qi
from qiskit.extensions import UGate
from qiskit.quantum_info import SparsePauliOp
from qiskit_ibm_runtime import QiskitRuntimeService, Session, Estimator, Options
import numpy as np
from numpy import array
from numpy import dot
from numpy import zeros
from numpy import ones
import random
#######################################
#Control Parameters
#######################################
shots = 1
e = 0.2
NCircuits = 1
Nqbits = 12
timeL = 80
service = QiskitRuntimeService(channel="ibm_quantum")
Z = SparsePauliOp("ZZZZZZZZZZZZ")
#Creating the input for the task
u_l1 = ones(50)
u_l2 = np.random.uniform(0,1,30)
u_l = np.concatenate((u_l1,u_l2),axis=0)
#Repeating the whole circuit Nm times
for Nm in range(NCircuits):
If I run the same code with the aer simulator, the code is just working fine. (Code above is simplified and the aer_simulator code looks actually a little bit different.)
No response
Could you comment on how you resolved this issue? I have ran into the exact same problem on my mac.
How I solved the problem is probably not useful for you. I modified my quantum circuit in many steps. The above code is representing 3 operators that can be performed on a certain amound of qubits. What I wanted to implement was a circuit which applies one out of three gates per time step with a certin probability.
In my final result I only have the above gates U0 and U1  and not their controlled version and instead of the qc.initialize() command I added another command to reset the qubits to their intitial state (so qc.initialize() - command was deletetd from the code).
Maybe this helps you, but to be honest I still don't know what exactly the dynamical decoupling means.
