Hi, all! I encounter the problem that it seems not obvious to use Cirq to simulate 2-qubit error. However, these tyeps of errors are often encountered when considering device-like noise. In this case, I defined myself with the two-qubit deplorizing error and thermal error, which consists of dephasing and reset error as follows.
Then, I add the noise after each gate applied in a circuit, and simulate in the following form.
However, it output that DensityMatrixSimulator does not support the two channel that I defined. So, I want to ask how to solve this problem?
Hi @ironmanaudi this doesn't look like it's an issue or bug with the Cirq library itself, but is instead a question about how to use the library. I'm happy to answer the question here, but next time it might be better to post on stackoverflow.com in the quantum computing section under the Cirq tag. There are different issues with each channel provided:
The first channel won't work because the contract of _mixture_ is being violated. _mixture_ expects channels that can be described using probabilities of applying a given unitary. The reset operation is non unitary and won't work. It might be worth looking into trying to fill out the _channel_ function instead.
For the second channel the cirq library functions are being used in the incorrect order. Instead of something like:
one would probably want:
There is also a built in multi qubit depolarizing channel which can be used as well with: cirq.depolarize(p=0.001, n_qubits=2)
As an alternative to defining your own channel types, you could instead create a MixedUnitaryChannel, which can be constructed from a sequence of (probability, unitary) tuples like the tuple returned above.
@ironmanaudi going to close this for now.
