Is your feature request related to a use case or problem? Please describe.
currently tags are displayed in circuit diagrams via their repr (implicitly via str(list(tags))). This can lead to some unruly or hard-to-read circuit diagrams, e.g.:
this could be cleaned up by overriding tag.__repr__, but usually not without breaking the expectation that eval(repr(tagged_op)) == tagged_op
Describe the solution you'd like
it seems like it'd be much more natural (and easier to customize) if the circuit diagram drawer to instead use the tags' strings, e.g.:
What is the urgency from your perspective for this issue? Is it blocking important work?
P3 - I'm not really blocked by it, it is an idea I'd like to discuss / suggestion based on principle
(happy to work on this if it seems reasonable)
Another possibility would be to allow tags to implement some protocol method to produce a more compact representation for circuit diagrams. Something like _circuit_diagram_info_ itself allows for gates.
that would definitely be the nicest solution, in that it could also support e.g. CircuitDiagramInfoArgs.use_unicode_characters when generating the symbol
i still think it would make sense to fall back on str(tag) instead of repr for tags which don't implement _circuit_diagram_info_ though - if nothing else this is what happens for gates:
It also seems more in keeping with the goal of the circuit diagram generally - usually the point of implementing __str__ for a particular object is to provide a more human-readable visual representation than its __repr__ (which is generally supposed to be unambiguous)
