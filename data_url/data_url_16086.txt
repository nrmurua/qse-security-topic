FakeOpenPulse3Q and FakeOpenPulse2Q only define unidirectional CX's in their instruction_schedule_map's. Real pulse devices give schedules for both directions.
fake_ism should contain CX for the opposite directions too: in the 3Q case, [(1, 0), (2, 1)]
Perhaps adding commands like Command.from_dict({ 'name': 'cx', 'qubits': [1, 0], ... would do the trick in https://github.com/Qiskit/qiskit-terra/blob/master/qiskit/test/mock/fake_openpulse_3q.py.
Is this a major problem? The mock backends exist to mirror the real devices. Going forward real devices also will not be bidirectional.
For additional context: I currently have to get the bogota device via network I/O in a unit test to assert some pulse compilation functionality.
My hope was to replace the network I/O with simply loading in a Fake backend, but they don't currently mirror the real devices.
Nonetheless, if they will be in sync soon it will not be a problem.
Do you have a rough ETA for the "Going forward real devices also will not be bidirectional." ?
Thanks!
I see, if you want to include a bidirectional update in your PR that would be fine. It also might be possible to base your work on my branch here #5577 where the devices are updated? It is still failing CI because of other Qiskit issues that should hopefully be resolved soon.
Do you have a rough ETA for the "Going forward real devices also will not be bidirectional." ?
Roughly in the next 2-3 months sparse gatesets will be enabled to reflect directionality and calibrations on the device and have the transpiler reason about how to optimize around them itself.
Got it, thanks for the info!
It would probably take me a week to get through something that can get merged inâ€”probably not worth it given the gatesets will change in 2-3 months anyways.
So I guess we can close this issue. Thanks!
