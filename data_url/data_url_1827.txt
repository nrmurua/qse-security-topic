I'm trying to concatenate two circuits acting on independent qubits to run in parallel. As far as I can tell this should work if I use cirq.InsertStrategy.EARLIEST with either circuit.insert or circuit.append, but in both cases the second circuit appears to be added in parallel.
I've put together a minimal example below. Sorry that it's a bit messy, hope that it makes sense.
Cirq version
0.10.0.dev
The readout I get when I run the above is:
But I would expect the following for the final two circuits:
When adding "op trees" to circuits, the insert strategies really only work if you are actually adding individual operations. If you add moments or circuits (which are composed of moments) we preserve the moment structure which results in the behavior you are seeing. You can work around this in one of two ways, either convert the circuit to be added/inserted into a stream of operations which will then be "repacked" using the given insert strategy, or call the zip method to combine the moments of the two circuits in parallel (these two methods are equivalent in this case, but will not be in all cases):
Ah ok. Thanks for the information and the quick reply.
No problem, @obriente. As a follow-up, if there are places where you feel this behavior could be described better please feel free to suggest improvements to the docs. Manipulating circuit structures like this is a core part of cirq, so we want to be sure to document it clearly.
Hmmm, good question. Upon re-looking, I guess this is what is meant in the docstring for 'circuit.append' by the line 'Moments within the operation tree are appended intact.' ? (And similar for circuit.insert.)
This could perhaps be expanded on a bit, it's currently a bit cryptic to me (I must admit I also didn't check the docstring before submitting the issue, which is my bad, ). Maybe expanding on what this means,and pointing the user to cirq.Circuits.zip might help? Something like:
'Moments with the operation tree are appended intact. For example, appending whole circuits will cause said circuit to be appended in series rather than parallel regardless of the chosen InsertStrategy. This behaviour can be avoided by appending cirq.Circuit.all_operations() instead of the circuit itself. For more choices regarding circuit concatenation, see cirq.Circuit.zip().'
