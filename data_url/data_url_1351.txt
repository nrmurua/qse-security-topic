Description of the issue

Also the module name sparse_simulator implies it's sparse. However the code is a standard state vector simulator (it has optional product state formulation, but that's still not fully sparse in the sense of zero-cells being removed).
It may be better just to merge this with its base class StateVectorSimulator, as the reuse value of that base class is fairly low (nothing else currently uses it, it doesn't add much functionality, and the logic is fairly coupled to that in Simulator anyway), and merging the two would make the code easier to follow.
Isn't it kind of sparse in the sense that if you do a k-qubit gate on n qubits, it doesn't do a 2^n x 2^n matrix multiplication, but instead does 2^{n-k} 2^k x 2^k matrix multiplications?
I see. I was going by https://devblogs.microsoft.com/qsharp/testing-large-quantum-algorithms-using-sparse-simulation/, where the storage space is also sparse (at least per the blog entry). Such a thing seems to exist in scipy, but not numpy. I wasn't aware that sparseness could also apply to multiplication count. I'll close the issue.
I still think it's worth merging Simulator and StateVectorSimulator classes, though with low priority and as a separate issue.
