It seems that the scheduler in the transpiler adds delays on idle qubits for the duration of the entire program. In particular, an idle qubit (e.g. q2, below) will have a delay from the start of the program until the end of the measurement on active qubits (e.g. q0 below). Then, on the backend, qubits that were idle -- but have a delay instruction on them -- are measured, and all the backend measurements are aligned in time, so the measurement on active qubits are delayed to start when they would have been ending. In other words, there's an additional delay which happens to be the duration of the meas/acquire.

The delays in this image on qubits 2, 3, and 4 end at the same time that the measurement on qubits 0 and 1 end. The backend reschedules all measurements to start at the end of the delay on qubits 2, 3, and 4.
Use a scheduling_method, measure on some qubits, and not others.
There should be no additional delays between the program operations.
Remove the delays added to idle qubits, or shorten the delays to end when the measurements start.
Removed the milestone. We thought we had found it, but the fix didn't work. Looks like it may not be a terra issue afterall.
I think we determined this is not actually a bug and the bug is elsewhere, so closing..
