In the pipelined QEC cycle, several gates need to be scheduled during a measurement:

I cannot seem to make that happen in a test program for the CC backend, and as far as I can see the ql::ir::bundle_t data type is not capable of representing it. I can envision defining a brief measurement gate, and then manually managing the required delay, but that would be rather cumbersome.
Are there ways to do this that I overlooked?
Hi Hans,
thanks for your prompt answer. For the CC, there is no hardware notion of gate durations, so all information needs to be in the program that the CC backend generates. I currently generate timing info based on bundle_t::duration_in_cycles only.
Having a further look at the scheduled program, I observe that in many cases bundle_t::start_cycle + bundle_t::duration_in_cycles results in the start_cycle for the next bundle.
Sometimes the start_cycle of the subsequent bundle is earlier than that. Is this the way that parallel bundles are implemented? (i.e the start_cycle must be honoured, at the possible cost of 'truncating' the previous bundle, which will keep running 'in parallel')?
And if that's the case, what is the exact meaning of duration_in_cycles: the longest gate in the bundle?
just had a look at scheduler.h and saw that the above is indeed the case. Will change CC backend accordingly, and close this issue.
