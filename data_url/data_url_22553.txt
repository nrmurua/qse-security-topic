Do we need to run the tests via setup.py at all? Setuptools is messy and the least we touch it the better.
@jordens
re 1: because conda does not have a separate category for test dependencies, these are not build dependencies (we do not run them during build) and I do not expect users of ARTIQ to run its internal tests
re 2: it seems like the pypi package is called "python-Levenshtein" which does not match what's installed in site-packages. This is irritating and I will look into it.
@sbourdeauducq IMHO it is very nice to be able to run the unittests in a package without having to install it in any way
@whitequark then they can also be dropped from setup.py, otherwise they will be installed from pypi and used in setup.py test
@jordens That's kind of the point, e.g. I do not use conda for development but my system Python.
Could'nt you then write the two dependencies as optional, like lit[testing]?
PYTHONPATH=pwd python3.5 -m unittest artiq/test/*.py
Sure. Or use nose or py.test or unittest discover. But the conda builds and the setup.py need adjusting.
@jordens conda does not have optional dependencies
Also, we do not run builds or tests on ARTIQ via conda because it was broken somehow... I don't remember how, but I enthusiastically migrated it all to conda and then had to revert
@whitequark can you have the buildbot easily run the tests without setup.py? Then I suggest we just remove all support for setup.py test.
@sbourdeauducq sure, that's no problem at all. Can you also do it for migen and misoc then?
@whitequark i am talking about setup.py. that has optional dependencies that would prevent OutputCheck or lit from being installed on setup.py install. Conda testing was probably broken in the way i described above.
@whitequark Sure.
OK so what's the new way of testing?
Get import artiq to do the right thing via PYTHONPATH or whatever, then python -m unittest artiq/test/*.py (or artiq.test or similar, if that works).
The latter doesn't work. The former as properly written (using **/*.py) will break on Windows but I guess it is fine as we can't build noarch packages on non-Windows either.
cd artiq; cd test; python -m unittest *.py
python -m unittest *.py won't take into account subdirectories. python3.5 -m unittest discover will. We should just rename the tests to test_*.py so that it matches the default discover filename pattern.
See the newtesting branch.
done.
