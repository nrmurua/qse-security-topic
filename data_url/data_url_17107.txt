In working with the Qubit/Clbit classes, it would be nice to have Bits be orderable. The case that came to mind was pulling Qubits out of a set with some deterministic ordering, e.g.
Tuples supported this (as long as you were comparing within a single register.)
Determine what the right bit sorting order should be, and implement the necessary __lt__/... methods on the Bit class to support it.
There may be some discussion needed on what the proper ordering should be. I think there are at least three candidates that are already used in various places:
We decided we won't fix this since Qubits are not inherently ordered, before they go in a circuit.
If you know that you have one register, you can compare them using qubit.index.
