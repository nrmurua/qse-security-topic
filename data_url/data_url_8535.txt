Qobj.expm() is currently not working properly for diagonal states which have a zero in the diagonal (these zeros don't become ones). An example:
While the correct result should have been (notice the element in second row, second column):
On analysing the source code I found the the function sp_expm in sparse.py is responsible for this computation. The particular code is reproduced below:
Since A.data is stored in sparse matrix format, only non-zero elements are exponentiated. A way to avoid this problem would be to either completely remove the case of optimizing for diagonal states or modifying the appropriate code as:
I am running qutip 3.2.0.dev-cb698ef
Python 3.5.1, numpy 1.10.4, scipy 0.17.0
Indeed, that is my error. Will fix tonight. Thanks for finding it.
This has been fixed in #494.
