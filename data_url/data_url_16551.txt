Probably a bug in how fake backends are constructed.
is supposed to give the channels associated with qubit 0. It just errors. On the real backends this works fine.
The fake backends need to be updated, this is new information that is being provided by our backends now. I'm not sure how to do this.
was there a recent change in how get_qubit_channels works? the fake backends were updated very recently by @mtreinish (so I'm wondering whether the update scripts themselves need changing)
Not how the method works, however, not all backends are updated to the latest deployment that provides this information.
Which fake backend are you using? From a quick grep (grep --color -R '\"channels\"\:' qiskit/test/mock/backends/*/conf_*.json) the only fakebackend conf snapshot that has the channels attribute set is boeblingen. If the problem is still there with boeblingen it points to a bug we can fix. But, the other json snapshots don't have the attribute. If more devices are returning it now we can rerun the script and update the json payloads to include the channels attribute.
Yes, as updates continue to roll out to backends they will supply this information. I believe we throw an informative exception if the information is requested and is unavailable.
The mock version probably needs to be updated.
I just went ahead and did this because to update all the backends snapshot you need access to all the premium devices in addition to the public ones. For future reference if someone has access to all the devices you just need to run tools/update_fake_backends.py with your hub, group, and/or provider on the cli (see --help on it) and it will query all the backends and update the json. If you don't specify a h/g/p with access to premium device only the open devices will be updated (since the script won't see the premium devices)
