Currently the simulator backends do not have a n_qubits key in their configuration (#1047), whereas the spec says that n_qubits=-1 for a simulator.  Would it not make sense to have local simulators return n_qubits=N_max, where N_max is the max number of qubits supported by the local memory?
I don't want the spec to -1 let change that  @dcmckayibm .
Ok, I think at one point I was going to set it this way, and I forget why I decided against it
After merging #1327, the test test_backends.test_aer_backend_configuration has been disabled - we should re-enable it when working on this issue.
@nonhermitian @jaygambetta One issue is future (qikit-aer) simulators will support varying numbers of qubits depending on the input circuit: for example if the input circuit only contains clifford gates a simulator could potentially support thousands of qubits, while for a general circuit only 30ish or whatever is the limit of available memory.
As I mentioned elsewhere, having a single backend dynamically select a solver is problematic.  The n_qubits may be different (as highlighted here), the supported gates can/will be different etc.  So this would effectively break the spec, or at least require fairly big modifications.  Instead, each solver should have its own backend, and then execute,. or another function, should dynamically pick the backend to use.  These backends need to exist anyway since the user may want to directly use/query a given solver.
