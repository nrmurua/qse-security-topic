sl0.ch1_voltage(0)
should set the voltage
@WilliamHPNielsen @giulioungaretti
@nataliejpg that string you get looks like a response from the decadac upon setting the mode.
Looking into the driver, no response is read when setting the mode.
You could try setting the mode, and then calling
dac.visa_handle.read()
maybe a few times...
thanks @MerlinSmiles , I'll put that in the my initialisation wrapper and see if it helps, perhaps a fix in the driver where it does that after  setting the mode (as part of set_cmd) would help. Also I found another bug which is that if you initialise the instrument and then ask what the voltages are they do not correspond to what you last set them to which is maybe because the get isn't actually querying the instrument (I don't know) but at least a warning on this would be good, do you think this is the case @WilliamHPNielsen? I'm right now in the middle of measuring so am disinclined to disconnect and check what they are actually outputting!
ok tried that and answer is to run visa_handle.read() twice (but no more because it times out if you try more times than it has messages)
actually the above is only true sometimes. Also I now cannot get the instrument to output anything even with turning mode to 1 a lot of times. @MerlinSmiles are you (or anyone else?) actually using this instrument and driver reliably?
@nataliejpg yes it will time out, thats because visa will read until it finds a line termination character.
If that reading is helping you, it should be included in that set_mode command, but it would be strange if you'd have to call it more than once, but at every time that mode is set...
For your other bug, the get is asking the instrument, just in a funny way of handling the response (with things like inverting strings, and searching from the back ðŸ˜®) , which seems to be a double response.
when I compare that to our matlab driver, we select the channel, but that also reads the instrument response. Basically every command also generates a response, which one needs to read, otherwise it will mess up your next reading.
For your last question, No, I dont have that instrument installed, but spent quite some time on our 21bit resolution matlab driver a few years ago. Which worked just fine.
https://github.com/qdev-dk/matlab-qd/tree/master/%2Bqd/%2Bins
look especially in the DecaDACChannel.m and HRDecaDACChannel.m
@WilliamHPNielsen this driver is putting the decadac in mode 1, which is a high resolution mode, and effectively disables output on channels 3,4,7,8,... aaaand it is not handling that extra resolution?
There is a manual on the qdev wiki, and those matlab drivers for copying functionality...
Sorry for that shitshow. Unfortunately, I don't have a Decadac at hand, but from @MerlinSmiles' helpful comments, I hope that #552 does the trick.
