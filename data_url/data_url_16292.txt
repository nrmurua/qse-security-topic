Template substitution allows users to identify sub-circuits in a quantum circuit and replace them with equivalent quantum circuits with a lower implementation cost. For example CNOT(0,1) CNOT(0,1) is equivalent to the identity I. Since the implementation cost of I is lower than two CNOT gates this replacement makes sense.
Currently, the implementation cost of a quantum circuit is evaluated in TemplateSubstitution._quantum_cost(self, left, right) in template_substitution.py. _quantum_cost evaluates the cost using a hard coded cost_dict instance. The user should be able to add/remove/modify elements from this dictionary as it is architecture dependent and the user may also whish to add his own gates to it.
cost_dict should therefore be an attribute of the TemplateSubstitution class that users can access when creating template matching transpiler passes.
Can I give this a try, @eggerdj ?
@born-2learn sure
To add/remove/modify elements of the cost_dict which is currently present in template_substitution.py.'s _quantum_cost, cost_dict should be made a parameter of the TemplateSubstitution class.
Here are the changes that I am proposing:
Please let me know if any more changes are needed, @eggerdj! I'll send in a PR asap for the same.
