I would like to partially Circuit.Fold a function, because circuit folding also includes moving labels on the right to the left. In this example I'm labelling the inputs of a function using the function labellingStart. I then compile the labelling to a circuit, to fold it so the labelling is executed in parallel. The labelling must then be applied to the larger circuit function in which it is embedded (not shown); I apply the Circuit.Run to make sure that the circStart is included in the larger circuit (otherwise circStart is not included in the output). This, however, seems to not be possible since it throws an error. Is this intended? What alternative way is there to put labels on the left and on the right which are shown in parallel, but are not moved by Circuit.Fold?
I get the following error:
Yes. This is expected behavior. You cannot nest Circuit.Compile, Circuit.Run or Circuit.Fold. The standard technique is do each of these once. Here is a version of your code as an fsx script in samples:
This will generate a drawing of the circuit as "Test.htm" (and Test.tex). What you really want to do comes under the area of Circuit manipulation. You can take any function and compile it to a circuit (as well as fold it). If you made your labels in one circuit and your real algorithm in one (or more) other compiled circuits, then you could just walk the circuit data structure and splice them together (this functionality is not built into the system).
If you take a look in the kit at \Liquid\UserCode\DaveWecker\AltOutput.fs you'll see an example where I programmatically walk the circuit data structure to emit QASM code. you could just walk your separate circuits to generate a single new one for execution or rendering.
