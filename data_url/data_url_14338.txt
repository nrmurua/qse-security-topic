QuantumCircuit equality has a somewhat non-standard definition in that it attempts to check for a "structural" equality of quantum circuits, e.g.
and
are treated as equal, even though the order of elements in their .data will be different. Likewise, .name and .metadata are specifically not considered in determining whether two circuits are __eq__, while .calibrations and .global_phase are.
We should make sure to call these out (and their motivations) in the QuantumCircuit.__eq__ docstring https://github.com/Qiskit/qiskit-terra/blob/f6a343b3fcd834a1a49103b426f20ef83dd2f42c/qiskit/circuit/quantumcircuit.py#L444 and DAGCircuit.__eq__ docstring https://github.com/Qiskit/qiskit-terra/blob/f6a343b3fcd834a1a49103b426f20ef83dd2f42c/qiskit/dagcircuit/dagcircuit.py#L1045 .
Additionally, we should note that that QuantumCircuit.__eq__ does not attempt to check unitary equivalence (as this is in general both hard and computationally expensive), but that this can be achieved for purely quantum circuits with quantum_info.Operator.
__eq__ is a bit weird to include in the rendered documentation. A dunder method like that is typically excluded by default from the autodoc because it has a clear protocol definition of the purpose. Also it expects that our users realize how __eq__ gets used by various comparison methods. I think it might be better to call it out in the class docstring, so say with an example at the bottom how equals comparisons are evaluated for QuantumCircuit and DAGCircuit.
It might be an idea to put the actual documentation of the __eq__ method in the __eq__ docstring, then use .. automethod:: __eq__ in the class docstring to bring it up there (with a comment explaining how it's used in comparisons).  That way we get both documentation locality in the code, and the HTML output makes sense.  It won't easily get built in by autosummary, but I think it definitely would be wrong to rely on that anyway.
(Also, I don't like autosummary at all from the perspective of making good documentation, but it's decent at making it sufficiently easy that we get some documentation.)
Hello. I'm looking for my good first issue to work on. It looks like we want to update the documentation in the class docstring.
could I be assigned to work on this issue?
Thanks!
Thanks for volunteering @uchoi91 . I don't find a consensus in the discussion above on where to put the new documentation. There are three suggestions. But I guess only the last two are contenders at this point: 1) Put the new information in the docstring for the class. 2) Put the new information in the docstring for the class method __eq__ and have it automatically inserted into the docstring for the class (This just extends the original suggestion.)
I think the more time consuming part of this PR will be to write the docstring. So, for the moment, you can put the docstring anywhere. I think it will be easiest to make it a standalone string for __eq__. Making a concise, accurate statement on what
https://github.com/Qiskit/qiskit-terra/blob/f6a343b3fcd834a1a49103b426f20ef83dd2f42c/qiskit/dagcircuit/dagcircuit.py#L1045
does (and as noted in the original comment, why it does what it does) is the first step.
@jlapeyre sounds good! I'll get this started as a stand alone docstring and will circle back to see where we want to put this and hopefully by then, it would be just moving and minor modification to get it where it needs to go.
hey @jlapeyre I have wrote docstring for both circuit classes which I believe aligns with the first option but let me know if the team wants/prefers the second option of "Put the new information in the docstring for the class method eq and have it automatically inserted into the docstring for the class (This just extends the original suggestion.)"
Regarding the content of doc, I took what was mentioned in this issue and wrote up based upon that.
thanks!
