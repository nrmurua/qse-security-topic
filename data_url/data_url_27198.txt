When executing benchmarks in Qiskit, the normalized circuit depth is calculated using transpile with a default set of basis gates.  The can take a long time for circuits of larger qubit widths.
A solution may be to write the data to a json file.  Load the json file at beginning of each benchmark in the 'set_execution_target()' method. If the required depth info exists in the file, use it and avoid the tranpilation.
The downside of this is that the data can be out of date if the circuit definition changes.
To eliminate this issue, create a hash key of the circuit definition and store it with the data file.
That way if the circuit definition changes, the data will be seen as 'old' and will be replaced.
Note: the data file should be saved with a generic name; the data contained within may be used in the Cirq, Braket, and Q# benchmarks ... but should always be recomputed in Qiskit, so the hash remains the same.
NOTE: before implementing, need to confirm that this is a performance bottleneck.  Some questions remain as to whether this is the cause
