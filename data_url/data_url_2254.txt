To set up the most basic noisy simulation, you need three jargony-named things:
Opening this based on real user research :) Despite my hints, the user could not find the correct incantation to find a depolarizing noise model. One thing they tried is using AQTNoiseModel.
Here is how I would write that more simply:
But I agree that you could point to three things that you have to teach a user for them to know to write the above line.
Maybe what we could do is permit this:
with the understanding that when the "noise" is set to a single qubit operation it automatically gets wrapped with ConstantQubitNoiseModel?
cirq.sample isn't a good choice for testing code that uses a Sampler that you want to run via quantum engine
I think it would ease a lot of confusion if there was something named DepolarizingNoiseModel
I see, you don't just want "the most basic noise simulation" you want to make a noisy sampler specifically.
Auto-wrapping single qubit operations into noise models would still make sense in that context.
We could generalize cirq.Simulator() to include density matrix simulation, and have a with_noise(noise) method on it.
Creating a noise model type for every noisy channel operation type would be quite a lot of duplication. Having cirq.depolarize(p) play double duty as a de-facto noise model would be superior IMO.
I'm liking the idea of generalizing simulator more and more. I'll bring it up at the meeting.
This now exists for single qubit noise.
