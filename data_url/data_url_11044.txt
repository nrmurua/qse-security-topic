We are doing some sanity checks to see how phase estimation works and we cannot reconcile it
with our expectations: the value of the estimation just does not match the correct value. Here's a minimal working example.
Furthermore, if you change the phase to pi/8, the phase estimation fails all together, dropping ValueError: The wavefunction is not normalized.
@JansenZhao thanks for raising the issue.  That is concerning.  I wonder if this is related to issue #44?
@ncrubin Thanks. Most likely, but I am not so clear what was meant by "What phase convention did we choose so the QFT is correct?" in #44.
I've taken a bit of a look into this and also think that we need to confirm the convention.
When I run the following:
I get this output:
I would expect
In general if I run with phase of x then I seem to get a bit representation of 1-x and the wavefunction is shifted to the right by one qubit from what i would expect
e.g. for phase=1/16 I get:
I'm also getting non-deterministic results for phase=1/8. I would expect that because 1/8 can be exactly represented as a binary fraction then it should give exact and deterministic results? @ncrubin ?
I think there are two issues here, one is related to #44 and the other is some change to pyquil between late November and now. I'm trying to find the pyquil commit causing the problem.
Thanks @kmckiern ! This appears to be fixed.
Thanks, it works fine! What's the convention for the binary encoding of the phase?
The representation is as a binary fraction listed from the right. This means that
0001 represents 1/2
0010 represents 1/4
0011 represents 1/4 + 1/2 = 3/4
1000 represents 1/16
Each index to the left is 1/2^i
Does that makes sense @peterwittek ?
