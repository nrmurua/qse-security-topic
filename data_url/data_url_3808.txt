Dear all,
I am comparing two models, and I would like to know if there is a method to know the real number of the nodes in which a given graph is mapped in dwave.
Please, is there any way to achieve this?
Many thanks,
Parfait
Hi @pifparfait , could you provide a bit more context or a code snippet? For instance, are you using the EmbeddingComposite?
Hi @arcondello, how are you? Yes, exactly, we simply load the dictionary and put it in the EmbeddingComposite function.
Here goes the code.
#from dwave.system import DWaveSampler, EmbeddingComposite
sampler = EmbeddingComposite(DWaveSampler())
sampleset = sampler.sample_qubo(dwave_dic,num_reads = n_samples)
solution = sampleset.first.sample
Many thanks
Great! In that case you can use the return_embedding keyword argument (see docs) and use that to determine the qubits used.
I believe that's the number that you're looking for?
Alternatively, you could use our problem inspector.
Many thanks @arcondello.
Executing this code, I got this error message.
qubits = []
for chain in sampleset.info['embedding_context']['embedding'].values():
qubits.extend(chain)
print(qubits)
print('number of qubits used:', len(qubits))
KeyError                                  Traceback (most recent call last)
 in 
1 # get the qubits used from the embedding
2 qubits = []
----> 3 for chain in sampleset.info['embedding_context']['embedding'].values():
4     qubits.extend(chain)
5
KeyError: 'embedding_context'
Are you passing return_embedding=True to the .sample_qubo() method?
Hi, @arcondello, It works. I'm still analysing the code. I will maintain you informedâ€”many thanks.
Great! I'll close this issue for now then
