Is your feature request related to a use case or problem? Please describe.
We can see the slow performance when we increate the number of unitaries in a cirq.MixedUnitaryChannel with the number of qubits larger than 2. For example, on 7 qubits, we can construct P 128x128 unitary matrices, where P is the number of possible state in a stochastic process, so the channel has P probabilities. But it's just a serialization which could be parallelized, we don't have to rollout the cascaded serialization of the P unitaries.
Describe the solution you'd like
When serializing P unitaries on MixedUnitaryChannel and KrausChannel, running parallelization on each unitary is recommended.
[optional] Describe alternatives/workarounds you've considered
[optional] Additional context (e.g. screenshots)
What is the urgency from your perspective for this issue? Is it blocking important work?
P0 - this should land no later than a week
P1 - I need this no later than the next release (end of quarter)
P2 - we should do it in the next couple of quarters
P3 - I'm not really blocked by it, it is an idea I'd like to discuss / suggestion based on principle
@jaeyoo, I'm not sure I fully understand the problem description. What do you mean by "cascaded serialization", and what sort of parallelization do you have in mind here?
So, preliminary discussion form cirq cync is that we do not want to parallelize this, but maybe we could come up with an alternate solution for serialization that would serialize more efficiently.
If this issue is primarily seen in cases where multiple identical copies of these types are serialized, it's possible that their JSON serialization could be made more efficient by having them implement the SerializableByKey protocol:

The primary purpose of this protocol is to reduce the serialization size of circuit with large repeated components, but if the slowness is being caused by the "normal" serialization path for these types, this protocol could provide an alternative path that may be faster.
This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 30 days
Issue closed due to inactivity.
