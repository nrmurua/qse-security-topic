I would suggest to include the possibility of creating and applying arbitrary diagonal unitary gate in Yao.jl, similar to what other quantum simulation frameworks like Qiskit and Cirq offer.
Currently, the only way to do that seems to be by passing a Diagonal matrix to matblock, but based on the performance of this approach, I conjecture Yao.jl doesn't use the diagonal structure of the matrix to make it efficient.
It is supported in Yao. Please make sure you are doing the benchmark correctly. In Yao, the method for applying a gate are specialized on
FYI Julia has generic types with a JIT but Python doesn't so you don't need to define a primitive to enable specialization here.
I think we do much more specialization than other Python packages due to this so if you suspect any performance issue please always benchmark and report that specific case.
