Noticed while stats-testing the kex_rlwe_vscrypto code, where the algorithm returns a key whose length is not a whole number of bytes.  If "true" key length is actually 8n+r bits (0<r<8) then kex_rlwe_vscrypto returns key_len = n+1, causing last byte to lose entropy.
Changing the liboqs API (for the whole of liboqs) so key_len is in bits, not bytes, would address this issue (for any algorithm) and is probably more mathematically correct in general than sticking with bytes.  Downside would be coding complexity.
(edited to make clear this is a proposed liboqs API change, not just a kex_rlwe_vscrypto change)
Won't fix.
