If I have the following
the loop is technically a "counted" loop, but we don't tag it as such. This means that future loop unrolling can't happen.
We need to update the ASTBridge to tag these types of expressions as "counted", or add a pass that will find them and update them.
Part of #98 was to add a mem2reg pass. Mem2reg on classical scalar values will simplify the loop analysis required. Once that is done, the loop unrolling pass won't need to rely on the annotation approach we're using as a stop gap at the moment.
I think this one is done. Do we need to add another test or anything?
We should ensure that https://github.com/NVIDIA/cuda-quantum/blob/main/docs/sphinx/examples/cpp/basics/static_kernel.cpp can lower to the base profile with the right pass flags.
We should ensure that https://github.com/NVIDIA/cuda-quantum/blob/main/docs/sphinx/examples/cpp/basics/static_kernel.cpp can lower to the base profile with the right pass flags.
Well, it's close.
Should we update the title of this? The issue isn't about loops here.
Revisit and drive to closure.
I checked this in both main (796ba6c) and 0.4.1, and it is working correctly as far as I can tell. I think this issue can probably be closed.
