I just updated my local Aqua and Terra to master, and received the following error when trying to run an Aqua test, or just import BasicAer from the terminal:
Note that all basicaer unittests in the terra repo pass.
I've seen this error hundreds of times, both on my own system and collaborators'. The only solution is:
This process is very time consuming.
Often when I am working on Qiskit code directly, many classes of bugs raise the error above rather than surface the actual syntax or logic error to me directly. This makes debugging very difficult and time consuming.
I cannot rely on the Qiskit metapackage pip install to work these things out for me because I am writing code to contribute to Qiskit.
Update Qiskit installations.
Surface module not found errors only when modules are not installed. If there are installation issues, surface them during installation, rather than showing installation success.
Update: after deleting every qiskit folder from my site-packages, reinstalling them all, and then reverting some changes I had pending in my qiskit-chemistry directory to be able to reinstall it from the master branch, these test now pass. I do not understand why it appears that a code error in my qiskit-chemistry directory would make BasicAer fail from the python command line, but not when running the BasicAer tests in Terra. Any insight?
This kind of thing is how namespace packages can and often do go wrong (and why I always try to avoid using them, but I lost that argument months ago). What happens is something failed to install or gets put in the wrong place by one of the many (pip, setuptools, distutils, easy_install, etc) different ways python has to install packages but because other namespace members are installed nothing errors when you try to use it directly, python just can't find the element you're looking for. In this case that's terra. But it easily could be another component in the qiskit namespace.
Looking at the pip freeze segment in your case it's because terra is installed with an egg which gets put in a different place (and I'm not even sure if it works with namespace packages). Since you nuked things in your site packages that deleted the egg install and when you reinstalled things it installed things in the same way for each package in the qiskit namespace. The code change and reinstall in chemistry is likely just a coincidence.
Makes sense, thanks, Matthew. And actually, I just tried adding an empty __init__.py to the qiskit/ directory of my qiskit-chemistry/ directory, and it breaks the BasicAer import again. So this does appear to be some strange non-local packaging behavior.
I've fixed the break locally, but the issue still stands - the packaging is suppressing or creating errors. I've seen this problem with a number of external researchers, and it is a proper bug that needs to be addressed.
Ah, that's different and likely easily explainable then. That's caused by a file conflict and what was installed last. If you install chemistry with it's own qiskit/__init__.py last then pip/python will just overwrite the root namespace's __init__.py (which comes from terra) with the empty one. That will make the qiskit.BasicAer definition not exist and cause the failure you're seeing. Namspace packages (like aqua, aer, ignis, etc) shouldn't define a qiskit/__init__.py
For more info on why that's the case see: https://packaging.python.org/guides/packaging-namespace-packages/ (which actually specifically calls this out)
Also, note that the qiskit meta-package isn't actually the namespace package, qiskit-terra is the root of the qiskit python namespace. The meta-package literally is a meta-package and doesn't actually contain any code outside of the setup.py which just has dependencies on all the qiskit packages.
Got it - thanks, Matthew. I think that given the sensitivity of the system as you pointed out above, we should be checking these things during installs and raising meaningful errors, or moving to a less sensitive solution. I've personally troubleshooted such errors >5 times with external users.
@woodsp-ibm pointed out to me that PyCharm sometimes adds these files automatically, and it's worth noting that many qiskit users use pycharm.
are there any action items here?
I'm not sure there is anything we can do here. I recently added more documentation on namespace package issues here: #374 (btw, the link to the pypa community's wiki page of the 161 different combinations to setup and install 2 different packages in the namespace really raises the question why we are using it)
Ideally I'd like to see us move away from using namespace packages as they only cause trouble, the only benefit we get is everything is under qiskit.* which is of minimal value. But, that's a larger discussion than just terra though.
One thing we could do (which is only tangentially related to this) is warn when we detect an import ImportError on qiskit.Aer or qiskit.IBMQ: https://github.com/Qiskit/qiskit-terra/blob/master/qiskit/__init__.py#L50-L58 That way we at least give forward warning to users that their installation is messed up with their packaging.
I believe there are a few actions we can take here:
@mtreinish thoughts?
It is easier to solve in the near term through documentation, and raising appropriate warnings. Merging all repos is unlikely to happen before Qiskit 1.0, due to the need to sync all elements, APIs, etc. Though I'd support thinking about the implications and consequences and writing a doc.
That all sounds fine for a discussion plan, it's definitely in broader scope than just terra though. That being said, we can easily keep the current repo structure and remove most of the headaches people encounter by just removing the namespacing, move things outside of terra outside of qiskit.*. What we had before with qiskit_aer and qiskit_aqua as the element namespaces doesn't have any of the drawbacks in packaging (ie pretty much everything outlined in this bug), since they're completely independent packages that don't have any chance of colliding or interfering with each other.
I'm going to close this now, after a few false starts with different approaches, like #4767 which weren't tractable. We've started down the path for finally getting rid of a shared namespace in qiskit 0.25 by moving code from aqua into terra as qiskit.algorithms and qiskit.opflow and splitting applications out into separate packages with separate namespaces. This pattern will be replicated for ignis (moving to qiskit-experiments) and the ibmq provider (moving to qiskit-ibm). Aer is still an open question because there is a desire to not rename it, so we might need #4767 to do that split in a backwards compatible manner, but we can tackle that as a separate dedicated issue when its needed.
