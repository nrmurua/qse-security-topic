The optimisation flag in
<program_name>.compile(<optimisation flag>,<verbose flag>)
currently optimises only rotation merging according to OpenQL/ql/kernel.h/optimize()
A very useful optimisation would be to cancel out consecutive duplicate operations.
For large circuits, when gates are added in loops according to a high-level algorithmic description, tracking this gets out of hand.
Also, the rotation merging is done by looping over the kernels. I suggest doing the above optimisation as a monolithic program block instead so that optimisations across kernel boundaries are taken care.
Closing because of lack of activity
