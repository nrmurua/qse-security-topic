Right now mylistop[0:5] returns mylistop.oplist[0:5], not ListOp(mylistop.oplist[0:5]). This is unintuitive and loses the other state (coeff), if the user wants the raw list, they can just do mylistop.oplist[0:5].
Actually, also worth noting that __getitem__ with a single index should still return the single item, not a listop with a single item (reflecting how python does indexing). This bug is only for indexing which returns a list (not sure what that's called).
This bug is only for indexing which returns a list
I think you mean a slice, right?
Can I work on this?
I think you mean a slice, right?
Exactly.
Should I add tests? I think the place would be test/aqua/operators/test_op_construction.py but I havenâ€™t seen any for the array operations (like iter).
Yes, we should definitely add unit tests for the new function to ensure things work, and continue to work as expected. That file seems to have a lot in it but for now it does seem like the best place to add some tests for this.
By the way you can see the unit test coverage of each file by clicking on the coverage button, at the start of the readme text on the Aqua repository home page, so you can see what it covered by current tests and then by any changes you make.
Awesome, thanks!!!
