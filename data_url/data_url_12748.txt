In #549 we introduced a new task (generating random numbers from an interval) that uses testing logic very similar to task 3 (generating random numbers with a certain number of bits). It makes sense to refactor the tests as follows:
Hi @tcNickolas. Wanted to know your opinions on a few things
For the first two questions, looks reasonable :-)
For the Delay operation, I haven't tried it in code yet, but I believe it would work as follows.
Hi @tcNickolas
Geeting the following error when I tried to use delay operation:
QS6201	The shape of the given tuple does not match the expected type. Got an argument of type (((Int, Int) => Int), Int, Int, _), expecting one of type (('T => 'U), 'T, Unit) instead.		~\QuantumKatas\tutorials\RandomNumberGeneration\Tests.qs	163
My changes:
However, these changes work fine and allow to do away with the wrappers of Random One & Two Bit generation:
PS : f : ( () => Int) says deprecated syntax
Please do let me know if I can go ahead with the above approach.
And as for reduction in parameters, I think I miscalculated earlier for lowRange and highRange. Seeting lowRange and highRange variables within three unit of standard deviation is  allowing mean to go out out of (min,max) range for some cases :-(
I talked with @pandasamanvaya who told me that that currently the values for lowRange and highRange are based on experimentation by running the tests 20-30 times and observing the mean/median.
By looking at the data, I came with a heuristic to set lowRange and highRange as mean +- 0.05*(max-min+1) and values are very close to the experimentation values. Here is a quick table for reference:
Would like to know your opinion on the same
Hi @Manvi-Agrawal. After carefully observing the CheckUniformDistribution function, here are some of the insights I would like to share. The distribution generated by the random number generator must be uniform. So, mean = median. This makes median checking redundant if we are checking frequency of each number over nRuns(minimumCopiesGenerated).
If we consider mean as a random variable then its distribution should be normal because of the central limit theorem. Mean of the normal distribution would be the same = (max+min)/2. But the variance would become (variance of uniform distribution)/nRuns. Variance of uniform distribution = a*(a+1)/3 where a = (max-min)/2(Skipping the derivation). Considering nRuns = 1000, the variance of normal distribution = a*(a+1)/3000. From this we get the lowRange and highRange values as :-
Hope this helps.
Thanks @pandasamanvaya. This helps a lot. Actually, when I calculated this time, I forgot to divide variance by nRuns, which led to lowRange and highRange variables going out of range :-( . Do you want to do this task?
You have already done the hard work. Its better if you continue. I would have to start from the beginning.
Ok @pandasamanvaya.
Hi @tcNickolas, how many times do we want to retry a function? I was thinking of 5 times.
