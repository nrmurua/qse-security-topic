Large circuits are scrambled when using the text-based circuit drawer.

vs

Make a large circuit and draw it.
Have the text-based circuit wrap according to the size of the terminal or Jupyter notebook cell width, and split like the Matplotlib version does.
That works, but why is it not set to some default value, say 80, that works for any circuit?
I think there are ways to know the dimension of the console that the code is running. However, I don't know how portable they are.
I have the feeling that 80 is very short for most of the modern scenarios.
Please, rename the issue to reflect the new enhancement request. Something like "line_length in text drawer needs a default", or similar.
There is a stdlib call in the shutil module: https://docs.python.org/3/library/shutil.html#querying-the-size-of-the-output-terminal. If it can't figure it out it falls back to assuming an 80x24 terminal. This is what I used when adding a __str__ method to the QuantumCircuit class in #911.
Let's use the tag type:bug for things that are broken. That is, they raise unexpected exceptions or/and the functionality that used to work now is not working. The type:enhancement tag is for things that work, but you prefer them to work differently. Or for additional funtionality that does not exists right now.
@mtreinish it seems very stright forward. Let's go for it. If I implemented it in the visualizer, would you remove it from the __str__?
Yes, if the text drawer automatically sizes the output by default there would be no reason to specify that for __str__ in #911
This issue is solved in PR #1200 .
