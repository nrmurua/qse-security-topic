the transpiler transpiles the circuits and the result of statevector simulation is incorrect but qasm simulator is okay.
Circuit before transpile

After:

When a coupling map is given, the transpile should assure the quantum state is the same up to global phase (state fidelity should be close to 1.)
Furthermore, why the transpiled circuit generates h gates?
I do not know, this issue happened after the DenseLayout is used for default transpiler.
The dense layout change is being reverted here: #2975 Does that fix the issue for you?
How does the dense layout break this?  This is having the cx reversed for no reason.
@mtreinish yes, after I pull the newest change, it works.
However, dense layout is used for optimizaton level 2, this issue will happen again if a user would like to do more aggressive circuit optimization
for example, the following code won't work
You get the same incorrect answer if you do:
because you are not taking into account the permutation due to the differing layouts.
Yes, the transpiler permutates the qubit mapping; however, the statevector always considers the first qubit is qubit 0, then the statevector result is incorrect. Is this users' responsiblity to post-process the statevector?
It is not incorrect, it is not just in the same order as the other one. Just set initial layout to list(range(n_qubits)) and it will work at all optimization levels.
as suggested above, by specifying the initial_layout=list(range(num_qubits)) will disallow the transpiler to perform swapping qubits, which assure the statevector results are correct.
I closed this issue since that fixes the issue; however, I wonder that is there any way to warn the users if their setting will result in the qubit swapping when using statevector simulator.
