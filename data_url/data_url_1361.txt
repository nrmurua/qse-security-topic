Currenty, DeviceMetadata exposes a nx_graph property which stores the connectivity / topology information of the device.
In parallel, we've been developing tools like cirq.NamedTopology, to better represent specific classes of device toplogies and build targeted utilities, like qubit placement and routing strategies, which can work with specific types of named topologies.
I think DeviceMetadata should expose a named topology instead of directly exposing an nx_graph for a better integration with rest of the tooling.
cc @mpharrigan @MichaelBroughton
It can't be instead of nx_graph. NetworkX graphs are much more general than NamedTopology, i.e. you can very easily have a graph that isn't described by a NamedTopology. Most devices aren't perfect TiltedSquareLattices due to boundaries/dead qubits/any number of thing.
What if we add a new NamedTopology which captures the "this is a general nx.Graph that we can't categorize into any other known topologies" class of graphs? Do you think then returning a named topology would be more useful?
I don't know what that would buy us (over having an optional NamedTopology field on devicemetadata). Consuming code will have to handle the cases separately anyways.
Having an optional NamedTopology field on device metadata would, of course, be enough as well. The discussion is to decide between:
The way I think of NamedTopology is it is more of a mathematical object than it is a physical object like a device graph. If one had a circuit that obeyed a particular topology constraint i.e. it was a TiltedSquareLattice or a Line then the natural way to do that placement would be to do something like:
I think the nx_graph gives us a nice abstraction level and we don't want to hite too much away from the user. WDYT @mpharrigan ?
A networkx graph is a microscopic description of nodes and edges whereas a NamedTopology uses few macroscopic variables to imply a graph. The data size of a NamedTopology does not scale with the size of the graph it implies. The data size of a graph does scale with the size of the graph.
It's easy and always possible to go from NamedTopology -> Graph. It's difficult and often impossible to go from Graph -> NamedTopology
From cirq sync:
NamedTopologies represent abstract, device independent, topologies. Returning a named topology from a device will have a risk of leaking device specific constraints, like broken qubits, into named topologies.
We can consider adding the device graph specific properties to device metadata independently, to enable placement and circuit routing routines to make use of these properties.
@mpharrigan What do you think?
yes, that makes sense
Sounds good, I'll go ahead and close this issue.
