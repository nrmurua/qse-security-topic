SparsePauliOp does not support a multiplication with np.int64, np.float64, and...
For example,
outputs
There are many solutions.
One is __getitem__ returns a tuple of Pauli and coeff.
Current SprsePauliOp can get an item again and again. e.g. sp is instance of SparsePauliOp and we can get sp[0][0][0][0]...
I found this in #5261
It looks like numpy ufunc np.multiply(val, op) is getting called before the op.__rmul__(val), because somehow it thinks it can treat SparePauliOp as an array.
I don't really understand how numpy ufuncts interact with the getitem method, but one fix is telling numpy dispatch to use the correct method by adding this to the SparsePauliOp class:
Separately it might be good to make getitem return a tuple if the key is an integer rather than a range or slice to prevent the recursion you discovered.
I didn't know __array_ufunc__, so I learned it via this issue.
I hope you consider the other issue (return a tuple). Thank you.
