If I do set (to gcc) or no declared CPP in the arch file, I get the following error:
whenever I run PSMP version.
The only way to get it to work is to use
in the arch file. From what I see, we only test this case in the dashboard, so my conclusion is that there is something wrong and untested with CPP. Should we remove this variable at all?
AFAIK, this was needed on IBM machines because the Fortran compiler there didn't have a built in preprocessor. I don't know if this is still the case?
I assume you are referring to the IBM XL compiler.
Well, no idea it is still the case. I cannot access to the old test:
https://dashboard.cp2k.org/archive/epcc-juqueen-popt/index.html
In any case, the confusion is that you have to explicitly set  CPP = <empty> in the arch, otherwise it doesn't work... It would be to include the case when CPP is not declared at all.
I cannot access to the old test:
Yes, I did not convert them after we switched to git. In any case, JUQEEN was decomissioned last year. Now we should check e.g. Summit. Maybe @mtaillefumier can comment? IIRC, he was running on Summit.
It would be to include the case when CPP is not declared at all.
If we have to keep it then we should definitely give it a default value.
Related: #344.
It is not summit related. You can not compile CP2K without defining CPP to empty. By default it seems that cp2k is difficult to compile when using the default cpp
AFAIK, this was needed on IBM machines because the Fortran compiler there didn't have a built in preprocessor. I don't know if this is still the case?
The IBM XL Fortran for Linux V16.1.1 compiler can automatically invoke the C preprocessor which is shipped with the compiler. To preprocess using the compiler, specify -qpreprocess or give your files an uppercase file extention (e.g. .F90). You can find more information on Knowledge Center.
@trudeaun thanks for clarifying. So, then let's remove the CPP variable from Makefile and the arch files.
