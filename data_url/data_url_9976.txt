Sometimes a variable is a bridge between two graphs. It would be good to have a composite that can apply to such problems. In such cases, it's possible to remove the cut variables and effectively cut the graph into pieces. Each piece can be solved and then combined with two possible values of the cut variables.
For each cut variable, the problem breaks into three components: [left_graph, cut_variable, right_graph]
The above list can be passed as an argument to ConnectedComponentComposite.
However, the composite combines the best of each. since cut_variable is not really a disjoint connected component, it needs to be handled differently. So, maybe a standalone composite is better.
I worked on this problem with a group of graduate students in summer 2018. In the cases of a few narrow bridges this CutVariable methodology is great!
Maybe it should be called CutVertexComposite? It took me 10 minutes to find resources on cut vertex with the wrong keyword "cut variable".
Agreed, cutting a vertex is probably more standard in the literature. I've attached a couple of additional resources.
IMA_whitepaper_2018.pdf
approx_schemes_planar_graphs.pdf
I do think that consistency with the rest of Ocean is important and we have deliberately used variable and interaction instead of node/vertex and edge to distinguish them. Even in this case the algorithm to find the cut is a vertex cut but applying that cut to the BQM is a property of the variables. My instinct would be to maintain CutVariableComposite but reference node/vertex enough times in the docstrings that the federated search will pick it up. Possibly also alias it to CutVertexComposite.
Closed by #548
