artiq_master needs to be launched in a folder containing ddb.pyon and pdb.pyon. Following is the typical directory structure for ARTIQ.
Here, testrepo is cloned from a local repository I setup on my machine. I can launch artiq_master and see the experiments in artiq_gui (labeled by git commit ID).
Unfortunately, ddb.pyon and pdb.pyon are not included in the repository. They need to be since they're a crucial part of reproducing the experiment state if a user wants to roll-back. I'll try to add them to the git-controlled repository and restart artiq_master in the new location. .
Not sure why I get this git error but I guess pushing isn't required. Anyway, artiq_master can be successfully started. Note this begs a different default ARTIQ experiment folder hierarchy. Now the results directory is intermixed with the program files. Do we want this?
Git integration of PDB and DDB is not supported and requires significant work.
I'm not sure about the PDB, but I would argue that this is not a feature we want for the DDB. The DDB does not contain information that should change the behavior of an experiment, but just what device is connected where in the system. If using an older revision of the experiment also reverts to an older version of the DDB, this would require the user to examine the DDB changes and shuffle devices around (e.g. swap DDS channels) whereas keeping the current DDB configuration would typically run the older experiment immediately and correctly.
(Parameter history will be kept in InfluxDB, not Git)
For your visit to Boulder I'll add a TODO for discussing if we want to make PDB and DDB part of the git maintained source.
If using an older revision of the experiment also reverts to an older version of the DDB, this would
require the user to examine the DDB changes and shuffle devices around (e.g. swap DDS channels)
whereas keeping the current DDB configuration would typically run the older experiment immediately
and correctly.
The PDB may be needed for experiment replay. A record of changes to DDB are helpful as it helps user ascertain if old experiment can be rerun verbatim or if hardware/DDB changes are needed. Seems like this could be as easy as including *.pyon in git repository.
No, it's not as easy as including the pyon files in git. git is not magical and won't make the master read the new pyon files on checkout, handle multiple versions of them when experiments are run in parallel with different versions of the PDB, do the right thing when an experiment modifies a parameter, etc.
Agreed that having multiple simultaneous versions of PDB is confusing. But
master needs to be restarted anyway upon PDB edit.... We can discuss when
you guys arrive.
On Tue, Aug 18, 2015 at 7:07 PM, Sébastien Bourdeauducq <
notifications@github.com> wrote:
No, it's not as easy as including the pyon files in git. git is not
magical and won't make the master read the new pyon files, handle multiple
versions of them when experiments are run in parallel with different
versions of the PDB, do the right thing when an experiment modifies a
parameter, etc.
—
Reply to this email directly or view it on GitHub
#90 (comment).
It's not confusing, it's just complex and needs a proper solution, not only "add to Git and not worry about it".
Parameters can be changed without master restart from the console in the GUI or from the command line client.
As discussed during the last visit, a good solution for DDB versioning is to put a copy of ddb.pyon into the repository without the master doing anything special with it. The user should manually diff/update/overwrite the ddb.pyon used by the master as needed, and then have the master re-scan it.
ddb.pyon can now be rescanned without a master restart by using artiq_client scan-ddb.
