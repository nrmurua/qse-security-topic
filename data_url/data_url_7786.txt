Hello.
Sometimes when I use eigh and I only ask for small number of eigenvectors I find that those eigenvectors aren't orthogonal. For example, let's say that I'm diagonalizing a Hamiltonian produced using chain.sim_quimb.ham_gen_quimb from my chain project:
Now I diagonalize ham and ask for 2 eigenvectors. I then check their orthogonality:
The overlap is unstable but typically it's around 0.01. However if I set k>=33 then the overlap is around 1e-17.
Is there a way to adjust the accuracy threshold so that eigh returns orthogonal eigenvectors even for smaller values of k?
Actually, I've just realised the two states I'm looking at are degenerate. This is probably the cause of the problem. I've started using Gram-Schmidt orthogonalization on the returned vectors.
Actually, I've just realised the two states I'm looking at are degenerate. This is probably the cause of the problem. I've started using Gram-Schmidt orthogonalization on the returned vectors.
Ah OK that might be it!
Here are some other thoughts anyway:
Here are some other thoughts anyway:
Thanks Johnnie! I'm installing slepc4py now. How can I control which backend I'm using?
Also, the hamiltonian is definitely hermitian.
You can just use the backend='slepc' keyword - there is a bit of explanation here.
Note that you will probably need to build petsc and slepc yourself if you want complex support - see here. There are versions on conda-forge etc. but only compiled with support for real data if I recall correctly.
Okay cool. I will try to build petsc and slepc tomorrow when I have a bit more time.
Thanks for the info.
Closing for now @paulsbrookes as not sure what can be fixed but feel free to reopen if you have issues again!
