Let's consider the situation where we interleave a 1D and 2D sweep. This will look as follows.
Currently, this fails because of ValueError: Wrong value type received. Got <class 'NoneType'>, but only int, float, str, tuple, list, and np.ndarray is allowed..  This is unfortuante as the underlying infrastructure has no problems with None values
I'd actually be tempted to call this a feature rather than a bug. At least in the above example... What does the user gain from specifying the None values?
If the None values are not there then there are not the same number of columns at each insertion. This will also give an error. This is definitely a bug @WilliamHPNielsen
Also keep in mind that, it the user is using my sweep class, then the None values are not specified explicitly by the user. But rather, this is a result of how the sweep class deals with interleaved sweeps.
If the None values are not there then there are not the same number of columns at each insertion.
That is a very good point and certainly something to fix, but that does not vote neither for nor against having users explicitly specifying None values.
I guess my only concern is that something like
where the four last lines do the same thing is perhaps (?) a potential source of confusion.
I suppose there are three possible ways to go:
Both 1. and 2. would require some extra work to fix the column mismatch bug that Sohail pointed out. I'd vote for either 1. or 2.
Let's go for option 1. I will update the PR. @jenshnielsen @Dominik-Vogel do you have any input?
@WilliamHPNielsen Can you have another look at the PR? You should now be able to do the following:
No hang on, I just realized my implementation is not right. It assumes all keys are present when data is flushed to the database. If this is not true, this method may fail. Let me investigate
After testing a bit, it seems that my current implementation is working :-)
