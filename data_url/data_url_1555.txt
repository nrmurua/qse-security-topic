Is your feature request related to a use case or problem? Please describe.
In original, the Fahri et al. proposed classifier is make use of ZX gate, however, the tfq tutorial use the ZZ gate.
At first, I want to custom the ZX Gate but the magic mehod is too complex to override.
For example, pow method, I can not understand how to override. (seems have protocol behind the mul method)
Describe the solution you'd like
Maybe you can offer the ZX gate.
[optional] Describe alternatives/workarounds you've considered
x
[optional] Additional context (e.g. screenshots)
x
What is the urgency from your perspective for this issue? Is it blocking important work?
P2 - we should do it in the next couple of quarters
For example, pow method, I can not understand how to override.
Did you define your ZX gate as an EigenGate?
We have an implementation of this gate in cirq-superstaq that you can take the pow of like ZX ** 0.5. We can add this gate to Cirq's mainline if you'd like to use it.
For example, pow method, I can not understand how to override.
Did you define your ZX gate as an EigenGate?
We have an implementation of this gate in cirq-superstaq that you can take the pow of like ZX ** 0.5. We can add this gate to Cirq's mainline if you'd like to use it.
My fault, I have not to check all documents, many thanks !!
For example, pow method, I can not understand how to override.
Did you define your ZX gate as an EigenGate?
We have an implementation of this gate in cirq-superstaq that you can take the pow of like ZX ** 0.5. We can add this gate to Cirq's mainline if you'd like to use it.
However, I got the following error message while I package the ZX gate into the tfq.layers.PQC,

Unfortunately, the ZX gate seems not competiable into the tfq.layers.PQC layer by using the same serialize protocol ?
The ZX gate is not part of the Serializable gate set in cirq_google. You need to add it like so: 
Hi @HuangChiEn I would recommend taking a look at: https://www.tensorflow.org/quantum/api_docs/python/tfq/util/get_supported_gates
In order to check if the gate is supported inside of TFQ. Generally speaking TFQ can't support arbitrary gates.
If you wanted to add it, you could add serialization support here (https://github.com/tensorflow/quantum/tree/master/tensorflow_quantum/core/serialize), add adjoint information in C++ (https://github.com/tensorflow/quantum/blob/master/tensorflow_quantum/core/src/adj_util.h) and add parameter shift information in C++ (https://github.com/tensorflow/quantum/blob/master/tensorflow_quantum/core/ops/tfq_ps_decompose_op.cc).
On another note, if you want to realize a ZX like unitary, you could just sandwich a cirq.ZZ ** (whatever) in between two cirq.Hs on the target qubit and you've got basically the same thing.
^^ Is the right answer. I didn't know this issue leaned more TFQ than Cirq. Hopefully this helps you @HuangChiEn.
Since this seems to be more of a TFQ related issue, going to close for now, @HuangChiEn feel free to continue discussion on the TFQ github.
