Watching 1 2 and answering 3, I wanted to provide a Quirk simulation of quantum Venn diagram, like what described here perhaps but the provided measurement gate of quirk doesn't have collapsing behavior but I guess it can be a useful thing if can't simulated with other gates. WDYT?
Hmmm, having a look at "Bell Inequality Test (CHSH)" example, I guess I got the idea. Thanks
There's two ways to mimic the effects of polarizers in Quirk.
First, you can use post-selection operations (like |0><0|). They are equivalent to doing a measurement and restarting the circuit if the result didn't "pass through" the result you wanted. Quirk will track the overall survival rate. http://algassert.com/quirk#circuit=%7B%22cols%22%3A%5B%5B%22X%5Et%22%5D%2C%5B%22Bloch%22%5D%2C%5B%22%7C0%E2%9F%A9%E2%9F%A80%7C%22%5D%2C%5B%22Bloch%22%5D%5D%7D
Second, you can CNOT the qubit you want to filter, using a control along the axis you want to filter, onto a separate qubit that's otherwise unused. Then measure the extra qubit (not that it particularly matters). The extra qubit / measurement result tells you if the original qubit made it through the filter, and you can condition later operations and displays appropriately. This approach is less convenient than using post-selection, and uses more qubits, but more flexible. http://algassert.com/quirk#circuit=%7B%22cols%22%3A%5B%5B%22X%5Et%22%5D%2C%5B%22Bloch%22%5D%2C%5B%22(%2F)%22%2C1%2C%22X%22%5D%2C%5B1%2C1%2C%22Chance%22%5D%2C%5B%22Bloch%22%2C1%2C%22%E2%80%A2%22%5D%5D%7D
One complication you will have to deal with is that in Quirk everything is described in terms of the Bloch sphere, where angles are doubled compared to what you might expect from polarizing filters. The Bloch sphere puts opposite states 180 degrees apart (up vs down), whereas with polarizers we tend to think of opposite states as 90 degrees apart (horizontal vs vertical).
You know, I wanted to create some circuit to show how gradual use of polarizers can make a difference, I guess something like this maybe:
http://algassert.com/quirk#circuit=%7B%22cols%22%3A%5B%5B%22X%22%2C%22X%22%2C%22X%22%5D%2C%5B%22X%22%2C%22X%5E%C2%BD%22%2C%22X%5E%C2%BC%22%5D%2C%5B1%2C%22%7C1%E2%9F%A9%E2%9F%A81%7C%22%2C%22%7C1%E2%9F%A9%E2%9F%A81%7C%22%5D%2C%5B1%2C%22X%5E%C2%BD%22%2C%22X%5E%C2%BC%22%5D%2C%5B1%2C1%2C%22%7C1%E2%9F%A9%E2%9F%A81%7C%22%5D%2C%5B1%2C1%2C%22X%5E%C2%BC%22%5D%2C%5B1%2C1%2C%22%7C1%E2%9F%A9%E2%9F%A81%7C%22%5D%2C%5B1%2C1%2C%22X%5E%C2%BC%22%5D%5D%7D
You seem to be on to the right idea, but not quite there.
Do N controlled rotations with power 1/N. The control is the qubit you care about and the target on another qubit that you immediately post-select to be off. Notice that, as N gets large, the overall survival rate increases towards 100%.
You seem to be on to the right idea, but not quite there.
You are right, qubit state definitely is not supposed for such.
Notice that, as N gets large, the overall survival rate increases towards 100%.
That is what happens on prefect numerous filters, this also somehow replicates that in some sense.
So I guess I am confused at this point and need your help. Thank you again.
Applying X^1/4 four times, post-selecting back to 0 in between, results in a survival rate of 53%.
Applying X^1/8 eight times, post-selecting back to 0 in between, results in a survival rate of 73%.
As n goes to infinity, the chance of surviving applying X^1/n a total of n times limits to 100%. This is the zeno effect. The faster you measure relative to a rotation, the less you lose.
Oh, excellent, this now looks great. Thanks.
