Following from #556, the following script
fails with
because the second Hamiltonian acts on three qubits while the first acts on four. I had a look at the code and I am not sure how easy it is to implement this for Hamiltonians acting on different qubit numbers.
Right now the number of qubits of a Hamiltonian is fixed:
QAOA requires applying the exponential of the Hamiltonian to the state.
In both cases, the number of qubits in the state should agree with the number of qubits in the Hamiltonian. In the first case because the matrix dimension is fixed and in the second case because the number of qubits of the Trotter circuit is the number of qubits associated with the Hamiltonian.
To fix the above QAOA issue we could do one of the following:
@scarrazza @DiegoGM91 let me know what you think.
@stavros11 thanks for looking into this.
I think solution 1 is perfectly fine, as long as it is well documented.
Solution 2 seems fine to me too from the user's perspective, but if you think it is not desirable from the developer point of view, then I think solution 1 should suffice.
Solution 3 would make sense to me only if there is a performance gain of this approach compared to defining the Hamiltonian using identity symbols.
