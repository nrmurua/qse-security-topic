When using ql.set_option() two arguments are given: the option, and the value. If the value string is an illegal option, it will still be set and is even visible when using print_options() afterwards. Would be good to raise an exception when an illegal value is given which the user can handle.
Example:
Proposed solution:
If set_option() is called with a valid option but an illegal value, an exception is raised (e.g. ValueError).
Other optional improvements:
Option values could also have different types when appropriate (e.g. bool, int) to also make checking easier.
Fixed, test it now.
Build fails on latest commit.
Oops, incorrectly added submodule. pull the changes and give it a try. works on my machine as well qsim machine. all tests passing.
Builds correctly now. Unfortunately problems still exist. Error handling of set_option() shows unexpected behavior. See the following trace and notice the TypeError objects with unexpected messages.
Fixed.
No problems found anymore. Issue closed. Thanks!
