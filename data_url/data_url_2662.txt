This is a proposal for the API aspect of #942 .
Currently, TrialResult is the only object we have to represent the result of executing a Circuit. If we have a unitary Circuit U and we want to know something about the state U|0⟩, our only option is to add measurement gates to the end of U; if we want to perform measurements in different bases (a common use case in quantum chemistry), we end up having to construct multiple circuits by appending different rotations plus measurements. In the case of quantum chemistry, what we really want to do is measure different PauliStrings, possibly each a different number of times. It's more natural to think of it this way: there is one unitary circuit U, and we want to perform different kinds of measurements on the final state U|0⟩. I propose to add a more convenient syntax for specifying this kind of partial state tomography.
I propose that in addition to the current functionality exposed by the run and run_sweep methods of the Quantum Engine API, we add an option to specify a unitary circuit and a list of (PauliString, repetitions) tuples. Instead of returning a TrialResult, this method would return a dictionary from PauliString to TrialResult.
Closing this in favor of #1051
