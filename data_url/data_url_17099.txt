If find myself looking at circuits that look like this:

and I am always interested in seeing what the circuits look like in terms of cx and other gates.  However, this requires doing:
It would be nice if there was a decompose_unitaries(basis) method that did this for you.
I will note that I initially thought you wanted to have some general way to decompose any unitary, at least that's what decompose_unitary implies for me. But the unroller currently only takes the op definition and puts that in the circuit. If that's not defined an error is generated.
Then, if that is the case, KAK it would be the solution.
circuit.decompose() should do this.
Decompose is a "shallow" unroller, it unrolls every instruction one level down. But I agree that this method needs to take a list of gates to decompose. Currently it applies to every instruction, but you may want to only decompose UnitaryGates and not CZ gates for example.
Currently decompositions of 2 qubit unitaries via KAK is supported. There is code for arbitrary unitary decomposition in qiskit (see qiskit.extensions.quantum_initializer.isometry), but it is not integrated yet. The plan is to rely on that code to decompose any unitary (indeed any isometry).
@nonhermitian as I commented above, circuit.decompose() does what you want.
I will update the issue title to reflect that we want to control which gate gets decomposed.
I'm looking for first issues to contribute to and would love to tackle this one!
Assigning you @septembrr !
If anyone wants to pick up this issue please look at previous PR #5446 for guidance ðŸ˜ƒ
I would like to work on this if its okay. I am new to this.
go for it @fs1132429! Assigning to you
@fs1132429 as there is already a PR #5446 that was opened previously, the best way to approach this issue would be to create a new branch by branching off of septembrr:quantum-circuit-decompose-issue-2906, then adding your new work to what has already been done. Then create a new PR against main ðŸ˜„
can anyone guide me how to proceed on adding support for the * wildcard, at the end of a string for circuit.decompose("circuit*") ?
