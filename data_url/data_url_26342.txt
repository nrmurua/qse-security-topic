As the title indicates I was trying to install the current git version of cp2k on some of our local clusters that doesn't have the c++ bindings for mkl installed. I.e. I can only compile fortran applications with MKL and therefore I have to run ./install_cp2k_toolchain.sh --install-all --with-mkl=no to get a clean install of the toolchain libraries. That doesn't work for some libraries however, COSMO being the first that fails. Since I guess that cmake automatically detects my local mkl install if I have set the environment variable MKLROOT to point to the MKL directory.
I was eventually able to build the toolchain and cp2k successfully after unsetting this variable. So I was wondering if this is the intended behaviour, or if --with-mkl=no should somehow make sure that a local version of mkl is not used by accident.
