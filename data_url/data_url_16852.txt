PR #3514 added a method called to_counts to Statevector and DensityMatrix. I think this method is miss-named since it is returning probabilities (in dict form), not counts. Furthermore, these classes allow non-qubit subsystems which this does not support.
My suggestion is that function def should be renamed to probabilities(qargs), where qargs specifies the subsystems to return probabilities for, and added to the base QuantumState class interface.
If qargs is None or range(num_subsystems), and all subsystems are 2-dimensional, it would return the current output. However if subystems were different dimensions it would return a dit-string. If qubits are permuted in the list, they would also be permuted in the output dit-strings. This would make this function equivalent (in the all qubit case) to the SnapshotProbabilities instruction in the Aer simulators which returns a dict of this form (but with hex-string keys instead of bit-string keys).
@nonhermitian @ajavadia
There should probably also be another method that returns probabilities as a dense vector rather than sparse ket-form (dict).
I'm fine with that. counts should be what you get from finite shots, and probabilities the limit at infinite shots. Should it be .probabilities or .to_probabilities?
I've been looking into this issue a bit, and I had a few questions.
