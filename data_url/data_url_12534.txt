Dear TFQ team,
we are currently trying to set up tensor flow and tensor flow quantum to run in our small GPU cluster (featuring two nvidia Tesla P100 16GB).
We generally build modules using EasyBuild and then load them to perform the computation.
At this moment, the installation  completes without problems but we get runtime errors related to (missing) libraries.
An example of such error is the following:
ml load TensorFlow/2.1.0-fosscuda-2019b-Python-3.7.4; python -c "import tensorflow_quantum as tfq"
tensorflow.python.framework.errors_impl.NotFoundError: /marisdata/easybuild/software/Python/3.7.4-GCCcore-8.3.0/lib/python3.7/site-packages/tensorflow_quantum/core/ops/_tfq_simulate_ops.so: undefined symbol: _ZN10tensorflow12OpDefBuilder5InputESs
Is there a way to solve this errors?
I don't have much familiarity with EasyBuild, would you mind walking through the detailed installation process you used (in terms of what commands are getting run and stuff like that) ?
Looking at the error you linked, I'm guessing that you are building TF 2.1.0 (which is good, since we require 2.1.0). One thing that might be a problem is that you are using GCC 8 which is not officially tested for TF or TFQ, generally TF uses either GCC 4 or GCC 7. This also looks like our static object file was looking for a mangled name that wasn't in the ABI of TF which makes me wonder if you compiled both TF and TFQ with: -D_GLIBCXX_USE_CXX11_ABI=0.
I don't know if this is an option or not, but the easiest way to get things running is to use the official pip release of TF and TFQ.
Hi @MichaelBroughton
Thank you very much for your quick response. Indeed, our issue came because of a mismatch between GCC versions. We managed to overcome this and now it is running correctly.
I will go ahead and close this issue.
