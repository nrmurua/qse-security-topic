I'm trying to use QuantumOptics.jl to study an array of coupled resonators, with coherent pumping and dissipation.
I've always used QuTip, and I'm curious as to wherever Julia is faster or not...
Normally I build my local operators in the manybody basis by calling tensor() on a list of local operators. For example, if I want to write operator my_op in the many body basis, for N cavities with a Hilbert space of dimension M I normally do:
Unfortunately, it seems that QuantumOptics.tensor() does not support a list as an input. How would you go about setting up something similar?
Glad to here you want to try out our framework.
While it's true, that tensor cannot handle lists, you can just expand the arguments to achieve what you want. This is done by doing tensor(op_list...). Here, op_list... is equivalent to *op_list in Python.
However, you might want to check out the embed function, which can be used to more elegantly build operators of this composite form (it adds identities on all Hilbert spaces, but the indexed one).
So in QuantumOptics.jl you can rewrite the short example you provided by
The integer argument in embed specifies the Hilbert space on which my_op acts.
If you need any more help, please let me know. You can also ask them on our gitter chat https://gitter.im/QuantumOptics-jl/Lobby if you prefer a more casual platform.
