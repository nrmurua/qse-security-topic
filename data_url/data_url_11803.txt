Create a consistent interface for interacting with variational algorithms, so users can easily know how to do simple activities, such as pull the optimal parameters or change the initial parameters, across all variational algorithms. Also, provide the boilerplate for variational optimization to simplify the process of writing new algorithms. The difference between many variational algorithms is simply the cost function evaluated on the results of the quantum execution - by providing the optimization code in a base class, users simply need set up the cost function and pre- and post- processing.
