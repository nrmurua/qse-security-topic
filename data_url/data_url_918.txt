The text book compilation of the Toffoli gate consists of 6 CX gates with a depth of 12. This is because textbook compilations don't take into account the connectivity of the device it compiles to. A pro of the Ion trap architecture is it's all-to-all connectivity. It seems like Cirq is not using that to compile to the best circuit suited for the ion trap.
I'm trying working on this issue. The root cause is that currently the three qubits gates, e.g. the CCZ gate only has one hard-coded decomposition, which does not apply to all-to-all connectivity. To solve this problems, there can be two approaches (we can implement either or both):
Support an alternative decomposition for all-to-all connectivity in these gates. And when IonQTargetGateset is used to decompose a circuit, use this alternative decomposition.
The way to add an alternative decomposition for a gate like CCZ, for this specific use case, would be to create a free function that accepts an instance of cirq.CCZ and returns a decomposed OP_TREE. Call this free function by overriding the _decompose_multi_qubit_operation method in the IonQTargetGateset, which is an instance of TwoQubitCompilationTargetGateset
Hi, @yinghui-hu are you still working on this issue? I want to give it a try and continue your previous work.
I'm waiting for feedback from @tanujkhattar on #6095
Thanks! @tanujkhattar @yinghui-hu do we need anything else on this issue or this is resolved by #6095?
@shawn-peng We would appreciate if you reviewed #6095 ðŸ˜º
PR #6095 is ready to merge @tanujkhattar Thanks.
