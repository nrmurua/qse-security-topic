Speed improvement.
Since current Pauli class use int or float vector to present v and w vector, it is inefficient if we would like to check it is X, Y, Z, or I (we need to compare v and w with 1 and 0.)
If we support native boolean representation, it will be faster.
Nonetheless, I do not have a good idea to change whole Pauli class to boolean representation while supports backward-compatibility.
Thus, a workaround to improve the speed of sgn_prod only, we can internally convert it to boolean and then use boolean to track the phase, and then convert v and w back to int or float.
here is the prototype of my implementation on sgn_prod:
and this is my test case:
Here is some benchmark on macOS 10.13, python 3.6
@chunfuchen this is good just make a pr and submit.
