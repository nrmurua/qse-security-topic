Running 1.2 on linux.  The following code spits an error, I assume because string concatenation is not supported on the core device.  It would be convenient if the string concatenation were precomputed by the compiler, at least for this case where self.name is a kernel invariant.  Would it be possible to make this happen?
Being marked as kernel invariant doesn't mean that self.name is in every case known at compile time, it just means that it doesn't change and so it can be hoisted out of loops, propagated across the call graph, etc. Imagine constructing two instances of an object with field foo marked as kernel invariant, with the instances having different values of foo.
There is no inherent problem in string concatenation in kernel code though; this is probably the only string operation that can be easily and safely done there. So that can be simply implemented.
Oh OK.  I guess I was misunderstanding what kernel invariants are.  If it's easy to add string concatenation to the kernel, that would be great!  Alternatively, I don't know if it would be generically useful to have a way to declare variables as constants in artiq python (I realize this isn't possible in regular python).
Alternatively, I don't know if it would be generically useful to have a way to declare variables as constants in artiq python (I realize this isn't possible in regular python).
See #193. There is no good syntax for this feature (that still allows kernels to be written in regular Python), and in general any implementation compatible with regular Python is bound to be fragile.
@dleibrandt You can also do something like this:
I've been doing this and haven't run into any issues,
