When we are tweaking something manually on the experiment (eg. a mirror mount) we often want to continuously repeat a single experiment, without changing anything else, to see the effect of the tweaking.  In hfGUI this was called a 'dummy' scan.  Currently we do this in artiq by doing a linear scan but making the range so small there is effectively no change in the parameter.  Whilst this generally works fine it is a bit annoying to set up and I think we do this often enough in the lab to merit a single-click implementation.  A couple of possible implementations might be:
+1 for the latter
Agreed.
The "disable other scans" button (in 2.x) can also set the repeat count to one.
One potential problem with this is that all the y points on dependent applets will be plotted along the same x point in the applet, while we'd prefer the dummy scan to have different x points. I wonder if maybe this is better solved by just having a separate dummy variable that we use to construct a nested for loop and maybe change the x dataset if the dummy scan is performed.
You can always add as many dummy variables as you want. How you handle them is your choice. But that's a use case and not a distinct feature, right?
If you want to plot against indices, just generate an indices dataset.
If you want the applet to magically ignore the abscissa values and use indices, you might have to change the applet code.
Yes, the experiment can detect when this feature is used (the code would be something like isinstance(scan, NoScan) and scan.repeat > 1) and generate the corresponding datasets for applet consumption. Or configure the applet differently, after #431 has landed.
@r-srinivas 7efd990 was necessary to avoid unnecessary typing and keep backwards compatibility. You could have found the problem by running (or just scanning) the arguments_demo example.
Okay, thanks. I had actually thought about it but the other scan options didn't have default values, but I suppose they don't have arguments like repetitions that are not as necessary.
Could this be added to 2.0 or would it be considered a new feature that you don't want to introduce in a version?
i am ok with making an exception
@sbourdeauducq, thoughts?  This would be very nice to have in 2.0, and AFAICT shouldn't break back compatibility with existing code.
Ok.
