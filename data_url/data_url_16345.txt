Now that the object model has developed more clearly for pulse it is clear that the ScheduleComponent class is no longer necessary. We should remove this and settle on having both a Schedule and Instruction as distinct entities. A type may be defined ScheduleComponent = Union[Schedule, Instruction] if it is useful.
Hi taalexander,
Can I get on this issue? I would love to contribute and have been looking for a good first issue for some time now.
I've been looking at the ScheduleComponent class and Instruction class and am unsure as to what the ScheduleComponent purpose is in it.
Sure @wahaj, assigning ðŸ˜„ .
The ScheduleComponent purpose was to provide a unified base class for all components initially in pulse. However it was made too restrictive so I think we should remove.
Thanks @taalexander,
I have removed it as the base class for both Schedule and Instruction I have been trying to implement the ScheduleComponent as a Union of Schedule and Instruction, but where should I define this type? As defining it in interfaces.py results in cyclic dependencies.
Or should I try to do away with the SceduleComponent altogether and not use any generalization?
Would ScheduleComponent be required for use anywhere? If not I don't think we require it. In the future I would like to create a simple base class, NamedValue for both Schedule and Instruction to inherit from.
