As far as I know, there are many ways to calculate unoccupied orbitals with OT method. Such as open the PDOS keywords with NLUMO in DFT print section or MO section with MO_INDEX_RANGE, and calculate TDDFPT. Each way to calculate unoccupied orbitals (or virtual orbitals) seems different, which will give the different anwsers of course. But especially, MO_INDEX_RANGE methods might give a horrible result. I try to run the testsuite in H2O-rks-otcg-mulliken.inp, it gives me a result shows that H2O's bandgap is 0.29 eV. I try to remove the OT method and use ADDED_MOS. The result is 5.57 eV, which seems resonable. After testing other systems I tryied, the same thing happened. I'm wondering if this is a bug or if there's something wrong with the way I use the keyword. With my respect.
Btw, I've tried a fix branch that outputs the correct empty tracks by replacing ot eigensolver with eigensolver.
@tsaihsiaoyi Thanks for the reminder. This an already known issue which should now be fixed by #3230.
Thanks for the effort. I've review your commit by now. It seems to cause some issues in calculating DFT+U energy in mulliken method. I alse tested my own fixed branch with these two testsuites, which will give the same answers as the diag method. I'm wondering that compared to the ot_eigensolver of unoccupied mo, the eigensolver of all mo has more computing time but more accurate energy, which point should be considered? Thanks again.
Thanks for testing. What issues do you observe?
In the framework of a OT run the MO eigenvalues should also be calculated by default using OT. If one wants to obtain the MO eigenvalues by traditional diagonalisation, the run can be restarted with OT deactivated.
The different energies between ot and diag method as you modified here 3e3e97b. I fix this problem by using traditional diagonalisation like the way what tddfpt module did when initializing ground states. The exact way is here 3f46582.
