This circuit was also in the messsage: 
I got this warning several times while using the qiskit transpiler. I am not able to retrieve the exact circuit that caused this error.
That warning is less helpful than it could be, since DAGNodeOps don't have a useful __str__. That's on us. :/ I'll try to reproduce this, but it might be useful to replace that warning from Optimize1qGatesDecomposition.run with the following:
@epelofske-LANL can you try again with, now that #7048 ? You will have to install qiskit from main tho. Your code to reproduce the warning (including the circuit and the transpile options) would also help otherwise.
#7048 will be included in 0.18.3. You can either install main or wait for that release (it might happen any time in the next two weeks)
I installed from source, and managed to get this warning:
I am trying to save a circuit which gives this warning, and will post it here if I can replicate it (it seems to be hard to replicate).
I found a circuit which gave the user warning (edit; the user warning was the same as  the above post, and is the same as the original start to this issue):
circuit.txt
The transpiler call I made that produced the warning used several options, including specifying the coupling map of ibmq_guadalupe:
Thanks for reproducing. This shows a bug with the decision to incorrectly consider the new circuit as less efficient, therefore displaying the warning message. The new circuit uses only one sqrt(x) pulse whereas the old uses a sqrt(x) and an x pulse. So the new will actually be an improvement in terms of fidelity, but since it uses two phase gates the new uses more total gates and the length check incorrectly marks it as an inefficient synthesis. For this case you can ignore the warning. EDIT: the same check is used to see whether to emit the new or old sequence so if you are running on hardware (not a simulator) this bug would lead to a lower fidelity.
We need to change the checks to count pulses first and only consider comparing total gates if old circuit and new circuit have equal pulse count.
