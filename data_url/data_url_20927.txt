Current QRL addresses are treated as binary within the node/p2p layer at all times.
For human readable purposes in the CLI, webwallet and explorer, addresses are converted to hexstring format and prepended with 'Q'.
A hexstring address example would be:
0106002686acdc89087479103b69a1094b1b96da91675adca4952aa16f51b32d93d6e1b6bd10c0
A simple optimisation by converting addresses to base58 strings can reduce address length by approximately one third, improving readability and reducing screen space required for address display on the explorer. This will not require any changes to the node as the changes are cosmetic and occur above/outside the p2p layer and gRPC interface.
The above hexstring converted to b58 is:
hV5y8TYSikKYFCcJA3cCuqbeJSaiKTJ5TQiB8sPgUjjnb2PmVvkf
Furthermore, we can discuss implementing features from other cryptocurrencies such as BECH32 which incorporates error correction to prevent transcribing errors.
TBD after mainnet launch.
NB. Code required for a simple base58 change is a pair of widely available functions in pyqrllib (bin2b58str, b58str2bin) with functionally identical JS versions in the wallet and explorer.
