I've tried to run the TLS demo on both Ubuntu and MacOS using the pure post-quantum certificate option for the CA and the server.
When I run the client app to establish a connection based on post-quantum kex ciphers like bike1l1 or sike503, the cipher suite is getting set to TLS_AES_256_GCM_SHA384. Here is what it shows:
"No client certificate CA names sent
Peer signature type: qTESLA-III-size
Server Temp Key: bike1l1
SSL handshake has read 10127 bytes and written 2895 bytes
Verification: OK
New, TLSv1.3, Cipher is TLS_AES_256_GCM_SHA384
Server public key is 2976 bit
Secure Renegotiation IS NOT supported
Compression: NONE
Expansion: NONE
No ALPN negotiated
Early data was not sent
Verify return code: 0 (ok)"
Shouldn't the cipher be something like BIKEL1-ECDHE-QTESLAIIISIZE-AES256-GCM-SHA384?
Also, I think the server public key shown should be 2976 bytes instead of bits.
P.S.: The CA certificate uses qteslaI and the server certificate uses qteslaIIIsize. (The same issue also happens for other post-quantum signature algorithms such as picnicl1)
I assume you are on branch OQS-OpenSSL_1_1_1-stable, correct?
That's correct. Am I just misinterpreting the cipher name? I tried a classical kex as well such as the elliptic curve p256 and the same TLS_AES_256_GCM_SHA384 cipher is shown.
Things are a bit different for the TLS 1.3: the key exchange and signature algs are not specified in the cipher suite to avoid an explosion of such identifiers (like in TLS 1.2). Instead, there are separate messages to define the curve used for ECDHE, and the signature algorithm for auth.
The prototype post-quantum algorithms are not formally specified, so our implementation masquerade them as "curves". You'll see the key exchange and auth alg used in the tools' print-out before the cipher suite is printed:
No client certificate CA names sent
Peer signature type: qTESLA-I
Server Temp Key: sike503
---
SSL handshake has read 5257 bytes and written 731 bytes
Verification: OK
---
New, TLSv1.3, Cipher is TLS_AES_256_GCM_SHA384
Right. I appreciate the clarifications, @christianpaquin!
Please, disregard my first comment. Only the second comment about the sizes of the public keys should be changed to bytes in the output message.
Tks!
I opened issue #90 to track the bit/byte size mis-reporting.
