Diagonally dominant matrices [1] periodically pop up from time to time in various applications of quantum information. It may be useful to have a function that checks whether or not a given matrix is diagonally dominant.
Something like the following may be a good place to start:
Note that strict diagonal dominance is something we may or may not wish to enforce, but giving the user the ability would be ideal.
This function would be placed in matrix_props/is_diagonally_dominant.py. The content in the docs/ directory would also need to be updated as well along with basic unit tests to be placed in tests/test_matrix_props/test_is_diagonally_dominant.py.
[1] Wikipedia: diagonally dominant
Hey, this is looks like a really cool project and I'll be happy to contribute!
This my first time contributing. Do I need to notify you I will be trying to add this feature?
Hi @elads888.
Thanks for the interest in contributing to toqito and glad that you found the project to be up your alley.
I can go ahead and assign you to this task for tracking purposes. If you have questions, feel free to put them here in the comment thread.
I think this will serve as a gentle introduction to open source contribution and should be a good learning experience for you, I hope :). Looking forward to it, and do let me know if you have any questions!
Great! Then I'm on it!
Hey vincent, After I forked the repo, I tried to run setup.py, I kept on getting an error when the process tried to install the scikit-image. I saw online that in order to install it I first need to install numpy - so I did. But now I keep on getting "The process cannot access the file because it is being used by another process:" for the file "toqito-1.0.5-py3.9.egg". Should I just install the requirements manually, or the setup.py is mandatory? Thanks in advance!
Just to diagnose this better, could you send me the exact commands, stack trace, and any other relevant info (i.e. operating system, etc.).
I'm not entirely clear where exactly the process is failing, but if you provide me a bit more info, we'll get to the bottom of it. Thanks!
I'm working on windows 11. I forked the repo, cloned it, opened a venv and a Pycharm project.
Then I wanted to install the requirements and dependencies, so first tried to pip install toqito, and got "installing build dependencies - error" for cvx.
Then deleted the local repo, cloned it again,  and tried "python setup.py install". When running setup.py I get:
Downloading https://files.pythonhosted.org/packages/9a/31/ecc1b9d98cd3dcc50fd6e3fe2839fd111c1e43ee356452e2fad189da6d38/scikit_image-0.21.0rc1.tar.gz#sha256=98b7eb01ad1645475440e2f5fed82bc06b657fe31f648bc2a4c163dd3b794e79
Best match: scikit-image 0.21.0rc1
Processing scikit_image-0.21.0rc1.tar.gz
error: Couldn't find a setup script in C:\Users{name}\AppData\Local\Temp\easy_install-uh7x7zd6\scikit_image-0.21.0rc1.tar.gz
Checked up the error and saw I needed to install numpy first. So I did, and now I'm getting:
Processing toqito-1.0.5-py3.9.egg
Removing c:\users{name}\onedrive{rest_of_path}\toqito\venv\lib\site-packages\toqito-1.0.5-py3.9.egg
error: [WinError 32] The process cannot access the file because it is being used by another process: 'c:\users\{name}\onedrive\{rest_of_path}\toqito\venv\lib\site-packages\toqito-1.0.5-py3.9.egg'
Any suggestions?
Really appreciate the help!!
It looks like the scikit-image install might be giving you grief. Giving a look at the project, it doesn't even seem like it's using this dependency (I will make an issue to remove this in that case).
In the interim, you could try removing the dependency on scikit-image in setup.py manually and see if running:
works for you then or not. If not, posting the exact command, traceback, etc. would be helpful.
Removed scikit-image in setup.py did pip install -e C:\Users{name}\OneDrive{rest_of_path}\toqito, but cvx is giving me an error when trying to install the dependencies. I see that its probably because I need platform_machine == "arm64", that I don't have.
In the mean time, until we solve the problem, I installed numpy and started to work on the feature.
By traceback you mean this?
(venv) C:\Users{name}\OneDrive{rest_of_path}\toqito>pip install -e C:\Users{name}\OneDrive{rest_of_path}\toqito
Obtaining file:///C:/Users/{name}/OneDrive/{rest_of_path}/toqito
Installing build dependencies ... done
Checking if build backend supports build_editable ... done
Getting requirements to build wheel ... done
Preparing metadata (pyproject.toml) ... done
Collecting cvxopt<2.0.0,>=1.2.5 (from toqito==1.0.5)
Downloading cvxopt-1.3.1.tar.gz (4.0 MB)
---------------------------------------- 4.0/4.0 MB 4.4 MB/s eta 0:00:00
Installing build dependencies ... done
Getting requirements to build wheel ... done
Preparing metadata (pyproject.toml) ... done
Collecting cvxpy<2.0.0,>=1.2.1 (from toqito==1.0.5)
Using cached cvxpy-1.3.1.tar.gz (1.3 MB)
Installing build dependencies ... error
error: subprocess-exited-with-error
× pip subprocess to install build dependencies did not run successfully.
│ exit code: 1
╰─> [74 lines of output]
Ignoring numpy: markers 'python_version == "3.7" and platform_machine != "aarch64"' don't match your environment
Ignoring numpy: markers 'python_version == "3.7" and platform_machine == "aarch64"' don't match your environment
Ignoring numpy: markers 'python_version == "3.8" and platform_machine != "aarch64"' don't match your environment
Ignoring numpy: markers 'python_version == "3.8" and platform_machine == "aarch64"' don't match your environment
Ignoring numpy: markers 'python_version == "3.9" and platform_machine == "aarch64"' don't match your environment
Ignoring numpy: markers 'python_version == "3.9" and (platform_machine == "arm64" and platform_system == "Darwin")' don't match your environment
Ignoring numpy: markers 'python_version == "3.10" and (platform_machine != "arm64" or platform_system != "Darwin")' don't match your environment
Ignoring numpy: markers 'python_version == "3.10" and (platform_machine == "arm64" and platform_system == "Darwin")' don't match your environment
Ignoring numpy: markers 'python_version == "3.11"' don't match your environment
Collecting numpy<1.20,>=1.19
Using cached numpy-1.19.5-cp39-cp39-win32.whl (11.0 MB)
Collecting scipy>=1.1.0
Using cached scipy-1.10.1.tar.gz (42.4 MB)
Installing build dependencies: started
Installing build dependencies: finished with status 'done'
Getting requirements to build wheel: started
Getting requirements to build wheel: finished with status 'done'
Installing backend dependencies: started
Installing backend dependencies: finished with status 'done'
Preparing metadata (pyproject.toml): started
Preparing metadata (pyproject.toml): finished with status 'error'
error: subprocess-exited-with-error
scipy_c6f3478afea449459fd6dbf00cbd1b68.mesonpy-cy8svtwb\build --native-file=C:\Users{name}\AppData\Local\Temp\pip-install-n41s3lk_\scipy_c6f3478afea449459fd6dbf00cbd1b68.mesonpy-native-file.ini -Ddebug=false -Doptimization=2
The Meson build system
Version: 1.1.1
Source dir: C:\Users{name}\AppData\Local\Temp\pip-install-n41s3lk_\scipy_c6f3478afea449459fd6dbf00cbd1b68
Build dir: C:\Users{name}\AppData\Local\Temp\pip-install-n41s3lk_\scipy_c6f3478afea449459fd6dbf00cbd1b68.mesonpy-cy8svtwb\build
Build type: native build
Project name: SciPy
Project version: 1.10.1
C compiler for the host machine: gcc (gcc 10.3.0 "gcc (tdm64-1) 10.3.0")
C linker for the host machine: gcc ld.bfd 2.36.1
C++ compiler for the host machine: c++ (gcc 10.3.0 "c++ (tdm64-1) 10.3.0")
C++ linker for the host machine: c++ ld.bfd 2.36.1
Cython compiler for the host machine: cython (cython 0.29.35)
Host machine cpu family: x86_64
Host machine cpu: x86_64
Compiler for C supports arguments -Wno-unused-but-set-variable: YES
Compiler for C supports arguments -Wno-unused-function: YES
Compiler for C supports arguments -Wno-conversion: YES
Compiler for C supports arguments -Wno-misleading-indentation: YES
Compiler for C supports arguments -Wno-incompatible-pointer-types: YES
Library m found: YES
note: This error originates from a subprocess, and is likely not a problem with pip.
error: subprocess-exited-with-error
× pip subprocess to install build dependencies did not run successfully.
│ exit code: 1
╰─> See above for output.
note: This error originates from a subprocess, and is likely not a problem with pip.
Hmm, okay.
One tip is that if you want to make the output a bit easier to read is to surround the output in backticks. This page specifically may be helpful:
https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax
As I'm not on Windows, I can't test this, but you might want to check out this page here for installing cvxopt on Windows. There might be some configuration you need to do listed there:
https://cvxopt.org/install/#windows
Hope that is useful!
Hi!
Added pull request :)
Hi! Added pull request :)
Excellent, thank you, @elads888 . Added comments, let me know if you have questions!
Closing from #176
