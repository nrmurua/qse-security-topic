If you pass a quantum volume circuit's qc.qasm() into qc.from_qasm_str, which calls qiskit's qasm parser, throws a QasmError.  The same error occurs for other circuits besides quantum volume.
import qiskit.ignis.verification.quantum_volume as qv
qcs = qv.qv_circuits(qubit_lists=[[0,1]])
qc = qcs[0][0][0]
print(qc.qasm() + "\n")
new_qc = qc.from_qasm_str(qc.qasm())
Not throwing an error and parsing correctly.
I think the issue here is that the circuit contains custom unitaries, which are then added into the qasm as unitary([*the matrix*]) q[0], q[1]; which is not a format supported by qasm. Currently, this is because the unitary is just being added to the qasm using the base Instruction.qasm() but this should be overwritten to use _define() (or the methods it uses) to decompose the gate before adding it to the qasm.
