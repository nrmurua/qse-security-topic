Using 3.6py_40+gite8092f6f on Windows 7 64bit with a KC705, nist_qc2.
Calling an RPC which returns a list of bytes objects seems to corrupt other variables that should be completely independent:
This prints
The higher self.num_bytes, the more list entries (from the left) are corrupted.
Adding more prints before the RPC call reduces the number of corrupted entries, e.g. with self.num_bytes lines of print(test_list), test_list survives unharmed. The values of the bytes in the list returned by the RPC don't seem to make a difference.
This might be a separate issue, but just in case:
In addition, setting self.num_bytes to more than 16 breaks the experiment in different ways:
for 17 and 19, it raises an exception:
with the following UART output:
With self.num_bytes = 18 and only a single print before the RPC, the experiment never returns (shows as running in the scheduler indefinitely). Doesn't occur with two prints. Didn't test any higher values of self.num_bytes.
This might be a separate issue, but just in case:
No, all these issues are the same and the cause is memory corruption in code generated for RPCs.
I'd like to test this but can't build the newest kc705-nist_qc2 3.6 gateware. The bot is building 4.0.dev despite the argument --branch=release-3:
http://buildbot.m-labs.hk/builders/artiq-board/builds/1674
Has the syntax changed?
Arguments are passed before builder name, not after.
Ah, thanks. I've flashed the new gateware and it works now.
