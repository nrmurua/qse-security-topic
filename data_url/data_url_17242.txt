There are a few bug reports recently with how Layout is applied. The source of confusion is that different passes do slightly different thigns with the layout.
After internal discussions with @itoko @kdk @1ucian0, here is the plan:
 Clean up the ApplyLayout pass (Add ApplyLayout passÂ #2050) and merge it. This pass should be dumb, and just consume a virtual circuit + Layout object, and output a register-less circuit (for now, a flat register). This involves updating the dag nodes as well as they contain register pointers. @itoko
 Change BasicSwap and StochasticSwap to consume physical circuits (register-less where each index literally corresponds to the physical qubit). @1ucian0
 Change LookaheadSwap to remove the logic for flattening register. @kdk
 Remove LegacySwap and replace by StochasticSwap (after some more testing). @ajavadia
 Update the other passes that currently consume a Layout (e.g. CXDirection, CXCheck, ..) to just assume that the layout has been applied, so just consult the (physical) circuit. @ajavadia
 Add a circuit.layout property, so that the selected layout can be queried by the user later. This property will be populated by the layout selection pass (NoiseAdaptiveLayout, DenseLayout, TrivialLayout, SetLayout). So then, remove this from pass_manager.property_set. @1ucian0
Fixing these should close  #1831, #2066, #2405, #2503, #2532.
BasicSwap PR #2590
While changing BasicSwap and StochasticSwap, shall they raise if the coupling map is bigger than the size of the physical circuit?
Add a circuit.layout property, so that the selected layout can be queried by the user later. This property will be populated by the layout selection pass (NoiseAdaptiveLayout, DenseLayout, TrivialLayout, SetLayout). So then, remove this from pass_manager.property_set.
Currently, passes modify DAGs, not circuits (right now, they are not the same). Layout selection passes are AnalysisPass, should they be TransformationPass?
@1ucian0 if we are moving towards circuits having metadata, then I'm not sure there's still a need for PassManager.property_set. The Analysis passes can just update the circuit metadata, while the Transformation passes update the circuit data. (Two circuits can be equivalent even if they differ in their metadata).
Hhmm... let's leave that one for later. I think there is a risk of overpopulating the circuit attributes.
