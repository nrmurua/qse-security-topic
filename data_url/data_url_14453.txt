The circuit_to_instruction function calls the method QuantumCircuit.assign_parameters with the explicit argument inplace=False. This is the expected behavior, since the conversion should not affect the original circuit.
However, when the given circuit is not parametrized, this is redundant. The returned circuit is not changed in any way in the rest of the conversion. Thus, we can avoid calling assign_parameters, and simply use the input circuit for the rest of the function. This will improve runtime significantly for bigger circuits.
This is a good point, thanks.  I wonder if we'd actually be better inverting the order of the whole circuit_to_instruction function - build up the definition first, and then call QuantumCircuit.assign_parameters(instruction.definition, inplace=True). I think that ought to involve fewer allocations in both cases, without needing the extra login in circuit_to_instruction to skip assign_parameter.
I'd be happy to accept a PR on this topic, if you'd like to work on it?
