The optimize_pulses function should have a continue_from option that can receive a Result object from a previous call to optimize_pulses, and continue the optimization from that previous result (presumably, with a larger value of iter_stop).
Furthermore, there should be an option make_snapshots=<n: int> that dumps the current Result object to disk every n iterations. This is to make Krotov robust with respect to crashes (or being killed by a shutdown/HPC scheduler): we'll be able to continue from the last dumped Result.
The snapshotting can (and should) actually be done in a special info_hook convergence_check, so there is no need to complicate the implementation of optimize_pulses.
continue_from would still be useful.
When finished, this should have a HOWTO entry
