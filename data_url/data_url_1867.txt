Description of the issue
Adding gates to circuits behaves differently when using circuit + gate vs. circuit += gate.
It's not immediately clear which one of these behaves "correctly". Related issue: #3246.
How to reproduce the issue
c + g:
Cirq version
0.9.0.dev
It looks like Circuit.__add__ first wraps non-circuits into a Circuit and then calls __iadd__, which in turn calls append. When appending a Circuit or Moment to another circuit, we preserve the moment structure, which is why __add__ leaves the added Hadamard gate in its own moment but __iadd__ moves it back into the available space. It seems to me we should avoid this wrapping and prefer the __iadd__ behavior, but perhaps @Strilanc had a reason for doing it this way?
While one could argue that casting up to Circuit is the correct solution (making both operands the same type) as it is happening in __add__, however:
All in all +1 that we shouldn't wrap, but rather append.
Deprecation note: probably this should be okay to change...but maybe it will surprise people, so we should add a note in the release notes about this behavior change.
Discussed at Cirq Cynq: append is the way forward for both without Circuit() wrapping.
Discussed at Cirq Cynq: append is the way forward for both without Circuit() wrapping.
Point of clarification: this means that we will keep the current circuit += gate behavior and change the circuit + gate behavior to match.
