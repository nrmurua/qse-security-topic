Hi. I'm using mesolve to evolve a system under a double-well(DW) potential. By varying zeta from -1 to larger values, the DW starts to form after zeta exceeds 0. The way zeta changes in time is determined by a ramp function. Giving the solver a tlist it's expected that the solver evolves the system from tlist[0] to tlist[-1]. Oddly the solver doesn't pick the final time:
The final time that the code prints in not same as the final time tt_f (which is 10), in this case it yields an error of about 5% in determining the final value of zeta:
The times at which the L are computed are not those at which the states are computed. It computes the derivative at times farther than the desired time and do an interpolation step to get the state.
Some feature (pulse) may be skipped by this method and you should set Options(max_step=...) with a max_step smaller than half the pulse width, but it should have no issue with a linear ramp.
We use the zvode integrator of scipy.integrate.ode.
