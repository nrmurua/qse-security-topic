Retrieving backend defaults with backend.defaults() on certain backends like ibm_kyiv gives the following error:
Integration tests here
Backend defaults are returned
Apologies if this is in the wrong repo
No response
I dont have access to ibm_kyiv and I was unable to reproduce this with any of the fake backends in terra or the IBM backends in the open access program.
I can reproduce it with Kyiv on main Terra.  I'm not certain if this is an error in the decoders, or with the deployment of Kyiv - I know that gaussian_square and drag are individually correct pulse-shape names, but I don't think gaussian_square_drag is.  From a quick scan through the Terra git log, we've never had the string gaussian_square_drag committed to the repo, so I suspect the issue might be that Kyiv should have been deployed with the pulse shape drag instead?
I'm not very confident on this - perhaps @nkanazawa1989 or @wshanks can answer properly?
Yes current qobj converter only supports gaussian, gaussian_square, drag, constant. I guess this is part of DDCX pulse but we don't have any PR for this symbolic pulse shape. Here is the PR for similar one #8757 so probably @miamico can contribute.
I have been working on getting gaussian_square_drag and gaussian_square_echo supported by the backend code. I believe this counts as a misconfiguration of the backend at the moment. I think these pulses should be getting reported as Waveforms until the backend actually supports receiving these pulses. Even if they are added to qiskit.pulse like in #8757, I don't think the backend should be reporting them as parametric pulses until it can receive them as parametric pulses. Does that seem right, @nkanazawa1989?
I'm not familiar with the backend code, but it sounds reasonable to use waveform payload until we support it.
Just seeing this conversation as I'm encountering the issue myself (on ibm_ithaca). Looking for a temporary fix until things are sorted out on the backend side
There is nothing we can do on Qiskit frontend because it doesn't know the definition of pulse, i.e. it cannot generate waveform without knowing the envelope function. So what you can do as a temp fix is to catch this error and ignore it.
