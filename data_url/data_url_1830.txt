Description of the issue
FSimGate and PhasedFSimGate disagree on whether or not theta and phi angles that are used by __init__ and are exposed as properties are canonicalized (by projecting them into [-pi, +pi]) or not.
How to reproduce the issue
Cirq version
0.10.0.dev
The behavior of canonicalizing on initialization is different from other gates:
In cirq.PhasedXZGate, canonicalization is in the equality check and construction from matrix.
cirq.EigenGate also only canonicalizes in the equality check.
Should we make this consistent across Cirq gates so as to not surprise users?
@verult Do you have an example of where this becomes an issue? Regarding consistency, I would consider things to be inconsistent if the same parameter (eg: exponent) is treated differently in similar gates (eg: X/Y/Z).
So, for example, if X ** 2.5 implicitly became X ** 0.5 because we canonicalized the exponent during construction, but didn't do so for Z ** 2.5.
FSim gate has different parameters (theta, phi) and till the time it's consistent with what happens in PhasedFSimGate, I don't see much issue here. Also, changing behavior of EigenGate will be a large breaking change, which I'd prefer to avoid unless we have a good reason to do so.
Not a major issue for me. For context, I discovered this while implementing PhasedXZGateFamily using FSimGateFamily as an example, and a check like this won't work for the PhasedXZGate because exponents aren't canonicalized on initialization. But we could easily fix this by instantiating a dummy PhasedXZGate with 0 angles and do a gate equality check.
Regarding consistency, I would consider things to be inconsistent if the same parameter (eg: exponent) is treated differently in similar gates (eg: X/Y/Z).
Both exponents and FSimGate angles are derived from angles at the end of the day, and are canonicalized based on angles. So to me keeping their canonicalization process consistent makes sense to me, but I'm not a user so I don't have a strong preference :)
Agree that changing EigenGate would be big. If we do want to do this, changing FSimGate and PhasedFSimGate might be easier.
Discussed at Cirq sync: an argument could be made for this as a cleanup item, but leading into 1.0 there isn't a strong enough motivation to justify directing time towards it.
