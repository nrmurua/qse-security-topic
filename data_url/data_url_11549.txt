Part of the circuit factory deprecation
Move the finance-specific CircuitFactory objects to finance/applications and port them to being QuantumCircuits. After discussing with @stefan-woerner we decided to leave these circuits as building blocks in the applications module until we properly set up application workflows.
This includes:
I am going to ask why we would not leave them where they are and just move/deprecate them once when things are better sorted out with the application workflows as it seems that is still in progress. They have to be deprecated where they currently are and 'copied' to new locations in order to "move" them. This mistakenly did not happen with the ising models but that mistake should not be replicated. If we are changing knowing its going to be changed yet again shortly I think I am asking if we can reduce the churn by maybe not "moving" until thing are better worked out. Maybe I am reading more into the text above than was intended and at least all this aspect is already sorted out.
The plan is to keep application specific building blocks in the applications folder, where they can be used by a future EstimationProblem class -- the problem class for amplitude estimation algorithms. Then each application defines it's own estimation problem in a workflow that stacks together the required building blocks.
Another reason for not keeping them in this location: properly deprecating would give quite weird objects. Since we switch from a circuit factory to a circuit we'd have objects that are derived from both in the deprecation period.
Whatever is done the the main qiskit tutorials, as they currently are, should really still run, potentially emitting deprecation warnings. Maybe this has to be a breaking change if as you say deprecation is problematic - all I know is that the tutorials will be run, deprecations are fine since they ensure that user's have time to transition. If not maybe it needs to be brought up ahead of time since this aspect impacted us last time around - hence why tutorials are run in build to ensure they keep running with the current changes going into master (maybe you just saw the QGAN failure in that regard)
