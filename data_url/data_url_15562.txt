Hi, I was playing around with different layout & routing options in the transpiler, and I noticed that the NoiseAdaptiveLayout pass sometime leads to errors in later passes because it adds invalid qubits to the layout.
Here's a minimized version of the example that I saw failing:
On my machine, this code produces an error IndexError: index 14 is out of bounds for axis 1 with size 14.
After some prodding, it seems that NoiseAdaptiveLayout is producing a layout that uses 15 qubits even though the backend only provides 14. To see this, you can run:
Sorry I don't have a more concise example. I tried to reproduce the issue on a smaller backend (like Yorktown) but I couldn't find a circuit that caused this issue. Possibly there is something strange about the Melbourne backend?
This seems to be a bug in the fake Melbourne backend since its properties report an extra qubit:
Thanks for the response! Should I delete this issue / rename to something about the Melbourne backend?
After some off-line discussion, it is true that FakeMelbourne has inconsistent properties/configuration. My first approach was to work on that inconsistency. However, the core definition of a backend comes from the configuration, then passes should not iterate on properties, but query them based on configuration information.
This is my suggestion for a fix #10859
