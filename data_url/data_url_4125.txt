Description:
I'm attempting to take a qiskit.QuantumCircuit object that is obtained from the QFT QED-C benchmark and use the perceval converter to take that and convert it into something that perceval understands, but the converter appears to be failing.
Steps to reproduce:
Clone QED-C repo:
Create virtual env:
python -m venv venv
Activate virtual env:
source venv/bin/activate
Install minimal dependencies:
(Attempt to) run QFT benchmark
In QC-App-Oriented-Benchmarks/quantum-fourier-transform/qiskit, replace the if __name__ == "__main__" block with:
The following error seems to arise:
Indeed, the circuit variable up above is a qiskit.QuantumCircuit object, so, in theory, I believe it should be being fed the right type of argument.
Is there any type of necessary transpilation that might need to take place? I also attempted to transpile the gates as:
However, this did not seem to work either.
I know that's a lot of output and content, and if there's anything further I can provide that might be helpful, please do let me know!
The circuit looks like this

When the converter goes through the gates and tries to parse them it encounters a black-box gate called "qft", something it does not recognize as one of the native Qiskit (X,S, H, CZ, etc) gates that are supported therefore it fails. (A possible future improvement for the parser is to recognize blocks like this recursively, but atm, custom gates are not supported).
Same when/if you reach inv_qft. The easiest solution is to re-implement these as just simple gates, not as a grouped components.
As for the post-process issue, either clear postprocess as the error message indicates or maybe try to disable postselection
qiskit_converter.convert(circuit, use_postselection=False)
Hope that helps
Thank you, @mbassiouny33 . I sincerely appreciate the added context and information!
