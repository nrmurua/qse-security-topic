First, thanks for all youre work.
Ive only the high-school and im portuguese, so, sorry about my english and math.
If i understood, a pure state, is what we as humans today can do better in measuring a "fixed" state.
Also, if i understood the idea, a GHZ State, is the string that carry out the information from one Schr√∂dinger Cat box to the other.
So, If my thougth is NOT 100% exact, but it's ok as is, we need also take in account the Boltzmann constant. Why?
So, i wish to ask you, if is not abuse of you're time, and if is a easy append, can you please append on youre code below (and/or somewhere in community if usefull for) the Boltzmann constant?
import matplotlib.pyplot as plt
#%matplotlib inline
import numpy as np
from pprint import pprint
from scipy import linalg as la
from qiskit import QuantumCircuit, ClassicalRegister, QuantumRegister
from qiskit import execute
from qiskit.tools.visualization import plot_histogram, plot_state
from qiskit import Aer
def ghz_state(q, c, n):
# Create a GHZ state
qc = QuantumCircuit(q, c)
qc.h(q[0])
for i in range(n-1):
qc.cx(q[i], q[i+1])
return qc
def superposition_state(q, c):
# Create a Superposition state
qc = QuantumCircuit(q, c)
qc.h(q)
return qc
n = 3  # number of qubits
q = QuantumRegister(n)
c = ClassicalRegister(n)
ghz = ghz_state(q, c, n)
superposition = superposition_state(q, c)
measure_circuit = QuantumCircuit(q,c)
measure_circuit.measure(q, c)
backend = Aer.get_backend('qasm_simulator') # the device to run on
circuits = [ghz+measure_circuit, superposition+measure_circuit]
job = execute(circuits, backend, shots=1024)
i already know that scipy module as already a Boltzmann and k function, but i dont know were to append to make some math sense :-)
Many thanks for for youre time and possible feedback in advance !
Python 3.7.0 (default, Jun 28 2018, 08:04:48) [MSC v.1912 64 bit (AMD64)] :: Anaconda, Inc. on win32
PS: I dont have any source paper to "backup" my thought. If the paper is a issue, i understand. Is only a thought :-)
[Off-Topic]
