I noticed in the adder.qasm example that multiple qubits can be declared at once (https://github.com/Qiskit/openqasm/blob/master/examples/adder.qasm#L20). I assume this is more generally true that one can do type identifier1[size1], identifier2[size2], ..., identifierN[sizeN]. I think this should be made explicit.
I believe this should be removed for the sake of explicitness now. I also do not believe this was a feature of OpenQASM2.0.
I am actually ok w/ this for now. It does simplify the code if you can do bit result1, result2[3], result3[2]=3 or int[32] x=5, y; It has been included in the  antlr grammar: https://github.com/Qiskit/openqasm/blob/a3132a4fd9a96383a94410449f9511235822b51a/source/grammar/qasm3.g4#L154.
Common language like C allow this and so I am ok w/ OpenQASM doing so as well. Will allow for more concise code.
So a declaration of the form type identifier1[size1]=literal1, identifier2[size2], identifier3[size3]=literal3 becomes a problem with subroutine calls. If I do bit x = sub(10, 5) q1, q2 for some subroutine call, the q2 could be identified as a second bit.
Therefore I propose that when multiple declarations are made, either no assignments are done or all assignments are done. @taalexander thoughts on this?
This is addressed in #187
Closing as #187 is merged
