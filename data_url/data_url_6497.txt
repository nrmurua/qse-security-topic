Dear QSim developers, during a noisy VQE simulation on LiH, I notice that getting expectation value of a certain number of observables seems to result in a segmentation fault. Here's a simple demonstration:
A few notes that might be helpful:
This is known behavior, but we ought to have documentation for it (or guards against it) at the qsimcirq level as well. I'll take a look. (EDIT: correction - the code should route around this, but for some reason it doesn't.)
Thanks for the quick reply. Is it because for over 6 qubits, the fused gate matrix becomes too large that it might be numerically efficient? Now the work around I think is to add pre-rotation gates and measure them in the standard basis (which I guess has been done in TFQ).
Is it because for over 6 qubits, the fused gate matrix becomes too large that it might be numerically efficient?
More or less, yes. The gate fusion code limits gates to six qubits due to larger gates being inefficient to simulate, and the expectation value code relies on the same behavior.
Looking into this, I found that there's a more expensive expectation value method that avoids this limit, and the pybind layer should automatically use it for more than six qubits:

Clearly this switch is misbehaving somehow - if it wasn't, your code should work via the more expensive EV method.
The reason is that the more expensive method requires allocated scratch state. #498 should fix this issue.
