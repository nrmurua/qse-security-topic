Interesting!
This is due to the recent release of black 20.8b0, which apparently has some subtle behavior changes.
I guess, we should pin the versions of our precommit tools.
Indeed, we can adopt any kind of formatting, but it has to be unique.
we can adopt any kind of formatting, but it has to be unique.
True, if anything this proves that installing these tools is not trivial.
I've decided to stick with version 19.10b0 of black for now, because it seems that they are not quite done yet with their changes.
The old formatting check started failed after the CI rebuild the image and it picked up the latest version of black.
Since the new precommit system seems to works well, I'd suggest we just decommission the old formatting check.
Currently no PR pass the CI.
Either we have
Reformat Python files with the black code formatter.......................Failed
or
Precommit Expected — Waiting for status to be reported
Reformat Python files with the black code formatter.......................Failed
Yes this because the black formatter recently changed its behavior. Since there is no simple solution, we should just remove it.
Precommit Expected — Waiting for status to be reported
Since the precommit check is new it was missing from old PRs. I now manually triggered it for all old PRs.
Reformat Python files with the black code formatter.......................Failed
Yes this because the black formatter recently changed its behavior. Since there is no simple solution, we should just remove it.
It is also because you insist on checking things unrelated to a specific PR.
It is also because you insist on checking things unrelated to a specific PR.
We tried the alternative of checking only modified files: Due to tool changes the formatting became stale. And when somebody modified a file the commit was cluttered with the re-formatting. To prevent this the code base should always be formatted consistently.
