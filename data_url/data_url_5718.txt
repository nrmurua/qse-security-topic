Currently doing noisy simulations on some fake backends , e.g Kolkata, give warnings about T2 times not satisfying their theoretic bounds:
Also creating noisy simulators using AerSimulator.from_backend(), e.g. today on Mumbai:
These are very verbose warnings, and cause confusion when doing tutorials that leverage these classes.
Try to run using FakeKolkata or create a noise model from a real IBM Quantum system.
The user should not have to deal with these warnings, and they should be suppressed by default.  There is no user actionable behavior that can suppress the warnings from the fake backends.  Moreoever, when building generic noise simulators one would have to go an edit the noise model (which is effectively what the warnings are telling you is going on anyway) to bypass the myriad of user warnings.
Suppress the warnings, or at minimum reduce the warnings to a simple one-liner.  This used to be done via the warnings=False flag in the NoiseModel class, but that cannot be passed into the newer methods, and it says it is being deprecated anyway.
I think having a warnings=False flag is generally not good API design because there's already a builtin mechanism for that: warnings.filterwarnings, the -W interpreter option and PYTHONWARNINGS environment variable, depending on what level you want to set things at, and when you start embedding these objects in others (e.g. the NoiseModel inside a FakeBackend), it's not clear at which part of the API the flag should be exposed, and whether it needs to be chained through many functions/classes. That said, I do agree that these warnings seem to be spurious but I don't fully understand why they were implemented, so it's not safe for me to suggest their removal.
I brought it up with Chris and Itoko-san (@chriseclectic and @itoko) in an Aer meeting one time, but I can't remember what their reasons for the warnings were.  Hopefully one of them can answer here, so we can have the discussion properly.
I consider this an usability issue.  Namely now I have a third notebook with the same junk in it:
the warnings=False flag was something I had to fight quite a bit for in the past because of this exact same issue.  Now that is is back again, it is a bit annoying.
Though warnings flag of from_backend is marked as "PLAN TO BE DEPRECATED", it has not been deprecated yet (maybe in 0.12). I think that 0.11.X can have warnings flag for thermal relaxation noise (_device_thermal_relaxation_error). However, I believe that using warnings.filterwarnings() is the best to resolve this issue.
