In a simple measurement Loop I have used the readnext() function from the Keithley2700 driver. This gives are error
For parameters with custom get_cmd and set_cmd functions I have seem similar errors. It would be nice if we could have loops with simple get functions that take no arguments at all. Otherwise, we should document that all get and set functions must have **kwargs, but can safely discard keywords such as first_delay.
The situation is a bit more complicated. The following example shows the problem. The second Loop failes because in qcodes/instrument/functions.py the Function.__call__ only accepts positional arguments (args), but not named arguments (kwargs).
Should we change Function.__call__ (and possibly many similar functions) to accept named arguments? I cannot determine what the impact of such a change will be. On the other hand, I think that simple tasks (such as in the script below) should work without any trouble from the framework.
hmm, I can see why you'd want to do this, but I think it should be an error (not this error, of course, I should give a useful one!) When you want to measure something, it should match the Parameter API (so in general, it should actually be a Parameter) - that is, it's an object with a get method, but then it can also provide the Loop with other information like its name and label, whether or not it returns multiple values...
So I'd suggest for this use case, change readnext to a parameter like measurement or something:
What's happening is, the Loop sees a callable that doesn't have a get method and thinks it's a Task, which does indeed ignore these kwargs, they're present to support nested loops. You'll notice that data didn't throw an error, but it didn't collect any data either (because a Task doesn't yield any data), it only gets the setpoints in dummy.
Ok. For me a parameter is something that is settable as well. For that reason I did not make the readnext a  Parameter. If we agree that this type of objects should be a Parameter, then I'll change my code as suggested. If we can make the system report a good error we can close this issue.
