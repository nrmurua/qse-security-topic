We are currently not including -Wmissing-prototypes.
When turning it on, I found that:
Should we turn it on? I think it is useful.
Ok, this triggered some more problems:
The builds on Windows don't like that some prototypes in Frodo differ in const-ness from the implementation (e.g.,
If I add the const's, clang-tidy complains about having top level const's in declarations: https://clang.llvm.org/extra/clang-tidy/checks/readability-avoid-const-params-in-decls.html
Do we want to eliminate the top level consts entirely?
Yes, see e.g. line 15 in util.c.
We should not eliminate top-level const's entirely: pointers to "input" buffers should be marked const even in prototypes, and if a linter complains about that, then the linter is wrong.  (But I don't think clang-tidy complains about this, since we're doing it already now.)
As for const's on non-pointers, admittedly formally there is no reason for them.  I personally like them there because it can serve as a short hand to the reader that "const" = "input", "non-const" = "output".  But I won't fight for that.
So I have no objection to checks that would cause us to remove const from lines 15 and 19 of util.c, but would object to removing const from line 27 of util.c or anywhere in common.h.
Agree, I think I got confused by "top-level". But what you describe is exactly what I mean. I'll change that.
Back to the original question: Any objections against -Wmissing-prototypes?
