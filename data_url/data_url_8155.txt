Describe the issue
We use subprocess for the LaTeX plotting procedure. But the current error message for a failed subprocess is very ambiguous, which makes it very hard to debug.
For illustration purpose, I deliberately change the following line so that the input pdf file has a wrong name.

This is not very useful since the exit status 1 can have many reasons. It can also be that an additional dependency is missing (which is the reason I started to debug at the first place).
What I would like to see is the real system error message:
Possible solution
I didn't find a nice solution for this. Simply changing the parameter of subprocess.run to stderr=subprocess.PIPE doesn't work for me. I have to catch the exception and print the stderr message:
which gives me the output
It's ok but still weird. I guess I overlooked some feature of subprocess.
@jakelishman I'm wondering if you have a better solution?
Looks sensible enough to me.  If you want to leak stderr through you can set stderr=None, but I think it's a better idea to capture it like you've done here so you have control.  You can also decode the bytes object at the end back into a unicode string with err.stderr.decode(sys.stderr.encoding), which will get rid of the b" ".
There's no need for functools.partial in your solution any more; it could just be
