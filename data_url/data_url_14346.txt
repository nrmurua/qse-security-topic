The provider claims more than one backend matches a request even though I've provided a hub/group/project
I receive a backend.
On further introspection, this is because I forgot the backend name parameter as it is possible for it to be None. In what context is not specifying a parameter useful?
I agree that it is a bit odd that name is an optional param for get_backend() but this method also takes other filters as parameters so users could use these to narrow down to one backend.
provider.get_backend(min_num_qubits=5, simulator=False)
Either way the error message could probably include all the backends that match the given criteria
+1 on it being odd. Since get_backend() raises an error if <>1 backend is found, so presumably it should take a single input that uniquely identifies a backend - in our case the backend name. Perhaps we should raise this issue with qiskit-terra where the base class is defined.
Jessie: sorry, I'm not 100% certain what you're asking from Terra here? Terra can't know what combination of inputs are needed for an arbitrary provider to narrow it down to just a single backend, given the additional filters in the interface.
We can't change the signature of get_backend, since that would be a big compatibility break in an interface that's been public for a long time. That prevents both  making name required and potentially returning more than one backend. We could make the error message print out the backend reprs as well, if that's what you're after?
To me, Thomas's initial issue was a user mistake, and while it would be nicer to have a better interface to prevent that from happening, we can't actually make name required without a breaking change.
