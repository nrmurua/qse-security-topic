We likely do not want control-flow operations to require that all their scoped blocks close over the same set of classical variables; doing so would make it harder for a more classical-aware extension to DAGCircuit to reason about reachability in the future, and poses no immediately obvious benefit other than making it more convenient to produce a list of closure variables that may be touched by a full control-flow construct.
Instead, we can add helper methods to ControlFlowOp that can inspect their contained blocks to produce a complete set of the closure variables and whether those variables may be written to by any block.  This will make it more convenient for DAGCircuit constructors to build from the single operations, and for single operations to be queried for their effects.
Such a function might look like:
where the dataclass VarUsage is part of the return value in order to allow extension of the returned information in the future in a backwards-compatible manner.
