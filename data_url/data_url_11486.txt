The contents of Aqua have been moved to other repositories. Algorithms and opflow are deemed core functionality and have been moved to qiskit-terra. The domain logic, in folders like chemistry, optimization etc have been moved to their own repositories. Optimization to qiskit-optimization etc. though chemsitry is moved to qiskit-nature (not qiskit-chemistry) since it be part of a broader base of code for natural sciences.
Ensure any/all use of Aqua raises a deprecation warning. Hopefully later, assuming this can be sorted ahead of the release, we can include a link to the migration guide in the warning itself.
Update: I am thinking perhaps the readme.md here can give a basic overview and link to the new repos where  the code has been moved to now. We can link the migration from the readme, so if we put a message in the warning that links to the readme here, so even if the migration guide is published a little later, since there would be a link from here we can change the readme here if/as needed.
For deprecations that state 3 months after 0.8.0 (or any earlier if they were overlooked and not removed) should we remove this deprecated code entirely? We could just remove the date notice part, to point people at the newer components still, as that may still be helpful on older code. Given its all deprecated I am not sure its worth the effort to delete/extract the deprecated code at this point.
For newer deprecated code that would be removed 3 months after 0.9.0 we need to keep that. Again maybe we just drop the date notice part since this will come under the global deprecation warning anyway, but the guidance towards the non-deprecated solution may still be helpful. Though I see one is on QSVM and that whole ago is changing over to QSVC in machine-learning.
Should we add more direct deprecation warnings on the algorithms to point people to the Terra ones, or like QSVM to that in machine learning? That may help people figure easier changes needed to their code - or perhaps just drop internal deprecation warnings and just keep the global one and rely on users reading the migration guide alone?
@stefan-woerner @pbark @manoelmarques Any thoughts here one way or another?
FWIW, I don't think it's worth deleting anything from the aqua repo. I think a better post deprecation period plan (since we're deprecating pretty much everything) is to just archive the entire aqua repostiory after the last release at the end of the deprecation period.
By deletion I was really only considering code that we stated was deprecated and would be removed after 0.8; we did not get around to doing that and normally we would have done this so that code was gone. Clearly we would like people using the newer logic that still remains and would be more easily switched to using the code where ever it is in the new repos. I was just questioning the value of doing what we would normally have done given that we will deprecate the whole of Aqua. If you were reading what I meant the same way, then its certainly less work to leave the old deprecated code there, and I was leaning that way as you can see from my earlier comment.
