IDE: Jupyter Notebook via Anaconda
Python Version: 3.8.8
OpenQASM Version: 3
from qiskit import QuantumCircuit, Aer, execute
qasm_str = """OPENQASM 3;
include "stdgates.inc";
qubit q[4];
bit c[4];
reset q;
x q[0];
x q[2];
barrier q;
h q[0];
cphase(pi / 2) q[1], q[0];
h q[1];
cphase(pi / 4) q[2], q[0];
cphase(pi / 2) q[2], q[1];
h q[2];
cphase(pi / 8) q[3], q[0];
cphase(pi / 4) q[3], q[1];
cphase(pi / 2) q[3], q[2];
h q[3];
c = measure q;
"""
qc = QuantumCircuit.from_qasm_str(qasm_str)
---> 25 qc = QuantumCircuit.from_qasm_str(qasm_str)
1786         """
1787         qasm = Qasm(data=qasm_str)
-> 1788         return _circuit_from_qasm(qasm)
1789
1790     @Property
2522     from qiskit.converters import ast_to_dag
2523     from qiskit.converters import dag_to_circuit
-> 2524     ast = qasm.parse()
2525     dag = ast_to_dag(ast)
2526     return dag_to_circuit(dag)
52         with QasmParser(self._filename) as qasm_p:
53             qasm_p.parse_debug(False)
---> 54             return qasm_p.parse(self._data)
def parse(self, data):
1069         """Parse some data."""
-> 1070         self.parser.parse(data, lexer=self.lexer, debug=self.parse_deb)
1071         if self.qasm is None:
1072             raise QasmError("Uncaught exception in parser; "
331             return self.parseopt(input, lexer, debug, tracking, tokenfunc)
332         else:
--> 333             return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)
334
335
1061                 if not lookahead:
1062                     if not lookaheadstack:
-> 1063                         lookahead = get_token()     # Get the next token
1064                     else:
1065                         lookahead = lookaheadstack.pop()
62     def token(self):
63         """Return the next token."""
---> 64         ret = self.lexer.token()
65         return ret
66
384                     tok.lexpos = lexpos
385                     self.lexpos = lexpos
--> 386                     newtok = self.lexerrorf(tok)
387                     if lexpos == self.lexpos:
388                         # Error method didn't change text position at all. This is an error.
197     def t_error(self, t):
198         raise QasmError("Unable to match any token rule, got -->%s<-- "
--> 199                         "Check your OPENQASM source and any include statements." % t.value[0])
QasmError: 'Unable to match any token rule, got -->O<-- Check your OPENQASM source and any include statements.'
Qiskit does not support OpenQASM 3.0 yet. I believe that your QASM can be rewritten as
Qiskit does not support OpenQASM 3.0 yet. I believe that your QASM can be rewritten as
Ohh, that makes sense. I'll close this issue out then. Thanks!
