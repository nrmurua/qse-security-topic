I'm trying to create a PKGBUILD for Arch Linux and I found some issues when building from source.
If I run
I would expect only files in /usr/lib/python3.10/site-packages/qiskit/. However, all cmake, contrib and even src folders are copied. This is not consistent with other python packages, and I guess is not intentional.
pyton setup.py install should only copy relevant files (i.e. /usr/lib/python3.10/site-packages/qiskit/)
My first guess is that this is an issue with scikit-build which probably makes aer different from most other python packages (which are using setuptools directly). We need to specify the c++ source files in the MANIFEST.in so that the sdist we publish can build the C++ extension. If the src files are polluting the installed package that points to a scikit-build bug to me. Looking at their bug tracker it looks like this has already been reported upstream there: scikit-build/scikit-build#590
Apart from that bug from scikit-build, I think there are other issues that should be fixed in this package too. This only works if you use pip, but should be compatible with any backend following PEP 517 and PEP 518.
In some distros like Arch LInux, using pip for packaging is a no go. I have no issue building a wheel of python-qiskit-terra with python-build and installing with python-installer, but I can't do the same with python-qiskit-aer.
For example, I don't think this works if you don't use the old setup.py build && setup.py install approach.
I had to applied this patch on a clean chroot to be able to build aer successfully
Please, check my PKGBUILD here and see if you can replicate. I know the supported way to install qiskit is with pip, but this should work too.
Sorry I missed your comments here until just now. Yeah our intent is to support any PEP517/PEP518 backend the problem with that diff is I think it might make the pip installation from sdist break.  Like if you create a fresh venv and run pip install --no-binary qiskit-aer qiskit-aer this wouldn't work. I would really like to remove all the pip calls in the setup.py and stop using the python cmake package when the user already has cmake installed.
I guess my other question is does the DISABLE_CONAN env variable not propagate down to the builder calling setup.py?
I came here after noticing all the extra stuff in the qiskit aer wheel. I don't have much to add for suggesting changes that aer could make instead of waiting for scikit-build to be improved, but I just wanted to say that I had to use this patch to get a conda package of aer to build successfully. During package builds, conda configures pip with no remote indexes, so the scikit-build behavior of pip installing cmake fails otherwise.
