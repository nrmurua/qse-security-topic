As part of my work getting a CI system running, the first stage is to have tests running on cloud infrastructure for serial & OpenMP on Linux, macOS and Windows.
I have a fork of QuEST here, which is running an Azure Pipeline on each commit here.
The pipeline is currently building QuEST libraries fine on Ubuntu 18.04, Ubuntu 16.04, macOS 10.14 and macOS 10.13.
But, on macOS it currently falls over at the testing step.  Here is the relevant output:
Build:
Test:
Unfortunately I don't have a mac to test anything locally - but I know that people on the QuEST project do use it with a mac, so hopefully someone will know how to proceed!
I haven't figured out yet what the testing system does with the .so file, but it looks as though the testing framework expects the directory that it's in, after the -Q flag.
Why not pass the actual library rather than the directory it's in?  CMake knows that information, so can for instance pass $<TARGET_FILE:QuEST> rather than ${QuEST_LIB_PATH}.
On Linux, at least, this resolves to
Confirmed: on macOS, $<TARGET_FILE:QuEST> resolves to /path/to/build/QuEST/libQuEST.dylib.
Getting a different error on windows, though:
Any ideas on that front?
In terms of a minimal fix for the library names, see this commit: but essentially just passing in the actual library rather than the directory it's in is sufficient.
I'm unsure if there were unresolved subtleties above, but the unit tests are currently compiling and passing on MacOS CI.
