The ECRGate documentation says it is supposed to implement a RZX(pi.2) gate, which as described in Sheldon et al. PRA 2016 as the pulse sequence
However the current definition of ECRGate is missing the last X gate in its decompostion and is implemented as
which doesn't implement a RZX(pi/2) = (II -1j * ZX)/sqrt(2) gate, it instead implements the unitary (IX - XY) /sqrt(2)
If the ECR is supposed to be implemented as described in Sheldon et al. PRA 2016 it should implement an RZXGate(pi/2).
To make it match the paper definition, one just needs to add the final X gate added to its decomposition definition and update its matrix definition
I agree it doesn't implement RZX(pi/2), that should be fixed in the docs.
But we defined it like this intentionally to remove the post-rotation from the definition. This way the compiler can compile directly to ECRGate and save a pulse. Otherwise there's no point having the ECRGate as the gate you wrote is just a CNOT.
The Sheldon paper doesn't have a "definition" of ECR as far as I can tell, it just says you can build your CNOT using CR(45)-echo-CR(-45)-X.
@ajavadia Then the docs shouldn't say
An echoed RZX(pi/2) gate implemented using RZX(pi/4) and RZX(-pi/4)
For definition I was referring to the papers Fig 1:

yes i'll fix that part of doc. That picture is just the full CNOT.
BTW ECRGate was defined like this (without the post rotation) per Petar Jurcevic suggestion for the purposes of saving pulses when compiling.
The pic is actually RZX(pi/2) rotation (ie equivalent to single-pulse CR in ideal case), you would still need to add additional 1-qubit gates to make it into an actual CNOT.
As long as docs aren't misleading current def is ok.
For what it's worth, I have tried to make sure we keep these definitions consistent in qiskit-experiments like here:
https://github.com/Qiskit/qiskit-experiments/blob/ae19f41e4965d356bc188caa769e37fca9906f53/qiskit_experiments/calibration_management/basis_gate_library.py#L324-L325
