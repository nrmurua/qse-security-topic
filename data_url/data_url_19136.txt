Use the truncated transmon example from PRA 91, 062307 (2015), Eq (16).
This is the primary example for the second-order update.
Depends on #5, #6, #7
Prerequisite for #13
I cleaned up some of my old code for the perfect entanglers a bit and put it in a separate package in https://github.com/qucontrol/weylchamber. That should come in pretty handy when doing this example.
We can decide if we want to implement the chi-states for the PE functional here or in the weylchamber package. The functional itself is already in weylchamber.
I had some difficulties to find suitable parameters that do not give rise to a perfect entangler on input. I used the model from Eq. (16) from Goerz et al., PRA 91, 062307 truncated after the second level. However, the optimization works fine in the current version, even without second order Krotov.
I pushed an updated version of the notebook with some comments. Most importantly: don't use the Bell states in the notebook, but just call gate_objectives with gate='PE'. That should do the right thing internally.
I'd consider finding a guess pulse amplitude that mimimizes concurrence (it's just one parameter, so you can run a quick simplex optimization, or even just a systematic scan - create a plot of amplitude/concurrence and read off the minimum).
Maybe we'll observe the second order being necessary if we don't truncate to two levels? We'll definitely need this example to demonstrate second order; it's the only example that does.
I addressed all of the above remarks in my last commit and together with the implementation of the second-order contribution this example might be almost done. Since it is not clear to me to which extend we should mention or explain the second order in a reasonable way within the notebook, somebody (maybe @goerz) should check the current version.
