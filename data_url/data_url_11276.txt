A single-particle basis change matrix can easily be produced from a QuadraticHamiltonian instance by calling the method diagonalizing_bogoliubov_transform. It's not clear to me, however, how one could easily produce the necessary basis change matrix to describe a Hartree-Fock state. @babbush had some pointers on this:
The challenge is simply to write a routine which, given a FermionOperator, computes the canonical orbitals by diagonalizing the Fock matrix and then expresses those orbitals as a linear combination of the original basis. For the case when one is just interested in state preparation, one is only concerned with constructing the occupied orbitals and so one does not need to diagonalize the Fock matrix and can instead use a variety of numerically cheaper methods.
After previous discussions we had, I realized I was actually ignoring the somewhat obvious solution to this problem, which is that PySCF, unlike other electronic structure codes, makes it very easy to install custom Hamiltonians and ask for solutions under various methods.  We actually only need to add one interface routine to our PySCF plugin that follows the example here:
http://sunqm.github.io/pyscf/advanced.html
under "custom Hamiltonian" and this will be essentially satisfied for the time being.  For reasonable sized systems it also provides a path for checking CCSD or DMRG energies in a relatively straightforward way.  The only thing this probably doesn't do is take advantage of known structures when we pass a diagonal Hamiltonian for example.
Note that this should really be an issue in OpenFermion-PySCF for the reason that Jarrod mentioned: in practice we will compute the molecular orbitals using PySCF.
