I think we need something like qibo.set_precision('complex64') function which provides a programmatic mechanism to switch between simple and double precision simulation.
@scarrazza, do you have any idea on how this could be implemented? I guess that we would like something similar to the old tf.enable_v2_behavior(). This was possible to call right after importing tensorflow and if it was called later it was raising an error.
I tried adding a set_precision method that modifies config.DTYPE in our __init__ however it only works if I remove the imports from the __init__. I am not sure how to make this work including the imports. I would like to have this feature because it would simplify benchmarks a lot.
I think one possibility is to encapsulate the variables declared in config.py in a class instance and make this class a singleton object allocated in the init which can be modified and imported by all modules using its current state.
