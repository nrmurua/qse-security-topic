In multiple places, the assumption is currently made that there are at most 64 TTL channels:
A first step would be to at least leave these channels alone â€“ currently, just looking at the higher channels in a funny way in the UI brigs them into an interesting state (patch WIP).
The Rust runtime will probably panic or mask the bits. (?)
Both. It panics with debug assertions on, and masks with debug assertions off.  We have them on currently as they shouldn't slow the runtime down too much.
We will soon be implementing hardware to allow 108 TTL channels, so it would be good to have this fixed in the near term.  Based on the number of available pins on the KC705, going to a 256-bit-wide moninj seems like it should be more than sufficient.
Aside from the moninj system, though, it seems one should be able to add RTIO channels without bound (other than hardware constraints), no?
It took me longer than expected to find a few quiet minutes, but I've put up a PR that at least avoids corrupting the state from the GUI and when sending updates.
@sbourdeauducq can we move to make the moninj capable of more lines, e.g. 128 or 256?  If this is coupled with #603, it should be possible to mitigate GUI issues from having additional TTL lines.
