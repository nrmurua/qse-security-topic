OpenBLAS hard-compiles the number of cores available at compile time as the max number of threads.
In an automated virtualized build environment, the number of cores is usually rather small, resulting in an OpenBLAS which does not scale to the number of available cores at runtime.
Spack (and Linux distros) for example have an explicit detection for a virtualized runtime and set NUM_THREADS=64. See also https://github.com/xianyi/OpenBLAS/wiki/faq#usage-1
Oh, good catch! So, should we just build OpenBlas with NUM_THREADS=128 then? Unfortunately, the FAQ doesn't say anything about the amount of memory allocated.
Why not just stick to the 64 distros seem to use? If someone has a 128 core system they probably have specialized BLAS libraries anyway and will not be using the toolchain script to build an extra one.
For the record: I've verified this with Debian, Ubuntu and openSUSE: all of them set it to 64 as a default.
Alright then, 64 it is :-)
