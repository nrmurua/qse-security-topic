From #856 (comment)
That's a different issue than serwb. Did you install our proxy bitstreams conda package?
https://anaconda.org/m-labs/bscan-spi-bitstreams
I follow these instructions verbatim to create a new conda environment for every pull from master. Proxy bitstreams conda package is missing.
I follow these instructions verbatim to create a new conda environment for every pull from master. Proxy bitstreams conda package is missing.
OK and does installing bscan-spi-bitstreams manually solve the problem?
Ah, yes. @enjoy-digital also saw that one but did not report it yet. #899
As for bscan-spi-bitstreams, it is debatable whether it should be included in artiq, artiq-dev, the board-specific packages, or openocd. I'll let @jordens make that decision.
@jbqubit What is the output of conda info?
That's an old openocd. The new one depends on the proxy bitstreams. whitequark needs to retighten the dependency.
#892
So what should I do to test that this fixes artiq_flash?
Install the recent openocd, see https://anaconda.org/m-labs/openocd. Try conda install  openocd=0.10.0+git2
I followed these instructions this afternoon to create a new conda environment. It pulled in the new openocd in the process.
This is a bug in artiq_flash that I've fixed long ago. Let me kick off a new build for you.
I'm sure I'm running artiq_flash from master. I can add 1/0 to source and make it die.
Sorry, I forgot to push. ebd02c4
Thanks @whitequark. I can now flash using artiq_flash.
Spoke too soon... AMC works but RTM does not. You got the path wrong for location of RTM .bit.
Also, folder names for builds are inconsistent.
@jbqubit RTM FPGA bitstream is not loaded from flash anyway right now, you have to invoke openocd manually. This will be fixed when the bitstream load is implemented.
@jbqubit I've fixed artiq_flash for RTM FPGA, but only for --srcbuild for now, since I'm working on that code. You can use this as a stopgap.
@whitequark Build output for RTM doesn't follow same directory hierarchy other designs.  So, artiq_flash --srcbuild ./artiq_sayma_rtm -t sayma_rtm load fails line after this one:

Then programmer.flash_binary(*config["bootloader"], bootloader_bin) fails since 'artiq_sayma_rtm/software/bootloader/bootloader.bin' doesn't exist.
Default action for RTM shouldn't be default="proxy gateware bootloader firmware start" since there is not bootloader. User ought not have to know this.
And more bugs... Did you test this before pushing?
Also, now playing with artiq_flash it occurs to me that there should just be a single -t sayma. If RTM isn't present report its absence and program AMC alone. For those who'd like to debug the system by, say, repeatedly re-flashing RTM use openocd.
Accessing AMC hardware without the RTM connected is not supported.
Accessing AMC hardware without the RTM connected is not supported.
That's fine. And why I suggested having a single -t sayma option for artiq_flash.
There will be one option after my last round of artiq_flash changes.
@whitequark Did you try building .bit from scratch and then using artiq_flash? From status 3 days ago things were far from seamless.
No. It doesn't really matter because of the rewrite I mentioned.
Please make an Issue for your rewrite. Please discuss adding it to ARTIQ 4.0 with @sbourdeauducq since this is a Sayma 1 dependency.
It's #813.
@jbqubit
@whitequark Build output for RTM doesn't follow same directory hierarchy other designs. So, artiq_flash --srcbuild ./artiq_sayma_rtm -t sayma_rtm load fails line after this one:
artiq/artiq/frontend/artiq_flash.py
gateware_bit = artifact_path("gateware", "top.bit")
By the way, this is your error, not mine. The line you are highlighting is from the "gateware" action, not "load" action, so it could not have possibly be executed after running the command you mention in the comment. And in fact that command works, I just verified it.
gateware_bit = artifact_path("gateware", "top.bit")
This line appears three times: once in "gateware" and twice in "load" action. 
You linked to line 300 specifically.
You linked to line 300 specifically.
Ya, that was a mistake on my part. I meant to tag one of the later identical lines.
@whitequark Did you try building .bit from scratch and then using artiq_flash? Things were far from seamless when I tried last week.
Yes, I already said that I did and it works...
