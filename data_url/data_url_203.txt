IQM machine names are represented by arbitrary strings and can contain spaces. Machine names are interpreted as QPU architectures during compilation and later when running against a particular station. nvq++ should be able to handle such machine names.
The program is successfully submitted for execution
Not a regression
Most probably this can apply to machine names from other vendors as well, so --*-machine CLI arguments for remote rest QPUs should be handled as quoted strings.
@kukushechkin  can you check please if this will resolve this issue?
This will wrap argument of --iqm-machine with " inside PLATFORM_EXTRA_ARGS
@Yaraslaut no, this doesn't seem to work:
Oh, right. So i tested a bit further and it seems that spliting of variables from configuration side is working alright,  see: https://godbolt.org/z/eP6jraz9v
i think you can get some info in runtime with CUDAQ_LOG_LEVEL=info,debug ./example
@Yaraslaut @kukushechkin - please take a look at the draft PR #1059 and let us know if it works for you. I'm keeping it as draft for now because I'd like to get your feedback on the proposed solution before we commit to this approach.
Thanks @bmhowe23 for the update, I can not test it unfortunately, @kukushechkin should be able though
@bmhowe23 @Yaraslaut I've checked the pr-machine-name-spaces branch and it seems to work as expected compiling like this: nvq++ -g -v -target iqm --iqm-machine "Adonis Variant" -v docs/sphinx/examples/cpp/providers/iqm.cpp -o iqm_example (machine name should be quoted). Verified cases:
