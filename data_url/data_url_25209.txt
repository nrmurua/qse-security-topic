Some of the executors may require the use of credentials that the user doesn't want to expose. This can, unfortunately, be somewhat trivial to do by accident if (for instance) the user shares their ct.get_config() like when opening a GitHub issue.
I was checking out pydantic-settings, and it seemed like a potentially nice option for handling config variables that require heightened security since it supports placing secret values in separate files, as noted here. This would mean that if a user shares their ct.get_config(), they'd only be sharing the path to this file, rather than the contents itself. It could be worth considering if it'd be worthwhile to use pydantic-settings for config handling, but if not, feel free to close! I saw that pydantic was already a requirement.
No response
