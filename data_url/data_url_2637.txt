There is some leftover code throughout cirq that manually performs the recursion/iteration commonly associated with decomposition, instead of delegating this task to cirq.decompose. Such code should be updated.
This applies to almost every instance of cirq.decompose_once in the code base that's not in tests or the documentation.
For example, cirq/circuits.expand_composite.py uses protocols.decompose_once (the internal name for cirq.decompose_once) in a recursive way that should instead be written using protocols.decompose.
This issue is a bit advanced for a "good first issue", in that it requires carefully reasoning about recursion in the context of existing code. But it doesn't require much knowledge of how cirq works other than these specific methods and the code in the individual files so I've marked it such.
Getting the following diffs when I try to replace the decompose_once in qasm_output.py, mostly in what gates names are included in comments.
Please let me know if this is acceptable.
E           // Generated from Cirq!
E
E           OPENQASM 2.0;
E           include "qelib1.inc";
E
E
E           // Qubits: [q0, q1, q2, q3, q4]
E           qreg q[5];
E           creg m_xX[1];
E           creg m_x_a[1];
E           creg m0[1];  // Measurement: x?
E           creg m_X[1];
E           creg m__x[1];
E           creg m_multi[3];
E
E
E           z q[0];
E           rz(pi0.625) q[0];
E           y q[0];
E           ry(pi0.375) q[0];
E           x q[0];
E           rx(pi0.875) q[0];
E           h q[1];
E           cz q[0],q[1];
E
E           // Gate: CZ**0.25
E           u3() q[0];
E           u3() q[1];
E           rx(pi0.5) q[0];
E           cx q[0],q[1];
E           rx(pi0.375) q[0];
E           ry(pi0.5) q[1];
E           cx q[1],q[0];
E           rx(pi*-0.5) q[1];
E           rz(pi0.5) q[1];
E           cx q[0],q[1];
E           u3() q[0];
E           u3() q[1];
E
E           cx q[0],q[1];
E         +
E         + // Gate: CNOT**0.5
E           ry(pi-0.5) q[1];
E         -
E         - // Gate: CZ0.5
E           u3() q[0];
E           u3() q[1];
E           rx(pi0.5) q[0];
E           cx q[0],q[1];
E           rx(pi0.25) q[0];
E           ry(pi0.5) q[1];
E           cx q[1],q[0];
E           rx(pi-0.5) q[1];
E           rz(pi0.5) q[1];
E           cx q[0],q[1];
E           u3() q[0];
E           u3() q[1];
E         + ry(pi0.5) q[1];
E
E         - ry(pi*0.5) q[1];
E           swap q[0],q[1];
E         +
E         + // Gate: SWAP0.75
E           cx q[0],q[1];
E           ry(pi*-0.5) q[0];
E         -
E         - // Gate: CZ0.75
E           u3() q[1];
E           u3() q[0];
E           rx(pi0.5) q[1];
E           cx q[1],q[0];
E           rx(pi0.125) q[1];
E           ry(pi0.5) q[0];
E           cx q[0],q[1];
E           rx(pi-0.5) q[0];
E           rz(pi0.5) q[0];
E           cx q[1],q[0];
E           u3() q[1];
E           u3() q[0];
E         -
E           ry(pi0.5) q[0];
E           cx q[0],q[1];
E         +
E           h q[2];
E           ccx q[0],q[1],q[2];
E           h q[2];
E           ccx q[0],q[1],q[2];
E         +
E         + // Gate: CCZ0.5
E           rz(pi0.125) q[0];
E           rz(pi0.125) q[1];
E           rz(pi0.125) q[2];
E           cx q[0],q[1];
E           cx q[1],q[2];
E           rz(pi-0.125) q[1];
E           rz(pi0.125) q[2];
E           cx q[0],q[1];
E           cx q[1],q[2];
E           rz(pi-0.125) q[2];
E           cx q[0],q[1];
E           cx q[1],q[2];
E           rz(pi*-0.125) q[2];
E           cx q[0],q[1];
E           cx q[1],q[2];
E         +
E         + // Gate: TOFFOLI**0.5
E           h q[2];
E           rz(pi0.125) q[0];
E           rz(pi0.125) q[1];
E           rz(pi0.125) q[2];
E           cx q[0],q[1];
E           cx q[1],q[2];
E           rz(pi-0.125) q[1];
E           rz(pi0.125) q[2];
E           cx q[0],q[1];
E           cx q[1],q[2];
E           rz(pi-0.125) q[2];
E           cx q[0],q[1];
E           cx q[1],q[2];
E           rz(pi*-0.125) q[2];
E           cx q[0],q[1];
E           cx q[1],q[2];
E           h q[2];
E         +
E           cswap q[0],q[1],q[2];
E         +
E         + // Gate: ISWAP
E           cx q[2],q[0];
E           h q[2];
E           cx q[0],q[2];
E           rz(pi0.5) q[2];
E           cx q[0],q[2];
E           rz(pi-0.5) q[2];
E           h q[2];
E           cx q[2],q[0];
E
E           // Gate: W(0.125)^0.25
E           u3() q[1];
E
E           measure q[0] -> m_xX[0];
E           measure q[2] -> m_x_a[0];
E           measure q[1] -> m0[0];
E           measure q[3] -> m_X[0];
E           measure q[4] -> m__x[0];
E           measure q[2] -> m_x_a[0];
E           measure q[1] -> m_multi[0];
E           x q[2];  // Invert the following measurement
E           measure q[2] -> m_multi[1];
E           measure q[3] -> m_multi[2];
E           // Dummy operation
E         +
E         + // Operation: DummyCompositeOperation()
E           x q[0];
Based on the errors, you probably forget to set allow_partial_czs=False somewhere. If you create a PR I can spot where the mistake is.
I think this can be closed now. I don't see any non-test non-documentation uses of decompose_once anymore.
Or is this issue supposed to cover decompose_once_with_qubits too?
You're right, I think this is done. Good work!
