In some cases, programs are combined like so:
This is used in forest-benchmarking for example. When the program is an object of a significant size, I observe exponential cost to this operation.
The timing of this operation is below. Extrapolating from n=2, n=80 should take 7.2s
sum uses the __add__ method, so it's not taking advantage of the optimizations we implemented for #1647. A loop that uses the += operator should be faster. Alternatively, you could use reduce to get a similar one liner:
I'll explore ways to optimize this path further, but hopefully this is helpful in the interim.
4.0.1 includes optimizations from quil that should improve the performance of in-place addition even further.
