For exceptions where an operation is attempted between an numpy.int32 and numpy.int64, there is no information (i.e. line number in my code) where the error occurs. Is there a way to enable more stacktrace information to find this error? Below is an example:
For exceptions where an operation is attempted between an numpy.int32 and numpy.int64, there is no information (i.e. line number in my code) where the error occurs.
Most operations between np.int32 and np.int64 will result in the desired effect i.e. promotion. However, you've managed to find a bug in the compiler where that doesn't happen. This does not indicate a bug in your code (at least, this backtrace doesn't).
To fix this, I will need the specific code that causes the crash above.
My code begins with this initialize-test.py EnvExperiment. Before line 52, there is mostly just variable declaration, which has compiled fine in the past. On line 52 is a method rabi.get_photon_windows(), which I have also run and tested with no trouble.
Therefore, line 58 seems to be where the trouble begins. On this line, rabi.get_time_to_detect() is a call to the file rle/rabi.py. Lines 79 to 114 hold the relevant code, which none or little of which has code which may cause this issue.
The final destination is the method register_rising_in_window() in the file rle/pipistrello.py, and can be found on line 216 to 245.
Sorry that my methods pass many variables along the way (I have been running into errors where "variables might be uninitialized within closures"). My thoughts are that the error is most likely occurring somewhere in rabi.py, possibly in the record function which I use to store results from my experiment into an array. I can also reproduce the code here in this thread, but I didn't want to cause too much clutter.
The rotate() method of rabi.py may also be the culprit.
After some debugging, I have narrowed it down to the rotate() method:
I have avoided this error by changing the rotate function to the following:
If I change the code to use neg_one = np.int64(-1), I get the error above, so I suppose it is related to the type needed for array access.
