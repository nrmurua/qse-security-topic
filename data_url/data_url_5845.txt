I'm getting the following status everytime I try to run a job using PulseSimulator from the real backend ibmq_armonk.
This is the code I'm trying to run:
For some context on the schedules I'm trying to send, this is the code I used to complete exercise 4 from IBM Quantum Challenge. It worked perfectly fine when running on the real device ibmq_jakarta, but now that we don't have access to it, I want to run it locally with a simulator. The code that I'm running to set up the schedules is the exact same as in the notebook here: Transmon qubit.
As I said, this code worked perfectly during the channel, so I guess the problem now is while setting up the backend to run it.
The job should run correctly and return its results; as it did during the challenge using ibmq_jakarta.
I'm not sure if this issue is with how I'm trying to set up the backend or if there is some issue with the PulseSimulator itself. I made sure to follow Qiskit's documentation and tutorials to set up my backend, but there's still the possibility that I messed up while doing it. Let me know if I just made some mistake and there is no issue at all.
@epelaaez thanks for the report.
Could you distill a minimal example from the notebook you linked to? There's a lot going on in that notebook and also the error message in your post doesn't provide any insight. It would be very helpful for getting started identifying the issue.
Sure, let me know if this notebook helps.
Sorry to be a pain, but I'm more looking for a single small block of code you can copy into a comment in this thread.
No problem at all. This should work.
Okay so the issue is that this schedule has a set frequency instruction, which isn't supported. I think the explicit error associated with this wasn't being raised because I don't think it gets run unless backend.run(qobj).result() is called.
The set/shift frequency instructions are not supported by the pulse simulator - a related issue is #736 . I'm going to put an explicit error into the code explaining this.
Oh okay, thanks for the information. Is this feature going to be implemented in the future? Or is there another way I can run set frequency instructions in a simulator rather than a real device?
While it's something that should be implemented at some point, there aren't any plans for doing so currently, as it will likely be somewhat involved and for now the only work being done on the pulse simulator is maintenance.
A way to bypass this issue as a user is to manually add an oscillation to the pulse envelopes. E.g. if the channel's LO frequency is w,  but you want to set it to v for a given pulse (or pulses), convert the pulse to an explicit WaveForm specified in terms of a sample list, then multiply the sample array exp(i(v-w)t), where t is the array of associated times. I may be missing some book keeping here but some version of this should work.
Thanks!
