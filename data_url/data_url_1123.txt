In PauliSum Collector when doing the basis transformations with

The gates that get returned are cirq.SingleQubitClifford(...) which won't play nice with the serializers. A quick fix is to just add a cirq.decompose around the result of pauli_string.to_z_basis_ops(), but I wasn't sure if people might have other opinions ?
xref #2781
Just to clarify this is what you are facing, right?
Throws an error
While
does the trick.
To answer your question: cirq.decompose happens to compile to the gateset that is compatible with the SYC_GATESET serializers, so today that seems to be your best bet.
Thoughts:
I think 3 and 4 would be my preference here.
@viathor @dstrain115 @dabacon ?
Would be good to arrive at a decision before 1.0 in case there are breaking changes necessary.
I don't know how well-used PauliSumCollector is
We should just be able to silently convert these into PhasedXZGates if necessary though.  Would that satisfy this bug?
It looks like that is option 5 that Balint suggested above.  I don't think option 3 is a good idea, since that could mess with moments during serialization, which would not be expected.
@verult Do we want to decide on what to do for the Clifford gates as part of the Google gateset refactor?
In the device refactor, the principle we've followed for arbitrary single qubit gates (e.g. cirq.H) is to not accept them directly and instead have them go through a transformer, so that parameters of PhasedXZGate, a device native gate, are clear to the user, and the circuit becomes serializable:
So I'm leaning towards leaving it as is.
