I have followed all the steps on the installation guide. First installed Tensorflow (crashed 3 times while building, but build completed in the end), everything works on the python shell. Then I installed tensorflow quantum, wheel file got built correctly, and all tests passed.
But when I try to include it in the python shell, it raises an error _tfq_simulate_ops.so: undefined symbol: _ZN10tensorflow15OpKernelContext5inputEN4absl14lts_2020_02_2511string_viewEPPKNS_6TensorE

More issues, with more files. Shared object files. Restarting the python kernel gets me stuck here. This is became a recurring issue for some time. Reinstalling the library led to the pauli_sum_pb2 issue coming back.

I'm not sure the exact reason for you issue, but I've had similar problems when installing on an ubuntu WSL (everything installed error free, then crashed in the shell). I was able to resolve it by deleting and recreating the virtual environment (I think there was version conflicts with packages I had pre-installed that didn't throw an error). It may not be the same situation as yours, but it might be worth a shot.
Didn't work for me, I deleted everything and reinstalled using the same wheel file. I am on Ubuntu and using conda environments. The issue seems to be more fundamental though, the name pauli_sum_pb2 is never defined in the codebase, take a look here. But it's being called.
There has to be some TFQ proto magic that is making this work for everyone, I don't know what it so I can't debug yet.
That's unfortunate that the deletion and pip installing didn't work. That's really as far as I can help (since I'm not a TFQ developer), but you can see the proto files (https://github.com/tensorflow/quantum/tree/master/tensorflow_quantum/core/proto) and work from there if that's the source of your problem. I don't know if this helps you at all, but this is the built pauli_sum_pb2.py file on my machine (for TFQ 0.5, but not the nightly build).
Okay, that was not the bug. The major issue was a missing symbol.

I am editing the issue title to correctly reflect the problem.
Hi @AnimeshSinha1309 thanks for raising the issue and thanks for coming out to the sync today. Would you be able to provide a little more detail on which OS you are using as well as which version of python , tensorflow and other related libraries you have on your system while installing so that we can try to reproduce the error on our end ?
Thanks Michael. I am working on Ubuntu 20.04, Python 3.8.10, Tensorflow 2.4.1. The rest of the libraries were installed in a virtual environment from requirements.txt.
It might be an issue with the many environments, since there were several builds of Tensorflow on Conda and Pip. I am working off a fresh install now, but Tensorflow is taking days to compile.
I didn't build Tensorflow from source, just downloaded from pip. Things work now. I installed Tensorflow in many rounds, the build process cached some actions, maybe I had used incorrect compilation flags in some of them.
Anyways, closing this issue, it had something to do with the Tensorflow version and build flags for sure. Thanks for the help.
