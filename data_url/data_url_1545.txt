Description of the issue
Currently, Job.results() throws a RuntimeError when the job execution exceeds the timeout_seconds wait time. It would be more accurate to throw a TimeoutError instead.
see cirq-ionq/cirq_ionq/job.py:

How to reproduce the issue
RuntimeError                              Traceback (most recent call last)
/tmp/ipykernel_6204/2129298043.py in 
----> 1 job.results(timeout_seconds=0.01)
~/anaconda3/envs/my-env/lib/python3.7/site-packages/cirq_ionq/job.py in results(self, timeout_seconds, polling_seconds)
199                 raise RuntimeError(f'Job failed. Error message: {error}')
200             raise RuntimeError(
--> 201                 f'Job was not completed successful. Instead had status: {self.status()}'
202             )
203         # IonQ returns results in little endian, Cirq prefers to use big endian, so we convert.
RuntimeError: Job was not completed successful. Instead had status: ready
Cirq version
0.12.0
Thanks @guenp !  PR out to fix this.
This should be fixed in the prerelease version of Cirq.
