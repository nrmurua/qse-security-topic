When using multiple time dependant functions (i.e. H = [H0,[H1,H1_coeff],[H2,H2_coeff],...]) the functions in qutip.correlations produce incorrect results. A couple observations:
I've attached some code demonstrating this (3 level atom and a laser) and some images of the plots produced.
corrtest.txt
norder2
corrorder2
norder1
corrorder1
I'm assuming this is to do with how the Hamiltonian is propagated, maybe only one of the functions is being shifted in time? Any chance of a fix on this? A workaround is to make the entire Hamiltonian a single time dependant function but obviously this isn't ideal.
Hi taw181,
Thank you for reporting the bug.
The patch will probably take some time to make and publish.
A work around for now would be to use string based coefficient. Use (t) instead of t in the string, there is another bug in the string shifting code.
Self notes
The function _transform_L_t_shift of correlation.py has at least 2 bugs:
Using class is safer and can be used safely in parallel.
Could/should this shift capacity be made part of QobjEvo?
Brilliant, thanks. I'll try it again with the string method.
