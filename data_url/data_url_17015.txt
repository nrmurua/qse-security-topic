When creating a real or imaginary plot with both positive and negative values, the origin axis is not centered.

Create a plot_state_city plot that has both positive and negative values.
On a previous version of plot_state_city (#1540), the origin axis does not appear to have an offset.

Currently looking through the older version to try and identify the source of change.
This doesn't appear to be a bug that's been introduced recently, as it is actually also present in the second figure you show. It's just that it rears its ugly head the most when there is only one qubit.
If you look closely at these three images, you can see that the plane is always flush with the back-right columns, while there is a constant offset on the front-left:

The question is, how should it actually look?
I can make tight on all sides:

Or have a constant offset on all sides s.t. the one qubit case is flush with the figure borders (and thus it should never go over for all cases):

Or should I try to make it adjust automatically such that it is always flush with the figure border no matter the number of qubits?
EDIT: Maybe letting the plane extend to the axes limits on all sides is the most sensible using get_xlim() and get_ylim().
On a different note, doesn't it look strange that for certain columns (even though they are upwards facing), it looks like the plane is drawn over them?
Looking at this example, you can see the column in the front has a solid face, while on all others the facecolor changes where the plane ends:

On a different note, doesn't it look strange that for certain columns (even though they are upwards facing), it looks like the plane is drawn over them?
If #3211 is not fixing this issue, do you mind opening a new bug about this? So we dont lose track of it when #3211 gets merged.
On a different note, doesn't it look strange that for certain columns (even though they are upwards facing), it looks like the plane is drawn over them?
If #3211 is not fixing this issue, do you mind opening a new bug about this? So we dont lose track of it when #3211 gets merged.
Done (#3315)
