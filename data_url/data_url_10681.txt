Current Problem
I have a question about TilingComposite. (It‚Äôs really cool, btw). I create a composite like so
self.tiling_composite = TilingComposite(DWaveSampler(), m, n, t)
then I create some RAN1 (or k) problems on the tiles that are complete (see figure below). So I get a BQM,
Unfortunately, when I try to self.tiling_composite.sample(bqm). or ...sample_ising(h, J), the  ‚Äúbqm does match the sampler‚Äôs structure‚Äù. I‚Äôm guessing this happens because the tiling ignores certain regions with inactive qubits that would not provide a regular tiling if included.
Proposed Solution
Give TilingComposite the ability to sample from BQMs created from the tiling structure it provides.
Alternatives Considered
One solution: I could ‚Äúbuff out‚Äù the BQM by adding all the missing qubits that didn‚Äôt get used in the tiling.
Also, I tried to use Embedding composite in a couple of ways and was stymied by
AttributeError: 'EmbeddingComposite' object has no attribute 'embeddings' and  ValueError: no embedding found`
The latter seems odd, given that the embedding is already known based on the tiling and the bqm.
I think this is confusion about what the Tiling Composite does. The tiling composite pretends to just be a single tile so
would work but trying to work with the underlying graph would not. You could probably send that generated bqm to the child though
if for some reason you just want the working tiles
And I prefer next(iter(s)) myself, but ymmv. üòÑ
I see, the errors I was seeing make sense now. Thanks!
As a final note, what was the functionality you wanted to see? We could maybe break it out into utility function - feel free to make a feature request issue!
