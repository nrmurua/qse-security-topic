qiskit                        0.23.3
qiskit-aer                    0.7.3
qiskit-aqua                   0.8.1
qiskit-ibmq-provider          0.12.0
qiskit-ignis                  0.5.1
qiskit-rng                    0.2.1
qiskit-terra                  0.16.4
python --version
Python 3.8.1
cat /etc/os-release
NAME="CentOS Linux"
VERSION="7 (Core)"
ID="centos"
ID_LIKE="rhel fedora"
VERSION_ID="7"
PRETTY_NAME="CentOS Linux 7 (Core)"
ANSI_COLOR="0;31"
CPE_NAME="cpe:/o:centos:centos:7"
HOME_URL="https://www.centos.org/"
BUG_REPORT_URL="https://bugs.centos.org/"
I am getting the same transpile optimization_level=3 error as here:
#5627
But I have updated to terra==0.16.4
More notes here:
https://qiskit.slack.com/archives/C7SS31917/p1612935056097500
backend = provider.get_backend('ibmq_ourense')
noise_model = NoiseModel.from_backend(backend.properties())
qc = transpile(qc,optimization_level=3,
backend_properties=backend.properties(),
basis_gates=noise_model.basis_gates,
coupling_map=backend._configuration.coupling_map)
it is a variational circuit, and if I only allow the parameters to evolve to the circ1 state (which has successfully transpiled,  circ1_untran(spiled) is before transpilation), the transpile optimization_level=3 succeeds (this is circ1).
If I allow the variational parameters to evolve further, eventually transpile will fail.
File "/home/jmlarkin/.conda/envs/IQS/lib/python3.8/site-packages/qiskit/transpiler/runningpassmanager.py", line 311, in iter
raise TranspilerError("Maximum iteration reached. max_iteration=%i" % self.max_iteration)
qiskit.transpiler.exceptions.TranspilerError: 'Maximum iteration reached. max_iteration=1000'



The circuit qasm definitions are here
circ1.qasm.txt
circ1_untran.qasm.txt
circ2_untran.qasm.txt
Expected behavior is ability to transpile the circuit with the above settings.
Not sure?
Thanks for reporting this @jasonlarkin . Can you clarify which circuits you are using as the input to your call to transpile? (Some example code demonstrating how to build your circuits, and how you're trying to transpile them would be really helpful.) Also, can you check which gates are listed in backend.configuration().basis_gates?
