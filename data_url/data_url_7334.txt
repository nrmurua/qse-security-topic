It'd be nice to have a solver which can calculate the unitary time-evolution operator which also obeys the Schroedinger equation i \hbar U'(t) = H(t) U(t)
I agree, but looking at the code of https://github.com/qojulia/QuantumOptics.jl/blob/master/src/schroedinger.jl I think its essentially already supported since:
computes dpsi = -im * H * psi, the only issue is that we essentially want psi to not be a Ket... right?
the only issue is that we essentially want psi to not be a Ket... right?
Right! We could loosen the type constraints of the required functions, or add another dispatch for operators.
I guess we don't want to loosen the constraints since depending on whether the input is of type Ket or Bra we order them in the evolution differently so another dispatch would make more sense.
There are two potential ways I can see this working, I don't know which is better.
In both cases we dispatch to:
What I meant was loosing the type constraints on the dispatch for Ket only, which would leave the dispatch to Bra unchanged. But yes, another dispatch makes sense.
I would go with 2. suggestion, setting T<:Union{Operator,StateVector} since otherwise you essentially copy-paste the entire function. The same goes for schroedinger_dynamic. Note that you will have to replace things like this 
Ah! I didn't realise that it could be done that way but of course it can, I'll do that then and open the dispatch on Ket to operators too.
Added with #275
