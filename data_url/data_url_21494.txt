Starting ARTIQ-7+, should we remove dependency on microscope from ARTIQ, or keeping it and include it by adding it back to our Nix shell via our flake.nix?
Currently, this should be considered an issue that is blocking only the development environment for Metlino and Sayma, but not the production environment (e.g. CI by Hydra over m-labs/nix-scripts).
From my experience, microscope was especially useful for debugging issues such as Metlino GTH (#1424), or implementing features such as DRTIO on Kintex Ultrascale back then (#563). Since such issues haven't reappeared or have little relevance in the current production environment, microscope should no longer be required for instrumenting GTH transceivers or other modules.
On master, remove all imports of microscope.
On the other hand, microscope is proven useful in detecting symptoms of erroneous logic designs (e.g. timing, cross-domain crossing). While the instrumentation code does not need to appear on the upstream Git remote, any developer who is prototyping new core designs or fixes would be interested in using microscope in the development environment of ARTIQ. AFAIK "Nix Flakes", which is to be introduced for ARTIQ-7, would be used by developers in most cases, so it makes sense to include this logic analyser Python module in devShell, similar to m-labs/nix-scripts.
On master, add microscope via pkgs.fetchFromGitHub directly, and include it as buildInputs for devShell.x86_64-linux in ./flake.nix.
Since misoc also has imports of microscope for certain cores on certain Sinara platforms (i.e. Metlino, Sayma), if we choose solution 1 we must also consider removing microscope over there as well, and then update the Flake lock here on ARTIQ-7+.
Add it to devShell. It's just a small module and it can prove itself useful again later.
