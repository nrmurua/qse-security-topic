Although this library is focused on operations (rather than state evolution), it would be nice to have some support for state-based calculations (e.g., @dieris has expressed interest in this functionality)
@marcusps What do you have in mind?
Stabilizer states can be represented by stabilizer group generators (Pauli ops), and the library can currently handle Clifford group transformations of Pauli ops.
We probably just need a StabilizerState type that wraps the Pauli generators (and define a kron between StabilizerState that does almost nothing aside from appropriate identity padding), and define Clifford * StabilizerState to be the application of Clifford to each of the generators of the stabilizer group.
Finally, the expectation of a Pauli operator under the stabilizer state should be easy to compute without a matrix representation (but need to think of the details).
I think that is all Diego was after -- computing the "Pauli bars" for a state without the matrix representation.
