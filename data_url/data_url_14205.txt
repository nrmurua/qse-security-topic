When reading a qasm file with containing a sx gate, a QASM2ParseError error is thrown:
QASM2ParseError: "test.qasm:4,0: 'sx' is not defined in this scope"
It would be expected that the qasm file can be read.
No response
Strictly, we nowadays treat this as a bug in the exporter rather than the importer - according to the OQ2 spec, there's no definition of sx in qelib1.inc, and the new OQ2 parser is respecting that, but the exporter pretends as though there is.  That said, we haven't got a clean setup for managing the header files associated with our exports yet.
In the mean time, you can get the behaviour you're expecting by using the "legacy" mode of the new parser.  In particular, this should work for you:
You probably only need to specify the custom_instructions item of those really, but the include_path and custom_classical should make the behaviour fully compatible with the QuantumCircuit.qasm() export, even in some very unusual cases.
Strictly, we nowadays treat this as a bug in the exporter rather than the importer - according to the OQ2 spec, there's no definition of sx in qelib1.inc, and the new OQ2 parser is respecting that, but the exporter pretends as though there is. That said, we haven't got a clean setup for managing the header files associated with our exports yet.
In the mean time, you can get the behaviour you're expecting by using the "legacy" mode of the new parser. In particular, this should work for you:
You probably only need to specify the custom_instructions item of those really, but the include_path and custom_classical should make the behaviour fully compatible with the QuantumCircuit.qasm() export, even in some very unusual cases.
Thanks a lot for the clarification and the mentioned work-around. Maybe I am overlooking something, but isn't there a sx definition in qelib1.inc -> gate sx a { sdg a; h a; sdg a; }? Copied from here.
