This is a followup to PR 965.
List arguments to electrons don't work if they have dependencies specified by call deps. Consider the following snippet
The expression concatenate_numpy_arrays([arr1, arr2]) cannot be evaluated because Covalent decomposes this electron into two electrons:
The collection task fails for the following reason.
During execution, arr1 and arr2 are returned to the dispatcher encoded as TransportableObjects. The collection task interchanges the order of encoding and list construction and returns a single TransportableObject encoding the list:
The collection task's executor needs numpy installed to decode arr1 and arr2 into numpy arrays. However, as of #965 the collection node inherits concatenate_numpy_array's executor but none of its other metadata, such as pip deps.
The issue addressed by that PR is caused by collection nodes inheriting file transfer deps from the main task. The patch addresses this by removing all call_before and call_after deps, including those that might needed for the collection node's execution.
A more accurate fix would be to only filter out the calldeps generated by File Transfers while leaving the other deps intact. There are several ways to do this. For instance:
