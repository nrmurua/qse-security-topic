Environment:
Python 3.7
tensorflow = 2.1.0
tensorflow-quantum = 0.3.0
Cirq = 0.7.0
Issue: When running larger (N = 12) variational circuits cirq.Simulator() and tfq.layer.State output states that do not agree. When using this in VQE to find the ground state of some Hamiltonian, after convergence, the Cirq state has overlap ~1 with the ground state whereas the TFQ state does not. This problem gets worse as N increases.
Reproducible example
We run a depth 4 circuit with ZZ gates between nearest neighbors on an open chain of length N.
With N=8, the overlap between the two states is 1. But when we go to a chain of length 12, this is no longer the case.
Is our implementation incorrect? Or have we encountered a bug?
Was able to recreate on my end, tried using backend=cirq.Simulator() as well, which did bring things back to 0.99. My plan now is to review all of the changes that might have been made between our C++ version of qsim and the reference version https://github.com/quantumlib/qsim . Will report back with findings soon.
