3.0
3.8.13
macOS Monterey 12.3.1
The current definition of QuantumGateDefinition in openqasm3.ast is inconsistent with the definition in the grammar: its arguments field is of type List[ClassicalArgument], whereas according to the grammar it should be List[Identifier].
Note that the parser actually does create the QuantumGateDefinition node according to the grammar.
N/A
The QuantumGateDefinition AST node should be consistent with the grammar.
Change the definition of QuantumGateDefinition.arguments field to List[Identifier].
@AbeerVaishnav13 @nelimee any thoughts on this?
@aspcompiler ?
From the current version of the OpenQASM 3.0 specification:
In general, new gates are defined by statements of the form
[code that renders bad in GitHub citation]
where the optional parameter list params is a comma-separated list of variable parameters, and the argument list qargs is a comma-separated list of qubit arguments. The parameters are identifiers with arbitrary-precision numeric types.
So even though the type of the classical parameter is not clearly stated, it is contrived to an "arbitrary-precision numeric type". So it basically boils down to one question: should each parameter in the parameter list have a definite type or not?
I do not remember well how parameters are expected to be handled, so I do not have an opinion on whether the answer is "yes", "no", or even "yes but [...]".
For the sake of ensuring a joined-up discussion: the proposed PR to provide an additional syntax for gate declarations both takes a (tentative) position on the assumed type of gate parameters, and also provides a way to make gate declarations with varying types of parameters for gates.
There's a few of points here:
the mechanism by which we generate an ANTLR parser isn't necessarily representative of the output structure of the AST we want to present (that's why they're separate) - in cases where the ANTLR grammar and the reference AST "disagree", the AST is meant to be the public intended program structure, and the ANTLR grammar is meant to be an example internal implementation of parsing.
the spec (which is intended to be the source of truth of OpenQASM 3) says
The parameters are identifiers with arbitrary-precision numeric types.
which I think is where the AST got support for its arguments: List[ClassicalArgument] position from, but that's a little questionable; there is no single AST type that could be described as "arbitrary-precision numeric type".
the creation of the AST is inconsistent with itself, and the test test_gate_definition3 is buggy; the created QuantumGateDefinition.arguments has the wrong type given the description of the AST.
As Niel commented above, a change to the spec that officially attaches an exact type to gate parameters is under discussion, and the output of that will decide which bit of the current behaviour will be the one we unify towards.
I think the best course of action immediately is for me to change QuantumGateDefinition.arguments to be of type List[Identifier], and then potentially update it again in the future if the spec changes.
I think the best course of action immediately is for me to change QuantumGateDefinition.arguments to be of type List[Identifier], and then potentially update it again in the future if the spec changes.
Is this to be done in #347 ?
Yeah, merging #347 addresses the issue as it exists right now, and I set GitHub up to close this automatically if/when it merges.
