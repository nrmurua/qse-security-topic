Allow the user to control the new line characters that are emitted by job_monitor output.
I found myself needing to change this to allow me to use qiskit-terra's tools on my non jupyter notebook environment.
I'm already working on a PR for this, which will appear linked here very soon.
removed from relnote to make it simpler and pasted here:
For using qiskit-terra in some environments other than the standard jupyter notebook, being able to change this will be important.
Omar and I encountered this requirement in calling Qiskit from C++ code. It can be difficult to use the Job Monitor in conjunction with i/o pipes and interpret the output due to the \rs inserted in the stream, an atavism of console display. This PR will leave the default as-is but add a kwarg to choose the line discipline.
@omarcostahamido @jwoehr Can you elaborate the issue a bit more? Is it because the CR causes characters to be overwritten, or you just don't want to deal with striping it? Would it help if we replace it with \n?
Hi @jyu00 ,
Yes, for my use case I need to replace it with \n. But I understand that change makes job_monitor output to look different for other users, so that's why I added the line_discipline  kwarg, so that I can easily change that when I call job_monitor on my system.
@omarcostahamido If using \n would solve the issue, I think replacing \r with \n in job_monitor would be a better solution than introducing a new kwarg. The output is not that much different, and other people who also have issues with \r won't have to dig around to find the new kwarg to change.
@jyu00 The reason job_monitor() as it stands uses \r is that the effect in almost all terminals is that the cursor jumps back to the head of the line and overwrites the previous job status message.
That way, the user sits there in front of the terminal watching a status message update without previous information being scrolled off the screen by line after line of monotonous queue depth numbers.
So the current behavior is sort of a "terminal user friendly hack" which really shouldn't change for most people.
On the other hand, if you're using job_monitor() in an automated session (as @omarcostahamido is doing in the context of quantum-generated electronic music) it makes sense to give the coder some control over what job_monitor() uses for a line end.
The code change is small, easily characterized, and easily documented.
I reinforce @jwoehr explanation, which is the same point I was making (maybe not as clear).
@jyu00 you can see that I've already included the yaml release notes in #5691 , which clarify that current use/behavior, which should be what most people are using, will be unaffected.
On the other hand, if you're using job_monitor() in an automated session it makes sense to give the coder some control over what job_monitor() uses for a line end.
While I agree with this, I generally prefer code that would just work for both automated and interactive sessions without user intervention. That's why I think replacing \r with \n in job_monitor would be a better solution.
Having said that, it's a small enough change, and if @omarcostahamido doesn't want to redo the PR then I'm ok with it too.
