It would be nice to have a function sampler.read('adc1', 10000) to read 10000 values in a short time.
Even if the values are not guaranteed to be consecutive, it would still be very useful to have an idea of the variance and mean of the channel without having to block the resource of the scope. In particular, in the context of detecting unlocks of the lockbox.
ok, we agreed that this will be implemented in the FPGA: the sampler becomes a dsp module that computes the mean, rms, max, min of N consecutive values of its input signal. this will require to start the optimization of the design in order to free some resources (we will go for 32 input signals).
for now, we will do a python workaround, i.e. define the sampler class to do what we want in python and only later complement it from the FPGA side. The reason for this is that the FPGA must be optimized to make room for the enhanced functionality and this will involve a major update. We want to have a working code before doing that, i.e. working unit tests and so on.
