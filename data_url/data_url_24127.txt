When using more recent versions of Ansys, Metal doesn't connect to it.
As a subset of this issue, we have observed that Ansys doesn't always close when the user believes it has closed.
When Metal is looking to connect to Ansys, please consider checking the task-manager to see how many Ansys sessions are open and let the user know if there is more than one session of one version of Ansys. Sometimes multiple versions of Ansys could be open for users that keep multiple versions of Ansys on their servers.
Workaround is to start Ansys before trying to connect to it.
Since the present version of Metal uses pyepr to connect to Ansys, the fix to this would require working with pyepr also.
Conversation in slack
https://qiskit.slack.com/archives/C01R8KP5WP7/p1645803131847369
Some notes to help person helping to fix this.
connect_ansys() is used in initate_renderer
_initiate_renderer is called by start() in renderer_base.py
_initiate_renderer is an abstract method which is called from ansys_renderer.py.
Seems like new scenario doesn't use open_ansys.
Notes for earlier version of code to connect to ansys.  These features probably bneed to be edited in the more recent paradigm.
path_var (str): Name of the OS environment variable that contains the path to the
Ansys executable. Only used when path=None.
Defaults to 'ANSYSEM_ROOT202' (Ansys ver. 2020 R2)

https://github.com/Qiskit/qiskit-metal/blob/main/tutorials/4%20Analysis/B.%20Advanced%20-%20Direct%20use%20of%20the%20renderers/4.11%20Analyze%20and%20tune%20a%20transmon.ipynb
https://files.slack.com/files-pri/T7RSPHKK2-F034N1WL1T7/image.png
We plan to replace the Ansys renderer using Windows Comm, with pyaedt Ansys.  This will become a sunset issue.
