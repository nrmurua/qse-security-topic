The upload "to file path" and the download "from file path" in the file transfer with the S3 strategy is broken.
When it comes to downloading, the presence of a backslash because the "from file path" (/train.csv) is not decomposed properly from the s3://covalent-batch-job-resources/train.csv. this gives the following error:
When it comes to uploading, the presence of a backslash, first creates a directory in the s3 before uploading the file.
Start by uploading the test/train csv files in the s3 bucket and creating a csv file test_v2 locally in datasets folder.
Check the local file directory and the s3 buckets after running this code as well as the covalent logs to see all the relevant issues mentioned above.
When the code is working properly, the test and train csv files will be downloaded without any errors and the test_v2 file will be uploaded in the appropriate directory.
A possibly incomplete fix could be to change from_filepath = from_file.filepath to from_filepath = os.path.basename(from_file.filepath) in the download method and a similar change for the to_filepath in the upload method.
EDIT: Even better is to change it to from_filepath = from_file.filepath.strip("/")
@santoshkumarradha I have some questions about the intended UX for file transfers to/from S3 buckets. The current implementation of S3 file transfers works if you make a / directory in the S3 bucket and put the files you want to download in there. Similarly, if you specify the uploading of some files, it'll create a / directory and dump everything there.
Instead, if a user specifies
should download the train.csv file from the main directory in the s3 bucket?
