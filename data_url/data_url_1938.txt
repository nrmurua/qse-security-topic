I'm trying to merge my single qubit gates without disturbing the overall structure of my circuit.
What I expected: one moment
What I got: two moments
This transformer uses PointOptimizer which only iterates over operations. We should (could?) iterate over circuit coordinates and handle None for the op argument in optimize_at (and in find_until_blocked)
@mpharrigan  Correct me if I'm wrong.  I feel like we should be careful what assumptions being made by merge_single_qubit_gates_into_phased_x_z.  What should be the outcome of:
Personally, I can see some people wanting it to be flattened to 1 moment, and some people wanting the q1 operation to be in a different moment as the q0 operation.  Do you disagree?  Also, it looks like there is another optimization that can be used to flatten your use case down to 1 moment namely AlignLeft.
What do you think the result of running merge_single_qubit_gates_into_phased_x_z on the above operation should be?
I don't 100% understand your example. That is not the circuit you get if you run the code you provided.
If you passed in moments to get the diagram you put, then I agree there's some ambiguity. I would say the q1 would be in a different moment.
In my use case, you must imagine that the circuit fragment presented is part of a larger circuit. Doing a blanket AlignLeft could misalign other things where i'm trying to be careful.
You are right.  I (mistakenly) assumed that the operators would get wrapped in moments, I should have made sure before commenting.  That said, your assumption of what I meant was correct.
Maybe the ambiguity can be removed by adding an optional boolean parameter specifying to merge right instead of left.  What do you think?
Updated my comment above to reflect what I was trying to communicate.
@mpharrigan, @tanujkhattar  is this still relevant under the new transformers ?
So, with the new transformer infrastructure, the output of the original circuit would still be the same, i.e.
But, we can now use tags to align specific subset of operations after the merge is done, so a blanket align_left does not destroy the moment structure that we are trying to preserve. For example:
I would also argue that changing merge_single_qubit_gates_to_phased_x_and_z to move the merged operation to the left will be pretty non-trivial because we don't always want to move the merged operation to the left (for eg: if the moment on the left is a 2-qubit moment, we would not want to do the merge and move the merged operation to the left).
Given the new features of having more control on optimizing / aligning a subset of gates in the circuit using tags, I'd suggest that we close this issue.
@mpharrigan What do you think?
Pinging @mpharrigan again since this is marked as before 1.0.  Does the above comment satisfy your concerns?
@mpharrigan Gentle reminder to take a look at my comment above and close the issue if this meets your requirements.
I mean it seems a little clunky.
In your example you have one "group" of single qubit gates. How would it work if I had e.g. a repeating structure of single- and two-qubit gates (but the single qubit part could be multiple moments as above) and I wanted to merge all the single qubit gates down? Would I need unique tags for each group? Would I need to call align_left for each group?
How would it work if I had e.g. a repeating structure of single- and two-qubit gates (but the single qubit part could be multiple moments as above) and I wanted to merge all the single qubit gates down?
We have a cirq.merge_single_qubit_moments_to_phxz transformer now; which merges all adjacent moments containing single qubit gates into a single moment containing single qubit gates. This was created to deal with the case where we have alternating layers of single and 2q gates and want to merge all single qubit moments sandwiched between layers of 2q gates.
ok that sounds good
SG, I'll close the issue then. Thanks.
