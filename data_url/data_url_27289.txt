So, right now, we have our own qutip.py that lives inside qgrad folder. qgrad.qutip conflicts with the actual QuTiP in the namespace. Python path searches the current directory preferentially, finds the local qutip.py file in the qgrad directory, and tries to import from there when I need something from actual qutip, like rand_ket() or rand_herm(). 
One way is to simply add the absolute qutip site-packages link (where real qutip lives) to sys.path[0] such that it picks up the actual qutip first before the local, qgrad.qutip, but I suppose everyone's file system is different and this may not work for a library that we intend to open-source. A bigger problem, as I guess, would then be that we would always be importing real QuTiP when we would need our local, light version of QuTiP since now real QuTiP would be first in sys.path.
Another way is to simply rename the qutip.py file. But our intent was to make qgrad as qutip-esque as possible in a way that if a user previously imported from qutip import fidelity now she may write from qgrad.qutip import fidelity without much trouble with remembering the namespace. It seems to me that renaming is a better way out.
Thoughts welcomed!
