Currently setup.py is quite aggressive in installing dependencies (see https://github.com/Qiskit/qiskit-aer/blob/master/setup.py#L25). This leads to unexpected behaviour on HPC systems where Qiskit is being installed as an environment module (i.e., self-contained) as it installs these dependencies for the current python, which in our case is in another environment module. This makes our Python installation non-reproducible, and the Qiskit module broken if another Python environment module is used. It should be possible to disable this behaviour since it can have severe unintended consequences.
Hi @ocaisa! Thanks for letting us know your problem.
I'm not sure if I fully understand the problem, though. Those packages should be installed by setup.py, but scikit-build does that after the C++ code is compiled, and, as we need them before the compilation, we resorted to this alternative approach. If we didn't need them before the C++ compilation, they would be installed as usual by setup.py.
So, can you depict your workflow so we understand better the problem?
On our systems we want full knowledge and full control over what is getting installed and where it is being installed. A typical pip command using the tool that we use (EasyBuild) looks like:
For a package like qiskit-aer we would bundle together the dependencies required with it (unless they can be provided by another environment module), installing them individually in the required sequence. Your current approach installs additional python packages with indeterminate versions into the prefix where python lives (which is a different location). This results in pip check failing for python:
and also means our python installation is no longer reproducible.
What we would like is the ability to switch off this dependency installation behaviour, this will trigger a failure in our build system when our sanity checks are run (if a dependency is missing), which is fine since we can solve that ourselves and repeat the process as necessary.
The same problem of using pip inside setup.py can also be found in setup.py of retworkx and qiskit-terra here:
https://github.com/Qiskit/retworkx/blob/master/setup.py#L8
https://github.com/Qiskit/qiskit-terra/blob/master/setup.py#L22
