I'd love to be able to implement basis measurements in any given basis, let's say Pauli z or Pauli x. For normal matrices that would work like A^(-1)PA with A the matrix for the basis change from computational to Pauli eigenbasis and P the diagonal version of the corresponding Pauli gate. But my quantum system will collide upon measuring as the measurement is projective. Any idea how I can implement this easily? I want to work with graph states and stabilizers locally and managed to implent a simple graph state into a circuit. But measuring the stabilizers still seems difficult.
I agree that this is something we should do.
In particular, I would like the following things to magically produce working operations:
cirq.measure(cirq.X(qubit), key='m1') is confusing to me because it looks like I'm applying a gate qubit which is just flipping it.
We could also have  basis parameter, but I have to admit I'm quite taken with allowing cirq.X(qubit) as an argument to measure. It might look confusing, but if you think about it for a second it's clear what it has to mean. You're specifying the Hermitian operator to measure.
This will also close #2191
Closed as duplicate of #2191
