There is no way to declare a gate without defining it.
In particular, there is no extern  for gates.
stdgates.inc is expected to contain definitions. For example Qiskit's stdgates.inc contains definitions in the  terms of the two built in gates. When importing into Qiskit, there is, in the typical case, no need to parse the definitions. A declaration will do.
At the moment, it seems gate rz(t) q {}, is good enough. But it has to be interpreted specially by Qiskit, rather than as a gate that does nothing.
If this were C, you would be required to include extern declarations and then link to a library. But details of linking and the library are not part of the language. For example #include <stdio.h> does not require explicit linking in gcc. (I am not sure that the last two sentences are complete and/or correct) So I think can allow extern for gates and then your compiler/transpiler toolchain is responsible for ensuring that definitions are found.
See also
@hodgestar pointed out that the relation of such an extern declaration to gate and defcal definitions is perhaps problematic. At a minimum, it needs clarification.
