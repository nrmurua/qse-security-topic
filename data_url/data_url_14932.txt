In case I declare a circuit by passing 0 as the number of qubits followed by a measure_all, then exported it to QASM; the generated QASM is invalid, containing a creg with size 0.
Run this python script:
Produces this error:
Output qasm:
The error happens only when importing the qasm file, whereas I believe the mistake is done by the exporter or in allowing such a circuit to be created.
I would have expected the QASM exporter to generate a valid qasm, ready to be reimported.
This happens because the measure_all api call implicitly creates a classical register due to its default value add_bits=True (see doc here).
Unfortunately, when creating the new classical register, it generates it of the same size of the quantum register (which in this case is 0) thus leading to a wrong QASM.
I would suggest to handle this corner case either:
@jakelishman @MattePalte
Is an empty quantum circuit ( circuit with no qubits) useful at all? I don't think it is. If this is the case, we can raise an error if a circuit with 0 qubits/ Quantum Registers is made. I would like to solve this issue and contribute to Qiskit. Can you please assign me?
Thank you.
A QuantumCircuit with no quantum bits is still valid, as is a register with zero bits.  The bug here is in the (old) OpenQASM 2 parser - a zero-width register is valid per the letter of the OQ2 spec, so it shouldn't have been rejected.  It probably stems from days when Qiskit itself wouldn't permit zero-length registers.
The new parser (qiskit.qasm2.load{,s}) handles this correctly, and QuantumCircuit.from_qasm_{str,file} have been switched to use that in #9955 (due to be released in Terra 0.25 next week), so I'll mark this as "fixed"; we're not going to merge any changes to the old OQ2 parser now.
Thanks for finding the bug, and thanks for the interest in contributing to Qiskit.  If you're looking for issues to contribute to, you can look at the "good first issue" label in this repository.
