Whenever I enter a value that is not allowed for a parameter I get the following (nondescript ) exception
As this will be the error the end user will be seeing quite often I would propose the following enhancements:
I had some issues with integers not being accepted for a Numbers validator and it working fine when I used floats. However I do not seem to be able to reproduce this so the point below can be omitted, although clearer exceptions would help me understand why it failed.
EDIT: see below for this problem.
Update: Same value error reproduces, when I use an int in a loop it breaks, setting directly by hand works. Changing the input to a float in my loop takes away the problem. Because the exception is so nondescript I do not know why it fails.
Calling directly from the command line (cell below it) runs fine.

Huh, that's a very strange error. Any chance you can produce a self-contained version of this?
Numbers does explicitly accept both integers and floats - doesn't convert ints to floats though, the validator never actually manipulates the values, just tests them. I think this is OK, it's pretty rare, especially in python3, the ints will behave differently from an equivalent float if a float is expected.
I can definitely improve the error message though, great idea.
As I make validate_all from #51, I'm noticing that we only ever call is_valid and then raise immediately afterward. Not sure why I did this; maybe I thought we'd want to use the False results without error, or maybe I just wanted more control over the error message; regardless, I'm thinking the better way to do this is to instead have a method Validator.validate(self, value, context) which raises the exception itself (could raise ValueError or TypeError) with a message that includes a context specified by the caller.
Closed as solved (in some long ago unkonwn PR)
