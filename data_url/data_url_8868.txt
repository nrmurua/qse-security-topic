Exciting to see a heralded erasure channel added into Stim! I had a play with it but am wondering whether it populates the DEM as we would expect.
I'm looking at the following circuit snippet where erasure is certain:
It yields the following DEM:
Since the erasure channel maximally mixes the target qubit and the erasure probability in the circuit snippet is 100%, I would have expected the DEM to read error(0.5) D0. Indeed, this is exactly the DEM I see with the following circuit I understand to be equivalent to the above bar the fact the error cannot be heralded.
If this is a bug, I'd be keen to propose a patch upstream to fix.
So, this is a bug, but it's not the bug you think it is. Things are clearer if you also declare the herald as a detector:
Here D0 is the measurement being wrong and D1 is the erasure herald going off. The property you're talking about in your issue is that P(D0|D1) should be 0.5 and in fact here it is 0.5 as required. The confusing thing is instead that P(D1) is not 100% and instead more like 60%.
The underlying issue is that detector error models can only represent independent error mechanisms, and so there's actually no way to write down "the herald goes off and you project to the no error case OR ELSE DISJOINTLY the herald goes off and you project to the yes error case".
The fact it picks 0.375 as the approximation... I'll look into that. That strikes me as not the best approximation for this case.
The fact is uses an approximation without requiring the user to set allow_approximations=True: that's a bug and I will fix it.
The fact that DEMs can't say the required thing: I also intend to fix this, by adding a oneof {} block and an if D {} block to the specification.
Got it, I'm following now.
One other thing that I thought might be worth mentioning here is the behaviour with back-to-back erasure channels, i.e.,
which yields
Since erasure is irreversible without physical intervention I would expect the second channel to generate output that is in dependence on the first channel. I'm conscious though that tracking this in software would be a complicated task!
On your main point: extending the DEM beyond a representation of independent error mechanisms is an interesting idea. In addition to erasure, perhaps this would make it easier to capture things like leakage in a DEM. I would be happy to help here if a task came up that was easy to offload to someone else.
