When solving a time-dependent problem with mesolve the result seems incorrect for certain numbers of the the sample times (tlist)

The output of the minimal example has oscillations in the first and third case (plot number 10 and 30), but is flat for the second case.
The second case should look like the first and third one, or a warning/exception should be generated indicating a problem.
No response
The reason is the same as for #1265. The pulse starts with 0 for a long time and the adaptive solver skips the real part of the pulse. You need to set max_step in qutip.Options.
You can see this by setting a very small but none-zero value:
The result is correct.
I'll close it for now but please feel free to ask further questions if there are any.
@BoxiLi Thanks, that fixes my problem. To prevent other people from running into the same issue, would it be acceptable to create a PR that replaces the value of max_step in the qutip.solver.Options() with min(options.max_step, max(tlist)/20) if max_step is set to 0 (e.g. automatic)?
Not in that way. 0 is the right value when the system is constant or the time dependence is always active (sin(w*t), exp(-t), etc.) In these case, it is best to let the solver decide the right step length. Also pulse shorter that 5% of tlist could still be missed. Lastly. in some cases, the tlist may not be available to the solver.
We certainly need to be better documentation of this. Maybe a notebook showing this trap could be useful. But without being able to look into the coefficient, I don't see an easy fix.
