mcmt from library allows a label kwarg, but it doens't go anywhere?
The generalized gate MCMT accepts a label kwarg, which it will set to be self.label, but as a subclass of QuantumCircuit, it does not look like this attribute will be read anywhere (or at least, I couldn't find anywhere where it was used.)
True, but that is equally true for any python class :). My point was more that MCMT accepts a label kwarg (like an Instruction subclass) but is a subclass of QuantumCircuit, so none of the supporting code (around drawing, converting, serializing, ...) will find this label.
I think a label doesn't make much sense for the MCMT since it's not drawn as a box but as multicontrolled gate. We could make label be the label of the controlled gate, or (probably the better, cleaner solution) just remove it.
After some investigation, it looks like label is actually not ignored, though I imagine this is a bug.
When multiple target qubits are used, the name of the QuantumCircuit created for broadcast is set to the value of label. When control() is called on the resulting gate, that name is actually eventually used in some special-casing in add_control.py::control.
I was able to get different circuits by specifying a special-cased label.
@kdk
This was addressed with #7161.
