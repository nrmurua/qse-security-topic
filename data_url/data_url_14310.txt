Using new-style control-flow the registers are not constructed in the order they are defined in the circuit (or even the same from run to run) due to the usage of sets.
This makes testing circuits with control not possible.
Run this several times and examine the output.
Correct:
Incorrect:
The order should be consistent, ideally based on the order of registers in the top-level circuit.
Look for usages of sets.
I deliberately didn't do this originally, but thinking back that might have been a case of attempted premature memory-usage optimisation.  When I'm back, I'll have a look and a bit more of a think about it in case there was more reason not to also track order.  We always need the sets, but we could probably track the order in addition.
In the mean time to unblock you, there's a private function we use in Terra for testing: https://github.com/Qiskit/qiskit-terra/blob/main/qiskit/test/_canonical.py#L51 (bear in mind it's subject to removal without warning, but if you let me know you're using it somewhere else, I can make sure to give you a heads up before it gets cut / you can just vendor it to wherever).
(The alternative approach to solving your problem is to improve QuantumCircuit.__eq__ to know that the control-flow ops should be compared for equality under alpha equivalence of the bit arguments and defined parameters (for for loops).  We maybe want to do that in addition.)
Thanks, canonicalize should work for now.
Update: I've confirmed this approach works for testing.
