Currently, in the v4 pre-releases, Program continues to be managed in Python and sent to the Rust bindings as a string. This is suboptimal for a few reasons:
Related: #884
There should be a clearly architected interface for pyQuil users to interact with this new Program object. To reduce the pain of migration, the current API should be supported, even as behavior behind that API may change. For example: instructions may be added to a Program in pyQuil and then be mutated afterwards; in the new regime, depending on a Rust-owned Program, this is unlikely to be maintained.
Methods that we'd like to remove from Program can be kept but with deprecation warnings, even with the full release of v4.0.0. This will make it easy for users to find and fix their programs prior to v5.0.0 without it posing a barrier to migration from v3 to v4.
This was merged in #1639
