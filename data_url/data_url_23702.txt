I have an issue with a 3-axis magnet (a driver not online yet, but basically using the same spherical to cartesian conversion as the Mercury IPS)
When i sweep a value in the spherical coordinates, lets say the radius, the driver will use \theta and \phi values from cache, and calculate the xyz field. That works fine, unless the t and p values are updated. That happens i.e. when the user actually reads the spherical coordinates, if a magnet.rtp.get() is called at every sweep point, the internal r,t,p values will change eventually (right away, or after going through zero, or...).
The issue is basically that we have many representations of one xyz point in the spherical system. And I have no idea how to ensure that the other two variables will not change during a given sweep.
The only way to make this not happen (that i can come up with) would be to just not ask for spherical values during a sweep.
Anyone with any ideas?
@core @AdriaanRol @peendebak <- just tagging because of some reason...
I guess we need to run the theta,phi coordinates throung a normaliser i.e. from whatever the instrument returns to theta=[0, pi], phi=[0, 2*pi] before updating the saved values? I guess we also have to somehow handle the poles at theta=0 specially as phi is essentially undefined here.
yes, I do have those limitations in place, but the conversions make the radius always positive, and just from the values of xyz we dont know if it is expected to be negative.
@MerlinSmiles what/where  is the cache ?
@giulioungaretti
that sweeping the radius makes a wrong sweep if you ask for the field, as it will update the internal ange values, and flip around the sphere, look at Bz here:

This is what it should look like:

apart from the different direction for the two specific sweeps.
@MerlinSmiles internal meaning the magnet controller ? If so, yes the only way is to forbid asking the field.
no :D but we can try !
Not sure that we need to, maybe just increase awareness of that situation...
