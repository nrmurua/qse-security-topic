Call instruction was introduced so that we can inject Schedule into ScheduleBlock. This has been necessary because current primary user-interface is ScheduleBlock, but backend pulse calibration is provided in Schedule form (due to the legacy wire format usage in IBM Provider).
When a user wanted to use a backend pulse as a part of schedule block, one used to wrap it with Call. This allows us to treat Schedule as a pulse Instruction in the context of block. However, this is no longer necessary, thanks to new logic introduced in #8949.
https://github.com/Qiskit/qiskit-terra/blob/e924ea9f6bae15bc67b704ebcdacda194480603e/qiskit/pulse/builder.py#L942-L954
This naively converts Schedule into ScheduleBlock of left-alignment padded with delays.
On the other hand, since Call instruction wraps another program inside the context of outer program, we used to consider it as a subroutine. However, the subroutine is directly involved in the instruction, rather than designated by labels.
Subroutines may be internal and designated by a label, or external and designated by the data set member name that contains the subroutine. The preceding example illustrates an internal subroutine named "sub1".
https://www.ibm.com/docs/en/zos/2.4.0?topic=functions-writing-subroutine
This mechanics is implemented in #8005, and use of Call instruction doesn't have any benefit today. To avoid unnecessary complication of the stack, e.g. inline transform, we should deprecate this instruction in 0.25 and remove it in future.
@nkanazawa1989
Hello ðŸ‘‹ Would it be possible that I try tackling this issue?
Yes! I just assigned you to the issue.
@nkanazawa1989
Hello ðŸ‘‹ Thank you very much for assigning me.
I have one question. For this issue, would it be also expected that I would add new tests which test the alternative approach, as documented here?
In my understanding, the alternative approach to qiskit.pulse.instructions.Call is to use the pulse builder function qiskit.pulse.builder.call. Therefore, following the above document, corresponding to the following existing test (this test is just one example)
https://github.com/Qiskit/qiskit-terra/blob/cff51cea9bd136534154fca4a5f29631022500ed/test/python/pulse/test_block.py#L676-L693
, it seems that one should add
which uses qiskit.pulse.builder.call instead of qiskit.pulse.instructions.Call.
Because I find a few deprecation PRs which seem not doing this, so I am wondering if there are some exceptions or rules.
Thank you so much for your response in advance! ðŸ™‡
Thanks for the question! In this particular case you don't need to write new test because it's already covered by
https://github.com/Qiskit/qiskit-terra/blob/b36609befddce056383aba85d7f326fcac9edd7b/test/python/pulse/test_builder.py#L568-L577
You just need to check if deprecation warning is raised in existing tests for Call instruction.
@nkanazawa1989
I see! Thank you so much! ðŸ™‡
