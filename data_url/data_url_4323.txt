When I repeatedly execute the following code:
The output seems to widely vary, from a sensible looking answer, to an array full of nan's or entries all ~e+250
1:

2:

3:

4:

Am I using this functionality incorrectly?
Thanks for reporting this. I think this happens because you are creating the circuit with density_matrix=True but you are passing a state vector as initial state. If you drop the density_matrix=True or you use a density matrix as initial state (or use the default by not passing any initial state) then the result is fixed. Could you please give a try and let us know?
Ah this makes sense, thanks for pointing that out.
Changing the initial state as below solves the error:
However, changing reduced_q to a value other than 4 shouldn't be valid as the input state will have incorrect dimensions, however it runs without error for reduced_q = 3 or 5 but gives a nonsense answer. Maybe a test should be added to check the dimensions of the input state are correct?
However, changing reduced_q to a value other than 4 shouldn't be valid as the input state will have incorrect dimensions, however it runs without error for reduced_q = 3 or 5 but gives a nonsense answer. Maybe a test should be added to check the dimensions of the input state are correct?
You are right. We should add a check that the input state has proper dimensions possibly including whether it is a density matrix or no, so that it is easier to understand what is the issue.
