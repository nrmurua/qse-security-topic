Hi,
I'm running the following very simple program with ProjectQ 0.3.5:
I'm attempting to run this with Python 2.7 (have also tried with Python 3), and the C++ simulator.  I'm on Ubuntu 14.04 (though I think I get the same behavior on Debian 9).  In both cases the C++ simulator segfaults, even though the slow Python simulator works just fine.
Here are clues I get from the backtrace with gdb:
I notice pybind11 is involved -- my version is 2.2.1.
Can you please help me figure out what's going on here, whether this is a bug on my end or an issue with the C++ simulator?  Happy to help in any way I can to get this figured out -- thanks!!
Hi,
Thanks for all the details! One possible fix is to import All from projectq.ops as well and change H | qureg to All(H) | qureg (and similarly for the next line). Alternatively, apply them to, e.g., qureg[0] only, but I have the feeling that this wasn't the intent.
The problem is that H, Z, X, etc. are single-qubit gates, but you are applying them to an entire register and it's not clear whether they should be applied to, e.g., the first qubit, or all the qubits. All turns a single-qubit gate U into a larger unitary which effectively applies U to every qubit in the supplied quantum register.
Future versions of ProjectQ will raise an exception instead of segfaulting (#176 has already been merged into develop). This should make it much easier to find these kinds of bugs in the future.
Thanks so much for the fast reply!  Your suggestion indeed fixed the issue -- oversight on my part (although I think this script worked fine with some earlier versions of ProjectQ).  In any case, all seems to be working now -- thanks again!  (And, exceptions for cases like this will definitely be helpful, great to see those already!)
Yes, the reason that it no longer works is that the simulator now supports k-qubit matrices (as long as k <= 5), and not just (controlled) single-qubit gates.
I'm glad it works now!
