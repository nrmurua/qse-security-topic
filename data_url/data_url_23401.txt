Hi all (esp you @eendebakpt @peendebak @MerlinSmiles ),
let's use this issue to fix the problem of handling interruptions.
There are two parts to this problem:
How to deal with blocking instruments call:
Where to stop in a loop (but since may people have their own loop that's maybe less important):
@giulioungaretti
Here is my wishlist
How to deal with blocking instruments call:
Where to stop in a loop (but since may people have their own loop that's maybe less important):
What to do after interrupt:
@MerlinSmiles how should we handle an ongoing hardware sweep. Something like.
I think most users would expect the magnet to stop at/around 2 T in that case.
But obviously that would require communication with the magnet to tell it to stop ramping when handling the keyboard interrupt.
@jenshnielsen
Yes I agree, I would expect it to stop there.
Which is why i have a little hard time with the KeyboardInterrupt way of stopping the thing. A stop should gracefully stop everything, also if that takes some time.
I dont stop to get back to a kernel I can use for something ASAP, but to stop whatever measurement I was doing.
In your example, in my opinion the driver should send a stop signal to the magnet.
I was thinking to introduce this for any parameter (being gettable or settable does not matter).
Meaning that a single interrupt will wait for whatever to finish, double interrupt will kill forcibly!
This is for example if your set or get takes like 10 hours!
Another issue brought up by the t10 users is that if you do something like in a cell and interrupt it doing the first loop it will continue to do the second one i.e.:
This is because do1d does
and swallows the KeyboardInterrupt
