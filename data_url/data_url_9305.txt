Hi, I am new to Julia and Bloqade, so I may be wrong, but I think I have found an issue in using the function rydberg_h using juliacall from a python program. I have tested the same code in julia (without using Juliacall) and this problem doesn't arise.
More precisely, the function jl.Bloqade.rydberg_h(atoms, Ω=Ω, Δ=Δ, ϕ =ϕ)  doesn't work in my python code, while jl.Bloqade.rydberg_h(atoms, Ω=Ω, Δ=Δ)  works perfectly.
This is the error that I receive:
I feel like the function mistakes the symbol ϕ for the symbol φ, so it is not able to find the right function to call because the parameters are different.
I am using pycharm with an Anaconda environment.
For the julia dependecies i am suing a .toml file with the following package versions:
While on pkg.status:
Hi @vrige ,
Thanks for bringing this to our attention.
Bloqade wasn't really designed with juliacall usage in mind (or tested thoroughly against it). That being said the bug here seems to be an odd behavior where juliacall, for a reason that isn't apparent to me, converts the U+03D5 phi used in Bloqade (and the one you typed) to a U+03C6 phi which are completely different characters, resulting in the error you see.
I'm going to open an issue on the github repo for juliacall to try to get to the bottom of this but in the meantime I also noticed some parts of your code I'm not sure are intentional or not:
Thanks for the hard work and for opening the issue on juliacall @johnzl-777.
And yes you are right about my mistakes, thanks again for pointing that out!
No problem! I hope to hear back from the juliacall folks soon, curious as to what could be causing this problem.
Feel free to subscribe to the linked issue as well! You can get notified as soon as they have a response.
Hey @vrige ,
It looks like there's a solution to this issue (kudos to @cjdoris for the help!) but it'll require a minor change of how you call rydberg_h. Instead of what you're currently doing you'll need to replace:
with
Note that you can still use unicode to denote the Rabi, Detuning, and Phase waveform variables in Python, you'd just have to call it like:
(Although I do realize it may be slightly less friendly to type unicode characters in certain python environments over Julia!)
I went ahead and ran your code on my end with these changes and it runs just fine (: If you're still having issues here please feel free to provide more details, otherwise you can close this issue.
