At the moment the QutipEmulator class is very big and complex. Its functions can be separated into the functions that concern the running of the simulation (defining the initial state, the sampling rate, the noise, launching the runs) and functions that generates the hamiltonian to simulate from the samples of the simulation. The idea would be to create a separate class to store the last functions. This new class would take into account the noise as well, such that each time it is called in the run part it generates a different hamiltonian.
