MacOS Catalina 10.15.7, Xcode-12.0.1, current liboqs master.
Here's the complete output of pytest -v -n=auto:  test-out.txt
And this:
Our CI system doesn't build AVX implementations on macOS.
@mouse07410 Can you see if the namespacing problem is fixed on this branch: https://github.com/jschanck/PQClean/tree/dilithium
The second issue seems to be in something outside of PQClean.
The second issue is caused by him using nosetests, which we do not support. We use pytest.
The second issue is caused by him using nosetests, which we do not support. We use pytest.
@thomwiggers From your own https://github.com/PQClean/PQClean/wiki/Test-framework :
Our CI system doesn't build AVX implementations on macOS.
Yeah, but after you applied fixes early September, it all seemed to work fine on MacOS with AVX2.
Can you see if the namespacing problem is fixed on this branch...
Testing as we speak.
@jschanck I'm sorry to say that your branch also fails:
Complete log: jsch-test-out.txt
What is strange though is that make appears to produce usable libraries and executables:
So, the problem seems to be with how PQClean builds (some of?) the tests.
Make produces usable binaries because the failing test is just complaining about whitespace. I fixed that on my dilithium branch. The other failure is in Kyber. I'll look into it.
@thomwiggers The Kyber issue here involves symmetric-shake.c which I only see on your kyber-r3 branch. Could be that @mouse07410 doesn't have a clean build environment.
I'll open a PR for my dilithium branch. I think we can close this now.
Could be that @mouse07410 doesn't have a clean build environment.
Not sure (a) what you mean, and (b) how to ensure the environment is "clean".
On your current dilithium branch as of right now (2020-10-08 14:24 EDT), only Kyber seems to be failing:
Here's the complete log: jsch-test1-out.txt
Would you suggest that now, after this test, I return to the master branch?
@mouse07410 By 'clean' build environment I mean a working tree that matches the HEAD of the branch you intended to test.
The duplicate symbol error you're getting in kyber references two object files
These objects would have come from symmetric-shake.c and symmetric-fips202.c. I think your build environment is not 'clean' because there is no symmetric-shake.c at the HEAD of my dilithium branch.
Your build environment probably contains both symmetric-fips202.c and symmetric-shake.c. You can check by running:
$ git ls-files *symmetric-*.c
However, a clean environment would look like this (assuming 'jschanck' is the name of the remote you set up to pull my dilithium branch):
Your build environment probably contains both symmetric-fips202.c and symmetric-shake.c
However, a clean environment would look like this...
Here's what I seem to have:
Re-running the pytest -v -n=auto on your dilithium branch, will post the results here.
Still fails on Kyber, the same way
Complete log: jsch-test2.txt
I cleaned everything with
(please let me know if this is sufficient), and will re-run the tests, posting results here.
Apparently, that cleaning was sufficient, because Kyber did not fail:
jsch-test3.txt
When would you expect your dilithium branch to be merged to PQClean/PQClean/master?
Not fixed, but Dilithium4 became Dilithium5, and it does not even compile anymore with AVX2.
Closing this issue, opening a new one.
