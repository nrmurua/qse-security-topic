When making a Clifford circuit with s and sdg gates, they are automatically implemented as u1 gates. This means specifying basis_gates='s,sdg' has no effect, and Clifford circuits using these gates cannot be executed on the clifford simulator backend.
Consider the test circuit:
If you compile this while unrolling to the Clifford backend defaults, or just basis_gates='s' the gate is being unrolled to the U gate, which will give an error when executed on the Clifford simulator as it is an unsupported gate.
If you include the unsupported u1 in the basis_gates it will remain a u1 gate:
The s and sdg gates should not be unrolled to u1 gates until being compiled and sent through the unroller with basis gates including u1.
In the circuit extension s is hardcoded as u1:
While for other gates, such as Pauli's this isn't the case. Eg for the x gate:
So I think this can be fixed by updating the extension for s and sdg
@1ucian0 changing s.py to treat s as a Gate instead of CompositeGate fixes this issue for me, but I also had to add a new class for the S^\dagger gate. I'm not sure if this has any repercussions in the unroller:
