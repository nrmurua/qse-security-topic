Thanks, great work!
May I ask why this Minimum Weight Perfect Matching (MWPM) decoder can not be used for 3D codes, e.g. 3D toric codes? What are the difficulties?
Thanks! PyMatching should work for any code for which each qubit is incident to two stabilisers of a given Pauli type, or one at a boundary. So for the 3D toric code with qubits on 2-cells, Z-stabilisers on 3-cells and X-stabilisers on 1-cells, you should be able to use PyMatching to decode Z-stabiliser syndromes, but not X-stabiliser syndromes. For two-stage single shot decoding you could also use PyMatching to correct metacheck syndromes from X-stabiliser measurement errors. You'd have to construct the codes yourself and supply the stabilisers as a check matrix (or input the matching graph as a NetworkX graph).
Have you encountered an issue when using PyMatching to decode 3D toric codes, or is it an issue with the documentation somewhere?
Thanks for clarifying. I just wasn't sure about the 3D case, so I can come here to ask before playing with it. Your explanation is very helpful. In general, as long as the check matrix is a graph, then PyMatching can be used.
Yes exactly. Either the check matrix should be a graph, or you can input the matching graph as a NetworkX graph (see here).
