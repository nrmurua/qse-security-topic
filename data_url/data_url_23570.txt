New here, quick question:
It seems from the discussion here that the Loop is meant to be depreciated in favor of looping with a Measure.run() object. Coming from the Folk lab, we're still running Igor code that looks a lot like your doNd() examples.
What would be the preferred way to add a live plot to that example? It looks like maybe the answer is plottr, which is fairly clear how to implement, but not super clear which repository is under active development.
You are almost correct, the preferred way is to use Measurement (not to be confused with Measure), here is the doc about it.
For live plotting, you can indeed use plottr. At the moment, active development of plottr happens on http://github.com/kouwenhovenlab/plottr.
Just letting you know. "Old" Loop is very tightly coupled with "old dataset" (qcodes.data.*) which is generally hdf5 or gnuplot format. Measurement context manager works with the "new dataset" (qcodes.dataset.*) that is backed by sqlite database.
Thanks for the reply. That looks good.
To be a little more general, what is intended is for live plotting to happen through a subscriber, rather than using the MatPlot and QtPlot classes? Is there any reason not to use those classes and subscribe a callback that runs their .update() methods?
You are almost correct, the preferred way is to use Measurement (not to be confused with Measure), here is the doc about it.
That is definitely what I meant, but I just caught on to why that distinction is so important. Changed title for accuracy.
what is intended is for live plotting to happen through a subscriber, rather than using the MatPlot and QtPlot classes? Is there any reason not to use those classes and subscribe a callback that runs their .update() methods?
I don't think that this combination has been tested. I personally have not looked into if they are compatible. Those classes are legacy ones, and most probably have limitations that are similar to those of Loop. On the other hand, if you are interested in trying it, and it turns out that that combination works well for your experiment, I don't see any reason of not using it (apart from the "legacy" notions) :)
I'll tinker with the various options and post back about any success. Thanks for pointing me in the right direction.
