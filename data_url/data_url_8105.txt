I am using GRAPE to identify optimal pulse sequences to produce a desired unitary, and am running into an error when I use optimize_pulse_unitary for sparse matrices of size 1296x1296 and larger.
For example, the following code works for N=2 but fails for N=>3:
For N=>3, instead of getting a printout of the optimized controls, I receive the following terminal output error:
I am using the following QuTiP environment:
QuTiP Version:      4.4.1
Numpy Version:      1.21.0
Scipy Version:      1.4.1
Cython Version:     0.29.15
Matplotlib Version: 3.4.2
Python Version:     3.7.6
Number of CPUs:     2
BLAS Info:          OPENBLAS
OPENMP Installed:   False
INTEL MKL Ext:      False
Platform Info:      Darwin (x86_64)
Thank you for your help.
Hi @michelinesoley,
Your bug report inspired me to dig into the qutip.control.optimize_pulse sparse matrix support which lead to some fixes in #1621.
When you increase N in your example from 2 to 3, it changes the internal type used by the optimizer to represent propagators. You can also make the N = 2 case fail by changing the last line to:
Your example can be made to work for N = 3 (albeit slowly) by changing the following lines:
(which was a bug in the example itself -- it created a Qobj with the right shape but wrong dimensions) and the last line to
For me the N = 3 case was slower with sparse_eigen_decomp=True, but perhaps it will be better for your full problem. If you would like to try sparse_eigen_decomp=True you are welcome to try the patch in PR #1621 and I would appreciate feedback on any performance issues for larger systems.
We are currently working to support bigger systems in QuTiP 5 by using the new flexible Qobj data layer (which supports both sparse and dense matrices already and will hopefully support GPU and TensorFlow matrices in the near future).
Thank you so much all of your help and for responding so quickly!  The fix to the example works very well, thanks!
I am working on getting the patch working and installed commits ecca45c, 3e908bb, 8ce7757, 03b4cb7, 346b2e7, and a1c809a. I am getting a ValueError when I run the example and think I might have accidentally missed a commit - would you have an idea of what I might be missing?  I am including my QuTiP version information below.  Thanks for all of your help.
QuTiP Version:      4.7.0.dev0+a1c809a
Numpy Version:      1.21.0
Scipy Version:      1.4.1
Cython Version:     0.29.24
Matplotlib Version: 3.4.2
Python Version:     3.7.6
Number of CPUs:     2
BLAS Info:          OPENBLAS
OPENMP Installed:   False
INTEL MKL Ext:      False
Platform Info:      Darwin (x86_64)
@michelinesoley Thank you for trying the PR. Is it possible for you to checkout the exact commit from the branch (i.e. ecca45c) and try that? If the ValueError persists, could you post the end of traceback here?
Thanks!  I used git checkout for ecca45c and reinstalled with python setup.py install, and I get the following error for the minimal example:
Is there something I am missing in my installation?  Thanks again for all of your help.
#1621 has been merged and should be included in the 4.6.3 release.
Thank you for all of your help!
