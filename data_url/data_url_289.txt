When adding the find_package(CUDAQ REQUIRED) line to the CMakeLists.txt file and passing the -DCMAKE_EXPORT_COMPILE_COMMANDS=1 to CMake, the compile_commands.json file isn't created.
This file is used by tools such as clangd and clang-tidy.
Create the following CMakeLists.txt file:
And the following main.cpp file:
Then run the following script:
The build directory doesn't contain a compile_commands.json file.
When running the script, a compile_commands.json file should be created.
Not a regression
No response
I dug into this a while back, and it looks like this is a limitation of CMake itself. In particular, CMake hardcoded the list of source languages that it will support compile command export, e.g., for Makefile generator:
https://gitlab.kitware.com/cmake/cmake/-/blob/master/Source/cmMakefileTargetGenerator.cxx#L966-974
The lang_can_export_cmds bool, if false, will bypass the compile_commands.json export. Since we define a new CMake <LANG> (CUDAQ), the lang_can_export_cmds will thus be false. By the look of it, it'd be difficult to modify this behavior since the condition is rigid.
Closing this a "by design (of CMake)". Please feel free to reopen if there is a workaround that seems reasonable for this.
