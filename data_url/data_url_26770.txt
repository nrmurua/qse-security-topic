In the current master branch 42 files are not formatted correctly.
For earlier discussions see here and here.
Reproducer:
yes, prettify was not rewinding the filehandle properly when it found fypp directories, which unintentionally also skipped the fprettify, which was fixed by edd8f97.
And since we check for prettified files as-needed now in the CI I decided against yet another "prettify everything".
I think, we should ensure that the master branch is always fully compliant. Then make pretty becomes useful again and we don't obfuscate random future commits with reformatting.
This applies of course to all the other pre-commit based tests as well, where we're most like not in compliance either.
As predicted the "prettify everything" that should have been part of edd8f97 was shoehorned into an unrelated pull request. This shows that the "prettify as-needed" approach does not work.
The root cause is that since b7e6611 we are using the pre-commit framework within the CI. The problem is that they serve two different use cases: While the CI should do a thorough and exhaustive check, the pre-commit hooks should only use modest resources to find the most common issues.
I therefore propose that we remove the pre-commit framework from the CI again. This will restore the old behavior incl. useful error messages, reduce complexity, and allow us to add new checks (#637).
Those who really want run all checks by themselves can always use the docker containers locally.
As predicted the "prettify everything" that should have been part of edd8f97 was shoehorned into an unrelated pull request.
Cool, so this issue is fixed then. I would most likely not have added it directly in edd8f97 but would have added a separate commit for it myself, as has been done now in commit 40778af.
The root cause is that since b7e6611 we are using the pre-commit framework within the CI. The problem is that they serve two different use cases: While the CI should do a thorough and exhaustive check, the pre-commit hooks should only use modest resources to find the most common issues.
I would recommend to check how things are currently implemented. Feel free to change this to pre-commit run -a.
