Hello there, I would like to create a circuit including multi-controlled gates and keep them undecomposed to pass it to another function. I use transpiler as:
circuit_qiskit = QuantumCircuit(num_qubits)
circuit_qiskit.h(0)
circuit_qiskit.ccx(1,2,0)
circuit_trans = transpile(circuit_qiskit, basis_gates=['u1', 'u2', 'u3', 'mcx', 'mcu'], translation_method='translator')
but I get the following error:
iskit.transpiler.exceptions.TranspilerError: "Unable to translate the operations in the circuit: ['ccx', 'h'] to the backend's (or manually specified) target basis: ['delay', 'barrier', 'mcu', 'reset', 'u2', 'snapshot', 'mcx', 'u3', 'u1', 'measure']. This likely means the target basis is not universal or there are additional equivalence rules needed in the EquivalenceLibrary being used. For more details on this error see: https://qiskit.org/documentation/stubs/qiskit.transpiler.passes.BasisTranslator.html#translation_errors"
Could you please let me know how can I solve that? and how can I transpile a circuit to a sequence of single-qubit and multi-controlled gates. Thanks!
circuit_qiskit = QuantumCircuit(num_qubits)
circuit_qiskit.h(0)
circuit_qiskit.ccx(1,2,0)
circuit_trans = transpile(circuit_qiskit, basis_gates=['u1', 'u2', 'u3', 'mcx', 'mcu'], translation_method='translator')
Transpiling a circuit to a sequence of single-qubit and multi-controlled gates.
No response
For your immediate problem, you probably want to add ccx to your basis gates, if that's a gate you want to keep around.  The Qiskit mcx gates are a bit weird, in that they're more a method of defining a synthesis for arbitrary numbers of control qubits than meant to be stand-alone gates.  Because they're variadic in size, it's going to be tricky to get the "built-in" gates like cx or ccx to convert to something called mcx reliably, so it's probably best to stick to having cx, ccx in the basis set in addition to mcx.
Thanks for the reply! Actually this was a simple example. I have more complex gates such as:
rry = RYGate(np.pi/8)
mcry = ControlledGate(name="mcry", num_qubits=4, params=rry.params, num_ctrl_qubits=3, definition=rry.definition,ctrl_state='011', base_gate=rry)
circuit_qiskit.append(mcry, [1,2,0, 3])
and once I do transpilation as:
circuit_trans = transpile(circuit_qiskit, basis_gates=['u1', 'u2', 'u3', 'cx', 'mcry' 'mcx', 'mcu'], translation_method='translator')
I get this error:
raise DAGCircuitError(
qiskit.dagcircuit.exceptions.DAGCircuitError: 'bit mapping invalid: expected 4, got 1'
Any idea?
I want to keep multi-controlled gates to do some optimization on them and then pass it to the compiler...
Moreover, even if I pass 'cx' as basis_gates list, ccx transpiles to a sequence of u and cx gates...that I don't want to
If you're seeing errors, please can you share a complete but minimal working example, a complete traceback of the error, and fill in the versions of Qiskit that the template asked for?
In your second comment, you would also need to add ccx to basis_gates like I mentioned.
