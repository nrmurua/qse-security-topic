We can plot quasi-probabilities in plot_histogram, e.g.
Currently it fails with the error:
Traceback (most recent call last):
File "", line 1, in 
plot_histogram(m3_quasi)
File "/opt/miniconda3/envs/qiskit/lib/python3.9/site-packages/qiskit/visualization/counts_visualization.py", line 161, in plot_histogram
ax.set_xticklabels(labels_dict.keys(), fontsize=14, rotation=70)
File "/opt/miniconda3/envs/qiskit/lib/python3.9/site-packages/matplotlib/axes/_base.py", line 63, in wrapper
return get_method(self)(*args, **kwargs)
File "/opt/miniconda3/envs/qiskit/lib/python3.9/site-packages/matplotlib/cbook/deprecation.py", line 451, in wrapper
return func(*args, **kwargs)
File "/opt/miniconda3/envs/qiskit/lib/python3.9/site-packages/matplotlib/axis.py", line 1796, in _set_ticklabels
return self.set_ticklabels(labels, minor=minor, **kwargs)
File "/opt/miniconda3/envs/qiskit/lib/python3.9/site-packages/matplotlib/axis.py", line 1717, in set_ticklabels
raise ValueError(
ValueError: The number of FixedLocator locations (17), usually from a call to set_ticks, does not match the number of ticklabels (21).
This will require porting the log scale histogram from Kaleidoscope as the negative values are not visible otherwise.
I think this is going the wrong direction. Plot histogram should go towards a counts not probabilities and we should make a new plot for probabilities and we should all this. I would call it plot_quasi_probabilities and we could even overload it with taking in counts and it can normalize it so that it sums to one as well as a probabilities/quasi probability vector as you describe.
Closing in favor of a different route.
