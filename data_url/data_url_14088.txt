qiskit.quantum_info.StabilizerState has a method .probabilities_dict() , which recurses through all 2^n possibilities so time complexity scales exponentially in the number of qubits.
For a variety of purposes (including classical shadows), it is necessary to calculate only a single probability for some target bitstring via .get_probability(target).
I've added that method to my own installation, by adapting from the _get_probablities helper function (note misspelling in function name). i pass it an argument target, and instead of iterating
for single_qubit_outcome in range(0, 2):
I use instead
single_qubit_outcome = int(target[qubit_for_branching])
and it returns only the outcome of interest (or zero if there's a deterministic outcome that doesn't agree with the target string)
so this is an extremely useful method that entirely uses existing code, just eliminates unnecessary branches.
instead of a separate method, you could also add an argument to the .probabilities_dict() method that would permit specifying any restricted subset of strings to return in the dict (and not calculate the rest)
Putting in a method to restrict the set of returned probabilities sounds useful to me.  @ShellyGarion: I think you were the original author - do you have any thoughts?
I agree that adding a new method to the StabilizerState class that returns a restricted set of probabilities will be very useful.
@ginsparg - would you like to contribute and open a PR?
