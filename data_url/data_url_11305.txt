Hi @conta877 , sorry I wasn't more help earlier, but I do have some thoughts now on naming things. What do you think of renaming the file _code_transform_functions.py to _binary_codes.py? Also, I think the name SymbolicBinary is not very descriptive (or maybe I just don't understand it). Perhaps it should be called BinaryPolynomial or BooleanPolynomial instead?
@babbush , @msteudtner, any thoughts?
I like the name binary_codes for the functions.
SymbolicBinary because they are defined on symbolic variables. (\omega, w or any other variable name representing the qubit basis)
I still think the name should suggest what is being defined (have a noun in it).
I think I referred to it in the demo as binary expressions, you could also call it binary functions or something. It would take some editing in doc strings and demo but another idea would be to introduce the variables ('w0',  'w1',  and so on) as operators. (I believe I should have done this in my paper, actually.)
So some of my suggestions would be BinaryFunction, BinaryExpression or BinaryOperator.
What do you think @kevinsung, @conta877  ?
@msteudtner Is there any advantage to letting the variables be operator-valued? My understanding is that they only need to take the values 0 and 1.
Indeed, my point is to regard a 'SymbolicBinary' as an operator that returns either 0 or 1.
I see, you mean the same thing by "function" and "operator". Any binary function can be expressed as a polynomial, and that's how SymbolicBinary is representing it, so while BinaryFunction or BinaryOperator may be correct, I think BinaryPolynomial would be also be correct and more specific. Please correct me if I have misunderstood something.
