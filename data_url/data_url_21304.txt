The only way to set a SUServo channel offset also sets the DDS frequency and phase. While this mirrors how the DDS channel is set, it seems (at first glance) unnecessary, since we are writing to the SUServo memory and not the DDS.
It is useful to be able to set the offset without changing the other DDS parameters - i.e. a dumb experiment to change a laser power does not require knowledge of frequency, and so reduces experiment complexity.
Exposing something analogous to the Urukul channel methods would be ideal.
I also noticed a .. seealso:: :meth:set_amplitude (which doesn't exist) in set_dds_mu. Maybe this was originally the function I'm looking for?
Proposed solution:
The offset conversion functions could be module level (like y_mu_to_full_scale) or class methods, not really fussed.
Oops - pressed enter early, please allow time for edit!
This sounds like a simple feature but would help with usability. From my point of view it would be nice for experiment code to be able to seamlessly use Urukul or SUServo.
Looks good. Do you want to prepare a PR?
I think it's just one memory access, not four.
And while at it this should probably also done for frequency and phase.
