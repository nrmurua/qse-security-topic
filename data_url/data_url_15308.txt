Hello,
I would like to suggest two small improvements:
I can contribute with the code, if you agree.
@mtreinish for your review
For the GroverOperator, since a custom version can already be supplied, one can already do something different. Yes, its a bit more work than potentially if the problem supported options for the default one. In places we have the type as a Union that includes str where we have string values to select different options where it can be a little higher level than having to deal with mcx modes.
As to is_good_state the algorithm does not need/use it right. It solves the problem without. Some do use it. Maybe the docs for AE could state that this will be ignored - if more was wanted I think a warning.warn and continuing. If you want to solve the same problem across different algos having it fail would mean one would have to adjust the problem, so personally I would not be a fan of raising an error.
@Cryoris for your thoughts here.
Regarding your second point @woodsp-ibm, I would have a different opinion. Define the function f be true when all qubits are 1 (this is the standard is_good_state), and the function g as not(f). Now, if you run IQAE with is_good_state=f and then you re-run it with is_good_state=g, you will get opposite results. On the contrary, if you run the two problems with QAE, is_good_state will be ignored, and you will get the same result twice, that corresponds to is_good_state=f. What I'm saying is that not only QAE can live without is_good_state, but QAE is actually not able to solve a problem with a custom definition of is_good_state.
Regarding is_good_state: Our concept for the algorithms is that any algorithm of type AmplitudeEstimator can solve the same EstimationProblem. If we would make QAE reject a problem that other variants accept, this concept is broken. The example you give above with g=not(f) is an invalid input, since is_good_state must be consistent with the oracle -- this is a restriction which the user has to ensure since we cannot check that. Therefore I would leave the is_good_state as is and not throw an error -- though we can definitely add a note in QAEs docstring if that would help!
Regarding the mcx_mode: I think we purposely left that out of the EstimationProblem since it only concerns the construction of the GroverOperator, where it can already be set ðŸ™‚ It should be only one line of overhead, or is it more?
Which should be the default is a good question, for hardware applications (and since QAE is likely not very near-term) using the v-chain mode might make more sense, but in the near-term and for experimenting the noancillas allows you to run larger problems right now.
Transferred to new repo: qiskit-community/qiskit-algorithms#54
