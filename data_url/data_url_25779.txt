Currently although we collect all of the imports (and more) for each lattice that we are constructing, we still do not collect their name space installation in pip server. This is needed if we are installing the said packages, wherever we are running the electrons. Interestingly it turns out to be quite straight forward to do that. (This becomes very important when name space and import name do not match, like covalent-cova). Using this, one can directly create the requirements.txt file for any given lattice/dispatch.
No response
Slack conversation regarding this issue starts here https://agnostiqworkspace.slack.com/archives/C02JS6NAFV3/p1649346344339139
Update
Issue: Unpickling result object fails due to missing dependencies that were present during pickling process
Solution: Management of how result objects are pickled
TLDR of the slack conversation is that we also need to be able to store, and update the result object without needing to install all the dependencies used by any electron's/lattice's function. It is only in the case where we actually run the functions where we'll need these dependencies installed.
@wjcunningham7 , though this was related to #395, this is still unclosed as we do not yet collect/hold lattice's/electron's dependencies, which is needed for reproducibility and environment caching. Let's keep this open until we solve that.  This would be closed along the environment setting up issue that I guess @venkatBala  is working on ?
slack thread https://agnostiqworkspace.slack.com/archives/C02JS6NAFV3/p1650379042964329
This issue will track all environment management issues. Converting to an epic.
