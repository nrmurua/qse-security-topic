Tools such as gate compilers often need to compare an incoming gate against a gate they know how to handle. I have seen at least one case of cirq users calling cirq.op_gate_isinstance for this purpose.
This is not the right way of doing this. It makes the compiler less flexible and couples it tightly to particular gate definitions. Instead, compilers should use a distance measure on quantum gates. In particular, this creates issues when cirq moves to a different representation for a given gate (see e.g. the change from OpenFermion-cirq's change from YXXY to cirq's new PhasedISwapPowGate).
There are a few ways one can define distance on the space of unitaries, see e.g. matrix norm. A metric used often in quantum information is the trace distance.
There are also ways to define distance on quantum channels. This is more involved, so I'm filing a separate issue for it.
Also, would people object against the removal of cirq.op_gate_isinstance (once trace distance is implemented)?
Unless this lets you compute a distance from a parameterized space, and also obtain the closest parameter, it is not able to replace op_gate_isinstance. The isinstance check is usually followed by accessing attributes of that type.
We already use trace distance to specify the distance between a unitary and the identity. It is straightforward to extend this to two arbitrary unitaries, since this quantity is invariant with respect to unitary transformations. The distance between unitaries U and V is the same as the trace distance bound of U V^-1. I think it would be dangerous to have code automatically attempt to find the gate it understands with a unitary "nearest" to whatever it was given without that process being transparent, but In practice it seems like it would be a minimization of the trace distance of U V^-1 for a given U and a V that accepts some arguments that can be fed into a minimization routine. I think that op_gate_isinstance needs to stay if only for the utility in accessing attributes.
For the purposes of this issue we should scope it to not killing op_gate_isinstance but we should definitely have these distance measures in the qis package.
#2183 requests distance measures for more general quantum channels. This should in particular provide distance measures for unitary channels. For this reason, I'm closing this as duplicate.
