Square Brackets [ ] are universally used in modern computer languages to represent array declaration and access.
It is dissonant and jarring to use them for declaring variable precision.
( language/types.html#fixed-point-angles )
Square brackets are used to represent the width of wire/register declaration within Verilog and they are also used for array access - so there is some preexisting motivation. I would like to hear alternative suggestions you have that don't clash with type-casting, eg., using parentheses which looks like int[32](other_int), vs int(32)(other_int). It will take strong support from OpenQASM contributors to change this syntax.
Simpler. More natural. Less keyboard action.
For that matter, the spec says:
There are 1:m:f fixed-point numbers with m integer bits, f fractional bits, and 1 sign bit. The statement fixed[m, f] name; declares a 1:m:f fixed-point number.
So for precision declaration, we could use precisely that syntax, which again is more natural than overloading [ ] which is already used by openqasm3 for arrays.
@jwoehr do you still want to push for this syntax? I think there has been strong support for [] and it is used in the paper (https://arxiv.org/pdf/2104.14722.pdf). Bit-level access is allowed so in a sense this array-based syntax does make sense. There has also been discussion for adding an explicit array type in #137. I think this is the right approach to take
Whatever the validity of anyone's POV here, it's not worth a great deal more of discussion :)
