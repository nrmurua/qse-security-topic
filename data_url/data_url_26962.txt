Somehow tie the git version tag and/or commit SHA to a variable stored in $FrontEnd or something.
.gitattributes should be able to do this for a particular file in the repo, which we could then use to store the commit hash. http://stackoverflow.com/questions/3442874/in-git-how-can-i-write-the-current-commit-hash-to-a-file-in-the-same-commit
You mean like at the bottom of this? http://git-scm.com/book/en/v2/Customizing-Git-Git-Attributes
I only really understand that stuff on a superficial level...but now I at least better understand the possibly circular nature of writing SHA to some file in a repo.
Do you think this could still be done if the user doesn't have git at all because they, eg, chose to download the repo as a .zip? I guess it's probably not the end of the world just to hardcode the version number into one of the .m files :P
I feel like at that point, we would need a separate branch for each version where the .m file with each version matches the one in the git tag. This could be useful for pushing bugfixes and doing backports.
