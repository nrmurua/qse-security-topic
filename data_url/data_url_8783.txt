While trying take user inout using python's inbuilt input(), it shows a runtime error of EOFError.
`varun@varun-Lenovo-ideapad-Y700-15ISK:/QI-Competition2018/test/base_example$ sh run_example.sh
varun@varun-Lenovo-ideapad-Y700-15ISK:/QI-Competition2018/test/base_example$ Row?Col?Traceback (most recent call last):
Traceback (most recent call last):
File "aliceTest.py", line 112, in 
File "bobTest.py", line 110, in 
main()
main()
File "aliceTest.py", line 51, in main
File "bobTest.py", line 52, in main
row = input("Row?")
col=input("Col?")
EOFError: EOF when reading a line
EOFError: EOF when reading a line
`
Hi @isolatedinformation,
Your issue is difficult to diagnose without more information.
Could you provide the source code for the aliceTest.py and bobTest.py you are you using? What is the contents of run_example.sh?
Also, input's behaviour changed between python2 and python3. Which python version are you using?
`from SimulaQron.general.hostConfig import *
from SimulaQron.cqc.backend.cqcHeader import *
from SimulaQron.cqc.pythonLib.cqc import *
from SimulaQron.toolbox.measurements import parity_meas
import random
#####################################################################################################
def main():
##################################################################################################
main()
`
It is a similar code for Alice also. I'm using python3. The contents of run_example.sh is the same as the one for the example of Mermin's game.
Your code works for me. The problem you've encountered is not related to SimulaQron, rather it is likely related to your environment.
Where are you running the code? Are you using a terminal or an IDE console? Some IDE console don't support STDIN, which results in python's input raising an EOFError.
Try running your code using python bobTest.py in one terminal, and then in another terminal python aliceTest.py and see if you can get input working.
The input works while running the files seperately. But while running it through the shell script it doesn't work. I'm using the terminal.
Could you post run_example.sh here? I am guessing it contains something like:
In bash (the most common Linux scripting language), adding an ampersand (&) to the end of a line tells bash to run that command as a background process.
A background process' STDIN (standard input, where python's input reads from by default) is not connected to your STDIN (which reads your keyboard presses by default). This is likely causing your problem, as python errors as soon as it finds out it can't read STDIN.
If both your python programs need input then you will have to run them in separate terminals. If only one of your pograms needs input then you can disable backgrounding the program by removing an ampersand.
For example, if aliceTest.py is the only program that takes input then your run_example.sh should look something like
This would run bobTest.py in the background, but run aliceTest.py as a foreground process which reads from your terminal's STDIN.
Thanks! It works now :D
