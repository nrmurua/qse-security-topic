Just an idea that might be useful: we could add the option to draw the Rydberg blockade radius around the atoms in the Register, in typical unit-sphere fashion.
Further on, we could even combine this with a routine to extract the maximum Rabi frequency from a sequence, to automatically determine the Rydberg blockade radius.
Another idea would be to take in the Rydberg radius and spit out the corresponding graph, like we do in MIS problems. Something like a Register.to_graph(blockade_r) method.
What do you think @lhenriet , @sebgrijalva , @cdalyac ?
Good idea and I agree, it felt like this part was missing. 100% would use.
Seems like a cool idea!
take in the Rydberg radius and spit out the corresponding graph, like we do in MIS problems. Something like a Register.to_graph(blockade_r) method.
I'm not sure I follow, how will you determine the corresponding graph? i.e. what is your initial information?
If two nodes are less than Rb away, they are connected by an edge.
Hey everyone! I'm implementing this thing, it's pretty much done. However, I have a question for you: how do you want to deal with edge cases where the atoms are exactly the Rydberg blockade radius away? In the example above, you see how some atoms are connected but not others, simple because of the rounding.

This is the case we don't want, so I would either give a bit of margin above or below, so that every atom that's Rb away is either connected or disconnected. What's your take on this @sebgrijalva @cdalyac ?
I'd say we give a bit of margin below so that if the effective distance is r_b + epsilon,  (with epsilon = 1e-8 as discussed with @HGSilveri ) we still see the link.
