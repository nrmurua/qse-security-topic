The method quantum_info.analysis.Z2symmetries was created as a copy of the similar class from opflow to prepare the deprecation of this class.
The type inputs in this new class were changed from list[Pauli] to PauliList.
However I just discovered that PauliList cannot be instantiated with an empty list.
The method Z2symmetries.find_z2_symmetries creates an object of the class Z2symmetries which will be empty in some cases. In theses cases the output is cls(PauliList([]), PauliList([]), [], None) which is raising an error.
One should be able to instantiate an empty Z2Symmetries object.
Z2symmetries.find_z2_symmetries should not give errors on empty operators.
My suggestion is to extend the typing PauliList to list[Pauli] | PauliList.
This would resolve the issue by replacing all cls(PauliList([]), PauliList([]), [], None) with cls([], [], [], None).
I think it makes sense to support both because we can iterate though them the same way. We also won't use the additional features of the PauliList for applications to symmetry reduction
How about using Optional[PauliList] and None can represent empty?
Yes this should work too. Many of our checks are currently based on the length so we would need to first test the non-emptiness and the matching size. I'm also fine with that
Sorry, this is my bad for suggesting using PauliList. It might be better only to use list[Pauli] (or Iterable[Pauli]) suggested by  @woodsp-ibm .
I think we all believed it wouldn't cause an issue. Thank you for the quick reply
