The current releases of pydot has a compatibility issue with it's upstream dependency pyparsing causing parsing errors that introduce empty nodes into visualizations (see: pydot/pydot#280). For example: https://qiskit.org/documentation/stable/0.34/stubs/qiskit.visualization.dag_drawer.html#qiskit.visualization.dag_drawer This raises a question why do we need to be using pydot for graphviz based visualizations at all? We're just using it as a library to call subprocess on graphviz for us and not leveraging the parsing or dot file building capabilities of pydot (with the exception of the pass manager drawer but this is easy to refactor).
Instead of using pydot in qiskit we have two alternative options available we either can replace the pydot usage with a direct subprocess call to graphviz, or we can leverage retworkx's built in graphviz visualization function: https://qiskit.org/documentation/retworkx/apiref/retworkx.visualization.graphviz_draw.html#retworkx.visualization.graphviz_draw
If we use the retworkx function we can remove a lot of boilerplate code to deal with i/o and image objects too.
HI @mtreinish can you please assign this to me. Interested in working on this enhancement.
I've assigned you, @AshwinKul28, let us know if you need anything more that's not in the contributing guide.
The dag_drawer() function has been updated in #8162 to close this issue we still need to update the coupling map drawer, pass manager drawer, and the equivalence library drawer.
The other drawers identified by @mtreinish specifically are:
I'll try to work on these too to close this issue entirely; however, it may take me some time.
