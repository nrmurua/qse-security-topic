Building with both pip install . and cmake .. fail.
Follow the instructions, either pip install . or mkdir out; cd out; cmake ..
There are a variety of error messages that depend on how many times you have tried to build.  One of the most important is
Build succeeds
See this web page conancenter-declare-bintray-obsolete
The following allows the standalone build to succeed, but not the python build. Maybe the latter has stale files from earlier failures.. The python build also succeeds if you first delete ./_skbuild.
I am in a venv.
conan is at /path/to/venv/bin/conan.
Issue #970
Aer doesn't specify the Conan remote to use - it'll be getting pulled in from the conan defaults (or potentially your ~/.conan file).  Just to be safe: are you sure your SSL libraries are configured correctly, and that you've got all the requisite certificates installed?  Conan Centre also isn't exactly a pillar of stability, unfortunately.
For what it's worth, I was able to build current Aer from source right now on Python 3.10 on macOS.
Conan Centre also isn't exactly a pillar of stability, unfortunately.
This agrees with the buzz online. I tried several times to see if was temporary.
I thought it most likely that this is not a problem with aer per se, but neglected to mention that in the report above. I searched for the name of the old server, but only in the the virtual env where conan is installed (and aer source, etc). I didn't realize that I had ~/.conan. Looks like the server is in ~/.conan/remotes.json and it was a couple of years old.
What threw me off is that conan is installed in the venv, so I expected the configuration to be there. I would have guessed that the most important part of a system like conan to keep in a virtual environment is exactly the configuration, rather than having it be the only component that is excluded.
The timeout error happened only the first time I tried to build with python. Subsequent attempts failed with a "no such file or directory" error. But, there was not enough information to get clues about which file was missing, or where it should come from. The tmp directory is removed upon failure, so you can't look there. The error message mentions a log file. But, that file has no mention of an error or any missing file or anything related. (It's enough to drive you to use rust !)
After a while, I decided to build the standalone just for debugging. Then you see the name of the server than can't be reached. And the message occurs every time you try. So, I was able to search online, find that the server has been deprecated for some time, and then try to find where in the virtual environment this information is stored (or course, it's not)
We can close this issue. But, maybe something in CONTRIBUTING.md about trouble shooting would be reasonable. You can't cover all contingencies there. But, given how obtuse the error is, this might be warranted.
