The SparsePauliOp does not handle coefficients correctly or is used against its specification in opflow. With the help of @Cryoris we noticed the following:
which is probably the root of the problem with, e.g., the commutator below.
The same problem occurs by a direct calculation:
Or handling it differently in opflow.
Following up from a discussion with @chriseclectic, the solution is probably just to replace SparsePauliOp with PauliList in opflow. @ikkoham since you know these classes the best, could you maybe have a look? ðŸ™‚
Yes. This will fix this issue. #6826
The PR linked above doesn't fix the issue as described above since the comparison of the commutator (as a PauliSumOp) doesn't work with the reference 2j *Z (as PauliOp). Is this something we want to support?
With #6826:
Hi, thanks for the fix. I checked, it seems it should work now. For me it's important that it does not produce 0 but a valid answer. The type is not crucial.
