@imranashraf , we are still facing a lot of issues with installing OpenQL. Mostly on windows but also on mac.
The core problem here is that successful installation of OpenQL requires the right versions of different compilers and python to work together. Installing OpenQL should be as simple as pip install openql, not requiring cloning the repository. Making this installation that simple would involve two steps
In order to be able to do pip install openql without needing to configure the compilers, we need to provide precompiled binaries. Once you are able to compile on a (windows) system this is actually quite trivial.
The single line python setup.py sdist bdist_wheel does exactly this. It runs setup.py like we already do but also creates several files in  OpenQL/dist/. These files are openql-0.7.0-py3-none-any.whl and openql-0.7.0.tar.gz.
A precompiled binary should be enough to run it on any other system (of the same OS and python version) and is enough to upload the package to PyPI, the standard python package manager.
Details are described here:
https://packaging.python.org/tutorials/packaging-projects/#generating-distribution-archives
Since we already test if it is possible to compile on different systems I think providing the wheel package is a natural thing to do as well. Especially as it saves us major problems on the DCL side in deploying this to our setups.
Just having the wheel image available with every release is a big improvement for us. You can either attach this to the release on github or upload this to PyPI.
The details of uploading a package to PyPI can be found here: https://packaging.python.org/tutorials/packaging-projects/
Most of these details involve setting up the setup.py file and creating the wheel. Steps we have already done.
I know that I have previously promoted using conda for this. The idea would be to use conda install for installing the package. This idea still holds although we have since moved from using conda as our package manager to using pipenv (based on pip). However, the build-recipe provided right now still tries to do the compilation on the host pc (and tries to solve the environment to allow this). Besides, the conda-built recipe does not work #240 , at least on my system.
@imranashraf Let me know if it is possible to do these things as it is quite important for the usability in our lab to have an easy installation and upgrade path for OpenQL.
@AdriaanRol @imranashraf
I can attest that having such a functionality would greatly facilitate our work here at the lab. I have also been running at problems compiling OpenQL on my system; distributing pre-compiled binaries, I believe, would solve this!
@AdriaanRol I am having a look at it. I dont see any problem and it should definitely be possible.
@AdriaanRol and @MiguelSMoreira i have created python wheels for openql version 0.7.0 for win, linux and mac which can be found in the release section for now:
https://github.com/QE-Lab/OpenQL/releases/tag/0.7.0
can you please verify if you can install openql on your systems by using corresponding wheel?
Great, I'll take a look  at them.
I've tried to install the openQL 0.7.0 wheel package from  releases as provided by @imranashraf. But unfortunately, the package is built for python3.7 while our systems (at DCL) still run on python3.6. I've tried to upgrade one of the systems to 3.7 but run into some issues with other packages. I could successfully install and import the openQL package but was not able to successfully run our tests. The tests failing have to do with the upgrade to 3.7 and (other) packages. So, for now, I cannot confirm that the openQL 0.7.0 wheel package is working.
@nyxus kindly check the updated wheel in the releases.
@imranashraf, thanks! Will check the wheel packages this afternoon!
@imranashraf, I've tried to test the packages but still got the error that the package is built for python3.7.
Note the error ImportError: Module use of python37.dll conflicts with this version of Python.
Update:
I've installed openQL by cloning the repo and is able to run all our test successfully.  So it is not the source code which is causing the error.
I think the problem is that the 0.7.0 release does not include PR #242. Because when I try to directly install openQL directly from the repo:
pip install git+https://github.com/QE-Lab/OpenQL.git@0.7.0 the same problem occurs.
@nyxus indeed. released a hotfix with PR #242. kindly test:
https://github.com/QE-Lab/OpenQL/releases/download/0.7.1/openql-0.7.1-py3-none-win_amd64.whl
Release 0.8.0 contains wheels for Linux, windows and OSX. closing this issue
