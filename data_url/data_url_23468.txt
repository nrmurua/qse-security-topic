We use sphinx to create documentation for our quantify-scheduler and quantify-core packages. It looks like when we have qcodes==0.36.0 installed the building of the documentation fails.
Unfortunately, the stack trace is not informative in where and why it happens:
just that it occurs right after autoapi is running.
After some trial and error I found out that if I do a pip install --no-deps qcodes<0.36.0 the build succeeds, and when I do a pip install --no-deps qcodes==0.36.0 it fails.
Unfortunately, I don't have a minimal working example other than pip installing our quantify package and building the documentation locally:
this will fail the build with the error I pasted above. After doing a pip install --no-deps qcodes<0.36.0 it succeeds.
Are you using the QCoDeS sphinx plugin ?
The only other thing that I can think of is the lazy loading that was added with #4788
Hi @jenshnielsen, could you share a link to the plugin you mentioned? I'm not able to find it myself, unfortunately. I will investigate the lazy loading thing.
importing h5py directly solves the issue ðŸ˜„. For completeness, I added the line import h5py inside our conf.py file and now the documentation build succeeds. We can close this issue, but I'm still curious about the qcodes sphinx plugin/extension.
Great to hear that we found this issue. It would probably be good to report it over here https://github.com/scientific-python/lazy_loader/issues if we can find a way to reproduce  it a bit simpler.
We are using this https://github.com/QCoDeS/Qcodes/blob/master/qcodes/sphinx_extensions/parse_parameter_attr.py extension to be able to document Parameters on instruments a bit better (instance attributes defined in __init__
Thanks :) created an issue over here scientific-python/lazy_loader#37
