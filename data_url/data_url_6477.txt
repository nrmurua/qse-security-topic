Description: Sometimes simulate_expectation_values() produces incorrect expectation values. Noticed while trying to compute H2 ground state energy with the 6-31g basis.
Have confirmed this behavior for different installation instances.
Hope the script below that reproduces the behavior uses cirq and qsim routines correctly---can you check this? Thanks.
Versions:
OS: linux (Ubuntu 22.04)
Python: 3.10.4
openfermion==1.5.1
qsimcirq==0.15.0
cirq==1.1.0
How to reproduce: use the python program below. The python script is a toy example. It computes the average value of an observable in exact simulation with two different methods: statevector + expectation_from_state_vector() and simulate_expectation_values(). The script shows results for different observables (the observable is formed as a single PauliSum by adding incrementally strings from a pre-defined set HAMILTONIAN) in order to demonstrate that the behavior occurs for some but not all observables. The expectation values computed with two different methods agree most of the time, and then suddenly start to diverge. This behavior can be seen in a larger computation too. Unfortunately, for the large computation at hand the final result is 300% off when computed with simulate_expectation_values(). Since this affects both CPU and GPU, we can't use the GPU for simulations.
Why think simulate_expectation_values() gives wrong values while statevector + expectation_from_state_vector() is correct? This is based on actual values for H2 ground state energy. So far, the latter routine has produced correct values for all observables we tested.
Also, by trial and error we noticed that when identity is taken out of the observable, then the two methods always agree. To see this, comment in/out the first, identity term below in HAMILTONIAN. However, since it's just an observation based on a limited set of instances, there's no guarantee this work-around will work for an arbitrary observable.
The behavior is present in both CPU and GPU simulations and larger circuits (the one in the toy example is a trivial circuit).
Python script for reproducing the issue:
I think this issue was fixed in #588.
Yes thanks, qsim-v0.16.3 works: the above script does not show discrepancies.
