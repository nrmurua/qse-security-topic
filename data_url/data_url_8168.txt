Description
Depending on the length of the array of coefficients given to a QobjEvo, sesolve() gives erroneous results.
Minimal working example
I am trying to simulate the behavior of a system of two atoms, each one with three energy levels, using QobjEvo.
Preamble:
Consider the following arrays of coefficients:
They both describe similar pulses that are applied in sequence to each of the two atoms. They look like the following:

and their only fundamental difference is the length of the pulses (30 time steps vs. 33 time steps; these values are not essential for the bug report). I construct and simulate the Hamiltonian for this system (with a particular initial state) as follows:
Expected behavior
If I choose the 30 time steps pulse sequence, I obtain the expected results:

However, choosing the second one (33 time steps) gives:

In fact, further analysis shows that the evolution discards the evolution after the first "blue" pulse.
Environment
I've tried this in the following environments with the same results:
Additional information
On the other hand, if I shift the Hamiltonian by a very small amount:
Then the results of sesolve() for all array durations agree and are correct.  Is there some issue with the fact that the Hamiltonian reaches zero?
Try adding max_step to the options: qutip.Options(max_step=5) with max_step lower than half the length of the pulse.
The solver can make very long steps and miss pulses without that options.
See also: #1265.
Thanks, this seems to work. Also thanks for the reference.
