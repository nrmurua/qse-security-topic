The transpile method here relies on the pass manager to modify the DAG in place.  The pass manager uses the values returned by the passes and then discards them.  See here.  See also #897
The transpiler should use the values returned by the passes.
Make PassManager.run_passes() return a DAG.  Make transpile() use this return value.
The reason for dag == dag2 it is because they are the same:
However, I do think the new transpiler should return something: the property set. What do you think @ajavadia?
This is a bug. dag should not be equal to dag2, as the TransformationPass is changing it (taking a non-empty dag and returning an empty dag).
The bug comes from exactly what is described. The PassManager is internally catching the returned DAG from each pass and passing it to the next pass, but once all passes finish, the final DAG is not propagated up to the transpiler.transpile(). So it looks like nothing happened.
I continue recommending the DAG to be an immutable container but for that, the DAG and DAG-building APIs should be thoroughly reworked.
