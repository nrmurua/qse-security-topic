When no Classical register is defined, (you don't measure the qubit), if you execute the circuit on real backend , then you get  the error "JobError: 'Invalid job state. The job should be DONE but it is JobStatus.ERROR'"
A warning message would be welcome to specify that "No classical register has been defined" and  prevent the circuit from executing instead of ending with this "JobStatus.ERROR".
(This happens only real backend)
Another validation error @taalexander, like #3251 and other. Right?
One would not want this warning necessarily when the execute() target is Aer or some other simulator.
Is there a canonical way to determine if the target is a simulator other than exhaustive enumeration? And such a detection mechanism further would need to work against 3rd-party backends, e.g., QuantumInspire.
Are Qiskit warnings coded in such a way that classes of them can be suppressed via an environment or configuration setting or kwarg?
Answering my own question above with another question :)
Is backend.configuration().simulator guaranteed for any kind of simulator? Local and/or remote?
That's how it's defined in the qobj spec, and that's how Aer/BasicAer/IBMQ simulators all report  currently.
âœ… Looks Good
Note: Even if I don't defined classical register in a bell circuit. The circuit is validated and it's get executed on the real backend and the experiments shows the {} counts.
Similar to #3345 (comment), I'm going to close this as stale now.
