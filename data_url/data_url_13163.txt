It could be useful to include tools to implement randomized compiling (RC), as noted already in #1245, as the technique is proving useful and widely adopted.
A simple approach could be that of applying a subset of the fully general technique, limiting to applying RC to CNOT gates with the introduction of Pauli rotations.

Pseudocode below
where the protocol is similar to digital dynamical decoupling (DDD): it finds, based on a rule, the gates to substitute. It has a difference with respect to DDD, more similar to ZNE or PEC, in the sense that it generates multiple circuits based on one original and includes an extrapolation part (simple average) after the execution.
"Hypothesis Testing for Error Mitigation: How to Evaluate Error Mitigation" https://arxiv.org/abs/2301.02690; the slides (relevant snapshot above) from @natestemen talk in the journal club of Quantum Wednesday.
"Mitigating depolarizing noise on quantum computers with noise-estimation circuits", https://arxiv.org/abs/2103.08591
I can take this as part of my previous attempt at a RFC.
I have got one issue that I am currently working on and after that I was planning on linking a newer version of the randomized compiling RFC anyway. This was my plan for the upcoming milestone.
Focusing sounds great to me, @purva-thakre!
@nathanshammah What was your motivation behind using rule="cnot" ?
To me, it looks like you want to apply randomized compiling to the CNOT gate only ? Or just 1 layer in the circuit which might contain other gates along with the CNOT ?
Consider reusing PEC modules- idea of replacing a gate.
@natestemen, @purva-thakre, @Aaron-Robertson, @andreamari
Here's the current working doc https://docs.google.com/document/d/1RLt1STCn1ct4IJBz61Zd8R1ABR6dZbTZj7ZTKoYHSU4/edit?pli=1#
