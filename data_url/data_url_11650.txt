I am facing an issue with the qiskit.optimization  module? When I try to directly convert an integer programming problem into an Ising problem, I get
QiskitOptimizationError: 'The type of variable must be a binary variable.'
MWE:
Output:
When I convert it into a binary optimization problem, the constraints due to the ranges of the integer variables are not correctly translated.
Code:
Result:
x=[0.0,0.0,0.0,0.0,0.0], fval=16100.0
I would appreciate if you could point me to a better venue if this channel is not appropriate.
See above.
It should not throw error during integer to ising conversion. During integer to binary conversion, the restrictions due to the upper and lower limits should be maintained.
Hi @omarshehab , in my understanding, i think the solution you got is good with the integer to binary conversion. In fact, your new function to minimize is 5300 x@0 + 5300 x@1 + 5500 y@0 + 11000 y@1 + 22000 y@2 + 16100 and by replacing each variable by 0 you obtain 16100 which correspond to the evaluation of your original function 5300 x + 5500 y when x=2 and y=1. Tell me if i am wrong.
For directly convert an integer problem to Ising problem, the QuadraticProgramToIsing() method doesn't support it: https://github.com/Qiskit/qiskit-aqua/blob/1e6edc4841b96fbabb39ff97421adb4b0721bfc2/qiskit/optimization/converters/quadratic_program_to_ising.py#L40.
I don't know if it's possible right now in Qiskit but maybe @stefan-woerner can give you some information about it.
@omarshehab, I agree with @AzizNgoueya, the output looks correct. The lower bound of your integer variables is part of the offset. To directly (try to) convert a given quadratic program into QUBO form (i.e. replace integer variables by binaries and add linear equality constraints as penalty, but note, this is a QUBO, not Ising, i.e. {0,1} variables, not {-1, +1}) you can use the QuadraticProgramToQubo converter, which is just a wrapper for the other two converters you used. If you want to get an Ising operator, you can first use QuadraticProgramToQubo and then QuadraticProgramToIsing.
The output looks correct to me too. You can convert your QuadraticProgram to QUBO (including integer variable encoding, penalization of constraints) by QuadraticProgramToQubo. When you apply QAOA to the QUBO, you don't need to convert it to Hamiltonian by yourself. MinimumEigenOptimizer does it internally. Ref. If you want to convert QuadraticProgam to Hamiltonian manually, you need to apply various converters taking care of preconditions (e.g., QuadraticProgramToIsing does not allow integer variables and constraints, etc.) Ref.
output
For directly convert an integer problem to Ising problem, the QuadraticProgramToIsing() method doesn't support it:
Hi @AzizNgoueya , thank you so much for your reply. I have submitted a PR adding a sentence mentioning this piece of information to the Qiskit Aqua optimization tutorial.
@AzizNgoueya , @stefan-woerner , @t-imamichi : thank you so much for the explanation. I was able to verify that they are indeed the minimum. Thanks.
