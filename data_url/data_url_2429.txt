Is there a counter-example in the library at the moment?
Do we worry about the case where apply unitary is used to do something efficiently where the unitary would be very large?
I think the implication isn't that the library would be using the unitary directly (the whole point of apply unitary was to avoid this), but rather that a user might want to know the unitary. The implication seems to be that since the unitary can be constructed from _apply_unitary_, if _unitary_ isn't defined cirq should perform this construction for the user who was interested rather than making them do it.
This has been completed right?
It looks like #1789 did this: https://github.com/quantumlib/Cirq/blame/master/cirq/protocols/unitary.py#L155
