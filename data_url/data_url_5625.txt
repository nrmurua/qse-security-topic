The following code leads to a segfault when running the simulator:
When n=39 the circuit has 78 qubits, 39 classical bits and a single Toffoli gate. The simulation step segfaults.
However if n=52, the circuit runs without segfault. This also happens with different circuits. The process doesn't run out of memory.
Also for n=39, doing the Toffoli gate between qubits from only register A doesn't result in segfault, but using qubits from both registers results in a segfault. But if we now set n=81, it segfaults in both cases. But if we set n=96, it doesn't segfault anymore.
Run code above. It will print "Circuit transpiled." and then segfault. I tried it on ArchLinux and Windows.
The program should not segfault.
I have no idea where this bug comes from, it is really weird.
Here is the core dump from the system logs:
I found issue in calculating required memory for statevector because it uses 64 bits integer that overflows when number of qubits so large. This issue causes wrong method selection (statevector was selected) and segmentation fault.

Thank you! This fixes the issue in all of my test cases.
