There is a significant difference in the execution probabilities between the origianl and transpiled versions of a quantum circuit.
To reproduce the issue, run the following Python code:
Upon execution, the result differ in the original and transpiled circuits, as shown below:
The probabilities for both the original and transpiled circuits should be consistent.
During the transpilation process, there is a NumPy warning related to matrix determinant calculations. This could potentially be the source of the issue:
It's possible that an incorrect use of the NumPy library within Qiskit transpiler is causing the discrepancy.
Please check issue #3689 .
Hello, thank you for the comment.
Upon reviewing #3689, I noticed that while both issues are about the transpilation/optimization process, this issue doesn't appear to be a duplicate. Specifically, I applied the same testing procedure on my end and found no discrepancies or NumPy warnings in the example circuit from issue #3689.
Given these differences, could this be considered a new, unique transpiler bug? I'm interested in delving into this further and could allocate time for investigation (and bug fix, if possible) this winter.
I've tested the above circuit and it seems that with current main HEAD it works fine, and by bisecting I found that from this commit onward the divergent behavior disappeared.
@alexanderivrii would you kindly take a look if this is the case?
It seems this bug has been fixed in the latest version (released shortly after the issue was created). Closing the issue. Thanks to @doehyunbaek for pointing this out!
