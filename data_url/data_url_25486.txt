@Aravind-psiog commented on Sun Aug 14 2022
Description
Currently back-end has zero coverage on test cases. Team Psi will cover testcases for FastAPI. This issue is more of what approach will be used to bring maximum coverage out of the testcase in an efficient way.
Frameworks
FastAPI testclient:
Since FastAPI is based on Starlette, Using the inbuild TestClient will be the best approach and reduces manually setting up a testclient.
unittest.mock:
This library comes in handy for replacing part of the system with mock objects instead of writing a new code base for duplicating/mocking purpose.
pytest:
With help of pytest, the tests can be grouped together which makes complex testcases easier to read and troubleshoot and identify a particular test case in a larger code base. Debugging becomes more effective with high- and low-level logs.
Road map for implementation:
FastAPI being the API framework, TestCLient will be purely used in API testing for both positive and negative testcases.
unittest.mock will be lean in API level testing but will play as a major framework in functionality tests.
pytest will be used to group test cases to run as a group or individual which has vast number of advantages when comes to debugging.
