The Decadac itself, the slots and the channels initialize with minimum and maximum values for every channel at +-5V:
Problems with this are:
The min_val and max_val attributes have two purposes:
The min_val and max_val attributes can simply be set per channel to achieve the right scaling. But this leads to problems with validators and ramps that will not update
-> we should add the option to provide min_val and max_val as dictionary to the constructor and maybe supply a method to change those.
Once there is time I can make a PR. For now I just wanted to share the issue and get feedback, especially from @jenshnielsen and @WilliamHPNielsen who wrote the driver.
Good catch. This is really important as the min_val and max_val are used in the conversion and therefore the conversion is currently WRONG! (the _dac_v_to_code function). Please change this ASAP.
I generally agree with your outline of a solution; have a variable to store the voltage mode (1, 0, -1), use that for conversion, and allow users to specify other compliance limits on top of that. I don't understand what you mean by
The min_val and max_val attributes can simply be set per channel to achieve the right scaling. But this leads to problems with validators and ramps that will not update
Validators should be handled by user-defined compliance limits implemented in software as parameters. Ramps? What's the problem here?
