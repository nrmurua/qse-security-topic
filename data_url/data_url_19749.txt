logging.logreader.txt
Name                        Version                   Build  Channel
qiskit-aqua                    0.5.6                    pypi_0    pypi
qiskit-ibmq-provider      0.3.2rc1               pypi_0    pypi
qiskit-ignis                     0.2.0                    pypi_0    pypi
qiskit-terra                     0.9.0                    pypi_0    pypi
Problem: Tutorial ignis_logging.ipynb fails when using log_reader.read_values() function.  The ignis configuration file  "USER HOME DIR"/.qiskit/logging.yaml  parameters do not seem to be taken into account.
file_logging: true		# Enables/disables file logging (true/false)
log_file: ignis_test_log.log	# Name of the file log
max_size: 1000000		# Max file size (in bytes).
max_rotations: 5		# Max number of file rotations
Please note that specifying the log file to the log_reader works fine # log_reader.read_values("ignis_test_log.log")
Thanks @patdenim for submitting this. Which OS are you running this on ? Can you specify the full path of your logging.yaml file ? Thx
Hi Eli, i'm running Windows10 and the path of the file is in my case c:\users\PatrickMensac.qiskit\logging.yaml
from what i could test, the logging.yaml seems correctly parsed by  ignis_logging.py

Eli, i guess that the problem seems to come from the re.compile() from ignis.logging.py  in get_log_files() function.
I could made it working by commenting the re.compile() line

Thks
Patrick
Thanks Patrick for looking at this. Let me check this first before applying a change. I'll try to tend to this during the weekend.
Hi Patrick, I've tested it on Linux, it works fine. Maybe there is an issue with how the regular expression is interpreted or matched in Windows. I'll check this on Windows next.
The point of this regular expression check is to retrieve only the file names which comply with the naming convention of the file rotation.
Hi Eli,
This seems to be related to the backslash "" in windows ... and replacing "" by  2 "\" works ...
m = re.compile(os.path.abspath(os.path.abspath(file_name)).replace("\\","\\\\") + r"$|" + os.path.abspath(os.path.abspath(file_name)).replace("\\","\\\\") + r".\d+$")
That should also work for Linux ...
Patrick
Hi Patrick, you are correct. I've checked this both on Linux and Windows and it works. I'll open a change request to apply this. Thanks!
