!!opap and dict_like memorybranches coexist
-> delete !!omap-type
Also something very intriguing (not sure if it is designed to be this way or if it's a bug):
p.c.scopes --> returns a MemoryBranch
p.c["scopes"]--> returns a CommentedMap
To be honest, for simplicity, I would give up the support for point-notation and I would also enforce only one yaml library: ruamel.yml (even if it's not a standard one, this will make testing much more straight-forward).
I also realized that the MemoryBranch doesn't implement the full API of a dict. This is not nice because things like set_setup_attributes(**self.c) are not possible. I guess the reason is that a dict needs to implement some public methods such as keys(), values() iter()... and that's another argument to remove the support for point-notation.
I moved the discussion towards the corresponding section of the wiki
---> https://github.com/lneuhaus/pyrpl/wiki/MemoryTree-API
should be good now
