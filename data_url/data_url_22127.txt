As discussed elsewhere, there are (I think still unpublished) bindings by Alessandro Di Federico. Since we currently spend up to a half (!) of the time concatenating strings in llvmlite, migrating to the LLVM-C API could potentially result in significant speedup.
Note to self. New bindings are MIT. Involves moving to llvmlite 4.0.
Bindings: https://github.com/revng/llvmcpy
Or more precisely it is an LLVM binding generator, not LLVM bindings. This also greatly reduces (ideally to zero) the amount of work binding-side that needs to be done when upgrading LLVM in the future. No more hacking around llvmlite limitations \o/
LLVM-C binding just gained DIBuilder support, which means we will retain the debug information when migrating to LLVM-C.
What kind of speed improvement can we expect from this, exactly? (compared to the whole ARTIQ stack)
You can run the profiler, then cut the time spent doing anything LLVM-related in half.
llvmlite isn't the biggest problem (#1380) and is not used anymore in NAC3 anyway.
