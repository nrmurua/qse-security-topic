When I try to solve in integer programming problem which requires more than 16 qubits, I see the following error.
 ValueError: to_vector will return an exponentially large vector, in this case 524288 elements. Set massive=True if you want to proceed.
Create the following model.
Now use NumPyMinimumEigensolver and MinimumEigenOptimizer to exactly solve the problem to see the following error.
Usage of a greater than 16 qubit problem should be gracefully handled.
Call to VectorStateFn.to_matrix() in MinimumEigenOptimizer should allow the Qiskit programmer to set massive = True.
See #1284 which would address this more generally
#1337 addressed this to allow the gate to be opened to permit larger matrices - you can now set a flag in aqua_globals to globally control this. By default its closed so you will see a similar massive message unless changed. Note memory requirements for these are still in play but now you may be able to have larger matrices depending on your machines capacity.
