in particular we need to make sure random seeding works properly especially for multiprocessing simulations.
Python uses the Mersenne Twister as the core generator. This will give a reproducible sequence given a seed, but it is not sufficient for this purpose for 2 reasons:
We need to expose the setting of a seed more clearly for simulations, including possibly passing them on to other processes (not a single seed for all such processes, but the ability to specify them separately).
Users may wish to plug in totally different random generation, such as low discrepancy sequences.
Note that right now all our randomness for simulation is coming from numpy.
Agree with 1.
For 2 we should likely add something that does the right delegation to numpy in cirq.  That way we are explicit about this.
Since we deleted the multiprocessing simulator, this now just depends on the numpy random seed.  We should add this to documentation, and then close.
Or better yet allow it to be set in the simulator.
