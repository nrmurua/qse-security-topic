There are (at least) two execute functions in Qiskit, one is qiskit.execute and one in qiskit.aqua.QuantumInstance.execute.
When interacting with a remote device, the former sends the job to the cloud and one can retrieve the result later using .result(). The latter freezes the program until a result is returned. It would be desirable if both functions just returned a job handle the results of which can be retrieved later.
The QuantumInstance in Aqua holds a backend and various run time config so that a QuantumAlgorithm in Aqua, such as VQE, when passed this entity on its run() method can use it to execute the various circuits it needs to complete the run() and return a result to the caller. As such this a synchronous call designed really for use by Aqua QuantumAlgorithms rather than being called directly by an end-user who has circuits they want to execute. In that regard using Qiskit Terra would offer greater flexibility. Now jobs can be monitored as Aqua runs the algorithm, but algorithms rely on getting the results back, and the interpreting them and maybe iterating again until completion.
Do you have some specific use case you are trying to solve here?
I see, that does make a lot of sense indeed. We were working on parallelizing VQE during the last Hackathon and this is a problem we ran into. The idea was to send the same circuit to different backends simultaneously to increase the number of samples taken in a given time.
It's only really relevant though once there is a massive number of devices available, so it's not urgent and it seems like it would require quite an overhaul.
I will note that  potentially a sub-class of QuantumInstance could be created that takes multiple backends and its execute/transpile methods spread the circuits out over the set of devices. This would allow the Algorithms to run without knowing the circuits were being parallelized over different devices. Measurement mitigation ccts would then need to be managed per device. Whether an algorithm worked well might depend on how much it was expecting certain characteristics - for instance the entanglement map in var forms might not be so great for all the devices. I am not sure this needs to remain open - figured I'd add this final comment as the thought had occured to me how it might be done a little more transparently within what we have. For now though I think this can be closed.
Closing - as per above discussion.
