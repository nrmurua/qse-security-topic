Current Problem
If ReverseAdvanceComposite.sample is not given an anneal_schedules parameter it samples directly from the child without doing any reverse annealing at all (reversecomposite.py lines 86–87).  Similarly, if ReverseBatchStatesComposite.sample is not given an initial_states parameter it samples directly from the child without doing any reverse annealing at all (reversecomposite.py lines 180–181).
I'm new to reverse annealing and struggled to realize why nothing seemed different when I used either of the reverse-annealing composites.  I didn't realize that each composite has its own parameters that must be provided for reverse annealing to take effect.
Proposed Solution
Rather than silently fall back on forward annealing, the two reverse-annealing composites should throw an exception if a parameter needed for reverse annealing is not supplied.
Alternatives Considered
An alternative is for the documentation to clarify that nothing special will happen unless certain parameters are provided.
I think these would be a good candidates for the Initialized ABC added in dwavesystems/dimod#644 . It would still pass silently, but by default some reverse annealing would be happening.
The reason for the silent pass is that a very important part of the Sampler abstraction is not requiring any parameters except the BQM/Ising/QUBO. Even though that does sometimes create some unintuitive behaviour, as seen here. Also agree some clearer documentation would help.
