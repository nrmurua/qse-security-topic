A class that wraps the string measurement key, encapsulating any measurement key related logic and provides various utils for users. Phased rollout to eventually move away from manipulating strings to a well defined interface.
Is your design idea/issue related to a use case or problem? Please describe.
Currently, the measurement keys are plain strings. We need more structure and logic to the key itself to have a cleaner way to:
Describe your design idea/issue
RFC: https://tinyurl.com/structured-measurement-keys
The initial part outlines potential approaches to go about this. The "Detailed Design" goes deeper into the preferred option (based on feedback from cirq-maintainers@) and the implementation/rollout plan for it.
Is this done?
I think there was still a remaining task to rename and deprecate some protocols. While doing that we may want to see if we can speed up the default case for these protocols where nothing is implemented, perhaps removing some magic method options, or just creating an Operation.measurement_keys property, as the protocols do get called in tight loops during circuit construction.
@daxfohl, could you elaborate on the remaining work? IIRC, measurement_key_(objs|names) was the intended end state for the protocol renaming. I'm on board for optimizations, but those can be a separate post-1.0 issue.
Opened #5465 to track optimizations; closing this as complete.
