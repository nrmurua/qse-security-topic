With pedantic checking enabled:
This error occurs after the qubit-mapping pass is run.
The MLIR is
We can see that there is no use of the wire %11#0, which is a violation of wire values being used exactly once.
See code in test cudaq_observe.cpp
All values of type !quake.wire type are expected to be used exactly once.
Not a regression
No response
That may have something to do with the auxillary qubits being created in 
I suspect they need a sink to be added in order to compliant with the "used exactly once" requirement.
There may be additional things in play that have nothing to do with auxillary qubits. For example, note that %4#0 is actually used twice in the example below...once in a sink and then also in a swap right after that. This example has no auxillary qubits.
That may have something to do with the auxillary qubits being created in

I suspect they need a sink to be added in order to compliant with the "used exactly once" requirement.
Yes. When the kernel don't requires the same number of qubits as the number of physical qubits in the device, the pass will allocate the the difference because theses extra qubits might be necessary for routing.
There may be additional things in play that have nothing to do with auxillary qubits. For example, note that %4#0 is actually used twice in the example below...once in a sink and then also in a swap right after that. This example has no auxillary qubits.
We need to have a special way of handling quake.sink. These operation must be postponed during mapping. The current behavior seems to be to only rewire them, we will need to also move them to a appropriate place.
