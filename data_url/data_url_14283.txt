Qiskit provides a functionality which can decompose a matrix into it's pauli sums. It is 'SparsePauliOp.from_operator'. Coincidently, I am working on a problem in qiskit which requires Pauli decomposition of any matrix. I have developed an algorithm which works approx 8-10 times better than the current algorithm in respect of time. I have tested the algorithm on many trail problems. Do you have any test cases so that I can check whether its performing as expected. And if it does I would like to contribute this code to qiskit library. I am new to github, so I'm not aware of the procedure. So can you guide me through it. Thank you.
Great to hear you're working on an improvement!
We have some explicit tests (not a lot though it seems...) in: https://github.com/Qiskit/qiskit-terra/blob/38132d80d30aa383e54fe82a32fb7c86035cda44/test/python/quantum_info/operators/symplectic/test_sparse_pauli_op.py#L155
If you have an update to the function you could replace the current SparsePauliOp.from_operator method with your implementation and run the test suite, see here for some guidance. If everything passes your code should be good ðŸ™‚
Since you're suggesting a performance improvement it would also be great to see a benchmark. Maybe you could time your function and our current one in some examples of varying sizes so we can see how it performs?
I have a matrix how to decompose and can you share your code
matrix =np.array([[1.1, 0,  0,  0,  0.3,  0,  0,  0],
[0, 1.1,  0,  0,  0,  0.3,  0,  0],
[0, 0,  0.9,  0,  0,  0,  0.3,  0],
[0, 0,  0,  0.9,  0,  0,  0,  0.3],
[0.3, 0,  0,  0,  1.1,  0,  0,  0],
[0,  0.3, 0,  0,  0,  1.1,  0,  0],
[0, 0,  0.3, 0,  0,  0,  0.9, 0],
[0,  0,  0, 0.3,  0,  0,  0,  0.9]])
