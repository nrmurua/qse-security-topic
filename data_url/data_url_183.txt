It is unclear what is the semantics of the measurement operation and how it works with cudaq::sample. At first, it seems that a measurement operation only measures the qubit. However, it seems that the operation is not collapsing the quantum state.
Results when compiled in library mode:
Results when compiled in without library mode:
Results when compiled in library mode:
Results when compiled in without library mode:
EDIT: Thanks Ben from point it out that this is definitely valid. The problem is the results retuned.
The runtime (or compiler) should emit an error about the use of a qubit after measurement without a proper reset. (The assumption here is that the semantics of measurement is to only collapse the state, not to reset it.)
It seems that when measurements are not put into variables, only the first measurement of a qubit is considered. This creates an inconsistency with __global__ when there is name---as in this case the last measurement is considered.
Not a regression
No response
The runtime (or compiler) should emit an error about the use of a qubit after measurement without a proper reset.
Why? I believe it is legal to perform quantum operations on a qubit after a measurement even without performing a reset. If the measurement collapsed it to a |1>, then that is still a valid quantum state from which to start operating.
The runtime (or compiler) should emit an error about the use of a qubit after measurement without a proper reset.
Why? I believe it is legal to perform quantum operations on a qubit after a measurement even without performing a reset. If the measurement collapsed it to a |1>, then that is still a valid quantum state from which to start operating.
That is correct, thanks for bring it up.
