Converting a circuit with X**0.5 in it into qasm produces an rx(pi*0.5) operation. This operation is correct, but e.g. qiskit's stabilizer simulator doesn't understand that it is a stabilizer operation.
Should probably check other stabilizer operations like X**-0.5, Y**0.5, Y**-0.5, Z**0.5 too.
Hey! This is my first time trying to contribute to cirq and I am not too familiar with the codebase yet. Could you give me some pointers on how I can start solving this?
Hi @charmerDark, sure!
For these gates, you'll need to look at the _qasm_ method of XPowGate, YPowGate and ZPowGate classes.
There are automated tests covering the translation to and from QASM ensuring consistent unitaries between the different representations: in common_gates_test.py test_phase_insensitive_eigen_gates_consistent_protocols and test_phase_sensitive_eigen_gates_consistent_protocols. Note that qasm tests will only be executed if you have qiskit-aer installed (pip install -r dev_tools/conf/pip-list-dev-tools.txt should do the trick).
However, on top of the consistency checks (which are passing now) I would probably add some explicit tests for these cases, that test the output of cirq.qasm(cirq.Circuit((cirq.X**0.5)(cirq.NamedQubit("a")))), and similarly for Y, Z and the other exponents.
@charmerDark @Rcuz8 please excuse me for picking up this one. Since there was no recent activity on the issue in this repo from you, I decided to give it a try.
@Strilanc @balopat I hope my changes resemble what you had in mind, please have a look at #4113.
@Strilanc #4113 includes the changes for sx, s, and sdg. sxdg is currently not supported by Qiskit Aer. I opened an issue in the Aer repo to ask for the reason. It seems it has just been overlooked. I would be happy to make the changes for sxdg as soon as it's included in Qiskit.
Until then, could you rename this issue to
Output sxdg instead of rx(pi*-0.5) for X**-0.5 qasm
Thanks! ðŸ™‚
@stubbi Thanks for handling this so well.
Fixed in #4688
