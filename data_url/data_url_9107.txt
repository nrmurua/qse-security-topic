First of all, I wish you success in your work.
I get the following error when I test the code.
I'd appreciate it if you could help me.
Thank you
BrokenPipeError                           Traceback (most recent call last)
 in 
69
70 # Run the simulation
---> 71 Simulation(alice, eve, bob, charlie).run()
72
73 # Display the images Alice sent, Eve intercepted, and Bob received
c:\program files (x86)\microsoft visual studio\shared\python36_64\lib\site-packages\squanch\simulate.py in run(self, monitor_progress)
76
77         for agent in self.agents:
---> 78             agent.start()
79
80         if monitor_progress:
c:\program files (x86)\microsoft visual studio\shared\python36_64\lib\multiprocessing\process.py in start(self)
103                'daemonic processes are not allowed to have children'
104         _cleanup()
--> 105         self._popen = self._Popen(self)
106         self._sentinel = self._popen.sentinel
107         # Avoid a refcycle if the target function holds an indirect
c:\program files (x86)\microsoft visual studio\shared\python36_64\lib\multiprocessing\context.py in _Popen(process_obj)
221     @staticmethod
222     def _Popen(process_obj):
--> 223         return _default_context.get_context().Process._Popen(process_obj)
224
225 class DefaultContext(BaseContext):
c:\program files (x86)\microsoft visual studio\shared\python36_64\lib\multiprocessing\context.py in _Popen(process_obj)
320         def _Popen(process_obj):
321             from .popen_spawn_win32 import Popen
--> 322             return Popen(process_obj)
323
324     class SpawnContext(BaseContext):
c:\program files (x86)\microsoft visual studio\shared\python36_64\lib\multiprocessing\popen_spawn_win32.py in init(self, process_obj)
63             try:
64                 reduction.dump(prep_data, to_child)
---> 65                 reduction.dump(process_obj, to_child)
66             finally:
67                 set_spawning_popen(None)
c:\program files (x86)\microsoft visual studio\shared\python36_64\lib\multiprocessing\reduction.py in dump(obj, file, protocol)
58 def dump(obj, file, protocol=None):
59     '''Replacement for pickle.dump() using ForkingPickler.'''
---> 60     ForkingPickler(file, protocol).dump(obj)
61
62 #
BrokenPipeError: [Errno 32] Broken pipe
Thank you for submitting this issue. I recently had someone contact me about a similar error, and this seems to be a problem between Windows and the Python multiprocessing library.
Can you try running the same code on a Unix system (Ubuntu, MacOS, etc.) and let me know if the problem is still present?
I tried it on Ubuntu operating system. There was no problem. Thank you so much.
