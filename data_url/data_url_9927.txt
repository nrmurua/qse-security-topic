Description
When I use a numpy array with np.int64,  np.int32, or np.uint16  integer elements to label DQM variables, accessing the variables through DQM method num_cases(...) fails with integer elements from the numpy array used to apply labels.
Steps To Reproduce
However this works fine to access:
dqm.num_cases(0)
Expected Behavior
To be able to access the variable by the (numpy) integer label used to create it.
Environment
Additional Context
Observed in dimod versions 0.9.10, 0.9.13
Happens because in the sparse variable representation we check equality. int(1) == np.int(1) but they hash differently. Will fix.
EDIT: I was wrong about the reason, see #779 for details.
Happens because in the sparse variable representation we check equality. int(1) == np.int(1) but they hash differently. Will fix.
Great! Once ready either you or I could add a regression test if it's appropriate?
