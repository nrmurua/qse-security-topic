It is possible that someone having trouble compiling qutip extensions may wish to set CFLAGS, CPATH, C_INCLUDE_PATH. Currently these would not be used in the qutip installation / building or extensions generally.
I had a scenario where I was trying to install qutip on machines which I did not have sudo access on. They did not have cython or pydev. So I managed to install pydev and cython into the home folder. For the latter I had to set the C_INCLUDE_PATH to the local install of the C headers, or maybe I used the -I switch with CFLAGS. This did not work for qutip, so I made some changes to the setup.py files, and also the pyximport in __init__.py. However, none of it worked due to disk space issues in the end. Clearly, if there had been enough disk space, then Anaconda would have been a much better solution.
So, the question are:
Is there any value in making a PR from the changes I made (in a local copy) to use the CFLAGS, CPATH, C_INCLUDE_PATH env vars if they are set?
If so should the qutip pyximport extend or prepend the CFLAGS or should it not set CFLAGS at all if the user has set values?
I think we can close this for now. The situation around building C extensions changed quite a bit when pip acquired isolated build support (maybe around 2020?). I don't know if there are cases where this is still an issue or not, but the solution might look quite different.
