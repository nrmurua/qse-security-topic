Hi,
There is a manual integration using rectangles method in qutip.floquet file which sometimes fail.
Problem is that the number of timesteps, nT, is hardcoded and not accessible to the user. In my case, nT = 100 does not seem to be enough and the integral is wrong. A quick and dirty fix is to have an extra nT=100 keyword argument to floquet_master_equation_rates, so that user can overload it. Still, it does not seem to be the most efficient way of doing it.
I have a quick fix I can contribute which is using scipy.integrate.simps instead. This requires keeping an array of values to integrate in memory (which is less memory-efficient) but I could keep nT=100 and get the correct integral by using this method.
I guess the best option would be to use scipy.integrate.quad, as it uses an adaptive algorithm.
I can contribute a fix for this, just looking for feedback on the best available option :)
Thanks!
Hi, is it still open this issue? I would like to contribute to it!
What is the state of the matter?
The Floquet solver was heavily rewritten in QuTiP 5, so closing this for now.
