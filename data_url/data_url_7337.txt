You can see also other more clear implementation
https://github.com/whaley-group-berkeley/QSpectra/blob/master/qspectra/dynamics/redfield.py
Which can use einsum
https://nextjournal.com/under-Peter/julia-summer-of-einsum
But here j(w) not double spectral density as qutip use
Also u can do a class for spectral density as done in Qspctra package
(Only support  drude spectral density with Lorentz cut off)
In pyrho package there are many form of spectral density are found in Hamiltonian class
https://github.com/berkelbach-group/pyrho?files=1
UnFortunately i am still beginner to julia but I hope soon can add support
This is certainly worth looking into.
cc. @sd109
Thanks for these links - I've never come across those python implementations so will take a closer look at them. There's definitely room for improvement in the Bloch-Redfield implementation used here, both in terms of simplicity and efficiency, but I haven't yet got round to thinking about the best way to do this.
https://github.com/ttamayo/CS205_Redfield
