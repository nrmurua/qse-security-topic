I install qiskit with pipenv with pipenv install qiskit and I'm getting the following error:
import qiskit
/home/hduser/Workspace/quantum/.venv/lib/python3.6/site-packages/qiskit/init.py:56: RuntimeWarning: Could not import the Aer provider from the qiskit-aer package. Install qiskit-aer or check your installation.
RuntimeWarning)
from qiskit import Aer
ImportError: cannot import name 'Aer'
Run pipenv install qiskit
Run pipenv run python to enter in the python console of the virtualenv
Run import qiskit
Run from qiskit import Aer
Do the last import without errors.
Experiencing the same problem on IBM i with v0.3.0 (currently having troubles building 0.3.2)
This error happened to me when the Python I was using didn't have '--enable-shared'.
I don't know how Debian or IBM i builds their pyhton interpreter, goint to try with a docker image of Debian and see if there's a way we can fix this. Not sure I could do something with IBM i.
As a reminder, the official supported Linux distros are Fedora and Ubuntu. Of course, it doesn't mean that it cannot run on others... and of course, any contribution to add more platforms is more than welcome :)
@aitor94 how did you install in your Debian? Is it Pyhton 2.7? (the default one for Debian stretch via apt-get)
TL;DR install python with pyenv with --enable-shared then let pipenv use this installation.
Get the same problem on Archlinux (Linux 5.4.3) using both pipenv and virtualenv.
Python version is 3.7.5 (via pyenv). The system has Python 3.8, but I cannot install cvxopt successfully. There seems to be no problem with docker container that uses python:3.7.5-buster image.
I try to import a component of Aer manually. For example,
Then I get the following error
I check python installation on my machine and the one inside Dokcer container. The one in the container has the following file: libpython3.7m.so.1.0, but the one on my machine only has libpython3.7m.a. This seems to support @wryun's comment.
So I use pyenv to install python with --enable-shared (example on https://github.com/pyenv/pyenv/wiki#how-to-build-cpython-with---enable-shared). Then I let pipenv use this version, and the problem is fixed.
After migrating to pybind (#505) we don't link with libpython anymore, so this should be fixed.
@krerkkiat @aitor94 can you check the problem is gone?
I'm closing this issue... if the problem is still the lack of libpython, please feel free to reopen it.
Thanks!
