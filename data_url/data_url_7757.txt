On a note related to my earlier question regarding the connection of ket tensors to a MERA network, I am wondering about applying a gate between the ket tensors and the unitaries. Should I use the gate() method, or do I need to use the insert_operator method? I am particularly wondering about how to add a CNOT gate between kets and unitaries.
Well there's lots of ways to do this, the most useful of which probably depends on your ultimate aim. Here's two.
Setup:

The circuit methods by default split low-rank gates, thus the two tensors. This might be good if you are wanting to apply a lot of QC style gates.

Might be good if you want to apply more arbitrary operators, the Circuit class is really calling this under the hood. Note two differences:
These methods that work with an entire TensorNetwork1D instance are probably more convenient than low level bond-cutting and inserting tensors manually, but I can give an example of that too if you want.
Thank you very much again! That helps a lot! There is one last thing I was wondering. Since I need to control the evolution of the state closely, I am using the circuit approach, and I am wondering the optimal method to use for evolving and measuring. If I evolve and measure the state as an MPS, will I lose the effects of the MERA setup? I am sorry for the endless stream of questions, but I am very inexperienced working with quimb, and with tensor network models in general.
