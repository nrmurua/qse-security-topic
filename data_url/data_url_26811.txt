When I try compiling cp2k.psmp, the compilation runs until mp2_ri_gpw.F90 is reached, and then it hangs. I have tried leaving it overnight to see if it continues compiling (~12 hours), but it never completes and the job times out. I am trying to build on CentOS 7 with Intel compilers. When I run lscpu, this is my output:
And this is the arch file that I am using to build cp2k.psmp:
This arch file comes from me adjusting the output from the install_cp2k_toolchain.sh after installing libxsmm, libxc, and libint to more closely match Linux-x86-64-intel.psmp
If it is helpful, this is the output from running mpirun --version:
and mpiifort --version:
Is there anything wrong with my arch file that could lead to this behavior that I am seeing?
Thank you
So, we found that the version of your compile (19.0.0) is broken with CP2K (see https://www.cp2k.org/dev:compiler_support). However, you are facing another specific problem. I think you can reduce the level of optimizations for the fle mp2_ri_gpw.F by adding the following at the end of the arch file:
Try with O1, if still fails move to O0.
The file mp2_ri_gpw.F is pretty large and thee compiler get stuck to optimize it. Likely there can be other files with the same problem.
I tried adding your suggested lines to the arch file, which did get the compilation past mp2_ri_gpw.F, but the following file also got stuck (mp2_ri_grad.F). I then tried the same thing as you suggested for that file, but it never finished compiling.
These are the lines that I added:
Instead of completing the compilation for mp2_ri_grad.F, I received the following error:
I will try to compile with another compiler instead of Intel and report back.
As I told you, we found that 19.0.0 compiler is somehow broken, so it can that you see errors.
The list of tested compilers is at:
https://www.cp2k.org/dev:compiler_support
Thank you for the help so far. I have changed to gcc 6.2.0 (which I see is a compatible compiler in the list you linked me) with mpich 3.2. However, I am getting errors which seem to be related to undefined references in openblas and scalapack, but I am unsure and have attached the output from make -j 4 ARCH=local VERSION=psmp: make_gcc_psmp.txt
I am also using the exact arch file that was generated by the toolchain:
CC          = mpicc
CXX         = mpicxx
CPP         =
AR          = ar -r
FC          = mpif90
LD          = mpif90
DFLAGS      = -D__LIBXSMM  -D__parallel  -D__FFTW3  -D__LIBINT -D__LIBINT_MAX_AM=6 -D__LIBDERIV_MAX_AM1=5 -D__LIBXC -D__SCALAPACK
WFLAGS      = -Werror=aliasing -Werror=ampersand -Werror=c-binding-type -Werror=intrinsic-shadow -Werror=intrinsics-std -Werror=line-truncation -Werror=tabs -Werror=realloc-lhs-all -Werror=target-lifetime -Werror=underflow -Werror=unused-but-set-variable -Werror=unused-variable -Werror=unused-dummy-argument -Werror=conversion -Werror=zerotrip -Werror=uninitialized -Wno-maybe-uninitialized -Wuse-without-only
FCDEBFLAGS  = -ffree-form -std=f2003 -fimplicit-none
CFLAGS      = -march=native -fno-omit-frame-pointer -g  -O3 -funroll-loops -ffast-math $(PROFOPT) -fopenmp   -I'/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/openblas-0.2.20/include' -I'/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/fftw-3.3.7/include' -I'/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/libint-1.1.6/include' -I'/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/libxc-4.0.3/include' -I'/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/libxsmm-1.9.0/include' $(DFLAGS)
FCFLAGS     = -march=native -fno-omit-frame-pointer -g  -O3 -funroll-loops -ffast-math $(PROFOPT) -fopenmp   -I'/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/openblas-0.2.20/include' -I'/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/fftw-3.3.7/include' -I'/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/libint-1.1.6/include' -I'/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/libxc-4.0.3/include' -I'/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/libxsmm-1.9.0/include' $(FCDEBFLAGS) $(WFLAGS) $(DFLAGS)
LDFLAGS     = $(FCFLAGS) -Wl,--enable-new-dtags -L'/gscratch/sw/contrib/mpich/3.2/lib' -Wl,-rpath='/gscratch/sw/contrib/mpich/3.2/lib'  -L'/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/openblas-0.2.20/lib' -Wl,-rpath='/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/openblas-0.2.20/lib' -L'/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/fftw-3.3.7/lib' -Wl,-rpath='/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/fftw-3.3.7/lib' -L'/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/libint-1.1.6/lib' -Wl,-rpath='/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/libint-1.1.6/lib' -L'/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/libxc-4.0.3/lib' -Wl,-rpath='/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/libxc-4.0.3/lib' -L'/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/libxsmm-1.9.0/lib' -Wl,-rpath='/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/libxsmm-1.9.0/lib' -L'/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/scalapack-2.0.2/lib' -Wl,-rpath='/gscratch/pfaendtner/ldgibson/codes/cp2k/cp2k_v6.1_09-09-2019/tools/toolchain/install/scalapack-2.0.2/lib'
LIBS        = -lscalapack -lxsmmf -lxsmm -ldl -lpthread -lxcf03 -lxc -lderiv -lint -lfftw3 -lfftw3_omp  -lmpi -lmpicxx  -lopenblas_omp -lstdc++
Yes, you are right, the error message is linking to lapack. The toolchain installs blas and scalapack and from your arch file I see the following paths:
The names of the libraries are: libscalapack and libopenblas_omp.
Could you check if the paths are correct and the libraries accessible?
I can confirm that those two paths are correct, and the contents are as follows:
For scalapack:
For openblas:
OK, that's to be sure.
So, from your log I see that the linking which fails is:
which seems fine...  What's missing from the error is LAPACK, which should be part of the openblas installation... So, could you check that the symbol dlarnv is in libopenblas.a?
Another possibility is to add -static to the LDFLAGS in the arch file.
I have tried compiling with and without -static in the LDFLAGS--both result in the same undefined references.
I do not find dlarnv in libopenblas.a using nm libopenblas.a. I checked a few other symbols that were raised in the error, and could not find any of them.
If it is helpful, here is the output for nm libopenblas.a: symbols_libopenblas.txt
and nm libopenblas_omp.a: symbols_libopenblas_omp.txt
Also, this is the command I used to install all of my dependencies:
./install_cp2k_toolchain.sh --enable-omp=yes --enable-cuda=no --with-fftw=install --with-mpich=system --with-libint=install --with-libxc=install --with-libxsmm=install --with-reflapack=no --with-scalapack=install --with-openblas=install -j 40
Well, I'm not an expert of the toolchain, but could you try
--with-reflapack=yes
?
@ldgibson did you finally manage to solve this? If not, can you please attach the full build logs from the toolchain OpenBLAS build? Currently the following files:
and please note that when reconfiguring the toolchain (changing options on what to build and how), and you're encountering build errors, please try to build from scratch (rm -rf build/ install/ and then re-run the toolchain).
I'm closing this as the users' problem seems to have been resolved.
