At import
I realize that this is not a Qiskit issue per say, but it is blocking me from using the latest version and I never once had any use for this package. Thus I think an issue here is deserving.
Well we'll have to open an issue on tweedledum to get this fixed, it's not something we can do anything about in terra directly (besides ripping it out). Which wheel did you install, it looks like there are 4 wheel files on pypi that advertise arm64 macOS support:
Like is it isolated to either the universal wheels or the arm64 wheels, or are they all bad?
@boschmitt do you have any thoughts here? It seems between this and boschmitt/tweedledum#159 there are some issues with packaging tweedledum on macOS.
 tweedledum-1.1.0-cp39-cp39-macosx_11_0_arm64.whl
Is the one that I got using pip install -U qiskit-terra
I am also curious as to why this package is a requirement in the first place.  A quick glance at the code suggests it is only used for phase oracles.
Building from 1.1.0 source seems to import fine, so it looks like a auto build issue.
Ah ok, then yeah I expect that the tweedledum wheels where built with the previous release of scikit-build and hit: scikit-build/scikit-build#529 where it wasn't respecting the architecture flags and was always building x86_64 (this was only an issue for cross compilation of arm64 from x86). This has been fixed in the latest release https://github.com/scikit-build/scikit-build/releases/tag/0.12.0 it will require a rebuild to fix it.
@nonhermitian Could you test installing tweedledum-dev and see if this still an issue. (You should uninstall tweedledum first, or have a clean env)
pip install tweedledum==1.0.0 fixed it for me.
@epelofske-LANL Thanks for the heads up.
I think the problem with tweedledum==1.1.0 is that cibuildwheels messed up when naming the wheels and the good arm64 were overwritten by something else. (This was likely caused by a misconfiguration on my side.)
I don't want to publish broken wheels for tweedledum==1.1.1, so it would help me a lot if you could helping me in testing pip install tweedledum-dev. Unfortunately, I don't have access to such platform.
@boschmitt Sure. Here is what I have observed.
tweedledum==1.0.0 No error
tweedledum==1.1.0 Error: ImportError: dlopen(//anaconda3/envs/test/lib/python3.8/site-packages/tweedledum/_tweedledum.cpython-38-darwin.so etc.
tweedledum==1.1.1 No error.
tweedledum-dev No error.
As of when I tested this, fully updating qiskit uses tweedledum==1.1.1, so there is no import error for the fully updated version.
Also, linking #6907 because it is the same issue.
Thanks!
I fixed #6907 by building wheel by hand. I believe tweedledum==1.1.0 was the naming issue, which wheel for x86_64 were wrongly named as arm64.
For tweedledum-dev I believe the wheels are working then, and for tweedledum==1.1.1 you are probably building from source since I haven't uploaded arm64 wheels yet.
