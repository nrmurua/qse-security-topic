Hi there,
I am currently playing around with BQSKit and its usage/integration into our MQT Predictor that combined compilation passes from different compilers and, therefore, needs conversions between the different formats to represent quantum circuits.
Currently, we rely on Qiskit.QuantumCircuit as our intermediate representation. When executing a compilation pass from a different compiler (e.g., BQSKit) we use the usually provided transformation functions (such as bqskit.ext.qiskit_to_bqskit and bqskit.ext.bqskit_to_qiskit). While this works very well for non-parameterized circuits, it fails for parameterized ones since those transformations currently rely on openQASM 2.0 that does not support parameterized gates.
However, pytket for example implement its own transformation that also supports those gates, see here. Do you have any plans to pursue a similar approach or could give me some guidance how I could implement it in a similar fashion?
I tried to play around a bit and started to write a routine:
However, I am not sure how to deal with the parameter when it comes as a qiskit.circuit.Parameter and how to add the parameter's name.
Thanks for bringing this issue up. Can you share an example qasm file of a parameterized circuit? We support parameterized gates as that is how we synthesize circuits, but I want to make sure I understand your request well before recommending something.
