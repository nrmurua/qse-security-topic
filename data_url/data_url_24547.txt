Is there an interface in qupulse to convert a pulse into a numpy array (at a given sample rate)? I could not find anything in the documentation and in the end created my own method (based on code from qupulse.pulses.plotting:
If the functionality is not yet there, why not? And would it make sense to create a PR for this?
There is no function yet to plot a pulse template directly. If we put the program is None case into render one can do the same as your function with
Do you think it makes sense to put this into a seperate helper function?
I don't understand the program is None remark, but I think converting a qupulse to numpy array is something to make a helper function for.
My reasoning here is that a pulse template is not a strict time to signal function yet which you can sample. A program, however, is exactly that and you just need to supply a sample rate to render it.
You can argue, that some users do not care about this difference and just want to render their pulse (which makes sense if you do not use pulse parameterization). For this use case we could maybe add a render method to the PulseTemplate class:
create_program might return None which is not handled yet in render(...) and I would move the return value (empty array) for that there.
I see now. Actually, render(pt.create_program()) is good enough if it is documented a little bit better. Perhaps in one of the ipython notebooks or the generated documented.
