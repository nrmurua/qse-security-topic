in 2018, #1500 introduced CommutationAnalysis pass. The pass does the trick while working with CommutativeCancellation. However, there are some aspects that are not very well covered and I think it is time to sit again with it and think it over again. Here there are a list of the problems:
The property property_set['commutation_set'] is a non-uniformly typed dict:
suggested solution: property_set['commutation_set'] should be a qiskit.dagcircuit.dagdependency.DAGDependency.
The current commutation analysis assumes transitivity (I think), while the relation is intransitive. For example H commutes with I  and I commutes with Z, but H does not commute with Z. This is not reflected in the commutative set:
The qiskit.dagcircuit.dagdependency.DAGDependency seems to do the same as qiskit.transpiler.passes.optimization.commutation_analysis.CommutationAnalysis. For example qiskit.dagcircuit.dagdependency._does_commute and qiskit.transpiler.passes.optimization.commutation_analysis._commute are similar in their goal, but one of them has a cache system that makes it better.
In continuation of  #8056, the following test currently fails due to unsound optimization:
due to transitivity assumption.
The following test is an example of missed optimization in case of naive fix:
A few questions.
Copying the comment from https://qiskit.org/documentation/stubs/qiskit.transpiler.passes.CommutationAnalysis.html:
TODO: the current pass determines commutativity through matrix multiplication. A rule-based analysis would be potentially faster, but more limited.
At least it's worth adding some simple rule-based commuting relations between standard gates.
Perhaps make a "commuting library" similar to the equivalence library.
