As the title, I attempt to reuse the QNN model of binary-classifier on MNIST. I guess the method to do that is similar to the traditional method in tensorflow.
for ex.
However, what's that mean in tensorflow ( to inspect the quantum state seems impossible), is it still possible when I deploy the model on the real quantum computer (cloud service) ?
Many thanks for any information and suggestion !!
Yes, you can do save_weights and load_weights the same as with a normal tensorflow model (since it is just a tensorflow.keras.model). The meaning of these weights depend on your model. For a simple PQC, it would simple be the thetas that parameterize the rotation gates in your circuit. If you have a more complex/custom setup, whatever variables/parameters your model has is what it will save. This can be deployed on any system (although real quantum systems have a lot of restrictions that your setup might not meet, but that is independent of the TFQ saving and loading).
Yes, you can do save_weights and load_weights the same as with a normal tensorflow model (since it is just a tensorflow.keras.model). The meaning of these weights depend on your model. For a simple PQC, it would simple be the thetas that parameterize the rotation gates in your circuit. If you have a more complex/custom setup, whatever variables/parameters your model has is what it will save. This can be deployed on any system (although real quantum systems have a lot of restrictions that your setup might not meet, but that is independent of the TFQ saving and loading).
Thanks for your complete reply ~ ~
