https://circleci.com/docs/2.0/arm-resources/
Hmm -- upon doing two quick checks ( 1 2 ) it seems this is really only geared to running ARM64 docker images (our build dependencies are not present and we can't install them in the given machine), so we'd actually need to create ARM64 CI images. Now: Per the link above, CCI only supports ARM64 native runners -> we'd need to maintain the emulated CI for armhf. This finally begs the question what benefits there are switching to native runners just for ARM64?
Yes we'd still need to emulate armhf. Our emulated arm64 runtimes are not too bad on CircleCI, so I think the main benefit would be any additional confidence that comes from actually running on a real arm64 platform versus emulated arm64. Perhaps that's not much of a benefit...
the main benefit would be  any additional confidence that comes from actually running on a real arm64 platform versus emulated arm64.
I don't see this providing a lot of additional confidence as we actually already regularly run (even the full stack) on real ARM64 hardware with the nightly performance tests. So the benefit would be reduced to do this quicker (before a merge). But given we didn't have functional deviations between emulated ARM64 and "real" ARM64 so far, I'm not sure this justifies the effort. But whatever, thinking this through some more it may not be too much effort: created open-quantum-safe/ci-containers#50 to track.
