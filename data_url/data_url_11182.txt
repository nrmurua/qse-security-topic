I am new to OpenFermion, so kindly expect that this may be a feature that could be turned off (but I was unable to do so) than a bug. The problem happens when I use the FermionOperator and the jordan_wigner transformation. Specifically, an identity operator is automatically added when two or more terms including four operators are added.
As a minimal example consider the two different terms from the FermionOperator
a = (1+0j) [0^ 0 1^ 1]
b = (1+0j) [1^ 1 2^ 2]
so that a+b gives the right result:
a+b =
(1+0j) [0^ 0 1^ 1] +
(1+0j) [1^ 1 2^ 2]
but a jordan_wigner of (a+b) gives:
(0.5+0j) [] +
(-0.25+0j) [Z0] +
(0.25+0j) [Z0 Z1] +
(-0.5+0j) [Z1] +
(0.25+0j) [Z1 Z2] +
(-0.25+0j) [Z2]
Notice that the first term is an identity operator and should not be there. I could not find any example of such 4+4 term additions in https://quantumai.google/openfermion/tutorials/intro_to_openfermion, and the 4+2 additions work fine, as shown in the examples there in the link.
Actually this is not a bug and the identity operator should be there. The JW transform of the number operator is (I - Z) / 2. That way it has eigenvalues of 0 and 1. Thus n_0 n_1 = I/4 - Z_0 / 4 - Z_1 / 4 + Z_0 Z_1 / 4. So the sum of two terms n_0 n_1 + n_1 n_2 has an identity term with coefficient 0.5. I am going to close this issue.
Thanks for the quick clarification. Indeed, you are correct.
I was trying to reproduce the JW transformation from https://arxiv.org/pdf/1411.2465.pdf (see Eq.(2)), and OpenFermion is not giving the correct result. There is perhaps a convention problem here.
Update: Resolved. The issue is trivial, just invert the convention of (I - Z)/2 to (I + Z)/2. In essence, input a^ as a and a as a^.
Yeah that would "fix" it. It is a bit strange to use the 1 + Z convention. This is just a change of gauge but it means that the number operator acting on |1> gives 0 and acting on |0> gives 1, which is very counterintuitive.
As it turns out, that is still not enough. Unfortunately, the very first example I learnt of JW transform (from the arXiv paper referred to above) is incorrect. That is why the cosset over removing the identity operator.
The second term of Eq.(4) is missing the Identity term. It is still a valid Hamiltonian but does not represent Eq.(2).
Anyway, this has been productive. Thank you @babbush, keep up the good work 👍
