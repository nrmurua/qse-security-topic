QuantumCircuit has the following two methods for adding gates to circuits:
There's a need for a more efficient means of adding large numbers of instructions to a circuit, specifically in cases where the user does not need broadcasting/expansion and has already validated ops and qargs.
We could a) document and expose _append as a user facing function and b) add an additional method (maybe __append) which includes only the steps necessary to add an instruction or set of instructions to a circuit (and no verification), with the understanding that users of _append (or __append) are responsible for validating their instruction and q/cargs.
Edit: Added Santa @jakelishman's corrections -
âœ…  quantumcircuit.py's append has now been changed to append multiple instructions since OP's issue posting. _appends does not check for broadcasting or scoping and is unsafe to use but there still isn't a completely private implementation with no error checking as OP expects for the __append function
PR #4169 introduces changes in _append and discusses the overhead expected. PR #7134 Improves scaling performance of append. There have been multiple performance improvements since OP's posting in 2019 to address performance issues.
Will update comment/add more comments if cause is found/fixed!
Python version 3.9.7
qiskit-terra version: 0.19.1
Closing as _append no longer does any validation; it only does the stuff necessary to append an instruction.
