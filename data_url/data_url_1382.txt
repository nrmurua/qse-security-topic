Description of the issue
I use Cirq circuits and operations to represent my noisy simulations. I use to_json and read_json when serializing related data classes. I recently saw this deprecation warning:
Found 'cirq_type': 'MyCustomSerializedClass' in _json_dict_. Custom values of this field are not permitted, and will produce an error starting in Cirq v0.15.
Since my work is dependent on another code-base (which is tied to the current dev Cirq version), I expect that the implementations I reference above will soon stop working. Can I please have some guidance as to how serialization will be handled in the future? Is there some documentation I can reference? What should I do for json serialization when cirq_type is no longer supported?
Thank you!
Related issue: #3098
Cirq version
0.15.0.dev20220402003018
@mpharrigan @95-martin-orion who I think have the most context
Yup, this was me. The 'cirq_type' element of _json_dict_ is now auto-populated with the class name and (optional) namespace of the object in question. Ideally, classes which explicitly specify 'cirq_type' should just be able to remove it and everything should work out nicely, e.g.:
If your 'cirq_type' is not the name of the class, or you're specifying the _json_dict_ differently (e.g. with obj_to_dict_helper), it gets more complicated - please provide details here if that's the case.
I think your suggestion should work fine (I have been using self.__cls__.__name__ for all of my cirq types anyway). Thank you!
glad this worked out. Should we update the deprecation method?
I think we usually do a sweep and update all deprecated methods in one go, but yeah, we're now in v0.15(+dev) and explicit cirq_types should now produce an error.
Should we update the error message to clarify what a 3rd party dev should do instead?
Sounds good to me - something like "Do not explicitly specify 'cirq_type', it will be auto-generated based on the class name and (optional) namespace"?
yes :)
