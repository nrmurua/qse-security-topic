Thank you for building liboqs!
I am targeting an arm platform, it would be nice to be able to use the arm specific optimizations available. Does liboqs include the arm optimized versions from pqm4? I haven't been able to find any mention of pqm4 in this repo so I suppose not?
Thanks for your interest / use of liboqs: We're glad to see it used. Regarding ARM, there's ongoing work (see e.g., #1052). Tagging @Martyrshot (and @dstebila ?) for further insight/feedback on your question.
We're planning to incorporate optimizations targeting the ARM crypto extensions and ARM Neon over the next few months. But we don't have plans around smaller ARM chips like the M4, in part because we think that applications on smaller chips might want a smaller standalone implementation from pqm4 rather than a larger library like liboqs.
@koraa : Can be go a bit more into detail which platform (sizes) you want to target and which (pre-existing?) applications you want to support?
@baentsch I am not targeting any platform specifically; I am creating an implementation of a post quantum handshake and wondering which library to embed and whether I need to add ifdefs pulling in optimizations from pqm4.
I am testing on x86_64 and an rpi4; I've done something similar on an ARM F7 which is one of the largest bare metal arms available. I am not that familiar with the platform specific optimizations available on various arm platforms TBH, but personally I wouldn't take issue with using liboqs on even a tiny platform if resources are not wasted. As far as I can see liboqs makes it possible to disable algorithms and features I don't need (such as openssl support) and doesn't allocate…so perfectly suitable!
Having multiple libs to choose from for different environments might mean constructions need to be implemented multiple times too for each target or the constructions need to add support for multiple primitive implementation libraries, neither is desirable…
might mean constructions need to be implemented multiple times too for each target or the constructions need to add support for multiple primitive implementation libraries, neither is desirable
Completely agree. From what you write I think liboqs may pretty suitable as it tries to make available as many PQ/QSC algorithms (switchable) on as many platforms as possible over the same interfaces. Also, just to be safe: Did you see the OQS_MINIMAL_BUILD option?
OQS_MINIMAL_BUILD
No I haven't heard of that, thank you for pointing it out! I am using the rust crate which does not expose the option, but I've manually specified a minimal set of algorithms for the crate…
Closing for now since there seems to be no specific action required.
