Hello!
I was wondering if it is possible for XACC to output the low level native gate circuit once a particular accelerator is called as a file or object prior to being submitted to the actual qpu? I wanted to look at my circuit's after they have been compiled for a particular hardware. I have a small script that makes a simple bell pair program (ir_obj), I am thinking it would be somewhere between getAccelerator and execute? I am using python:
buffer = xacc.qalloc(5)
qpu = xacc.getAccelerator('ibm:ibm-valencia', {'shots':1024})
qpu.execute(buffer,ir_obj)
results = buffer.getMeasurementCounts()
Thanks!
Quickest way would probably be
c = xacc.getCompiler(‘openqasm’)
qasm = c.translate(ir_obj.getComposites()[0])
print (qasm)
You should also be able to translate IR to an IBM QOBJ json string with the ‘qobj’ Compiler
Great this is exactly what I'm looking for. I do get an attribute error for getComposites() though:
Traceback (most recent call last):
File "xacc_test.py", line 62, in 
qasm = c.translate(ir_obj.getComposites()[0])
AttributeError: '_pyxacc.CompositeInstruction' object has no attribute 'getComposites'
Is this maybe an installation issue?
Using the xacc.qasm() function to create my IR
Oh my bad, I thought ir_obj was an IR instance, just pass it then to the translate method.
Thanks! This is perfect, closing this now
