There should be easy helpers that take a noise free circuit and then add in noise after each gate (and after preparation).
I can attempt this
We discussed a little off line: the most basic thing to start with is just adding in moments with noise operators.
I think we might want the noise model to be an object that is passed into the simulator. This issue is very design problem heavy; not an easy one.
@Strilanc could you elaborate a bit more on the role of the simulator here, compared to a (somewhat post hoc) set of moments implementing noisy channels on gates?
I think that we need a concept of a NoiseModel, which associates error channels with gates, doing nothing, particular combinations of gates, etc. A NoiseModel could take a circuit and produce a circuit with injected noise, but it should also be possible to pass a noise model into simulate/run methods and have the transformation happen inline with the simulation.
Because this has such a large impact on the APIs we expose, and has to fit nicely with the rest of the library, there could be a lot of bike shedding over the particulars (strict spec) and we're not exactly sure what we want (vague spec). Not an ideal first issue.
You are of course free to try. But I think I would want to write up a design doc for you to follow, instead of leaving you to your own devices to implement it.
(Also, this is one of the things we want to get done for the next release, so we're likely to do it ourselves rather than waiting on a third party. I don't want to send you down a garden path doing work we won't keep.)
Okay, I understand completely
Can you think of dependencies on any specific Issues that this noise model would have? We're eager to see cirq noise support move forward and I'd like to contribute wherever it'd be more appropriate
Fixed by #1520
