I am trying to compile CP2K by using instructions in these sources
So far none of them worked, and I am unable to find clear instructions to resolve the problem.
The CP2K HowTos lead to symbol undefined errors
dbcsr/libdbcsr.a(dbcsr_lib.o): in function __dbcsr_lib_MOD_dbcsr_init_lib_pre':
dbcsr_lib.F90:(.text+0xd6): undefined reference to libsmm_acc_is_thread_safe'
The Github instructions lead to symbol undefined errors
libcp2kpw.a(pw_gpu.o): in function __pw_gpu_MOD_pw_gpu_sf':
pw_gpu.F90:(.text+0x1b8): undefined reference to pw_gpu_sf'
(also Docker path leads to errors)
Here is the latest arch file I use which lead to pw_gpu error:
How can I compile CP2K with CUDA support?
Yes, building CP2K with CUDA is unfortunatelly a bit tricky.
You can have a look at the Dockerfiles, which we use for our daily testing.
Which CP2K version you are using?
Your arch file has pretty old entries, e.g. OBJECTS_ARCHITECTURE, -D__BLACS, -D__GFORTRAN...
Besides what Ole wrote above, I suggest to take a look at the example in the CP2K tests, see https://storage.googleapis.com/cp2k-ci/dashboard_cuda-pascal_report.txt and search for ARCH-file. These are valid for latest CP2K. In particular, you have to add DFLAGS to CFLAGS and CXXFLAGS (and OFFLOAD_FLAGS).
Thank you for your answers.
Unfortunately, cp2k/tools/docker/Dockerfile.prod_cuda_A100 and cp2k/tools/docker/Dockerfile.prod_test_cuda_A100 fail in all my 3 personal PCs, and 2HPC centers with the same unresolved dependency issues.
Investigating the docker file, I have seen a call to cp2k/tools/toolchain/scripts/generate_arch_files.sh and modified the cp2k.py easy block and easy build file accordingly. This script seems to correspond to GitHub instructions more (though there are some curious differences) and contradicts web page instructions.
Still no go. The problem seems to be the pw_gpu_sf.  Looking at the compiled files, I see a text reference to __pw_gpu_MOD_pw_gpu_sf but no pw_gpu_sf
The only solution I have for this at the moment is to disable PW by -D__NO_OFFLOAD_PW Then, I obtain a working binary.
@osbama Could you share the new arch file you are using?
@alazzaro This should be the one that is working. I am using easybuild foss-2022a for the compilation
I've tried to update it (removing old stuff) and refactoring it.
In  practise:
I'm sure there is still something wrong (I cannot try it), but it can be used as a starting point, so I hope it can help.
@alazzaro Thank you very much! This one produces a binary after two very minor modifications :
Now I will analyze the differences between arch files and modify the easybuild cp2k.py accordingly.
