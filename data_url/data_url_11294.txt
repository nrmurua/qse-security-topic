Executing
results in an AssertionError. That's a bug, right?
I suspect there's something wrong with how the indices are handled in jordan_wigner_interaction_op. A consistency test like this is actually not present in transforms/_jordan_wigner_test.py, though there are similar ones for the helper functions jordan_wigner_one_body and jordan_wigner_two_body.
Is the random interaction operator Hermitian? The specialized Jordan-Wigner code that works for InteractionOperators might expect that it is.
Yes, it is.
Hmm. It would be good (and perhaps difficult) to track down this bug. This routine is about 10X faster than first mapping to a FermionOperator and then mapping to qubits.
Here is a more damning indictment:
raises AssertionError.
Are there additional symmetries beside hermiticity that this function can take advantage of? Or should it work on a general Hermitian InteractionOperator?
the structure of the InteractionOperator already bakes in symmetries like particle number conservation. So yes, it should work with a general InteractionOperator.
I don't think the structure is enforced, however. For instance, if you initialize an InteractionOperator with some tensors that don't result in a Hermitian operator, it won't raise an error. So I guess I'm asking about what a "proper" InteractionOperator is; I know it must be Hermitian, but is there anything else? This is related to my PR #282 .
That's it basically.
