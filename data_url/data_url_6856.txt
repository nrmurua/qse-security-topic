In a previous removed issue I asked about why in Shor's algorithm the QFT+ is used instead of QFT, considering that the meassure given is a frequency. Playing with Numpy I have found that the results given by the FFT are the ones given by the QFT+ (in terms of phases), equally the results given by the IFFT correspond to the QFT. By the way, I have found that applying the QFT twice you get the complex conjugates of the input amplitudes, which is VERY NICE, thanks for your suggestion :-)
Playing with Numpy I have found that the results given by the FFT are the ones given by the QFT+
Oh no... I might have gotten the signs of the operations backwards. It's surprising no one noticed that before.
applying the QFT twice you get the complex conjugates of the input amplitudes
That's not correct. The conjugation operation is not unitary, and allows faster than light communication if you introduce it. What actually happens when you QFT twice is that order of the states is reversed, except for 0 which stays in the same place.
After checking wikipedia, it looks like using a positive sign in the exponentiation instead of a negative sign is standard for the QFT. Phew. You're right that that means the QFT's effect is actually the inverse Fourier transform. But the inverse FFT has all the same properties as the usual FFT, so no big deal.
(You can still comment on closed issues, by the way.)
