To help prevent issues like #859 in the future, it would be nice if CMake could list all unused/uninitialized variables in the project.
CMake has the --warn-uninitialized and --warn-unused-vars flags; the former behaves inconsistently among different CMake versions (and in CMake 3.19 did not catch #859); the latter is broken and has been removed in CMake 3.19.
After some experimentation there is a solution: We'd simply need to diligently reference all variables as such in our cmake files, i.e., in the canonical cmake notation "${VARIABLE_NAME}".
If doing this, --warn-uninitialized works correctly (and would have caught #859). If using the "shortcut notation" of (a variable as) a constant, e.g., as in if(VARIABLE_NAME) the warning is not issued. This arguably is OK, as variables and constants are different and --warn-uninitialized is documented to operate only on variables.
Thus, I see three alternative ways forward to avoid problems such as #859 in the future and close this issue:
@xvzcf : Do you see other alternatives? OK to go with option 1? Everyone should adhere to that then, though. I volunteer to re-write all cmake code to close this issue following option 1.
Nice find, and yeah option 1 seems like the best way forward.
OK - will implement then. When starting, copy_from_upstream.py (generating quite a few of the not-quite-correct cmake instructions) fails, though:
--> Does this ring a bell, @bhess ? Do I miss something? pip3 install mdformat markdown run before...
It looks like mdformat-tables is missing.
@baentsch could you try pip3 install mdformat-tables or pip3 install -r requirements.txt?
@baentsch could you try pip3 install mdformat-tables or pip3 install -r requirements.txt?
Perfect&Thanks: Just overlooked the requirements.txt :-(
Nice find, and yeah option 1 seems like the best way forward.
Caveat, after digging in to the details: The "automatic" variables (declared or not) in https://github.com/open-quantum-safe/liboqs/blob/main/src/oqsconfig.h.cmake make this very problematic: In order to not trigger warnings for all of them not present on a specific platform (e.g., if CPU flags are missing), they'd all need to be explicitly initialized. I'd consider this over the top again, particularly considering they're all automatically generated (e.g., via copy-from-upstream). I'll thus apply option 1 only to manually edited variables and leave the rest as-is. Objections before the PR, please :)
