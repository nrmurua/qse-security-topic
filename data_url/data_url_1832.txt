Move "commutes" check from the protocols to the "Operation" class.
P3 - I'm not really blocked by it, it is an idea I'd like to discuss / suggestion based on principle
This sounds like a good idea in principle, but maybe there was a reason that it lives in the protocol module. Would you like to try if it will work on the Operation class? It should be quick to try to make all the tests pass.
Hey @balopat, I did some research and here is the following output:
The reason of test fail is in the  class "GateOperation" which implements _commute_ with the self.gate._commutes_on_qids_:
def _commutes_(self, other: Any, atol: float) -> Union[bool, NotImplementedType, None]: return self.gate._commutes_on_qids_(self.qubits, other, atol=atol)
but that method itself does nothing, but returns NotImplemented:
def _commutes_on_qids_(self, qids: 'Sequence[cirq.Qid]', other: Any, atol: float ) -> Union[bool, NotImplementedType, None]: return NotImplemented
So my suggestion would be:
@akushnarov
What is gained by this change?
Hi @vtomole
Reason for having this request: Moving the Operation's _commute_ functionality from the general "commute strategy" (which should not know anything about object types and should only orchestrate the commute logic) to the Operation class (where the commute functionality should be controlled)
What is done in the code: 1) Moved the functionality from the strategy to Operation class; 2) Adjusted depending class (especially GateOperation), which didn't have correctly implemented _commutes_ (it returned NotImplemented in any case); 3) Adjusted code formatting according to the git pull request checks (e.g. cirq/ops/pauli_string.py)
What is gained?: Code decoupling. Easier code management and debugging for the commute functionality. From my point of view each class should contain information about commute logic by itself and commute strategy should only take care of the smooth cirq.commute(...) functionality (orchestrate).
Hey @vtomole, just curious if you need anything else from my side?
Hey @akushnarov, i just saw this. I've been very busy with other things and will be for the foreseeable future. @balopat, can you see this through?
Hey guys, sure, I'll have a look - thanks @vtomole for the feedback so far and @akushnarov for taking this on!
This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 30 days
Back to work here
Fixed and merged here: #3695
