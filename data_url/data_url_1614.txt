Description of the issue
FSimGates  support symbols as valid parameter arguments for theta and phi.  However, the type annotation in constructor is float which can be confusing.

Modify the type annotation to TParamVal - which is a Union[float, sympy.Basic] i.e.
As a follow up, find and fix other gates in Cirq with a similar issue.
Cirq version
0.12.0.dev
@tanujkhattar checking with grep shows
Should it be fixed in all of these files?
assuming yes, I opened #4266
The main idea behind this request is that we should fix the type annotation from float to Union[float, sympy.Basic] (i.e. TParamVal) wherever the function can actually accept symbols but the type annotation is incorrect.  Given this request, I propose we
We could simply start by fixing FSimGate but I think figuring out why mypy doesn't already complain would be very useful.
Hi, this is a problem related to #554 as well. Mypy doesn't catch wrong type annotation in many cases. Is there anything I can do in that issue which would help with this?
It seems to me that since sympy doesn't have any stubs, the mypy.ini config file ingores typechecking those, so it passes off as int. So a piece of code this simple, mypy sees no type errors with the given configuration.
Seems like they are adding type annotations themselves (sympy/sympy#17945), so just fixing errors now and waiting to bump up sympy might work.
The other option is to add type annotations to the tests themselves. So x: int = sympy.symbols("x") doesn't throw an error, but x: sympy.Symbol = sympy.symbols("x"); t: int = x; will. But annotating intermediates in the tests or adding small stubs for some functions seems like a useless endeavour. Or maybe not, and stubs are the best option because sympy.symbols doesn't have an annotation on their master so this might take them long.
@tanujkhattar @MichaelBroughton this was done in #5075
Per @daxfohl this is complete.
