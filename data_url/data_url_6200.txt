gives
obviously this can be caught ahead of time, and a check should be against n_qubits=MAX_QUBIT_MEMORY in the config, but it is not.
I think in this case it is executing on the extended stabilizer simulator (Clifford + T), which in principle can support up to 63 qubits, but because of the T gate depth it is running out of memory.
@padraic-padraic Would it be possible to add a check to the required_memory_mb function that checks the depth of non-Clifford gates to estimate the resource requirements?
There is code for checking the memory requirements as part of the state. Digging into this, the bug seems to be because State::required_memory_mb returns a size_t, which was being converted to an int in AER::Simulator::QasmController::validate_memory_requirements and overflowing to 0.
I'll submit a pull request with the fix!
