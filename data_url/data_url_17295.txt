Can not bind parameter a circuit if a circuit is built by multi-processes, an error is raised.
scripts
Bind parameters without error.
I think it fails to bind the parameters because the identity (get through id() method) of a parameter is changed during the parallelization (the parameter is pickled to another process); even though the parameter names are the same.
Thus, I think another approach to recognize a parameter in a circuit is need to resolve this issue.
Hi @chunfuchen , thanks for reporting! Your description of the problem is correct, Parameters presently determine equality via id() (to avoid collisions by name, say when two distinct sub-circuits have parameters independently named theta) but this identity is not preserved across serialization.
This will also be an issue when transpiling batches of parameterized circuits (through the parallel_map call inside transpile.)
This created another issue.
Thus when I am trying to bind parameters, it fails.
This is a very old issue, and the new report isn't caused by this.
In this case, this is a deliberate design choice, as mentioned above.  Parameters are not meant to be equal if they have the same name, in part to prevent accidental issues when multiple circuits happen to use parameters with the same name.  You should use the same parameter instance:
rather than constructing it new each time.  You can also retrieve the parameter instances from a circuit object qc by doing qc.parameters.
Hello I am facing a similar problem. After using qc.bind_paramters() for a particular time the paramters become inaccesible, also qc.paramters returns a empty ParamterView object indicating the paramters have been removed. But for my purpose I need to pass in different numeric values to the parameters through out the preocess. Is there any workaround to this ?
bind_parameters and assign_parameters return new circuits, so you can use the old circuit to bind/assign new parameters.
