When I run python3 main.py --name crown --layers 5 in reuploading_classifier, the crown folder couldn't come out.
But it works as I change the default setting into default='crown'.
Other codes with the argparse work fine.
Could be a hidden problem with the argparse?
@AdrianPerezSalinas could you please check that you can reproduce this issue?
Ruge and I were yesterday after the meeting trying to reproduce this error, and I was not able to do it. In my case, no bug is reported and everything works fine, as in everyone else's case, I guess. We decided to ask you because we had no clue about what is going on here.
I also tried to reproduce this yesterday, when I saw this issue but everything works as expected for me as well. If I remove everything from the results folder and run passing a dataset name then this dataset appears in the results. The code also looks fine to me, so I cannot think of what may going on here.
@GoGoKo699, @AdrianPerezSalinas I have just retried using the latest master.
The following command:
after few minutes produces this:
My argparse version is 1.1, what about you? If your version is lower, please upgrade and retry.
If that doesn't help, then you have to debug the main.py and for example print the content of args.name.
Sorry but how to check argparse version?
Open a python shell and type:
It is 1.1
Then at this point, given that nobody else is able to reproduce this issue, you have to debug the code yourself, by inspecting the behaviour of argparse and the code lines which are responsible for the folder creation. Ideally you should try to isolate the code which is not able to create the folder.
Well so I guess I have to figure out myself...
Hi~
Even after reinstalling everything, I still got this problem...
The problem might be with datasets.py?
I don't get a problem with print(name) when I don't import the datasets,  but it prints out the default (or None if we don have the default value) as I import the datasets...
After private communication with @GoGoKo699 I managed to reproduce this issue. The simplest script that reproduces it is:
which means that it is not an issue with Qibo or the example's code. @GoGoKo699, try to switch import datasets to import matplotlib.pyplot and you can see that the problem remains. What happens is that name gets stuck to tricrown no matter what user passes as name. If you remove import matplotlib.pyplot then everything works as expected (name can be changed by user).
I could only reproduce this in a particular virtual environment that I had from the past. I tried in new clean environments and it doesn't happen, so it is likely that some of you may not be able to reproduce it. I could not figure out what's exactly the issue with this particular environment - I tried updating matplotlib but it didn't fix the issue, while the same matplotlib version on other environments works without problem.
Regardless, the simplest solution I could find is to change the name variable to something else, eg dataset, which works with all versions.
Thanks @stavros11, I cannot reproduce this issue on my environment.
However, I believe we should follow your suggestion and open a PR where --name is replaced by --dataset.
If I am correct the problem is described in this issue: matplotlib/matplotlib#17379
It turns out that the problem is not related to matplotlib either, and as they say the problem remains if I replace import matplotib.pyplot with from gi.repository import Gtk and it is related to using name as variable name.
The problem continues with matplotlib.pyplot and if I remove it everything works fine.
And I replace the name with hello in main.py everything works fine;) Problem solved.
But why am I the only one who got this issue?
