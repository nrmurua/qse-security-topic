Running the ".plot_transotions" changes the output of the sweep["evals"] from eigen energies to transitions as well. I didn't find a way to set it back to eigen energies unless reconstructing the sweep again.
After running the ".plot_transotions" I expected the Sweep to still return the eigen energies not the transitions.
fluxQ1 = qubit.Fluxonium(
EJ =33.342,
EC =.17,
EL =1.6,
flux =0,
cutoff =110,
truncated_dim=20
)
osc = qubit.Oscillator(
E_osc=10.4841,
truncated_dim=5
)
hilbertspace = qubit.HilbertSpace([fluxQ1, osc])
g_strength=0.10675
operator1 = fluxQ1.n_operator()
operator2 = osc.creation_operator() + osc.annihilation_operator()
hilbertspace.add_interaction(
g=g_strength,
op1=(operator1, fluxQ1),
op2=(operator2, osc),
add_hc=True
)
pname1 = 'flux'
flux_vals = np.linspace(-1.0, 1.0, 501)
def update_hilbertspace(flux):  # function that defines how Hilbert space components are updated
fluxQ1.flux = flux
paramvals_by_name = {pname1: flux_vals}
sweep = ParameterSweep(
hilbertspace=hilbertspace,
paramvals_by_name=paramvals_by_name,
update_hilbertspace=update_hilbertspace,
evals_count=20
)
sweep["evals"][:,:].plot()
sweep["flux":].plot_transitions();
sweep["evals"][:,:].plot() # Repeating the plot of the eigen energies where it plots the transitions instead of the eigen energies
sweep["evals"][:,0] # Checking the values also confirms that the "evals" changed to transition energies
sweep = ParameterSweep(
hilbertspace=hilbertspace,
paramvals_by_name=paramvals_by_name,
update_hilbertspace=update_hilbertspace,
evals_count=20
)
sweep["evals"][:,:].plot() # Now it plots the eigen energies again
This sounds like plot_transitions is omitting to copy arrays it wants to manipulate internally, and internally only.
@faridhassani Do you know how to work with the master branch? I just pushed what I think should be a fix for the issue you are observing.
I'm not very experienced, but I cloned and reinstalled the package and the problem is fixed. Thanks.
