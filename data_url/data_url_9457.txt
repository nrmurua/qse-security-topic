I find there are a few problem existing in ExponentialUtils due to their abstract design for general phiv methods and high precision methods (e.g the cache object). This is currently causing the CUDA implementation slower than CPU version in larger size (more than 20 qubits in full space). Tho, the package is already faster than its MATLAB version on CPU but I believe the package still needs a refactor to make the GPU actual useful, to be specific this includes:
to give an impression on how GPU can accelerate the calculation, currently update_term! can be accelerated by about
I'll use CPU for the optimizer benchmark for now @Wang-Shengtao due to this issue, and I'll need to rework this part either in a private package or contribute to upstream.
Okay, just see this. "update_term! can be accelerated by about"?
I think we discussed this last year, I just transferred the issues from RydbergEmulator repo to here, this probably caused some disturbing
I think the decision is to not support Krylov based expv for CUDA at least for now, since this type of algorithm is not suitable for parallel acceleration.
