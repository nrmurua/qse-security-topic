Currently, it can detect that it can sample if there is only measurments at the end, but sometimes the measurment instruction is put further up, and it's not detected even when there is no more operations applied to the qubit.
If you look at what gets called with the following:
The function _add_sample_measure is never called.
It should just sample measure, which would be quicker.
Change the _validate_measure_sampling function in qiskit/providers/builtinsimulators/qasm_simulator.py to be something like:
I can make a pull request if needed.
This has been discussed in #666 previously. The question is whether to implement this in the simulator (as you have done here), or whether to have the intelligence in the transpiler. The consensus seems to have been the latter.
It is natural for the transpiler to figure this out and either a) set a allows_measure_sampling flag, or b) by construction put the final measurements at the end of the generated qobj. I think @kdk is working on this.
Attaching a PR to address this by including a barrier prior to the final set of measurements when compiling for a simulator. (This was already done when compiling for devices.) This should keep separate the responsibilities of the transpiler and the backend, without effecting the semantics of the circuit.
