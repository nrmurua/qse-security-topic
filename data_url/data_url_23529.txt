While sqlite has some advantages for certain use cases, it is not easy to work with when updating data continuously and accessing data from a remote analysis computer; especially when synchronizing the file with a remote server or cloud blob storage. The sqlite file is great for transactional updates, but when long measurements take place the file can get quite large (multiple GB) and makes it difficult to synchronize as it is not possible to do so incrementally (afaik). It would be great to have an alternative option available to store data that is more portable.
I'd like to add a feature that allows the user to export the data as a static file on disk at the end of a measurement and, for example, lets the user decide what storage format to use by setting an "export type" variable in the qcodes configuration. This way, I can synchronize the files with a cloud storage, and still have my sqlite database available locally to facilitate transactional updates during the measurements.
I've discussed this feature with @jenshnielsen who is planning a refactor of the DataSet class to allow for multilpe data back-ends as an alternative to sqlite; this feature would need to be aligned with or at least not interfere with that work. Since this is solely for static exports at the end of a measurement, not for updating or appending data to an existing file, we think it can live in parallel for the time being.
@jenshnielsen @astafan8 suggested to use netcdf as many QCoDeS users use xarray to store their data.
