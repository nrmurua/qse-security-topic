This is to reduce the risk that liboqs RCs don't work OK with designated important downstream projects.
This issue is to discuss the approach to do this (from manual, via release documentation) to fully automated via CI.
Also, we should decide which subprojects should be subject to this treatment, i.e., which ones we really support. Proposal for now is oqsprovider (only). Other opinions welcome.
Oops -- the "documentation" solution already is in place, but apparently didn't get executed: https://github.com/open-quantum-safe/liboqs/wiki/Release-process#openssl-oqsprovider.
Here's the commit that I (and CI) was missing in 0.9.1: aeac3a4. That said, the error in thinking is arguably on my side: When trying to release "oqsprovider" 0.5.3 I didn't consider that HQC had not been updated in liboqs 0.9.1, so I would have had to release oqsprovider with an old (the "0.9.0" labelled) code generator config file but didn't do so. In other words, the 0.5.3 RC for "oqsprovider" is not getting published but we wait for liboqs 0.9.2 as discussed. It would be nice to do a proper new functional release of oqsprovider in the near future, too and not wait with that until liboqs releases 0.10.0 at some unknown future time.
Per our release documentation, the oqs-provider release-test script needs to be run on a many-core machine. Do you happen to know if the GitHub Actions runners would be "suitably powerful" @baentsch?
Per our release documentation, the oqs-provider release-test script needs to be run on a many-core machine. Do you happen to know if the GitHub Actions runners would be "suitably powerful" @baentsch?
Worthwhile a try I'd say. If this doesn't complete in time, we have another case to make for CI resource funding (beyond the M1s).
