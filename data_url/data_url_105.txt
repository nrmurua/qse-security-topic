For applications that need to affect a general exp(i theta PauliTensorProd), we typically just decompose into a set of basis change, cnots, and rz operations, and the reverse. If we need to apply a bunch of these then this can be very costly on the backend simulators since these circuits will grow to a very large depth. In addition to this, cuStateVec has a dedicated function for this type of rotation. We should hook this up to the programming language to enable optimal performance on our GPU simulators.
My proposal would be to enable something like this
and connect this up through the ExecutionManager to the CircuitSimulator, which can be implemented to target the cuStateVec optimal function.
Started in main...amccaskey:cuda-quantum:applyExpPauli
@1tnguyen let's override applyExpPauli in QPPCircuitSimulator
