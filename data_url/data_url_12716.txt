While working on some notebooks like QFT workbook with jupyter locally, it generates cell ids to all type of cells(code, markdown, etc). This is on not a problem if someone is running a kata locally. However, its extremely frustrating for people who want to contribute to Quantum Katas repo. As a mitigation, we might want to use "git add -patch" or edit the JSON object directly in VSCode for extremely small changes. But it does not scale well if someone wants to add a section/tasks to the notebooks
I recently moved to a new device and noticed the generation of "id" field for QFT workbook when I raised PR #819 . To avoid the noise in my PR, I opened the workbook with VSCode in json format and edited the json directly instead of doing it from jupyter locally. Later, I discovered that this issue was not happening in QFT kata. So, I investigated further on this and found that nbformat minor versions are different(4.2 in QFT kata, 4.5 in QFT workbook)
Nbformat version 4.5 introduced a new field cell id to be added to all type of cells(code, markdown, etc).
Cell Id addition to jupyter notebooks JEP: https://jupyter.org/enhancement-proposals/62-cell-id/cell-id.html
Nbformat doc : https://nbformat.readthedocs.io/en/latest/format_description.html#cell-ids
Downgrade nbformat version to 4.2/4.4
A quick search in VSCode for "nbformat_minor": 5 reveals that the following jupyter notebooks which are on nbformat version 4.5
Hmm, that's interesting. I was sure it's a side effect of different versions or different tools that people use to edit the notebooks, rather than something specific to the content of the notebooks. I've noticed before that people editing notebooks would introduce the cell ids, but once I edit them on my setup, the ids would go away again. The BasicGates workbook from your example does not have cell ids despite being on version 4.5, because I was the last person to edit it and my installed version of nbformat is 4.4.0.
That being said, I'm happy to test this hypothesis by downgrading the version in the notebooks to 4.4 :-) It shouldn't break anything - I think everybody can edit the notebooks with any version of tools installed regardless of the version in the notebooks.
Yes @tcNickolas, you are right.  Interestingly, my local machine is on nbformat 5.4. My guess is that jupyter does the following:
This might be the reason for the disperancy. I have validated locally that after this change, I am not facing the issue. So, hopefully other contributors should also not face this issues post fix. Fingers crossed. :-)
Here is the PR with nbformat version downgraded to 4.4 as per your suggestion : #825
