It is unclear to me (and INSTALL.md does not discuss it either as far as I can tell) how one should go about including a system-installed DBCSR library when building CP2K, i.e. if one prefers to use one already installed in /usr/lib and not the one in exts/dbcsr. The exts/Makfile.inc errors out immediately if it can't find the DBCSR git submodule, and that Makefile appears to be included by default from the main one.
Is this even supported?
@mbanck this is not yet supported. Support for this is expected the earliest for DBCSR v2.2 and CP2K 9+. See also #351
For the record (or people checking in later): It seems all that is needed to build against a system-installed libdbcsr in a hacky way is to remove include $(EXTSHOME)/Makefile.inc from Makefile and add -ldbcsr to LIBS in the arch file (provided libdbcsr and its modules are installed in default system search paths).
@mbanck did you remove the exts/dbcsr completely? Because there is a USE dbcsr_config in src/start/cp2k_starts.F and we are not installing this .mod file when installing DBCSR through the CMake-provided make install, hence it should not build that way.
@mbanck did you remove the exts/dbcsr completely? Because there is a USE dbcsr_config in src/start/cp2k_starts.F and we are not installing this .mod file when installing DBCSR through the CMake-provided make install, hence it should not build that way.
Oh right, I had to install that .mod in DBCSR to make it working, thanks for reminding me. Is that going to wreck DBCSR?
Also, I have to admit that I did not remove the exts/dbcsr dir the last time I tried, but earlier tries (which ran into the -fopenmp issue) did not have the git submodule at all and built fine.
Oh right, I had to install that .mod in DBCSR to make it working, thanks for reminding me. Is that going to wreck DBCSR?
No, not at all, but this is an internal file of DBCSR and not part of the public API, hence it is not something DBCSR is going to support in this form (see also #1260).
