Hello,
I'm trying to make "OPENMP Installed:   False" to "OPENMP Installed:   True", but somehow it does not work.
I have never tried to use openmp, so I am completely new to this, so maybe I did not do the right thing, which is common.
qutip.about() shows me the following things:
Copyright (c) QuTiP team 2011 and later.
Original developers: R. J. Johansson & P. D. Nation.
Previous lead developers: Chris Granade & A. Grimsmo.
Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Gigu√®re, and Boxi Li
Project Manager: Franco Nori.
Currently developed through wide collaboration. See https://github.com/qutip for details.
For your convenience a bibtex reference can be easily generated using qutip.cite()
What I have done so far:
installed qutip from source following the instructions
--- the "zspmv_openmp.cpp" problem is solved
--- everything is installed without errors
Updated all packages/spyder/python/anaconda/...
installed Visual Studio Build Tools 2019 (2) Version 16.7.7
--- this includes "C++ Buildtools" (maybe not important, but also ".NET Desktop-Buildtools" and ".NET Core-Buuildtools"
I checked, whether openmp is installed in anaconda powershell prompt via "conda install -c conda-forge openmp"
--- it shows "# All requested packages already installed." So it seems openmp is already installed
It would be a great help, if you give me a possible solution to this
Thanks in advance!!
Sorry, this reply is very late!  I was testing openmp installs on windows the other day.  if you make a new conda environment, and make sure to install openmp first, it seems OK.  (In once instance I did seem to have your issue, but I am not exactly sure what I did to reproduce it because it suddenly disappeared. Perhaps you had qutip already installed, and then tried to reinstall on top of it with openmp enabled?).
however, you may then run into the issue currently being fixed in #1471
You might need to wait a little for that fix to be merged, or use Jake's branch in the mean time.
#1471 is now merged into master, so that will be included in 4.next.
To help debug this particular issue, could you post the output of python setup.py install or pip install -v, possibly repeating the -v up to 3 times (whichever you were using before).  We need to see the compilation commands and compiler output that's being issued during the build process.
After that, could you temporarily change this block of code in qutip/__init__.py: 
(i.e. remove the entire try/except block and leave the import).  This will cause QuTiP to throw an exception when you try to import it - could you also post the output of that exception?  You'll want to revert that change right after, so you have a functioning version of non-OpenMP QuTiP at the very least.
The fixes in #1471 were released in 4.6.0, Neill reported that it worked for him, so I'm closing this issue for now. Please comment or reopen it if there is more to report.
Hi. I am having the same issue when installing through anaconda3 on Ubuntu20.04. The steps which I am following are:
$ conda create -n qutip python=3
$ conda activate qutip
$ conda install -c conda-forge openmp
$ conda install -c conda-forge qutip
However, when I execute qutip.about(), I get the following:
For your convenience a bibtex reference can be easily generated using qutip.cite()
As you can see, OPENMP does not seem to be enabled. Please let me know if I am doing things incorrectly.
Hello! As @jakelishman described, you can help debug this issue by trying:
and reading the exception produced.
I suspect that the qutip.cy.openmp.* packages will simply not have been compiled -- they're only built by QuTiP when "--with-openmp" is passed to setup.py and I think conda install ... qutip will not do that even when OpenMP is already installed. To correct this you will need to install QuTiP from source and pass --with-openmp yourself as described in https://qutip.org/docs/latest/installation.html?highlight=openmp#direct-setuptools-source-builds.
We probably could make "openmpi" and "no-openmpi" builds for conda-forge by adapting the pattern in https://conda-forge.org/docs/maintainer/knowledge_base.html#openmp but that would require some work (and be a feature enhancement :).
