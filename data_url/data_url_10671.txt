Since dimod.AdjArrayBQM is not "shapeable", it doesn't support methods like add_variables_from, and embed_bqm fails if the source BQM was of AdjArrayBQM type. A fix in 5af1c10 makes target bqm inherit from source bqm's type.
Sampling traceback, for example:
Proposed fixes: either use a shapeable target, or explicitly fail when source is non-shapeable.
I am leaning towards it always creating an AdjDictBQM, since at the scale that we're embedding the flexibility is probably more important than anything else. However, it does seem a bit surprising for the function to change BQM type.
I suppose an approach would be something like target_bqm = as_bqm(source_bqm.empty(), cls=[AdjDictBQM, AdjVectorBQM, AdjMapBQM]) which will at least try to match
Closed by #310 , which defaults to AdjVector when the BQM is not shapeable.
