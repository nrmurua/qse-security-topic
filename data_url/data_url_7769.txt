The decorator hamiltonian_builder in operators.py takes in a function which constructs a Hamiltonian and gives back the following:
The line if isreal(H): H = H.real means that if the caller asked the original function for a complex result via an explicit dtype argument, they might get a real result back anyway. Is this intentional? If not, should I make this decorator respect explicit dtype inputs?
Yes, that would be nicer. Check if dtype has been specified in kwargs then change the relevant line to something like?
Why check explicitly for complex? I was something less heavy-handed like
so that there's just no attempt at dtype coercion if a dtype is explicitly passed.
Indeed that is simpler!
