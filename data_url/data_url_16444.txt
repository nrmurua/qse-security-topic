Since #4591 merged there has been a significant performance regression in circuit construction time. The addition of an isinstance check on numbers.Integral adds significant overhead. This is likely because ABCmeta (which is what numbers.Integral is built on) defines a custom isinstance checker to enable external registration.
For example: https://qiskit.github.io/qiskit/#converters.ConverterBenchmarks.time_circuit_to_instruction?machine=qiskit-benchmarking&os=Ubuntu%2018.04&ram=16%20GB&p-n_qubits=5&p-depth=8192&commits=ec5e5370
I reverted the commit locally to test the performance difference and it made a sizeable improvement:
Run circuit construction after #4591
Circuit construction performs the same as before.
Come up with a scheme for type checking that doesn't introduce so much overhead, like either changing the ordering or iexplicitly checking for numpy trpes instead of relying on Numbers.integral or if we can't come up with a performant alternative then we should revert #4591.
How about explicitly checking for several types, i.e. instead of
do
?
I expect that would work and was one of the suggestions I left in the issue. But, we'll have to benchmark it to be sure
I had worked on #4591 with @Cryoris
I will continue working on this issue too
