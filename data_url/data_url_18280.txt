I have a three bit classical register and receive a 5 bit string as output. This always seems to include two bit that are always 0, but they aren't always in the same place. I cannot determine the logic behind it.
I think it related to, but not exactly the same as, this issue
#2
More info can be found in my post to the QX community
https://quantumexperience.ng.bluemix.net/qstage/#/community/question?questionId=3fde5ace6866eb41eba24fae2ce4dce3
@decodoku yeah its the same error the real device returns 5 bits and the order is q4,q3,q2,q1,q0 so if your using only the first three the first two bits will be zero.
Sorry for not reading your post in full before commenting above.
From the example your posted on the qx community.  I see you ran two circuits
OPENQASM 2.0;
include "qelib1.inc";
qreg q[5];
creg c[3];
u3( 1.0 * pi,0,0) q[1];
measure q[1] -> c[0];
measure q[2] -> c[1];
measure q[3] -> c[2];
giving results
{'01011': 61, '01000': 1, '01010': 3, '00001': 72, '00011': 789, '01001': 6, '00000': 3, '00010': 89}
and
OPENQASM 2.0;
include "qelib1.inc";
qreg q[5];
creg c[3];
u3( 0.5 * pi,0,0) q[1];
measure q[0] -> c[0];
measure q[1] -> c[1];
measure q[2] -> c[2];
{'00110': 1, '01010': 251, '01000': 273, '00100': 1, '01100': 1, '00000': 255, '00010': 242}
The current bug is if  both of these are run separately then in the first one the qubit 1 and 4 should default to zero and in the second one qubit 3 and 4 should be zero. If run together (in a batch) only qubit 4 will be zero as in the batching we insert measurements that have been declared in any circuit. We have described this somewhere (i forget at the moment). So i agree it is not the same as outline in #2 but its the same bug.
So in summary the bugs in the measurement are
I think both of these describe your errors and both we are working to fix. Please let me know if you are observing something different to this and once again thanks for using our device.
This is a limitation of the current architecture backend and depends on the release of 0.5, when qobj is integrated. Therefore, I'm tagging this issue with "on hold".
