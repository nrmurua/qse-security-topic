Some gates have mathematically equivalent decompositions into native gates that vary in terms of the fidelity of the actual pulse program. For example, RY(pi/2) 0 may equivalently decompose into
or
Rigetti's hardware-native RZ gates are currently virtual, so these two implementations are not equivalent from the perspective of pulses hitting the device. The side effect is that the XZX implementation will have a higher error rate than ZXZ in practice.
While it might make sense generally to ascribe an error rate to RZ explicitly, for the purposes of compilation I think it makes sense to assume RZ is perfect, and that all errors wash out in the playing of subsequent RX operations.
Running the following:
will either produce
or
However, the second (worse) option is more likely. It's possible this could be corrected on the quilc side, but it's probably not reasonable to bias one way or another assuming that RX and RZ have the same fidelity.
rigetti/qcs-sdk-rust#33 opened to make the implementation consistent across SDKs.
ðŸŽ‰ This issue has been resolved in version 3.2.0-rc.2 ðŸŽ‰
The release is available on GitHub release
Your semantic-release bot ðŸ“¦ðŸš€
ðŸŽ‰ This issue has been resolved in version 3.2.0 ðŸŽ‰
The release is available on GitHub release
Your semantic-release bot ðŸ“¦ðŸš€
