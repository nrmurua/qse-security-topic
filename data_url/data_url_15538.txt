When exporting  to qasm a circuit that contains the C4XGate, the newly generated code is incorrect, since it doesn't contain the definition of the c3sx gate and reading that qasm output back raises the error ``QasmError: "Cannot find gate definition for 'c3sx'".
Run this program
Output:
If we convert to QASM, it generates:
Output:
And then finally reading back the same generated QASM creates a problem, because the definition of cs3x at line 5 is never declared:
Output:
The c3sx gate should have been defined somewhere in the output qasm file, so that it becomes a valid qasm file, ready to be imported.
During conversion it seems that c3sx should be available among the "basic" gates ( existing_gate_names list):
https://github.com/Qiskit/qiskit-terra/blob/ee0d76052411230848ab2830c5741c14c2450439/qiskit/circuit/quantumcircuit.py#L1635
Nevertheless, if we have a look at what is imported with the qelib1.inc external library, we do not find any c3sx.
https://github.com/Qiskit/qiskit-terra/blob/c816be80a7713af7d39550887f6f8e57e22e09e7/qiskit/qasm/libs/qelib1.inc
So, maybe we should either drop c3sx from the list of existing_gate_names in the def qasm() method or define it properly in the qelib1.inc. At the moment these are the two conclusion I came to, but I am looking forward to your feedback.
Thanks in advance
Thanks for the report.  This is a duplicate of #7148, which does have a fix proposed in #7241 but there's some slight complicating factors around Terra's non-standard version qelib1.inc (see also #6125 (comment)).  It's stalled a little, in part because sorting out awkward deprecation periods and new features for old QASM 2 libraries that current users are relying on is tricky, and a low priority because we expect most use cases to transpile the circuit to a supported basis before emitting them.
Duplicate of #7148
