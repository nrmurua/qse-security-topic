run this
MultiType(Lists(Ints()), Ints()) should return a MultiType validator that accepts Lists of Ints or Ints.
The above snippet throws a TypeError due to class list being not hashable.
OSX 10.14
Python 3.7
Qcodes git (master)
Further looking at the instruction where the error is thrown shows that the error occurs when the self._valid_values is converted to a set (in order to only keep unique values). Since the type of Lists._valid_values is a "list of lists" the implicit unpacking (by +=) of the list of lists that happens in Line 466  results in a list being appended to MultiType._valid_values
https://github.com/QCoDeS/Qcodes/blob/94f271b6c14599ed2bd7e303e77c993bb46c44fc/qcodes/utils/validators.py#L463-L467
From my point of view the best way to fix this is that _valid_values should always be a tuple instead of a list. However I have not looked at the details of the logic of what _valid_values is used for, so maybe it makes sense to have a list somewhere?
@StefanD986, thanks for reporting this. And congratulations for opening issue number 1337! ðŸ˜„
I like the idea of using tuples instead of lists for holding the valid_values, but I don't think there is any way around the valid_values for Lists being anything but a list. I'll post a PR shortly with an attempted solution.
