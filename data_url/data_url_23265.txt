If you load a file containing the following ipython the code hangs while it tries to establish a connection to the redpitaya:
from pyrpl import RedPitaya
r = RedPitaya()
If you load the same code with python (without the i), it works correctly. The issue is in paramiko, not in pyrpl. The bug has been reported since April: paramiko/paramiko#719
With older versions of paramiko, I did not experience this problem. However, reverting to those older versions does not work any better for some reason. If someone has a nice idea for avoiding this bug, lets hear it. For now, using system calls to launch paramiko can do the job, but it is a very ugly solution.
It looks like it is related to that:
http://stackoverflow.com/questions/443387/why-does-paramiko-hang-if-you-use-it-while-loading-a-module
In other word, it's not a bug, it's a feature...
Most probably this is related to the first point:
https://docs.python.org/2/library/threading.html#importing-in-threaded-code
I guess paramiko is importing some modules in a thread that is launched by connect()
So apparently when the module is loaded properly, this bug won't appear. Unless someone has a nice proposal to fix this, or claims that this is really annoying, we will not fix it and wait for updates from paramiko.
I have not see this bug in a long time. Seems it has disappeared in normal usage.
