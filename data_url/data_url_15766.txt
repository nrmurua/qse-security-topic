The nightly benchmark runs flagged a regression in the QUEKO transpiler benchmarks caused by #6998:
https://qiskit.github.io/qiskit/#queko.QUEKOTranspilerBench.time_transpile_bigd?cpu=Intel(R)%20Xeon(R)%20E-2174G%20CPU%20%40%203.80GHz&machine=qiskit-benchmarking01&num_cpu=8&os=Ubuntu%2020.04&ram=64GB&python=3.8&p-optimization%20level=0&p-routing%2Flayout%20method=None&commits=7c30a6e7
It is showing a 720x runtime performance slowdown (from 35.824ms to 25.810s). At first I was surprised because a transpiler benchmark shouldn't be using QuantumCircuit.depth() but looking at the benchmark code calling .depth() on the output circuit is part of the timed function: https://github.com/Qiskit/qiskit/blob/master/test/benchmarks/queko.py#L235 This is arguably a benchmark bug, but it did catch the regression in this case so it's useful for that.  The regression wasn't quite as bad on other variants so my guess is the regression scales with number of instructions in the circuit (probably because the filter function runs over circuit.data).
Run QuantumCircuit.depth()
depth() doesn't scale so poorly
on L1814 can instead be
so that we only loop over all the circuit elements once.
