master has qutip/qutip/cy/openmp/src/zspmv_openmp.hpp, for csr @ dense product with openmp, but we did not have the time to add when making the data layer for dev.major. In v4, to use openmp, the user needs to compile from source locally with python setup.py install --with-openmp and then an option has to be passed to the solver at run time to use it.
For v5, it would be great if openMP was part of the Data layer and used without much thought by the user. (No need to pass Options(use_openmp=True) to mesolve).  We would probably keep a flag and threshold as an option in core or settings so we can run tests with and without.
We should add support for cython's prange. Presently, using it breaks mac's tests. If made available, there are quite a few functions for the data layer that could gain from it.
While openmp is available in v4, it was not used much since it can only be used when compiling locally and the options isn't well known. Ideally, it would be packaged in the wheels (for all but Mac?) instead of needing a local installation. However it does not seems easy, scipy decided against it, because it does not mix well with other parallel environments. It may be possible with conda since it has a openmp package.
Tasks:
No response
No response
Interesting discussion about the relationship between OpenMP and multiprocessing -- https://scikit-learn.org/stable/faq.html#why-do-i-sometime-get-a-crash-freeze-with-n-jobs-1-under-osx-or-linux (in case this is relevant when bringing OpenMP back).
Originally posted by @hodgestar in #1948 (comment)
