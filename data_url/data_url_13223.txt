This is a simplified version of the stale issue #1201.
The versions of frontends that are tested with Mitiq are those in dev_requirements.txt. Apart from Cirq which is in requirements.txt.
It would be helpful to have a function that returns those versions. E.g.
Important note: this is very tricky task since requirement files are present in the master branch but are not present in the "stable" Mitiq packages that are released on mypy.
A solution could be to:
For the moment, I would not call the new function within mitiq.about() since, if there are problems (e.g. internet not working), the call to mitiq.about() would fail and this is not nice.
This function requires an internet connection. This is not optimal but I don't see a valid alternative.
A potential stub of code for getting the requirement files from internet is the following. But there could be much better ways.
Isn't this just mitiq.SUPPORTED_PROGRAM_TYPES? How much value does version information really add?
Sometimes it happens that Mitiq is not compatible with the latest versions of supported frontends.
Users are typically not aware of this fact and they often report error messages that are due to this problem.
This function may help users to know what versions of frontends are more appropriate for the installed version of Mitiq. It doesn't mean that they are forced to install those versions, but at least they now that those versions have been tested.
Thanks Andrea. I of course leave it  to you but, FWIW, my semi-detached perspective is that this seems like over engineering. Unless there's many messages per day about this, I would do nothing. Even if there are many messages, I would still probably do nothing. It's user error if they're not using the supported version.
But if there's a really strong urge to do something, I would go minimal and add a URL to the error message, maybe to mitiq.about, like "See https://github.com/unitaryfund/mitiq/blob/master/dev_requirements.txt for supported versions."
I agree with Ryan in that I'm not sure this worth our time to add. I think the assumed happy path is something like
I don't feel as though having the function mitiq.supported_frontend_versions() is going to ensure the user knows to run it before opening an issue or messaging on discord.
A secondary concern is that adding HTTP requests seems strange to learn about a local install of mitiq. I'm not very familiar with python packaging, but can mitiq (installed with pip) access requirements.txt and dev_requirements.txt locally? Or are those not bundled in the wheel? They've got to be, as how else does pip know how to resolve dependencies?
Based on the feedback, we can close this issue.
Side comment: the message "See https://github.com/unitaryfund/mitiq/blob/master/dev_requirements.txt for supported versions." can be a good compromise. But, if we ever decide to do this, the correct link is something like "https://github.com/unitaryfund/mitiq/blob/v" + "installed_version" + "/dev_requirements.txt".
