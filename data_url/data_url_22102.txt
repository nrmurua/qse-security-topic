Latest gateware can't produce simple sinusoids.

OK. I see what's happening. The sawg configuration persists from one experiment to the next. Zeroing the other oscillator frequencies permits generation of the expected output.
I'm changing the title of this Issue to reflect this observation. It would be helpful to have a sawg.reset() function to zero out all the registers. A single RTIO command for this would be faster too.
Shouldn't core.reset() reset the SAWG state?
Yes. I assume he meant fine grained per-channel reset control.
I don't see that core.reset() resets SAWG state. Example follows.
While program is running I see sinusoid on scope for sawg1. As expected.
Once program is terminated I continue to see sinusoid on scope for sawg1. So sawg1 PHY is continuing to operate. As expected
Now I run the following program.
Once artiq_run terminates I still see sinusoid on scope for sawg1.
Currently, we reset a couple things on core.reset():
but not others:
This is consistent with the documentation. Everything that could cause "undue" problems (input overruns, events far in the future blocking the FIFOs, broken bus data) for subsequent experiments is canceled. But the PHYs state remains.
It would also mean (at least to me) that the "output side" of the SAWG should not reset on core.reset(), only the communication side and data state machinery (but there is none). We would need to expose reset_phy separately.
This doesn't change the fact that the implementation lacks an adequate reset mechanism for swag. Establishing a well known starting state is crucial. Some reasons.
Don't worry Joe. That comment was not a response to you.
Please don't close the Issue until I've tested it.
Please don't try to dictate our issue workflow. We have explained the procedure to you multiple times.
observation: sawg.reset() breaks swag
Steps to reproduce:
