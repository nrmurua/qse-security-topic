python setup.py install -- -DAER_THRUST_BACKEND=CUDA -- -j8
fails with this message:
qiskit-aer/_skbuild/linux-x86_64-3.6/cmake-build/CMakeFiles/CMakeError.log shows the following:
I am able to build this same failing configuration test program compiles and links with the command line:
gcc -Wall -o test_pthread test_pthread.c -lpthread
With a soft link  libpthread.so as libpthreads.so the test program also compiles with the command line:
gcc -Wall -o test_pthread test_pthread.c -lpthreads
which is the lib name that the Aer build may be expecting.
Build Aer with the command line python setup.py install -- -DAER_THRUST_BACKEND=CUDA -- -j8
Aer builds
Modify cmake configuration files:
CMake is a kind of complex beast and understanding its error messages requires some previous experience with the tool otherwise is pretty easy to lose the track of what's going on.
Everything should be working fine by following the instructions from the contributing guide, no extra steps are needed. One thing that is not explicitly said in the guide is that on Linux and Mac the preferred tool to build is Make, not ninja, it doesn't mean that with ninja things are not  going to build, it's just that we haven't tested it, so  I'd recommend removing ninja if you are not using it for any other purpose on your system.
Try these steps and show me the build.log:
Hi @atilag ... the tee output is attached, along with CMakeError.log .. as noted, it's bombing looking for libpthreads which, even if it exists (creating it by soft link from libpthread, which works for linking the configure test manuall), doesn't satisfy the links because, I think, Ninja is not writing the link line correctly.
Ninja is there because so many Qiskit requirements won't build without it :)
If this is too much trouble, I supposed I can remove it.
build.log
CMakeError.log
BTW, Aer builds fine if I don't try to build the GPU/Cuda version.
Ok, there seems to be two different problems there ,but I think they could be related somehow. Let's fix the first one:
I told you to use -j because this is the parameter one passes to Make for parallel compilation, but ninja doesn't understand this. If you don't want to remove ninja, then we have to tell the build system to use Make so:
Same or similar problem:
What about the build.log?
build.log
Hi @jwoehr
Looking in the last build.log you provided, I see this error:
At the beginning there are these lines related to CUDA conf:
Does your CUDA device belong to this architecture group (2.0)?
@vvilpas :
GeForce GT 540M's CUDA architecture is 2.1 (you can check here, https://developer.nvidia.com/cuda-gpus). Unfortunately, that one is deprecated since CUDA 9. Not sure if downgrading to CUDA 8 (in case you want) will work. Maybe @hhorii can shed some light about this.
@jwoehr @vvilpas I don't think CUDA 8 will work, because we require a modern version of the compiler to run (due to C++11 stuff).
I'm closing this issue @jwoehr feel free to repoen.
