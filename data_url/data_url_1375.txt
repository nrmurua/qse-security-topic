Summarize the task
The constructors in SimulationState subclasses like DensityMatrixSimulationState are rather flexible and thus do potentially lots of stuff. This can take excessive time when you just want to copy or deserialize or etc, and is often hard to reconcile with eval(repr(x)).
Move the excess logic to a classmethod factory method, and simplify constructors to just be thin functions that populate fields and maybe a couple O(1) sanity validations. This is the approach taken in QuantumStateRepresentation, and has worked well.
Rename initial_state to quantum_state or something while doing this, as it makes more sense in the repr.
Also note this can be done without deprecation since SimulationState is new. However, the corresponding ActOnArgs do need to copy the original initializers.
I think I changed my mind on this. It would be a fair amount of work because it would require making _BufferedStateVector etc public, with reprs and json and etc. Then it makes the constructor less flexible, needlessly requiring the user to search for the factory method. All this for a class that is mostly hidden away, seems low ROI, if it's even positive. Closing the issue.
