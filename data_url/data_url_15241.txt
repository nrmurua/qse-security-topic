The current init for SparsePauliOp has handling for storing coefficient arrays using their input dtype, but this is used to cast the coeffs to that type after moving the Pauli phase to the coeffs. This can cause errors if the dtype is not complex.
Here is an example which gives an incorrect answer:
This raises a warning
and returns the incorrect value
For the above example the correct answer should be
Removing the explicit dype in the line from the warning should fix this, which would allow double coeffs to be converted to complex if required.
I suspect this support was added in the first place to handle object arrays for parameters, and I think that should still be supported if the dtype arg is not used since the asarray should default to an object array in that case.
Yeah, seems like the allowed dtypes here should only be np.complex128 and object - any other numeric dtype should perhaps be raised to complex to avoid this error.
@ikkoham: did you have more dtypes in mind when you wrote that part of the handling?
Ever wanted to use a float to save data? Well, no.
OK, I'll restrict it to complex and object.
