There are some places in our documentation where OpenPulse-specific constructs are used outside of cal and defcal blocks.  We either need to:
This is so in the future, if a new defcalgrammar is developed outside of the OpenQASM 3 effort directly, we're better defining where its additional grammar constructs are actually valid.  I think it's most likely that the examples probably just want putting inside cal blocks, for the most part.
On the OpenPulse pages of the specification, there are some cases where OpenPulse types are used outside of cal or defcal blocks.  For example, one of the Capture Instruction examples says:
The first extern uses the waveform type as an input, which isn't a valid type in OpenQASM 3 (it's in OpenPulse).  I suspect the extern functions just want moving into the cal block - this is how the calibrations in practice section presents such examples.
The page on general pulse grammars also has wildcard physical qubits matched as $<identifier> (e.g. $q instead of q).  That seems a bit inconsistent to me (why not use q? The $ usually represents a specific hardware qubit, but that's not the case here - it's a stand-in for any qubit.), but not really an issue.
The consensus from the TSC meeting on 2022-06-17 was that the extern function definitions I mentioned here ought to be within cal blocks.  There is tentative agreement to change the wildcard identifier in defcal statements from $<identifier> to simply <identifier> on the basis of consistency with the rest of the language.
I will make two separate PRs:
The identifier-change PR is not pre-approved (well, neither PR is pre-approved) - there was originally a reason for including the $, but either people's minds have changed a bit since then, or people couldn't fully remember the original reason.  The review of that PR will be another chance for people to argue in favour of the leading $.
