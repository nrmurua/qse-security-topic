For a simple test circuit with only one CNOT gate (setting n=0), the results from the code snippet below are as expected: similar to {'01': 9, '10': 20, '00': 995} (mostly '00' with device noise causing population in other states). If we insert n additional pairs of CNOT gates, we expect the measured result to approach some noisy limit, since pairs of CNOT gates cancel each other but increase the noise in the circuit. However, what I find is that even for extremely high values of n, such as 1000 (2001 CNOT gates in the circuit!), the measured values are virtually the same as the original circuit with only one CNOT with what seems like no increase in the effect of noise. I have set optimization_level=0 to ensure that the additional CNOT gates are not optimized away.
Results for up to 50 extra CNOT pairs:
If we insert n additional pairs of CNOT gates, we expect the measured result to approach some noisy limit (like measuring a completely mixed state), since pairs of CNOT gates cancel each other to form the identity but increase the amount of noise in the circuit.
This doesn't look like a bug, just a bad choice of initial state for this test circuit: A CNOT gate applied to the ground state has no effect. Depolarizing error will occasionally perform a bit flip of one or both qubits, and thermal relaxation will send them back to zero, which is what you are seeing.
If you want to see error accumulating you would need a different initial state. Eg apply a hadamard to qubit 0 and then it very quickly results in a highly mixed state with additional CNOTs, but if you run it long enough you will see the effect of relaxation biasing towards 00 again:
Results in
Closing this issue as it appears to be resolved.
