I'm using GCC 7.40 with CUDA 10.0 to build the main branch on a system. Everything proceeds smoothly with the toolchain and then when I go to build cp2k using the generate setup file and the generated arch file, it breaks with the following error:
The problem is that the -finit-derived flag combined with the -Werror-uninitialized flag are causing subroutines to be flagged if uninitialized variables are passed into them, even though the variables are marked as INTENT(IN).
The work-around for now is to add the flag -finit-local-zero, which "instructs the compiler to initialize local INTEGER, REAL, and COMPLEX variables to zero, LOGICAL variables to false, and CHARACTER variables to a string of null bytes."
Can this be added as part of the routine build process?
Thank you for the report and sorry for not responding earlier. Unfortunately I can't reproduce this error, neither with a vanilla gcc-7.4.0, nor with gcc-7.4.1 from openSUSE.
Setting -finit-local-zero is unfortunately the wrong way here since this completely disables the purpose of the -Werror=uninitialized. So, if at all we should remove all -finit-* instead, which would likely make it worse in your case.
My guess is that your compiler configuration has some extra configuration makes it complain about something completely legal, hence this is rather a compiler bug.
Nevertheless, it would still be interesting to see the output of gfortran -dumpspecs and to know whether this was with a vanilla compiler or a distro provided one. Can you still reproduce this and could you provide those details?
I'm closing this as we can't reproduce it and the toolchain has moved to GCC 9.2 in the meantime.
