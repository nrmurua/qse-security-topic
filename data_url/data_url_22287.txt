We've been having some issues with underflow errors on pulse sequences, and one solution seems to be to increase the ofifo depth here,
We've tried changing ofifo_depth to 1024 and haven't had any issues yet. Is there a limit to how deep it can be? Would it be possible to have ofifo_depth=1024 and ififo_depth=128? Are there any potential problems to increasing this?
The only limit to fifo depth is the amount of available block ram. You can check your resource usage in the vivado outputs. I don't see any immediate technical limits other than that one.
A fifo deeper than -- let's say -- your estimate of the number of events on any one channel in an experiment won't be a solution, whether it seems to be one or not. It should be very clear that playing with the fifo size (or manually converting for machine units in a blanket fashion) to resolve underflows for "normal" experiments is only delaying exposing the actual problem here.
The better estimate for a good fifo size is the maximum burst size you expect on a channel. A burst is the maximum number of events that you expect to have to emit at a rate faster than the CPU. That would be pretty small (< 100) for normal experiments and maybe (just maybe) larger for benchmarking stuff. But benchmarking stuff should not be a burst above the CPU capacity because that can't scale.
Please try to identify the actual problem here that leads to the underflow. I recommend spending zero time on manually converting to machine units or finding the absolute maximum of fifo depth. A logic analyzer trace would help. And a minimal example experiment.
The experiment we were having trouble with is the following,
Using the RTIO analyser, the slack was being lost in this pulse here, self.cool.raman_cool(4800)
Which is from,
The issue we had was looking at the RTIO analyzer, we were losing a lot of slack per raman cool pulse, mainly because of the microwave pulses we have to carry out for the repump. Without using machine units, a for loop with just one loop for
Would work, but even two loops would result in an underflow. This slack was reduced drastically by converting to machine units, and with the additional fifo depth, we are able to 30 pulses with the slack going from about to 500us to 200us at the end of the sequence of 30 pulses. I'll try to get the traces we had from yesterday again.
@jordens is correct that increasing ofifo or ififo depths does not scale arbitrarily.  However, it seems reasonable to make the queues deeper if the resources are available on the FPGA, as this reduces the chance of underflow errors for complex pulse sequences with many pulses of short duration.  We will submit a patch to the nist_qc2 gateware increasing FIFO depths to the depth that seems necessary for our experiments (~several hundred pulses for sideband cooling from high nbar).  If we want to do long randomized benchmarking with very fast microwave pulses, we might need deeper FIFOs and can make a custom bitstream ourselves for the necessary channel(s).
The specific case above that @r-srinivas presents shows that having deeper FIFOs and converting to machine units can be helpful in a specific case with lots of short duration pulses, that's all.  Since these are easy and straightforward things to do, it's not an issue.
I think we can safely close this one.
Sure. But I still suspect that you would be better off with a solution that does not require either.
