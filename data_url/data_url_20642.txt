In ssl/ssl_local.h, there are #defines that assign one-hot encodings to each signature algorithm. These encodings are used in ssl/ssl_cert_table.h, and are assigned to a uint32_t variable called "amask" (declared here).
Since the encodings are one-hot, at most 32 different signature algorithms can be encoded, and since 8 bits are already used up by OpenSSL by default, at most 24 different OQS signature algorithms can be encoded and assigned to "amask" at any given instant.
We should look into overcoming this limitation.
@xvzcf Looking into a few "past" issues I wonder what would speak against changing amask to a uint64_t? If I'm not mistaken after the round 3 downselect we have 37 (OQS-)sig (incl. hybrid) combinations and this "upgrade" would give us ample room. I changed what I think is required in branch "mb-issue214" but for some reason can't create a draft PR... So maybe you can "manually" compare to check the changes (pretty minimal).
