It would be good to create an example showing how to do training on a noisy simulator. Pennylane has a good example of this :
Tutorial : https://pennylane.ai/qml/demos/tutorial_noisy_circuit_optimization.html
API Documentation : https://pennylane-cirq.readthedocs.io/en/latest/devices/mixed_simulator.html
Good idea. Currently our performant simulator and our support for cirq.Sampler or cirq.SimulatesFinalState go through two different code paths. The C++ path which is fast and what we default to as the preferred path. The slower, but more flexible path is through the py_function interface (The same one that pennylane uses to call on Cirq). We view this slower path as only really necessary for hitting engine or other true devices since it is so slow, but easy to hook into. Since we are in the process of migrating our C++ code to the OSS qsim here: https://github.com/quantumlib/qsim/ and the C++ path is possible 10-100x faster than the python path we might want to see if we can get OSS qsim to incorporate some kind of noise support.
@MichaelBroughton @zaqqwerty Given the feedback from Owen today, can one of you add some instructions on how to use the Cirq noisy simulator ? At some point, we will be adding noisy simulation in qsim, but that is going to be down the road.
