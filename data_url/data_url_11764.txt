I think it would be useful for Operator to have a __hash__ method. This way it would be straightforward to take a set of operators and remove duplicates, or use them as keys in a dictionary, etc.
The most naive way I could think to do this is would be to take the result of save_to_dict and construct a tuple of tuples that looks like ( (label,re,im) , ... ) where the tuples are sorted alphabetically by their labels, then return the hash of that. Presumably it would be a good idea to convert back to whatever mode was used before converting to Paulis.
P.S. From a quick Google search, it looks like hashing mutable objects is discouraged in Python, so maybe there are downsides to this that I am not aware of.
P.P.S. It would be my first contribution, but if this is a sensible proposal I would be willing to work on this.
With hashing the objects must be immutable otherwise things can fail - such as use with dictionaries. Did you have a particular use case where having hash would be important? The Operator has a couple of issues open here, #345 and #311 where the intent is to refactor the code. So it might be possible to take any use cases into account when this occurs, though the requirement for immutability may be prohibitive.
The main use case I am interested in is removing duplicate operators from a list. I could potentially use __eq__ for this, though it may be less efficient (in my case the lists aren't long enough for this to be an issue).
Thanks for bringing up the other issues though, I will make a suggestion there.
May I know how do you define different operators? if the difference between two operators is just the order of Paulis, will you consider they are different?
On the other hand, I think you can subtract two operators and then check whether or not the resulted operator is empty?
I would not consider them different if the list of Paulis and their coefficients differs only by order.
And yes, I would consider them the same if I subtract them and the result is zero.
Making the operators immutable in order to allow hash would lead to too many restrictions. As such, since only a small number are talked about, as discussed above since eq is available that can be used to do the checks. So closing.
