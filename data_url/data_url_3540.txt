Downloaded forest-sdk.dmg multiple times and I get error hdiutil: attach failed - no mountable file systems each time I try to mount the file. Also tried rebooting laptop.
Could you tell us your operating system version is and what md5sum forest-sdk.dmg gives?
It's OS X Yosemite version 10.10.5. md5sum forest-sdk.dmg didn't work on my mac, but md5 forest-sdk.dmg returns MD5 (forest-sdk.dmg) = e015e3c6c01cb30ca87efe636a17f332.
That is the correct MD5 hash. Does it fail when you double-click it?
We have only tested on macOS 10.12 and up, though I can't imagine .dmg mounting would change across macOS versions very much.
We've published a slightly updated dmg, though it has no changes that would fix your issue. Would you like to try that anyway?
Seemed to get farther along this time in terms of print-outs, but still failed. I used the hdiutil attach command and got:
Checksumming Protective Master Boot Record (MBR : 0)… Protective Master Boot Record (MBR :: verified   CRC32 $605BF4EE Checksumming GPT Header (Primary GPT Header : 1)… GPT Header (Primary GPT Header : 1): verified   CRC32 $CBE75FDF Checksumming GPT Partition Data (Primary GPT Table : 2)… GPT Partition Data (Primary GPT Tabl: verified   CRC32 $F319FE54 Checksumming  (Apple_Free : 3)… (Apple_Free : 3): verified   CRC32 $00000000 Checksumming disk image (Apple_APFS : 4)… .............................................................................. disk image (Apple_APFS : 4): verified   CRC32 $3BFDA5A7 Checksumming  (Apple_Free : 5)… (Apple_Free : 5): verified   CRC32 $00000000 Checksumming GPT Partition Data (Backup GPT Table : 6)… GPT Partition Data (Backup GPT Table: verified   CRC32 $F319FE54 Checksumming GPT Header (Backup GPT Header : 7)… GPT Header (Backup GPT Header : 7): verified   CRC32 $D3BF8120 verified   CRC32 $9E25EBE5 hdiutil: attach failed - no mountable file systems
@almullay Unfortunately we don't have any machines with Yosemite so we are unable to further test this. We are having no issues with Sierra, High Sierra, and Mojave. With that said, we do want the SDK to be as broadly compatible as it can be, so it would be helpful to get more information about this.
It looks like it has no problems verifying the dmg, but it doesn't look like it has an issue actually mounting it. Could you try the instructions here and see if that helps?
i'm having similar problems on El Capitan (10.11.6)
host:Downloads user$ hdiutil attach forest-sdk.dmg  hdiutil: attach failed - no mountable file systems
host:Downloads uesr$ md5 forest-sdk.dmg  MD5 (forest-sdk.dmg) = 7c744c0c30362d7857d265698649a8c1
i've downloaded multiple times, but my checksum doesn't match this thread. also, tried the steps here, but that didn't help either.
any ideas?
confirmed same package worked on my iMac running High Sierra (10.13.6)
I suspect this has to do with some weird interaction between APFS (Apple's new filesystem) and how we build these dmg's.
Hi
Same problem here. My OS seems to find no mountable files in the dmg...
I am running Sierra (10.12.3). The volume in the dmg seems to be in APFS. Maybe that is the issue ?
You said you tested the image on Sierra, but the default fs on Sierra is HFS+. Can you confirm that the file system you used is APFS ?
I am also having this issue on El Capitan, with identical results to @jonbest . Is there perhaps an older version of Forest which was confirmed compatible with El Capitan?
Could you try mounting with
with the proper file name filled in, and paste the output?
Here's the output thereof:
Initializing… DIBackingStoreInstantiatorProbe: interface  0, score      100, CBSDBackingStore DIBackingStoreInstantiatorProbe: interface  1, score    -1000, CBundleBackingStore DIBackingStoreInstantiatorProbe: interface  2, score    -1000, CRAMBackingStore DIBackingStoreInstantiatorProbe: interface  3, score      100, CCarbonBackingStore DIBackingStoreInstantiatorProbe: interface  4, score    -1000, CDevBackingStore DIBackingStoreInstantiatorProbe: interface  5, score    -1000, CCURLBackingStore DIBackingStoreInstantiatorProbe: interface  6, score    -1000, CVectoredBackingStore DIBackingStoreInstantiatorProbe: interface  0, score      100, CBSDBackingStore DIBackingStoreInstantiatorProbe: interface  1, score    -1000, CBundleBackingStore DIBackingStoreInstantiatorProbe: interface  2, score    -1000, CRAMBackingStore DIBackingStoreInstantiatorProbe: interface  3, score      100, CCarbonBackingStore DIBackingStoreInstantiatorProbe: interface  4, score    -1000, CDevBackingStore DIBackingStoreInstantiatorProbe: interface  5, score    -1000, CCURLBackingStore DIBackingStoreInstantiatorProbe: interface  6, score    -1000, CVectoredBackingStore DIFileEncodingInstantiatorProbe: interface  0, score    -1000, CMacBinaryEncoding DIFileEncodingInstantiatorProbe: interface  1, score    -1000, CAppleSingleEncoding DIFileEncodingInstantiatorProbe: interface  2, score    -1000, CEncryptedEncoding DIFileEncodingInstantiatorProbe: interface  0, score      900, CUDIFEncoding DIFileEncodingNewWithBackingStore: CUDIFEncoding DIFileEncodingNewWithBackingStore: instantiator returned 0 DIFileEncodingInstantiatorProbe: interface  0, score    -1000, CSegmentedNDIFEncoding DIFileEncodingInstantiatorProbe: interface  1, score    -1000, CSegmentedUDIFEncoding DIFileEncodingInstantiatorProbe: interface  2, score    -1000, CSegmentedUDIFRawEncoding DIDiskImageInstantiatorProbe: interface  0, score     1000, CUDIFDiskImage DIDiskImageInstantiatorProbe: interface  1, score        0, CSparseBundleDiskImage DIDiskImageInstantiatorProbe: interface  2, score        0, CSparseDiskImage CRawDiskImage: data fork length 0x00000000036317CA (56825802) not a multiple of 512. DIDiskImageInstantiatorProbe: interface  3, score     -100, CRawDiskImage DIDiskImageInstantiatorProbe: interface  4, score        0, CDARTDiskImage DIDiskImageInstantiatorProbe: interface  5, score        0, CDiskCopy42DiskImage DIDiskImageInstantiatorProbe: interface  6, score    -1000, CNDIFDiskImage DIDiskImageInstantiatorProbe: interface  8, score     -100, CShadowedDiskImage DIDiskImageInstantiatorProbe: interface  9, score    -1000, CCFPlugInDiskImage DIDiskImageInstantiatorProbe: interface 10, score     -100, CWrappedDiskImage DIDiskImageNewWithBackingStore: CUDIFDiskImage DIDiskImageNewWithBackingStore: instantiator returned 0 Verifying… Verification completed… Error 0 (Undefined error: 0). expected   CRC32 $633675F5 Attaching… DI_kextWaitQuiet: about to call IOServiceWaitQuiet... DI_kextWaitQuiet: IOServiceWaitQuiet took 0.000004 seconds 2019-01-23 11:44:02.690 diskimages-helper[606:7177] DIHelperHDID serveImage: attaching drive { autodiskmount = 1; "hdiagent-drive-identifier" = "4BBD5489-AE1B-4300-BB38-CFC35A9DD239"; "unmount-timeout" = 0; } 2019-01-23 11:44:02.693 diskimages-helper[606:7177] DIHelperHDID serveImage: connecting to myDrive 0x4C0B 2019-01-23 11:44:02.693 diskimages-helper[606:7177] DIHelperHDID serveImage: register _readBuffer 0x104bc1000 2019-01-23 11:44:02.693 diskimages-helper[606:7177] DIHelperHDID serveImage: activating drive port 18955 2019-01-23 11:44:02.693 diskimages-helper[606:7177] DIHelperHDID serveImage: set cache enabled=TRUE returned SUCCESS. 2019-01-23 11:44:02.693 diskimages-helper[606:7177] DIHelperHDID serveImage: set on IO thread=TRUE returned SUCCESS. 2019-01-23 11:44:02.693 diskimages-helper[606:7177] -processKernelRequest: will sleep received Volume check completed… Mounting… 2019-01-23 11:44:02.744 diskimages-helper[606:7172] -remountReturningDictionary: detaching because no mountable filesystems. Attaching… Error 112 (no mountable file systems). Finishing… DIHLDiskImageAttach() returned 112 hdiutil: attach failed - no mountable file systems 
I created an SDK DMG file with an HFS+ filesystem here: https://downloads.rigetti.com/qcs-sdk/forest-sdk-hfs.dmg
Can you give it a try to see if you can mount it?
I can! However, after installation, I get the following error when I run the terminal command
qvm --version
Fatal SIMPLE-ERROR:  Error opening shared object "/usr/local/lib/rigetti/libblas.dylib": dlopen(/usr/local/lib/rigetti/libblas.dylib, 10): Symbol not found: _clock_gettime Referenced from: /usr/local/lib/rigetti/libgfortran.5.dylib (which was built for Mac OS X 10.13) Expected in: /usr/lib/libSystem.B.dylib in /usr/local/lib/rigetti/libgfortran.5.dylib.
It looks like the issue was filesystem incompatibility, and now the issue is incompatible OS APIs in compiled code.
Was a solution found for this?
I have installed Forest SDK 2.8.0 on OS X Yosemite 10.10.5 but when I run the terminal command `qvm --version' I get the error message:
Unhandled SIMPLE-ERROR in thread #<SB-THREAD:THREAD "main thread" RUNNING
{10006985B3}>:
Error opening shared object "/usr/local/lib/rigetti/libblas.dylib":
dlopen(/usr/local/lib/rigetti/libblas.dylib, 10): Symbol not found: _clock_gettime
Referenced from: /usr/local/lib/rigetti/libgfortran.5.dylib (which was built for Mac OS X 10.13)
Expected in: /usr/lib/libSystem.B.dylib in /usr/local/lib/rigetti/libgfortran.5.dylib.
Thanks!
@zedohee This looks like a distinct error. Can you ls /usr/local/lib/rigetti?
I succumbed- I upgraded to Mojave, reinstalled Forest SDK 2.8.0, and then everything went as it was meant to.
Can we close this?
