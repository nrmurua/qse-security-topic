This is related to ThreeBears (#127, mupq/pqm4#64). ThreeBears uses cSHAKE with the customization string "ThreeBears". The reference implementation submitted to NIST comes with its own cSHAKE implementation, but for integration into pqm4 and PQClean it would be great if it would share the common Keccak implementation. We would like to add ThreeBears to at least pqm4 within the next few weeks, which is why we would like to settle on a shared API for cSHAKE support under common/.
(Note that this is different from the cshake{128,256}_simple that some schemes use. That unofficial variant greatly restricts the use of the function-name string and customization string that are defined in NIST SP 800-185. AFAIK ThreeBears is the only scheme with a longer customization string.)
This is what I currently had in mind. Please let me know what you think.
common/sp800-185.h:
cSHAKE is defined to be equal to SHAKE when the function-name string and customization string are empty, so I think it makes sense to reuse the shake{128,256}incctx structs.
For comparison, here are the prototypes in the XKCP. SP 800-185 can be found here.
Makes sense to me. And this will be built using the existing keccak functions in fips202.c?
Yes.
I would say so, yes. But those don't exist in PQClean, so I didn't mention it here.
