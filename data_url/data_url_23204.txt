Code just does not make sense. This is worse than copy-paste migration
`    def inverse(self, func, y, x0, args=()):
"""
Finds a solution x to the equation y = func(x) in the
vicinity of x0.
`
There used to be a function "Model._inverse" (see models.py in master branch).
This function somehow ended up in the above code, which neither defines an _inverse, nor tells why it appears in the code at all.. Is there an explanation for this?
Humm, according to git blame, I am the one to blame for this (on December the 3rd),
I guess I stopped implementing this when I realized all I needed to calculate the total loop gain was the slope of the expected signal, and that the inverse was only needed to get the variable value from the input value, which is still to be reimplemented together with the is_locked() logic in the refactored version. In principle, though, apart from the obvious mistakes that need to be fixed for the function to work, the choice of having the base input class calculate for us the inverse of the expected_signal seems very reasonable no?
keeping inverse commented in the code for now, no need for it at the moment
