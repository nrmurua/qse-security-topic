I convert a circuit into a dag, call remove_descendants_of(), observe that no nodes have been removed.



I would expect the dag to modified.

Also note #8717, the family of these DagCircuit methods ask for a node, but really require a node id.
Here is the issue:
We want to give this function a node, not an integer otherwise rx.descendants(self._multi_graph, node) throws an error. So I complied and passed in node_id.
However, the nodes as integers will fail the isinstance() check.
The node representation needs to consistent either as node objects or as integer indices. :)
The existing inline TODO suggests the adoption of multi_graph.remove_nodes_from. This function takes a list of indices, providing a potential solution to the current issue.
However, the existing implementation makes use of the remove_op_node() method. This method invokes the _decrement_op() function. It's unclear how you'd prefer the self._decrement_op(node.op) invocation to be managed in this context.
