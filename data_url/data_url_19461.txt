All the optimizers included in Qibo accept an options dictionary which contains the respective configuration.
This configuration dictionary has different items among different optimizers, but we do not document these options in the sphinx docs. I believe this is particularly delicate when considering examples like the sgd where the defaults are not always ideal, e.g. nepochs is extremely high.
#195 implements a qibo.optimizers module. At this point the user is not supposed to use this (eg. do from qibo import optimizers), but it is used automatically by the models that have a minimize method (the VQE and the AdiabaticEvolution). If we keep this module idea, do you think it makes sense to add the functions of this module to the docs and document the options for each case there?
In the long term we may also want to develop (or use, if there are any publically available) more efficient optimizers, so having a seperate module may be useful. For example right now the numpy optimizers require casting to numpy and then back to Tensorflow repeatedly which I guess is a bit costly, especially when using GPU. Our current examples that involve optimization will be quite slow if we increase the number of qubits due to this.
Thanks for this comment. Yes, I think that we should move document this module and the options for each case.
