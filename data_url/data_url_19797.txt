See method https://arxiv.org/abs/1203.4550
The algorithm steps are the following:
Questions:
Yes, add these to the existing module and in circuits.py and fitters.py
I think this should just be added as an option on top of the existing sequence function
e.g. as an optional argument interleaved_gates = None, but the user can pass in a list of circuits here (the length of the list would equal the length of the rb_pattern). They should be passed in as QuantumCircuits. Probably what then has to be done is to look at the gates applied and reapply them to the RB Circuits object.
I would probably make a new fitter derived off the current fitter.
I think we leave in the concept of simultaneous interleaved because it doesn't really cost anything to implement given the framework we already have.
Can we assume that the interleaved Clifford c is given as a list of gates (in clifford_utils.py it's called "gatelist")?
Alternatively, it can be given as a Clifford tableau object, or we can allow both options?
Good point. It should be a list of Clifford objects, which also simplifies how to implement this into the code. Basically here https://github.com/Qiskit/qiskit-ignis/blob/78f46a354e6324ca914548262add4c1a244c9e71/qiskit/ignis/verification/randomized_benchmarking/circuits.py#L206 you would just compose in the passed in Clifford object (in addition to the random clifford).
Issue #142 should be handled before interleaved RB code
It's important to add the expressions for the systematic error bars (formulas (4)&(5) in the original IRB paper), so that we make clear that interleave can give some answers with lower confidence.
We want to emphasize that one has to be careful in interpreting the results of an interleaved experiment.
@dcmckayibm - a few more questions:
If someone wants to do several interleaved gates they would just do  independent experiments
Yes, two outputs and they need to be flagged in a way (like circuit name) so that the fitter can independently fit the two sets to get the two decay parameters
In the standard RB we calculate error bounds (alpha_err and epc_err), that depends on the "quality" of the results. However, for the interleaved RB we don't use these errors that were calculated for the original and interleaved sequences.
The error bounds given in the paper (see Eq. (5)) depend only on d=2^n (where n=#qubits), p=alpha (of the original sequence) and p_c=alpha_c (of the interleaved sequence).
Is it possible to use the calculated alpha_err, epc_err and alpha_err_c, epc_err_c to provide some error bounds on the estimated r_c^{est}?
The alpha_err will feed into the interleaved error (epc_err) from standard error propagation formulas (this will be the statistical error). The error bounds in the paper are systematic.
So, there should be two kinds of errors? A systematic error (defined in the paper) and a statistical error?
Is this the correct formula for the statistical error of epc_est?
(where: epc_est = (nrb - 1) * (1 - alpha_c / alpha) / nrb )
I think for plots put statistical, but provide access to the systematic...the systematic bounds have also been improved by more recent publications
I think the prefactor in front of epc_est_err isn't epc_est it's  (n-1)/n*(alpha_c/alpha)
Also nrb here is d=2^n
I think that the correct prefactor is:  (nrb-1)/nrb * (alpha_c/alpha)
Where nrb=d=2^n
@ShellyGarion can you add interleaved to the RB notebook in the tutorials?
Sure - see the Interleaved RB tutorial in:
Qiskit/qiskit-tutorials#709
