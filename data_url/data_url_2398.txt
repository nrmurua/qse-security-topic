There should be some standard predicate to check if an input array is normalized, shaped like (2 ** N) or (2,) * N for N qubits.
Since there will be support for qudits in the near future, it might make sense for the function to check for an input array shaped like (d ** N) or (d,) * N for a qudit of dimension d. However this immediately poses an ambiguity issue (e.g. Two 4-dits and four qubits will have the same shape of (16, ).
Maybe this requires some subclass of np.ndarray that stores the explicit form of the tensored space i.e. (d, d, . . ., d).
I think hiding in this issue is whether we should standardize that states are (d_1, d_2, ..., d_n) shaped tensors or not.
Certainly there are places where we have some idea about the shape (from the qid_shape protocol), so we could write a helper to check if such objects were consistent.
Cirq cync decision:  This has been an old issue for a while, and there are some work arounds, so we don't see a big need for this, but willing to revisit if necessary.
This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 30 days
Issue closed due to inactivity.
