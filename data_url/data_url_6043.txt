I understand the current behaviour for Aer backends is to either use the number of CPU threads set by the backend option max_parallel_threads, or else to query the number of threads available on the machine it is running on. This has tripped me up when running Aer jobs on a computing cluster, where I have not set max_parallel_threads and the job has exceeded the number of cores I have requested and been killed. I had, however, set the environment variable OMP_NUM_THREADS in the job submission script.
Would it possible to have the number of threads first prefer to use max_parallel_threads, next search for any relevant environment variables and finally fall back on the maximum number of threads available?
The parallel config uses the minimum of the omp_get_max_threads() function return, and the max_parallel_threads from the simulator config. So I think you should be able to control it using the OMP_MAX_THREADS environment variable instead of the OMP_NUM_THREADS.
Okay, great, thanks for the answer! I will try that.
