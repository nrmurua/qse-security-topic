Hello, I tried synthesizing an AND-Gate. In Quantum Computing an AND Gate is actually the Toffoli-gate (or CCX-Gate). I tried it with a CCCX Gate, an AND-Gate with 3 inputs and 1 result qubit. (A and B and C).
On top of that, I created a customer gate set and a MachineModel to work on.
I worked on this with other quantum software kits such as Qsikit, TKet, and pyquil and it works relatively fine.
BQSKit seems so promising and I really like every aspect of it, but the compilation doesn't return anything and I don't know why because the circuit is not large.
`def main():
gs= {CXGate(),RZGate(),RYGate(),RXGate(),PhasedXZGate()}
model = MachineModel(num_qudits=4,gate_set=gs)
`
p is just the matrix that defines the CCCX Gate.
BQSKit seems so promising and I really like every aspect of it
Thanks for the compliment!
In regards to the issue, how long are you letting this process run?
Sorry for the late reply, I let it run for about 10 minutes.
No worries, BQSKit performs bottom-up synthesis, which allows us to be fully portable over topology, gate-sets, and other chip-dependent features while still being an extremely powerful compiler. The current implementations will take longer than the domain-specific or top-down synthesis techniques you will see in other compilers like Qiskit, TKet, and pyquil. If you wish to synthesize this gate this way, I would recommend waiting longer than 10 minutes.
For a heavily studied gate like the CCCX, I would recommend using domain-specific generation techniques (for now). This is, of course, unless you need to generate or convert it to a specific topology or gate set. In this case, our tool will be your best bet.
You may want to enable logging to see the progress being made. If you do enable logging and see no progress being made, feel free to re-open this issue. One other thing to look out for is the input numerical precision. If your input is expressed in single-point precision, you may need to raise the success_threshold for the compilation to be successful.
