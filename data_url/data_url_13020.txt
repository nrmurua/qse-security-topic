I'm running the SimplePartitioner on a 10 qubit QFT circuit (qft_10.txt) with a fully connected/logical connectivity, but the fold method sometimes places the new CircuitGate at the wrong cycle. The first five partitions are formed and correctly folded (partitions are qudits [0,1,2], [0,1,3], [0,4,5], [0,6,7], [1,4,5]). But the sixth partition (qudits [2,3,4]) is improperly placed.
The expected outcome is that the [2,3,4] partition will create a CircuitGate that is placed at cycle 4.
The observed outcome is that it is inserted into cycle 3, and gates previously at cycle 3 are moved to cycle 4. The sched_depth variable which keeps track of the partitioner's progress so far now tries to include already partitioned CircuitGates.
I believe the bug lies somewhere in the calculation of the boundary values and the amount_to_shift variable in the Circuit's fold method, but I'm not sure what exactly is going wrong. Small changes to either of these result in more scrambled placements and the insertion of lots of empty Circuit cycles.
Note: CircuitGates are not placed closer to cycle 0 than the earliest gate/point in the to-be-folded set. To handle this, following lines were added to the simplepartitioner.py file at line 353:
I'm using the topology-dev branch, and the code I'm running is:
