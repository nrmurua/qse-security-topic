The aim of the toolchain is to provide a simple reproducible way of building CP2K's dependencies. Naturally, the toolchain can not replace a full Linux distribution and has to have dependencies of its own. With fb915d0 we added a few more of such dependencies. Hence, we should revisit if components like make, cmake, binutils, and lcov can also become external dependencies.
I think the toolchain should only contain dependencies which cp2k calculations are sensitive of. GCC (binutils to lesser degree) and scientific libraries should be present.
As for make, binutils, git, sed, cmake, autotools, etc, then they are provided by distributions already and we should rely on that.
The toolchain has defaults but it is a very practical tool (at least for me). I could built cp2k on openpower just with the toolchain (I built many of the dependencies by hand for simplicity) in a couple of hours, without any specfic teaks to it.  they are probably better tools (spark maybe) but right now it is good enough to build cp2k without too much difficulties.
I moved lcov out of the toolchain via b436df0. I'll leave valgrind for the time beeing because it's pretty entangled and I have no good way of testing it at the moment.
