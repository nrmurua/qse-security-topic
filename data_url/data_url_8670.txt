qutip import now fail with the following error message
crap
Paul D. Nation
Assistant Professor
Korea University
Department of Physics
Anam-dong 5, Seongbuk-gu
Seoul 136-713, South Korea
Email: pnation@korea.ac.kr (mailto:pnation@korea.ac.kr)
Phone: +82-02-3290-3092
On Saturday, August 10, 2013 at 5:03 PM, Robert Johansson wrote:
qutip import now fail with the following error message
/usr/local/lib/python3.3/dist-packages/qutip/cyQ/init.py in () 1 from qutip.cyQ.spmatfuncs import * ----> 2 from qutip.cyQ.blas_funcs import * ImportError: /usr/local/lib/python3.3/dist-packages/qutip/cyQ/blas_funcs.cpython-33m.so: undefined symbol: dznrm2_
—
Reply to this email directly or view it on GitHub (#39).
blas is cool but it is a mess.. different libraries might to the underscores and stuff differently, in c to fortran wrapping etc, but i'm guessing the header files should sort this out if used properly. it would be really nice to get this to work. nice speedup!
Now with a8b79f7 it works again on my machine. Is there a big difference in performance between accessing the blas stuff through scipy instead of directly from a cython module? If not it would be good to let the scipy ppl worry about the linking to blas and not have to deal with that in qutip.
I guess not.  But my original motivation was to try to do the mcsolver in
cython. Perhaps the scipy blas calls work just as good in cython.  I
already ran into these blas difficulties on the mac. You would think the
calling structure would be uniform by now.
On Aug 10, 2013 6:08 PM, "Robert Johansson" notifications@github.com
wrote:
Now with a8b79f7a8b79f7bd2ad58713e9ed7b104e204b155fcdc20it works again on my machine. Is there a big difference in performance
between accessing the blas stuff through scipy instead of directly from a
cython module? If not it would be good to let the scipy ppl worry about the
linking to blas and not have to deal with that in qutip.
—
Reply to this email directly or view it on GitHubhttps://github.com//issues/39#issuecomment-22436635
.
Do you have any plans to continue working on qutip/cy/blas_funcs.pyx or would it be sufficient to access blas through scipy.linalg.blas.get_blas_funcs? In that case I think qutip/cy/blas_funcs.pyx should be removed and this issue could be closed.
I think we can get rid of it for the moment.  It might be useful to call these via Cython at some point, but for now this can be removed.
On Jul 10, 2014, at 10:55 AM, Robert Johansson notifications@github.com wrote:
Do you have any plans to continue working on qutip/cy/blas_funcs.pyx or would it be sufficient to access blas through scipy.linalg.blas.get_blas_funcs? In that case I think qutip/cy/blas_funcs.pyx should be removed and this issue could be closed.
—
Reply to this email directly or view it on GitHub.
OK, thanks. For the sake of tidiness I'll remove it then and we can revisit the use of blas from cython later on, and then we can pull out this file from the revision history if necessary.
