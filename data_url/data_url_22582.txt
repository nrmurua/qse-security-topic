I think the ability to read the current value of a TTL input (i.e., high or low, even if there are no rising or falling edges) would be useful.
Our experiments often include several (hardware) PID controllers which are used for things like locking laser frequencies.  These controllers often have a TTL output that indicates if the system is currently locked.  I would like to feed all of these monitor TTLs into my ARTIQ FPGA, and check that they are all locked at before starting to run an experiment.  (At the end of the experiment, I will also check that they didn't come unlocked during the experiment, but the ability to do that is already present.)
The purpose of this addition is to enable the readout of the current value of a TTL input in the absence of TTL transitions. The gateware, runtime, and driver shall be updated to support the following user functions:
In addition to the specified functions I have implemented a "watch" API that does what you describe in the example without race conditions (as the sample taking is synchronized exactly with the gate opening when you are using this API).
https://m-labs.hk/artiq/manual-master/core_drivers_reference.html#artiq.coredevice.ttl.TTLInOut.watch_done
