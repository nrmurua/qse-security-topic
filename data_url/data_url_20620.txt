Does nmake generate_crypto_objects work well when working on Windows 10? Or what is the other building alternative?
Thank you!
I personally never executed this under Win10. Do you encounter problems with it there? If unsurmountable ones, what about building in an Ubuntu VM (using e.g. VirtualBox)?
Michael,
Yes that is the best option. First I built liboqs & openssl-oqs on Ubuntu @ Virtualbox, then set the all the needed algorithms and ran the commands listed at the documentation of using additional algorithms than the default ones, and then by just downloading the directory to Windows 10 and re-built again with perl Configure and nmake e.t.c.
And now I have openssl 1.1.1h OQS with additional algorithms on my PQCrypto custom VPN! (I used the Microsoft repo of OpenVPN)
A quick report:
Rainbow Vc Cyclic/Classic, Classic Mc-Eliece and sidhp751 seem not to work on Windows. (Especially Classic - McEliece is not working on both Linux/Win builds)
Could you please be more specific? What exactly is not working? Steps to reproduce (for starters in Linux)?
Michael,
All seem to can be built normally, but, sidhp751 provides a segmentation - memory fault when launched on Windows 10 as client (with Ubuntu as Server) but works normally on Linux - Linux tunnels.
(I use OQS for tunnel - testing purposes based on Microsoft's PQCrypto-VPN)
Classic - McEliece is already known not to function as a tunnel KEM prior an according alteration to the OpenSSL and/or OpenVPN protocol source is made, due to overflow or something like this.
Rainbow Vc Classic / Cyclic keys after some updates to their algorithm or so, can not be produced on the Windows builds, but can normally be generated on Ubuntu builds. A few versions back I could generate Cyclic on Windows though.
Any possible clues and information on this report will be much appreciated!
Thank you for your work!
I'm still not sure I can follow: Can you reproduce the problem using only OQS-OpenSSL or does this only happen when using OpenVPN?
Michael,
They seem to be OpenVPN only-occuring issues, since all liboqs and oqs-openssl tests are passed on build.
Wouldn't it be better then to raise an issue with the OQS-OpenVPN team/git and close this topic here? Sorry that I don't have enough experience with OpenVPN than to suggest that... @christianpaquin : Do you have another suggestion?
Michael,
You are right, will stick to them and check further!
Thank you all for your great work.
Best regards
Wouldn't it be better then to raise an issue with the OQS-OpenVPN team/git and close this topic here? Sorry that I don't have enough experience with OpenVPN than to suggest that... @christianpaquin : Do you have another suggestion?
Indeed, an issue should be created on the OpenVPN project.
