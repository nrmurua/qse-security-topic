It would be convenient if we could slice circuits and moments by qubit instead o fjust by index. For example:
In general the goal is for the indexing to behave like existing python slicing, and e.g. numpy slicing (probably we can't make mutable views). Any implementation should go over the relevant cases.
I'm worried about relying on type to distinguish moment index from qubit index.  Because of numpy, I would be surprised if object[indices0, indices1] == object[indices1, indices0] even if indices1 is a list of qubits.
If this is implemented, I think it's more important to maintain the invariant obj[x, y] == obj[x][y] no matter the types of x and y.
The API I would expect is this:
Hi. I would like to implement this. Can someone please assign this to me?
@Strilanc @cduck
@cduck I agree with you. But I don't understand the part about ranges. What does the integer or pair of integers in the middle of the slice mean?
For LineQubit it's the optional step size.  For GridQubit it's the optional x and y step sizes.  I don't know how useful this is but it's part of the slice API.
Which is more intuitive for you?  Momemt[qubit] is type Moment or type Operation?
Moment[qubit] should be an Operation.
Ah so you meant to write line_qubit1:line_qubit2:integer instead of having integer in the middle.
Yes.  My mistake.
