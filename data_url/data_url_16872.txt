As reported in #3533, comparing ControlledGate instances with a 2Q Unitary base gate will sometimes yield inconsistent results, because ControlledGate.__eq__ presently only checks if base_gates are of the same type, not if they are __eq__ according to base_gate.__eq__.
I actually was just looking at this code trying to come up with a quick answer for #3533 and we actually do use base_gate.__eq__ as part of the current ControlledGate.__eq__, see:
https://github.com/Qiskit/qiskit-terra/blob/master/qiskit/circuit/controlledgate.py#L61
When I was looking at debugging the eq check was failing because of the super() call, specifically when comparing the definitions: https://github.com/Qiskit/qiskit-terra/blob/master/qiskit/circuit/instruction.py#L99 while I didn't really debug it any further than that. My first thought was this could be a case of having shared scope definitions coming back to bite us (ie we change a shared definition between consecutive calls to control() causing the comparison to fail). But this is just a guess and I haven't actually investigated it.
True, but self.base_gate is the type of the base gate, not the actual base_gate instance the control gate was created from so that line is checking if UnitaryGate == UnitaryGate instead of UnitaryGate([mat]) == UnitaryGate([mat]).
Fixed by #4392.
