If I try to search a Person with a function filter that returns always zero, Grover search returns a person in the list randomly instead of no value
I'm not sure about the best approach to deal with this. We can iterate over all possible values of the function, and throw e.g. an IllegalArgumentException when there is not exactly 1 value returning 1. But in case we really go quantum, with an Oracle, that would correspond to evaluating all possible values, which obviously would defeat the purpose of the algorithm.
I tend to think that this is something that should be dealt with by the invoker of Classic.search(), e.g. in https://github.com/johanvos/quantumjava/blob/master/ch10/quantumsearch/src/main/java/org/redfx/javaqc/ch10/quantumsearch/Main.java
Ok I see; but the problem in the invoker is that if search returns a random value I have no chance to understand if the search is ok or not
In that case, it is probably better we return a status object containing more information than just the picked answer. I agree there are scenarios where the invoker is actually interested in the probabilities. I'll add that method.
@aitan75  are you ok with #114 ?
Fixed with #114
