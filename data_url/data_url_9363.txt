Describe the bug
When the Omega fields of evolution are changed to be inhomogenous (eg, a vector of waveforms), the emulation slows down by a factor of ~1000. Similarly, if Delta is inhomogenous, the emulation slows by a factor of ~2.
To Reproduce
In https://github.com/Happy-Diode/EaRyd.jl/blob/master/benchmark/earyd_compare.jl change or add a line Ω = repeat([Ω],nsites) to make the Omega field inhomogenous.
Expected behavior
A factor of 1000x slowdown. For N=10 sites, this goes from ~0.07 seconds to emulate, to 100 seconds
OK, this is a silly bug, PermMatrix didn't overload mul! but Base.:* which is not a very idiomatic way of implementing a matrix multiplication interface for new matrix type. Need to fix in upstream LuxurySparse.jl
should be fixed by QuantumBFS/LuxurySparse.jl#68
could you run the benchmark with QuSpin again to check whether we are faster/slower? I think at least this issue itself is resolved now.
