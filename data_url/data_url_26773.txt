python2 is EOL and it seems to me that lots of tools (also in dbcsr) are still python2:
Are there plans to tackle this in the near future, or are most of those false positives?
All the relevant tools (doxify, prettify, build_tools) are already Python 2+3 compatible (and I think our regtesters build with Python 3 only), so most of those are false positives. DBCSR's CUDA scripts are even Python 3 only.
Is this how distros determine Python 3 compatibility, when the shebang explicitly states Python 3?
Is this how distros determine Python 3 compatibility, when the shebang explicitly states Python 3?
That is my understanding, i.e. they won't switch to /usr/bin/python being python3, that binary will just vanish. I might be mistaken though.
I guess, we could consider dropping Python 2 support for the next release.
A year ago 50% of our users where still using Python 2. If we assume a half-life of one year, then this will have dropped to ~10% by the end of 2020.
Also, ASE already dropped Python 2 in July 2019.
A year ago 50% of our users where still using Python 2
Are you saying that they do not have python3 installed and/or no option to run python3, or just that they are still using python2 as well?
The questions was "Which Python version are you using? (Run: python --version)".
The survey was sent out 2018-11-22 and the results were:
A few people gave multiple answers, which I then counted towards the later version.
Well, ok maybe if you had written "Run pythont3 --version, and if that does not exist, python --version" the results would have been different, who knows.
In any case, there is quite a lot of pressure in Debian/Ubuntu right now to drop python2 for the next version (not sure what will happen for 20.04 LTS, they might not be willing to support python2 over its lifespan), so maybe keep this issue open as a reminder that tools should be gradually migrated.
However, the programs in tools/build_utils (like discover_programs.py) might be more urgent as CP2K won't be buildable once distributions start to remove python2.
I'm also mostly worried about tools/build_utils. Somehow, I always assumed that python (without a version) would stay to allow for backwards compatibility. Of course, if that's not the case, then we should really switch now.
Nevertheless, our next release will probably not be in time for 20.04 LTS. So, I'm afraid you'll have to patch the shebangs yourself just once. All our scripts should already work with Python3.
I now checked back with a Ubuntu developer, and 20.04 will ship python2, but they will rename the binary from /usr/bin/python to /usr/bin/python2  (and it will not be installed by default).
We've now updated the shebangs in build_utils with a patch and will upload a python3-ready version of CP2K to Debian/Ubuntu in due course.
