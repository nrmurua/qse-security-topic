We have many requests to have the random numbers streamed in memory.
The basic idea is to get something to run like
then we go
outcomes will be
need to do #1052 first
But do we agree that the measurement-level that the backend returns is set via backend.update_settings()? The other option is to use qobj to ask the backend for a particular level.
I like the update_settings, because this is not part of the payload of the experiment.
But if we agree on this, then we should update the spec/schema so that we do the same for openpulse. Currently, openpulse qobj has a config field meas_level which can be 0, 1, 2, and a meas_return field which can be "single" or "avg". Both are required field.
Sure we should update. I think this is how we have to update a configurable backend.
It gets a bit messy, because the discriminators are part of qobj. So it's not a simple post-processing like in the case of "memory"/"counts". Unless we make the discriminators also part of backend.update_settings(), which I'm fine with.
