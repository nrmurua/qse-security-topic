I have the following experiment that I want to run in the background while no experiments are running. My first attempt was,
Which gives me the pulse sequences I want. However, I can't terminate an instance of this experiment and if I schedule another experiment with a higher priority it doesn't run.
My second attempt was,
Which generated an underflow error.
Third attempt was,
Which seems to work. It runs forever, and I can terminate it or schedule other experiments above it. However, if I look on the scope, the pulses are about 1.5 s apart, which leaves a significant dead time between loops.
Furthermore, if I schedule another experiment ahead of it, it terminates and runs that other experiment, but doesn't resume Ion Monitor. I instead get this error message.
What's the best way of writing this experiment?
You can also write an experiment that reschedules itself. But that will also have the slow startup time as this one. Alternatively run 100 tight loops of your background experiment before pausing.
Also please try to keep separate things separate. File a separate issue for the slow kernel compilation, loading and starting (if there is not one already). I pointed out that this is a weak point. Windows seems to be able to exacerbate it quite a bit.
What exactly are you doing in your last segment there? What/who terminates what and which one of those is "Ion Monitor"? Also probably a different issue.
I have another experiment,
That I'm running at a higher priority. IonMonitor is the name of the experiment I want to run in the background. TTL_test terminates IonMonitor and I want IonMonitor to resume once TTL_test is done.
I've kept it as one issue as I wasn't sure whether there was a better way of writing this experiment that would resolve all the issues I have.
I know you do but it is not helpful. If there are multiple issues, file multiple issues.
What do you mean by "TTL_test terminates IonMonitor"? Actively or is that what you hypothesize from the traceback above?
Also, which ARTIQ version is this? There are a bunch of changes in the pipeline which should improve compilation time.
If you file an issue, there is a request to read the issue writing guidelines which also asks you this information.
I can see it pauses ion monitor from the TTL signals on the scope. It's the
artiq version I had installed from conda yesterday.
On Apr 16, 2016 2:44 PM, "Robert Jördens" notifications@github.com wrote:
I know you do but it is not helpful. If there are multiple issues, file
multiple issues.
What do you mean by "TTL_test terminates IonMonitor"? Actively or is that
what you hypothesize from the traceback above?
—
You are receiving this because you authored the thread.
Reply to this email directly or view it on GitHub
#404 (comment)
This was on windows I should add.
On Apr 16, 2016 3:08 PM, "Raghavendra Srinivas" <
Raghavendra.Srinivas@colorado.edu> wrote:
I can see it pauses ion monitor from the TTL signals on the scope. It's
the artiq version I had installed from conda yesterday.
On Apr 16, 2016 2:44 PM, "Robert Jördens" notifications@github.com
wrote:
I know you do but it is not helpful. If there are multiple issues, file
multiple issues.
What do you mean by "TTL_test terminates IonMonitor"? Actively or is that
what you hypothesize from the traceback above?
—
You are receiving this because you authored the thread.
Reply to this email directly or view it on GitHub
#404 (comment)
Again: which version? From the dev label or from main?
Main.
On Apr 16, 2016 15:17, "Robert Jördens" notifications@github.com wrote:
Again: which version? From the dev label or from main?
—
You are receiving this because you authored the thread.
Reply to this email directly or view it on GitHub
#404 (comment)
Then regarding the compilation and uploading time, wait for the next rc or try dev. File a separate concise issue for the other problem if it is actually distinct from both #393 and #390. Please close this one if there are not other issues you bundled here.
Furthermore, if I schedule another experiment ahead of it, it terminates and runs that other experiment, but doesn't resume Ion Monitor. I instead get this error message.
This is why I told you to do self.core.comm.close() before self.scheduler.pause()
(2.0 will do that automatically).
Okay, self.core.comm.close() solves the issue with the experiment runs in the background, though there's still a large deadtime between loops, of about 1.1 ms or so.
