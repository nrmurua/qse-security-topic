testcode is a more generalized Python-based implementation of our regtest script. Wannier90 for example adopted it for their testing.
What they're lacking is support for farming (used for the many short tasks we have), but this could be implemented as an extension of testcode by either using a helper doing MPI_Comm_spawn (preferred if supported by popular implementations) or by wrapping tests inside generated CP2K farming inputs.
I think we should continue to roll our own regtest script.
I've started to port the do_regtest script to Python, albeit with low priority. My main motivation is to replace the farming mode with a master-work scheme based on the new RUN command which I added to the shell. This will speed up tests with high startup costs, like CUDA and Valdgrid, while still providing useful crash reports.
Furthermore, we now have a number of systems that depend on the regtest output format, like the dashboard, regtest survey, and the CI. The bottom line is that do_regtest solves a problem that is very specific to us, but not hard. Hence, I don't see an advantage of using an external framework.
I've completed the new do_regtest.py script. So, we'll stick to our own test driver for the foreseeable future.
