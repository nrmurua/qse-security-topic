Hi,
great project!
I was wondering if it is possible to add a Python interface to Staq compiler?
Of course that might be too much to ask, but on the other hand this would be super helpful for quantum researchers and developers.
In particular, I'm working on a project for automated benchmarking of quantum compilers, and having a python wrapper for basic functionality of Staq would be amazing:)
There are some existing automatic python wrappers for C++ code such as pybind11,  SWIG, which are reasonably convenient to use.
Did you guys consider implementing something like that?
Hi,
Thanks for your interest! A Python interface is something we've been looking into but haven't had the time to write just yet. Hopefully we can get something out soon, but in the meantime another option might be to run staq directly from within Python or other benchmarking scripts. As long as your tools can read and write openQASM this may be possible as a stop-gap, albeit most less likely ergonomic :) Our original goal with staq was to make source-to-source compilation tools as opposed to a quantum programming toolkit or environment.
We'll keep you posted on any progress towards a python interface. Thanks again!
If you really proceed to add a Python interface, I hope you do it as an add-on in a separate project. The staq and its sister project qpp are the most elegant and the purest C++ quantum platforms I have ever seen. Adding a Python wrapper to them could pollute the core C++ code base technically and conceptually.
I have been doing what @meamy suggested for a long time, happily. I call staq and many other staq-based programs from other scripts. In my experience (and my opinion), that is even a better approach than a Python wrapper because you would never second-guess what the wrapper might have done to your applications.
Here is a friendly reminder of the very sound philosophy of the staq:
The design of staq is inspired from the UNIX philosophy of "less is more"...
--- excerpt from staq
Note that you can easily use Python to pipe in and pipe out with the staq and your own C++ applications.
Added a pystaq, a light Python wrapper as of f3f7dfc See https://github.com/softwareQinc/staq/wiki/pystaq for further details.
