Hi,
I am wondering how it may be possible to pass commands between engines. I have a commandprinter() and I want to interface it with an IBM Backend. The documentation indicates that IBM Backend can receive commands, but how do I access the command list that is printed previously by commandprinter()? Thank you.
Could you post an example code?
If you specify your commandprinter as part of the engine_list parameter of the MainEngine in your program, the commands should be transferred automatically to the next one (which would be in your case the IBM backend)
For example, in this block of code, I am computing the expectation value of a hamiltonian using ProjectQ's simulator. I would like to use IBM's simulator, or IBM's machine. However, if I simply replace the compiler_engine (line 82) with uccsd_trotter_engine(ibm_backend()) then it will not work.
Thank you.
`
Sorry I missed following through with this issue.
Actually, the uccsd_trotter_engine function does not allow you to add arbitrary compiler engines in the engine list passed to the MainEngine constructor.
What you could do is use the insert_engine function from the projectq.meta module:
Thank you for following up! However, now when I run it by specifying the backend as such, I receive the error
  File "/home/jasonkang/anaconda3/lib/python3.7/site-packages/projectq/cengines/_main.py", line 286, in send "\n" + repr(last_line[-2])) TypeError: __init__() missing 2 required positional arguments: 'doc' and 'pos'
Are you sure ProjectQ's uccsd_trotter_engine is still compatible with the IBM backend?
Bumping - any help is appreciated!
The way ProjectQ communicates with the IBM quantum experience indeed needs to be patched.
We will probably need to use the qiskit-ibmq-provider Python module which will require that people install at least qiskit-terra(and some other dependencies) to make it work.
I will try to get something out soon, although I cannot make any promises right now. If you are willing to help fix this issue, I am more than happy to help you along the way though.
The issues with the Qiskit QE API should be fixed in the latest version. Re-open this issue if that is not the case.
