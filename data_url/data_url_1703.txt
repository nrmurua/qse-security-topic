When UCLA @ahirthucla was running run_batch against the Google Quantum Computing Service, the service failed several times because of the specific reasons:
Describe the solution you'd like
It would be useful to have a "validate batch" utility function in Cirq to ensure that the batch being created indeed can run.
[optional] Describe alternatives/workarounds you've considered
It's not clear if "create_batch_program" does any validation.
[optional] Additional context (e.g. screenshots)
What is the urgency from your perspective for this issue? Is it blocking important work?
P1 - I need this no later than the next release (end of quarter)
This feature request is in the context of a Teaching assistant trying to run student's homework assignments. Therefore the TA may not have intimate knowledge of the circuits being run
My Experience
When submitting many circuits to run_batch, two runtime errors occurred.
The run_batch function would properly complete, but the Google Quantum Computing Service would mark the job with either (INVALID_PROGRAM, Program too long) or (INVALID_PROGRAM, Duplicate measurement key: measurement key).
In both of these cases, the entire batch errors, even if only one or two circuits were the problem. This is problematic in the situation where you want to run many circuits, as you have no (or little) way of knowing which circuit caused the issue.
Workarounds
Desired Solution
This solution is threefold:
Urgency
I want to say ASAP, for any other classes or groups who may have a similar use case to ours, but the next time we'll teach this class is in 9 months, so we'd greatly appreciate these improvements at least by then.
related? #3244
related? #3244
Could be but doesn't sound like it, as the recommended solution is not about changing the interface - but instead the Engine implementation of it.
What about validating gates used and qubits used?
This can now be done by the virtual engine factory and the resulting validation.  File any limitations against that component.
https://github.com/quantumlib/Cirq/blob/master/cirq-google/cirq_google/engine/virtual_engine_factory.py
