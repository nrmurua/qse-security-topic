Right now, backend.calculate_norm calculates one specific norm, which is the Frobenius (aka Hilbert-Schmidt) norm.
So, there are two possibilities here:
Another thing is, since the Hilbert-Schmit inner product between two operators is the HS norm squared, we could use backend.calculate_norm to replace backend.calculate_overlap and backend.calculate_overlap_density_matrix entirely.
Moreover, backend.entanglement_entropy is now redundant with qibo.quantum_info.entanglement_entropy.
@stavros11 @scarrazza Now that I am looking at it, there is a bigger problem here: backend.entanglement_entropy is not calculating Entanglement Entropy between two partitions of a quantum system (see qibo.quantum_info.metrics.entanglement_entropy). It is instead calculating "just" the von Neumann entropy of a quantum system (see qibo.quantum_info.metrics.entropy).
Besides that, since the functions in qibo.quantum_info are backend-agnostic, do we even need to keep this method?
@stavros11 @scarrazza Now that I am looking at it, there is a bigger problem here: backend.entanglement_entropy is not calculating Entanglement Entropy between two partitions of a quantum system (see qibo.quantum_info.metrics.entanglement_entropy). It is instead calculating "just" the von Neumann entropy of a quantum system (see qibo.quantum_info.metrics.entropy).
Indeed, as far as I remember this function was written only for the EntanglementEntropy callback, which is calling the partial trace in a previous step

Besides that, since the functions in qibo.quantum_info are backend-agnostic, do we even need to keep this method?
If it is possible to replace it with some other existing method then we don't need to keep both. We should avoid repetition as much as possible.
If it is possible to replace it with some other existing method then we don't need to keep both. We should avoid repetition as much as possible.
I'll try to implement this callback using qibo.quantum_info.entanglement_entropy so then we can remove these redundancies.
