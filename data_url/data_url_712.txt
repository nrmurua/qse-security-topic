Two of the signatures of the function have this:
const std::vector< idx > & | target,
But the textual description of the function says:
Applies the single qudit controlled gate U...
Parameters
U        Single qudit quantum gate
When the target has more than one qudit in it, the U won't be a single qudit gate, will it?
I just realized qpp::CTRL() is actually correct as is (even though earlier today I though it was buggy, long time since I wrote it...). It applies U to every single qudit in the target. So it's like CTRL-U-U-U-...-U. One needs CTRL_custom() to apply a multi-qudit unitary. I modified the QPE example accordingly (after wrongly modifying qpp::CTRL() exception checking to work with multiple qudits instead of correctly using qpp::CTRL_custom()). So the documentation is correct, and all CTRL-like functions are OK.
The history of this is a bit convoluted: CTRL() and CTRL_custom() have the same signatures for multiple-ctrl multiple-targets, so I needed to differentiate the latter instead of re-using (overloading) the name CTRL. I now think CTRL_custom() was not the most inspired name... maybe CTRL_joint() or something like that? Any proposal?
The CTRL_joint() sounds much better.
Speaking of documentation, I have found the Eigen project uses a nice style: the Eigen people scatter example code widely in their API documentation. When the plain English text is inadequate, the code snippet usually settles the case nicely.
@DevelopDaily Thanks, changed to [c]CTRL_joint().
Great. Thanks.
