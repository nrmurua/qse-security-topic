Untitled.md
(see notebook above)
I was playing around with the optimization levels, and I think I discovered a bug.  The optimizer is adding CX gates, e.g. from level 0 to level 3. (Increasing cost!)
(see earlier notebook attachment) Run the notebook and observe different outputs optimization levels, e.g. 0 to 3.
I need the initial_layout that uses the least number of CX gates.
I'm fairly certain a more optimal circuit can be outputted.  However, I do not have a specific suggestion on the exact answer.
Hey.... ammm.... willing to work on that
Hey.... ammm.... willing to work on that
That would be awesome, if you could take a look at it!
Hi. I have checked ur issue.... so according to me u asked for the answers..
And u have used ibmq_lima... so will I have to use the same backend?
Can I get assigned for this issue??
Looking briefly, I'm not necessarily sure this is a bug. Running a few times at each optimization level, I get between 13-16 CX gates at optimization_level=0, and 14 at optimization_level>=1, which is not necessarily surprising given that transpilation utilizes several heuristics which are not guaranteed yield optimal circuits for any single metric.
For reference, here's an example 13-CX output at optimization_level=0

16-CX output at optimization_level=0:

14-CX output at optimization_level=1:

optimization_level=0 uses the TrivialLayout pass, and optimizaiton_level>=1 use DenseLayout by default. Suggestions to improve DenseLayout to help it find the better layout in this case would be very welcome. (It turns out, that there are even better layouts available not found by either pass. e.g. [1, 0, 2, 3, 4], that would yield a 10 CX circuit, and routing_method==layout_method=='sabre' finds a layout and routing with as few as 7 CX gates.)
