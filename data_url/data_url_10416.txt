After ~#50, ValueError is raised only when (endpoint, token) pair is not defined after configuration loading.
That means this will fail:
But it'll silently pass if endpoint and token are defined with kwargs:
or env vars:
This behaviour makes sense (i.e. ValueError == config not complete) because there are many ways of defining config file/profile (kwargs, env, autodetection, legacy file) and it's not completely clear under which circumstances should (perhaps) IOError/OSError be raised and under which we should just silence the config loading attempt and use the higher-priority values.
We're solving this with better error signaling, and somewhat redesigned config loading API to be more explicit about the loading process.
When user explicitly asks for a specific config file, if we fail to load the config from that file, we're raising either dwave.cloud.exceptions.ConfigFileReadError or dwave.cloud.exceptions.ConfigFileParseError.
If user opted for auto-detection of config files (config_file=None), we default to empty starting config in case no config files were detected. If some are detected, but unreadable, or unparseable, we raise the same exceptions as above.
Changes made as part of #93.
