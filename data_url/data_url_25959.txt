With PR #417 we refactored the transpiler and moved all (or most of) the circuit-based utility functions that used to be in qbraid.interface into their respective QuantumProgram "wrapper" classes. This allows for in-place manipulation of programs and reduces imports e.g.
Let's say we wanted to collapse the empty qubit registers of a circuit, reverse the qubit ordering, convert it to a new package, and calculate the unitary.
Before, the procedure would have been as follows:
Now, the procedure would be:
This is a massive improvement in terms of readability and reducing clutter. However, we want to take it a step further and allow chaining these operations across the same line, i.e. instead of performing the circuit manipulation in-place and returning None, we want to return a new circuit wrapper object. And same for the transpiler, except instead of returning the new circuit, we return the new "wrapped" circuit. So the same procedure from above would be able to be performed as follows:
Obviously doing all of this in one line isn't great coding style. But this type of user experience I think would be really great to have.
