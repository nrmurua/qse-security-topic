Currently we have to
param.set(11)
and
param.get()
It adds up to a lot of writing and can easily be replaced in the parameter class to allow the following:
param(11)
param()
and a few other modifications.
I was trying to do this, and it works fine as long as I am calling it on local instrument, if i do this on a remote instrument I get the following error:
The RemoteMethod has a __call__ already, which makes sense, the RemoteParameter does not, but somehow the parameter became a method...?
@alexcjohnson If I want someone (you) to be able to test this I have to make it a pull request? is that the way to do it?
I would like to see this working as it simplifies writing things a lot, but there might be reasons to not implement this.
What do people think about a feature like this?
Sure, if you have it implemented already then make it a PR and we can have the discussion revolve around actual code - always helps! I think this sounds reasonable, will be curious to hear other people's thoughts.
To keep Parameters from getting mistaken for methods once you add __call__, you'll just have to exclude them here as I do with Functions already.
and just to be sure, isinstance can take multiple types at once, like:
isinstance(value, (Function, Parameter))
I opened #78 so the discussion should move there.
Closed by #78
