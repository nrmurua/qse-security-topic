3.0
3.9
Mac
Parser does not correct the correct AST node when supplied an extern statement.
returns (Spans manually deleted)
Program(span=None, statements=[ExternDeclaration(span=None, annotations=[],
name=Identifier(span=None, name='constant'), arguments=[ExternArgument(span=None,
type=IntType(span=None, size=None), access=None)], return_type=BitType(span=None, size=None))],
version=None)
return_type node is expected to be ExternArgument(type=BitType...)
No response
That seems right? Its argument type is a single Int and its return is Bit, which seems to match your example.
Oh wait, I see what you're saying. I don't think there's any necessity for us to wrap the output in an ExternArgument here, since it's not an argument and can't have an access control. I think the best course is likely to change that in the AST rather than the parser, especially if we're not actually emitting code that agrees anyway.
I agree. I believe changing the return_type node would be a neater solution.
