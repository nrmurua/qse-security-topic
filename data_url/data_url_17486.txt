We need a function qiskit.compiler.disassemble() that takes an assembled qobj and returns the components:
Currently we have a converter for this (qobj_to_circuits), but this is not really a conversion as the two entities are quite different. So this should be deprecated.
Just to clarify, since this is a first issue, am I right in thinking that the goal here is splitting out the run_config and user_qobj_header, not in covering differences in the qobj instruction and Terra circuit API (conditionals, memory/registers, bfuncs, ...) beyond what's already covered by qobj_to_circuits?
qobj has a superset of the functionality supported by the Terra circuits API, so a general disassembly won't always be trivial. We could limit scope to terra-generated qobj, without conditionals, (effectively what's covered by qobj_to_circuits now) and raise an exception for anything more complicated.
Yes I think you are right. This issue is more about returning all the other stuff (header, config), not only the circuit (as qobj_to_circuit does).
Some things like 'registers' will not have equivalents in the circuit, so I think they may get lost. But I think conditionals are fine no? At least the simple conditionals we have now.
