Almost all of the hard work in making a Clifford+Measurement simulation (rewriting the Pauli product vectors) is done thanks to the Clifford optimization by @cduck . In order to turn it into a simulator all we need to do is:
Clifford simulation could be useful for tasks such as randomized benchmarking, or just general verification of behavior.
I want to implement this based on: https://arxiv.org/abs/quant-ph/0406196. How would the Tableau algorithm of Aaronson and Gottesman fit in with Clifford+Measurement simulation that's already been implemented?
I think @dabacon has opinions on how this code should be written, so we should wait for him to comment. I've assigned him temporarily for that purpose.
In my view, most of the row operations being described in that Scott's paper correspond to particular operations that already exist on PauliString (which would perhaps be better called PauliVector) and what needs to be done is combining those vectors into a matrix (the tableau), adding support for operations upon that matrix, and higher-level methods that then use that matrix to perform e.g. simulation.
It so happens that I've written somewhat-hacky CliffordMatrix code, as part of another project. You can feel free to crib whatever you want from it. I'd want several improvements before merging it, such as better commenting and better method extraction. It will produce nice little matrix diagrams such as this one:
A notable piece that I have not implemented, and must be added, is the measurement operation.
Also I have omitted the ability to decompose the matrix into a circuit, and to invert the matrix. I do have code to do the circuit decomposition, but it was off-the-cuff and worse than the decomp in Scott's paper. If we wanted to do it right we'd implement the -C-CZ-P-H-P-CZ-C- decomposition from "Shorter stabilizer circuits via Bruhat decomposition and quantum circuit transformations" by Maslov and Roetteler: https://arxiv.org/abs/1705.09176 . This could be a separate issue.
Another possible separate issue would be the ability to simulate Clifford+T circuits with slowdown exponential in the number of Ts.
For now, I would say just focus on making a cleaner version of the below code and adding measurement to it. Assuming @dabacon agrees.
Possible alternative: https://arxiv.org/pdf/quant-ph/0504117.pdf
