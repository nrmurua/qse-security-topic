When running simple code to generate a random knapsack problem, I encounter the following error. I do not know where this is coming from or if I am doing something wrong.
Code:
Error:
Hi @lockwo, thanks for having raised this issue!
I tried reproducing the error, but in my case (running on the latest dev), it ran correctly: I tried to generate a few thousands of random knapsack instances but the error never raised.
Could you confirm whether you get this error deterministically (ie. every time you try using the random_instance() or if it happens from time to time? Also, could you confirm which branch are you currently using?
Also, if the error persists you could try inspecting and pasting here the terms & weigths by typing problem.asdict() and seeing if indeed there are non-quadratic terms in the dictionary (or if something else weird got computed).
It error (seemingly) deterministically (every time I have tried it). I am working on the main branch (not dev), should I change that? Also looking at an example problem this is what it generates:
I was able to compile correctly when I popped the terms and weights last value, i.e. the following code worked:
I'm not sure if the problem is actually the empty term that is at the end or not, but it seems to fix it.
The last empty term may be the root cause yes. And I think this issue has already been fixed on dev. I will double-check tomorrow and either close this issue or fix it on dev.
And yes, feel free to switch to the dev branch. We are planning to merge it onto main before the end of the week, but it is already stable enough to be used :)
I updated to the dev branch, but know am seeing a new error: (size = 3)
So, the error is due to the limiting case when all elements of weights = list(map(int, np.random.randint(1, n_items, size=n_items))) have the same value, because then you end up having np.random.randint(n,n) in line 490 which, rightly so, crashes.
I think we did not see this bug because tests always had n_items relatively large.
Let us check on Monday what's the appropriate value for the weight_capacity in this limiting case.
@vishal-ph was this fixed in the latest merge to main?
not yet. Its on my to-do
