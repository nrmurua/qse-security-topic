ðŸ™ˆ It's a hash tree with a traditional SHA-256 Algorithm...
I suggest you read this paper describing an early version of the signature scheme we have adopted for preserving security of our account addresses:
https://eprint.iacr.org/2011/484.pdf
We only use SHA-2 256 for convenience in our test node code. For our mainnet we will likely use SHA-3 512.
Kindest regards,
Peter
How can anything be Quantum Resistant without using QuBits themselves? While SHA-3 512 does persist more bits. Anyone who has access to more than one QuBit can shift to any Endian structure with zero time complexity. There is NO BIG O in quantum computing. Ontop of that ONLY 2 Qubits is required due to the ability to utilize Quantum Entanglement. Enabling it to be an infinite amount of bytes. So unless I'm missing something from Keccak's work. Unless you completely ditch the concept of bitwise operations for cryptography in the Quantum realm. I still don't see how this can work.
Quantum computers are not magical machines, they cannot enable an "infinite amount of bytes out of 2 qubits". I think you have some misinterpretation of what qubits and quantum computers can do, they are an extensively studied subject and follow certain rules like a classical computer does (although different rules).
There is a big O notation in quantum algorithms, and there are solid upper bounds on what quantum algorithms do to the security of hash-functions, like SHA3. Now there is a problem that, in the future, it turns out that XMSS is not secure, meaning that there is no secure hash-function. But in that case, we would have way bigger problems as all signature schemes rely on a secure hash-function. XMSS relies on minimal assumptions.
If you have any questions, feel free to contact me in person, for example in slack.theqrl.org. I can provide some literature about quantum computers / hash-functions if you would like.
How does IBM Q's representation of QuBits have any real representation in respect to Quantum Computing? They literally just slapped linear algebra on a web app.
https://quantumexperience.ng.bluemix.net/qx/tutorial?sectionId=c59b3710b928891a1420190148a72cce&pageIndex=0
I don't fully understand your question. To understand quantum computing, linear algebra is indeed important.  I think that link is a good starting point to learn some of the basic principles.
How can anything be Quantum Resistant without using QuBits themselves?
I'm not familiar with this project, but using qubits isn't a requirement for post-quantum cryptosystems. For example, two major contenders for replacing RSA / ECC are SIDH and lattice based crypto, neither of which rely on the use of qubits.
@ShaneWilton WOW SIDH! Now that's something that is truly exceptional.
Of all people to know this, an INFOSEC GOAT like you would mention this.
Is there any better learning resources for Supersingularity concepts? I do need some time to wrap my head around this.
There is NO BIG O in quantum computing.
There is Big O (ie. time-space complexity) in quantum computing. And to understand quantum mechanics one needs to know not only linear algebra, but also functional analysis on Hilbert spaces (a high-powered version of Calculus on Euclidean space)
