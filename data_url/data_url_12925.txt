I am trying to implement the Margolus gate (simplified Toffoli with a single sign change) using this package. Here is an implementation in Figure (2) which does the job, but I am not able to reproduce this circuit or find a better one if there exists one such implementation. Is this something possible using this package? I presume Qiskit may implement this, while there may not be guarantees on the quality of the circuit.
@fschulz21 It is possible to decompose the 3-qubit Margolus gate using the QCOpt package. However, since Margolus was not part of the package, I just added support for it, which you should be able to find in the PR named more_3q_gates. Below is the code which implements decomposition for the Margolus gate. Do note that you will need to input a mixed-integer programming (MIP) solver. Here, the code invokes Gurobi solver, which is quite efficient for QCOpt's formulations.
The output of executing the above code is below. Looks like the optimal circuit, as shown below, is RY_3(-45.0) * CNot_2_3 * RY_3(-45.0) * CNot_1_3 * RY_3(45.0) * CNot_2_3 * RY_3(45.0), where RY_3 represents the Rotation gate about the Y axis on the 3rd qubit and CNot_c_t represents controlled-X gates with respective control (c) and target (t) qubits. This indeed matches with the circuit you showed in the paper.
This is very nice. Thanks for the help. Look forward to explore the package for many other quantum gates.
I see that the MIP solver you mentioned is a commercial one, for which I do not have a license. Is there an open-source option to execute the above code?
MIP Solvers like Cbc and GLPK can be used to solve. However, the run times are generally very slow with these solvers, especially for larger circuit decompositions.
