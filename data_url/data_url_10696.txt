When embedding a problem with some isolated nodes (zero couplings to other nodes, but non-zero biases), find_embedding does not have these nodes in its output (expected, as it does not know anything about biases), and leads to errors in embed_ising
throws e.g.:
MissingChainError: chain for a is empty or not contained in this embedding
I would expect embed_ising to make up for embeddings missing isolated nodes by assigning them to unused nodes in the target graph (A above).
Environment:
Hi @caseytomlin , the embedding as passed to find_bqm defines a map from the source graph to the target graph. An embedding missing a mapping for singleton nodes is an incomplete embedding and it would be out of scope for embed_ising to handle that case. The good news it that minorminer does handle singleton nodes so
should return an embedding that includes the singletons.
Thanks!
This does return an embedding that looks like it should work, but now I'm seeing a similar error that I'm not sure how to parse:
InvalidNodeError: chain for a contains a node label True not contained in the target graph
Here a is the first key in h.
Right, the other problem is that embed_ising expects the target adjacency to be a dict-of-dicts or a networkx graph, rather than a list of edges. The easiest way to resolve this is to use a networkx graph.
I do agree this is a bit confusing, so I have made an issue to make this simpler in the long term (see #168).
Ah, ok. No, probably I just need to read a bit more carefully... Thanks for your quick help.
