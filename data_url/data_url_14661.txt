See above.
The output should be 1.
The problems seems to be that, for the input above, this method returns an incorrect vector
https://github.com/Qiskit/qiskit-terra/blob/90387a20be329f3752c4acfceb2420f89c895178/qiskit/opflow/state_fns/circuit_state_fn.py#L215-L227
In particular, I'm pretty sure the problem is not in opflow, but in BasicAer. Or, perhaps BasicAer does not guarantee preserving the global phase? It may be relevant (or not) that the initial state actually prepared by qc.isometry above differs from that of init_state by a phase of exp(i 5pi/4)
Some solutions are:
Use a different simulator. In fact, I recall talk of removing BasicAer.
I think we should move to using Statevector over BasicAer anyways. Does that fix this particular problem?
I just tested it and it fixes the problem.
I tracked the issue down to the following. It seems that BasicAer gives different results on the inverse of the isometry than the Statevector class (up to a global phase), which is  the root of this error. If the inverse isometry is unrolled before passing it into BasicAer the phase difference disappears.
@chriseclectic do you have an idea where this could be coming from?
#6045 fixes this error in the representation you pointed out above, but not if you change it to
