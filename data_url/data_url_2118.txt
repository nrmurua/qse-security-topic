Currently terminal measurements mean there are no gates after measurements. However, the measurement in the circuit
is still "terminal" in the sense that it can be sampled repeatedly from the same state rather than executing the circuit once for each repetition.
Interesting! Where did this come up? Can you explain the use case?
Also, how far do you think this should go? Check for each measurement that the ops after it are equivalent to identity? Or just identity is sufficient?
Using the identity gate was a bad example. What matters is that the state evolution leading up to the measurement is deterministic, so that the circuit leading up to the measurement only needs to be simulated once. Any gates occurring after the measurement have no effect on the measurement.
I think I was inspired to open this after observing the bug #2567 . It's an extension of an idea underlying the fix for that bug. Actually this is a less ambitious version of a suggestion made in a comment on that bug, #2567 (comment):
I think the correct fix for this issue is to modify the "simulate then sample" optimization to discard all operations that come after measurements. The optimization could also be extended to apply to any circuit where all measurements are outside of each other's "light cone" if we wanted to be ambitious.
Discussed on Cirq Cynque: it is a bit unclear in what cases this would help. Caching the statevector before the first measurements would be one way to implement this. Marking it as needs-more-evidence for now. If someone feels strongly about this please comment / reopen after this gets closed.
This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 30 days
Issue closed due to inactivity.
