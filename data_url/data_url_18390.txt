Compiling the following bell-state program via pyquil on "9q-square-qvm":
... using the following quilc ISA patched to remove CZ gates (force use of XY)
... generates two different native programs with seemingly non-deterministic behavior:
(most of the time)
(occasionally)
Are you able to upload the verbose output of quilc for both outputs to see what the compiler is up to?
I have a similar problem. See attached script. Sometimes I get the answer reported in the last cell and sometimes the answer in the one before the last cell. I couldn't identify any pattern of when I get one answer or another. I noticed that if I use "device_name=40q-qvm" instead of "device_name=Aspen-9-qvm", the program is compiled differently (i.e. CZ gate is used instead of CPHASE(pi)) and there's no problem. Interestingly, both the program reported here and the one I used involve the XY gate.
compiler_question.zip
I've noticed this non-determinism more as-of-late as well, and it's irksome. I sometimes have to run the compiler 2-3 times to find the "best" one of the bunch, and I'm not yet sure of the source of the issue.
I labeled this as a bug due to its woeful disregard of expectations, even though it may not be "wrong".
@mimigdal It's almost surely due to some routines in the compiler which depend on non-determinism. Those are being looked into now.
CC @macrologist
