Disclaimer: I could fix my problem, so this issue could be closed immediately if we decide it's not worth fixing it, but I found it quite hard to find the bug, eventhough you had shown me the MetaClass code yesterday. I don't imagine how hard it would have been in 6 months, or for someone that is not aware of all this MetaClass magic.
I have a problem with the following ModuleMetaClass code:
This makes it almost impossible to choose a different order for _setup_attributes. Even worst, you desperately try to change the order by adding your attribute at the end of the list, and it gets magically inserted at the beginning by the module MetaClass.
Concretely: I would like the AcquisitionManager run to be the last thing to be set up (after triggers and so on that are _setup_attributes of the scope itself). Since Scope and AcquisitionModule classes have the following inheritance tree, I am screwed:
Hm. One possibility would be to redefine _setup_attributes in the _init_module() function to implement custom behaviour. This should be okay, because _load_setup_attributes is called after _init_module for all non-root-level modules (currently it is even called before _init_module for all modules, something that does not bother me so much any more after the modification of the _load_setup_attributes call in Module.__init__()).
Isn't this a viable solution?
OK, it's a possibility, another one which I would find cleaner would be to make sure that if a child class repeats an existing _setup_attribute in its own _setup_attribute list, then this order should be used instead.
ok, i've implemented that now
commit is coming during the day
