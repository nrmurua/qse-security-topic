Describe the bug
qutip fails to import with the following error:
This appears to be caused by Apple having removed hw.cpufrequency from the list of sysctl's (see below)
To Reproduce
Installed qutip using homebrew/pip3 (after using the workaround of specifying OPENBLAS properly before building scipy etc... so that part is all sorted). Then python3 and import qutip.
The terminal output (aftrer I hacked up a workaround for this issue):
Expected behavior
qutip successfully initializes :-)
Your Environment
Please use qutip.about() to get the information about your environment and paste it here.
Additional context
No sysctl hw.cpufrequency at all on this machine, so it blows up (some error handling in that function would be good :-)
@ozbenh Thanks for reporting this!
Do you perhaps know what is causing this on your M1? Is it something Apple forgot to add to the platform? Or is it that they're deprecating hw.cpufrequency entirely?
What was your fix?
Unfortunately we have no way to test on M1 ourselves at the moment. Any suggestions welcome. :|
Perhaps the best we can do at the moment is harden QuTiP against these breakages so that it doesn't fail to import if some of the hardware information is missing on the M1.
It appears that they have removed hw.cpufrequency on these things (About this mac doesn't show a freq. either). I don't know what is their policy in this regard but I did find these two related issues: giampaolo/psutil#1892 and shirou/gopsutil#999.
My workaround was to comment out the code and hard-wire a random value in there :-) A quick grep didn't seem to show any use of cpu_freq elsewhere in the code but then I didn't look too much in depth. I don't personally use qutip, my partner does, she's the physicist, I'm just the geek helping hand :)
It does look like this code could use some error handling and put some "reasonable" default values if the sysctl's fail indeed. Happy to test a patch and report. She's currently away so there will be some latency (I can occasionally ssh into her laptop but it takes preparation), so I can't really submit a PR myself at this point.
Can confirm both the error and the workaround. As a physicist, I just did this to lines 48 and 49 of hardware_info.py
Works fine now.
I've merged #1754 so hopefully the master branch works on the Apple M1 machines now. Please give it a try and let us know if anything else is broken.
P.S. In particular, it would be good to know if the test suite passes.
