After cloning the repo, and running the docker commands from the README, it fails twice:
A Docker is created.
It fails to run the test scripts.
WSL2 but creating a docker, so it should not matter.
For error 1, GCC version update to 10 these commands were added to the Dockerfile: (this works)
Hello @sergiakalorth. I was able to reproduce this error.
While we work on a more definitive solution, could you please update the pennylane version to the master one?
pip install git+https://github.com/PennyLaneAI/pennylane.git@master
Please let me know if this helped.
Thank you @AmintorDusko for your promp response!
So, following your suggestion + adding gcc --version >10 as stated in my report works:
Please, update Dokerfile with the right GCC and git for pennylane. The attached Dockerfile should only be used as a quick work around until pennylane's team has a solution.
Hi @sergiakalorth
Thanks for reporting the above. I recommend if you wish to use Docker with PennyLane, the image builders in the main PennyLane repository are a better option. Please see here for documentation on how to use it.
Thanks, @mlxd !! I've seen the link in the docs, but no specific reference for using lightning. I can, of course, infer the interface (or plugin?) for testing, but the documentation is not clear enough for me. (I'm not a quantum researcher, nor python programmer,  but an ML/AI researcher working on a Quantum project, not that it matters, when the README provides a straightforward solution, that is not).
I'll look into the reference you are pointing out to be able to provide better performance!  Not sure then, who this issues should be kept, open or closed.
Hi @sergiakalorth if using the main PennyLane docker container, you will get the most recent lighting release built from the master branch along with it. As an example, you can do the following to use Lightning through Docker with the https://pennylane.readthedocs.io/en/stable/development/guide/installation.html#build-a-basic-pennylane-image image.
You can then launch Python within that docker container, and PennyLane with the Lightning device should be accessible.
Though, for the best performance, it is recommended to use a released pre-built version of Lightning through a Python environment as:
The above script will install Lightning alongside PennyLane, and allow you to use it as the PennyLane device lightning.qubit, as described here. Hope this helps.
Will will update the existing Lighting Dockerfile, but this will likely be deprecated in future to favor the main repository Dockerfiles. It is fine to keep this issue open until the changes are merged.
Thank you very much for the thorough answer!
As per the issue itself, I'll close it.
