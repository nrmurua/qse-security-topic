I'm trying to use the eigenstates function to find the eigenstates for a given Hamiltonian, the code for which is below:
from qutip import *
import numpy as np
import matplotlib.pyplot as plt
smu_x = tensor(sigmax(),qeye(2))
smu_y = tensor(sigmay(),qeye(2))
smu_z = tensor(sigmaz(),qeye(2))
se_x = tensor(qeye(2),sigmax())
se_y = tensor(qeye(2),sigmay())
se_z = tensor(qeye(2),sigmaz())
omega_mu = 0.1 * np.pi
omega_e = 0.1 * np.pi *200
omega_0 = 5.0 * np.pi
H = 0
H += -(omega_mu/2)*smu_z + (omega_e/2)*se_z
H += (omega_0/4)*(tensor(sigmax(),sigmax())+tensor(sigmay(),sigmay())+tensor(sigmaz(),sigmaz()))
H.eigenstates()
However, when I try to run this code it gives me the following error:
Traceback (most recent call last):
File "/Users/Nathan/Documents/internship2021/week2/qutip/Muonium/muonium_interaction.py", line 39, in 
H.eigenstates()
File "/Users/Nathan/opt/anaconda3/lib/python3.7/site-packages/qutip/qobj.py", line 1699, in eigenstates
norms = np.array([ket.norm() for ket in ekets])
File "/Users/Nathan/opt/anaconda3/lib/python3.7/site-packages/qutip/qobj.py", line 1699, in 
norms = np.array([ket.norm() for ket in ekets])
AttributeError: 'numpy.ndarray' object has no attribute 'norm'
I'm unsure of whether this is due to me not using the function correctly or is a genuine issue that may need addressing.
Kind regards,
Nathan
This sounds like an old issue we had, around when numpy 1.20 released - we pushed a fix for that in QuTiP 4.5.3.  Could you post the output of qutip.about() to show your Numpy and QuTiP versions?
I have done this, giving:
QuTiP Version:      4.5.2
Numpy Version:      1.20.3
Scipy Version:      1.6.2
Cython Version:     0.29.24
Matplotlib Version: 3.3.4
Python Version:     3.7.10
Number of CPUs:     4
BLAS Info:          INTEL MKL
OPENMP Installed:   False
INTEL MKL Ext:      True
Platform Info:      Darwin (x86_64)
Installation path:  /Users/Nathan/opt/anaconda3/lib/python3.7/site-packages/qutip
This explains the issue you have mentioned. However, I've been unable to update qutip via conda using Terminal to a newer version, would there be any reason for this?
Yeah, so this bug is fixed in QuTiP 4.5.3 and above.  You can also fix it by downgrading Numpy to 1.19 or below (in 1.20 they changed how they handle object arrays, which broke us and a few other packages).
That's strange that Conda won't let you upgrade beyond 4.5.2; there's no constraint on our conda package which should prevent it.  Do you have any other packages installed that depend on QuTiP?  If so, they might be pinning our version.  What happens when you run conda update qutip?  (By the way, you can also install qutip from pip easily since the 4.6 release).
Running conda update qutip didn't update my installation. Then, when I tried to install  a specific version using conda install qutip=4.6.2 it gave me a very large number of conflicts.
However, I then removed my install and was able to install the current version of QuTiP using pip and it appears to now be working.
Thank you for the help.
You must have some other package installed that's conflicting with QuTiP somehow - our dependencies are pretty lax.  We only ask for Numpy >= 1.16.6 and Scipy >= 1.0 as hard dependencies (with no upper bounds), and both of those versions are old.  Good to know it's fixed now.
