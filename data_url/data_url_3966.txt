Flux tuples/edges were introduced in the CCLight config as a target of an operation. We have found that in experiment this is a very inconvenient (bad) way of specifying the target of a flux pulse. Furthermore, this is not a fundamental constraint of the underlying hardware (both CCLight and Transmon device).
There are three main types of flux pulses (sorted by # target qubits)
The first step is to get rid of the current (artificial) constraint, which requires any flux based operation to target an edge (and having two qubits as target).
The second step would be to find a proper way of describing the intricacies of these constraints and how to best express this both in the configuration files and when writing a program.
This subject requires a lot of discussion, and as such should be postponed until after #160 .
The backend for the CC (see PR #202) can now do 1/2/3 qubit flux pulses.
Currently, this backend uses the CC-light resource constraint scheduler (cc_light_schedule_rc()), which is mostly fine because there seems to be little dependency on the CC-light platform.
However, there seems to be no way to properly schedule 1 or 3 qubit flux gates, and e.g. do the flux dance.
Is any work going on on this subject
Hi Hans,
I think I found a description of the detuned_qubits constraint in #175.
I can see how that can take care of the scheduling (i.e. not perform other operations on the detuned qubits), but cannot see how the actual detuning can be performed without having either a single qubit flux gate for the detuning, or a 3 qubit flux gate that includes the detuning, especially for the CC which needs an explicit gate to perform the detuning (there is no implicit knowledge about the gates).
addressed in #224. so closing.
