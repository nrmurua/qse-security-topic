The QIP module is a set of tools for simulating quantum computing, from the high-level of algorithms, down to individual qubit control sequences in a particular physical architecture. So far it has functions for common quantum information processing tasks, including pre-defined quantum gates, along with functions for applying arbitrary 1, 2, and 3 qubit gates to arbitrary target and control qubits in a register of N qubits, circuit representations, a library of quantum algorithms, and models for some common physical QIP architectures.
Our goal is to have a set of tools to analyse the influence of unexpected noise sources on a given algorithm realized on a particular architecture, as well as being used as an educational tool for teaching QIP concepts.
QIP module enhancements we plan to implement include:
@sahmed95 Have you seen this? Looks like a brief
Thank you for tagging me here. I am trying to do something related to 4 now. Gate decomposition based on the ICM model for topological quantum computing.
I could pursue some of these goals for my first thesis (Jul - Dec) next year. What do you think ?
I think this is still relevant and could be a topic of work for future google SoC students or other students.
Recently I met Johannes Bausch who at Caltech used the algorithm toolbox for some fun example (predict the winner of the world cup), but this points to the fact that the QIP suite is still used.
Also, there might be room for basic I/O functionality to QiSKit and Rigetti. This quantum compiler integrability would further drive interest from the educational point of view. QuTiP is the best playground to learn realistic quantum mechanics and the notion of a compiler back-end could prove enticing.
Moving this to the wiki as a future project.
I have just included part of this as a GSoC project on our GSoC project wiki.
The rest I think we should move to some kind of QIP module wishlist
Some of these points have been addressed by #1065. The rest could become also a project and be added also to the wiki as available project.
@BoxiLi Should we migrate this issue across to qutip-qip?
I think we can close it? Or maybe migrate it to the collection of ideas? Each of the points is quite a big project. Points 3 and 4 are partially addressed.
Let's close it.
