The seeding code is still causing an issue on Windows.
I'm using GnuWin32 to use the makefile through the Developer Command Prompt for VS2019 and the errors are related to libraries (e.g. unistd.h) and code used for seeding.
I maintain QuEST's attempt to seed for the user is a bit overzealous and introduces more problems than it solves. Instead, I think the user-exposed seeding function is sufficient and is standard practise. The doc can include snippets of e.g. using time to seed if that's important, but really, users who are sampling random simulations will have their own meaningful seed.
While it's nice that the demo code can be rerun for different random results rather than teach users about seeding immediately, I feel this benefit is outweighed by the extra complications in compiling on different plaforms.
The best case is if we can get truly platform-agnostic time-seeding working. Can we?
Last week I could get Visual Studio to compile the code.
The equivalent of the POSIX 'unistd.h' on Windows is apparently
'io.h':
https://stackoverflow.com/questions/6365058/alternative-unistd-h-header-file-for-visual-studio-2010?lq=1
The seeding can be fixed but the POSIX 'sys/time.h' functions need to
be replaced by equivalent or similar MSVC functions:
https://stackoverflow.com/questions/25615571/how-to-use-sys-time-h-in-window
I then had to get cmake to compile a statically linked library of QuEST (instead of
the dynamically linked one) -- dynamical linking would also be possible with a little
more effort.
After this, the code compiled and worked fine.
I pushed my changes here:
https://github.com/QuEST-Kit/QuEST/tree/visualstudio
Yep you fixed it! Merged.
