The documentation (https://qiskit.org/documentation/apidoc/classicalfunction.html) shows how to construct a classical oracle for a problem such a Grover search.  However, the resulting circuit uses an ancilla qubit, whereas the GroverOperator  (https://qiskit.org/documentation/stubs/qiskit.circuit.library.GroverOperator.html) from the circuit library only works with oracle circuits with no ancilla, i.e. formed using only multi-controlled Z gates.
Try using a circuit generated by using classical_function in the GroverOperator
The classical oracle generating tools should be compatible with the circuit library components that make use of them
No response
The issue here is that Grover's algorithm is defined on a phaseflip oracle, where the coefficients of the solution states are multiplied by $-1$, but the classical_function module computes bitflip oracles, where a target qubit is flipped if the state encodes a solution.
We can transform the bitflip to phaseflip oracle for Grover in different ways:
It might be convenient to add a keyword argument to the classicalfunction synthesis to do phaseflip oracles instead of bitflip. This would remove the need for the PhaseOracle and allows to drop auxiliary qubits that the bitflip oracles need in a lot of cases.
To see the current workflow in action, here's option 2 for the oracle with 4 variables a b c d and solution not a and not b and c and d:
Note that this does not need an auxiliary qubit as it's just an MCZ.
Here's option 3:
Both are equally valid and we can verify the result with the Grover algorithm:
Prints:
Hi @nonhermitian , did  @Cryoris answer this issue? Can it be closed? Can be rephrase as a documentation isssue?
