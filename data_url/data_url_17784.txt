The tests in TestLatexSourceGenerator (living in test/python/test_visualization.py) test that the visualizer creates the file when called with a filename. Nothing else, which is a very low bar. They all seem to test the same thing.
It's okay if one test checks that the file is created. The rest should also check that the result is expected. Random generation of input in the test should also be avoided (see #205). In addition,  tearDown can be used to remove the generated file.
I would like to deal with this as with good first issue: I see that there are still no tear downs, tests are still random and test suite still checks only the existence of files.
@1ucian0, could you please give me brief instructions: is there is something to discuss or I can simply start working on issue?
Thanks!
@1ucian0 Sorry if I distract you, but I will make one more mention of you. Thanks in advance!
@1ucian0 Okay, I start working on it. However, I have an instant question: in the test/python/tools/visualization/test_visualization_output.py I see that there is already test for latex_circuit_drawer which compares the output of drawer under the current version with the reference output which is exactly the test I wanted to start with.
Moreover, a latex_circuit_drawer is tested there whilst in the test_visualization.py a circuit_drawer with an output set to 'latex_source' and seems that it is quite messy.
Shall these two be merged into one? Or I do not understand something and it is okay?
Thanks!
latex_circuit_drawer is the deprecated function that will be removed. Moving forward the only function will be circuit_drawer with different outputs set via the output kwarg. We just haven't updated the tests yet because both paths call the same functions. If you want to make everything use circuit_drawer as part of your improvements that'd be awesome.
If you want to make everything use circuit_drawer as part of your improvements that'd be awesome.
Thanks a lot, now it is clearer to me. Then, I start and I will use only circuit_drawer as you said and do my best)
@1ucian0 @mtreinish I have the following question: I see that in fact there are also tests on _text_circuit_drawer in the distinct file. Is the _text_circuit_drawer also deprecated? If so, shall I refactor all the circuit visualization test suite such that it will check all drawers (mpl, latex and text) as a part of _circuit_drawer with different inputs? Thanks!
Oh, and I see that #300 is also devoted to this problem. Are you still in touch with @youngchuleta? Won't we work simultaneously on the same part of code? Thanks once again!
This meta testing (same set of inputs to multiple "backends") is something that we have to do in many parts of Terra. It would be interesting to see you approach :)
@1ucian0 As far as I know, the Pytest library already deals with such things) But, am I right that only unittest shall be used?
For now, let's focus just on improving the tests for latex_source exclusively. I will take a look to libs like ddt and the like for further PRs...
Closed via #1617
Reopen, because #1617 was reverted by #1780.
TestLatexSourceGenerator should be tested against a reference source, like test.python.visualization.test_pass_manager_drawer.TestPassManagerDrawer
