I'm using qutip to simulate lindblad dynamics. However, compared to the method I wrote myself with scipy, the one I wrote with qutip mesolve() was much slower. Did I do something wrong or it's expected?
Here's my code
The core of mesolve is also scipy.ode, but the default method is adams instead of bdf and we use sparse matrix for the liouvillian.
There are a lot of small time lost with using mesolve like this. Just looking at rhos' datatype:
self.psi0: dense -> rho0: Qobj(sparse matrix) -> dense vector (for ode) -> mesolve return: sparse matrix -> rhot: dense...
Also mesolve will check if the Hamiltonian is really an Hamitonian or a Liouvillian or a function returning an Hamiltonian, if the system depend on time, if all the dimensions match, etc. So the overhead of mesolve will be important.
Finally, depending on the Hamiltonian there can be a good difference in speed. We use sparse matrix for the Liouvillian, good if the Hamiltonian is large with few non-zeros, but slower that simple dense matrices otherwise.
Same here
Hello, I'm new to GitHub contributing and was wondering if there was still an issue to be solved here. I'm happy to help.
Closing because I'm not sure there's a problem to be fixed here.  At any rate, dense matrices will get huge speed improvements in QuTiP 5.0.
