The following error is observed for QUICK mpi version compilation with GCC 10.2.0.
quick_method_module.f90:197:27:
165 |             call MPI_BCAST(self%HF,1,mpi_logical,0,MPI_COMM_WORLD,mpierror)
|                           2
......
197 |             call MPI_BCAST(self%gridspacing,1,mpi_double_precision,0,MPI_COMM_WORLD,mpierror)
|                           1
Error: Type mismatch between actual argument at (1) and actual argument at (2) (REAL(8)/LOGICAL(4)).
quick_method_module.f90:198:27:
This has to be fixed.
I was able to get around this by using  -fallow-argument-mismatch flag, however, now seeing a bunch of warnings which is really annoying. According to the manual, I should be able to silence these warnings with -Wno-argument-mismatch flag; but somehow this doesnâ€™t work.
@agoetz @superdavidxp @vwcruzeiro To my knowledge, there are no separate MPI_BCAST subroutines for integer and double precision types so this warning doesnt make sense. Perhaps latest MPI library API is different?
@Madu86 : can you copy here the declaration or allocation of the nbasis and Odcsub variable? Thank you.
@vwcruzeiro nbasis: https://github.com/merzlab/QUICK/blob/master/src/modules/quick_basis_module.f90#L127
Odcsub declaration: https://github.com/merzlab/QUICK/blob/master/src/modules/quick_divcon_module.f90#L21, allocation: https://github.com/merzlab/QUICK/blob/master/src/inidivcon.f90#L626
@vwcruzeiro The compiler also issues warnings when broadcasting  variables of different size of the same data type.
For reference:
http://www.gnu.org/software/gcc/gcc-10/porting_to.html
MPI and Fortran type checking has been a long standing issue:
https://www.mcs.anl.gov/research/projects/mpi/mpi-standard/mpi-report-2.0/node236.htm
As far as i know the only way to  get thorough Fortran type checking with MPI is by use-ing an MPI module:
https://www.mpi-forum.org/docs/mpi-3.1/mpi31-report/node408.htm#Node408
In other words, you have to live with the compiler option workaround and its noise until you update your code.
@sbrozell I see. Thanks Scott.
