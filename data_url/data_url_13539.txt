Currently we are just storing tags for version releases. Another option is to have the corresponding branch.
We have discussed/debriefed on the issues in the patch release calls and I will try and summarize here:
Current git flow/process:
Issues with this flow for patch release:
We needed to take some commits already merged to master and separate them out for a patch release, but they were mixed in with a number of other unrelated commits past the last release tag. The main issue is that we on the same branch mix milestone development and release history tracking are functionally mixed here making it hard to have clean branches or states to make patch PRs to.
Possible solutions:
Other comments:
Pinging @willzeng for comment either here or at the next eng meeting :)
As discussed in the recent community call meeting, I'm in favor of working on the master, as it simplifies requirements for external contributions (no need to fork remote branches), and use something like a releases branch, with commits marking released versions to keep things separate.
I think then the actions I should take here are (likely for the next release cycle)
