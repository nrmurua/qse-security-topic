I'm writing a program for which I'd like to test specific behavior using a noise model. However, I'd also like to write my program in such a way that the same program would run on the QPU. This creates a problem, since it seems that compiled programs are not sensitive to noise. Specifically, if I run the following code:
I get the expected output image of a distribution centered around 0.3:

However, if I run the same program except that I run its compiled version:
I get the output image

which suggests that the compiled program doesn't actually know anything about the noisy gate.
I think this is because qc.compile removes (what quilc thinks is) the superfluous I 0.
@msohaibalam see
@notmgsk Wonderful, thank you! In general, how can I check whether a gate has been "compiled away" in the sense above or not? I ask since in the example above, I 0 seems to be an instruction found in both p_native as well as p_exec.program, even without the PRAGMA.
I ask since in the example above, I 0 seems to be an instruction found in both p_native as well as p_exec.program, even without the PRAGMA.
You sure? I don't see that. e.g.:
produces
I must have mixed it up. Indeed, that is what I see as well, thanks.
