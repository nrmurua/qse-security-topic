Inconsistent use of np.complex64 vs np.complex128 results in undesirable behavior such as
Calling validate_normalized_state fails despite not specifying a required dtype:
giving a ValueError:
We should probably use complex64 due to space and time savings. The drawback is that numpy uses complex128 by default, so users creating numpy arrays using numpy will either have to tell numpy to use complex64, or tell Cirq that they are using complex128.
To me it looks like the bug here is "validate" assuming complex64 is required, instead of only doing that if the user asks for it.
hi, I can tackle this. please assign me if you need it
@satw1knandala I've already submitted #3428, which fixes this.
