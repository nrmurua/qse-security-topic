Using 4.0.dev+1401.g20cddb6a
I'm running sayma_masterdac on internal clock with
"ref_period": 1/(8*150e6)
and see
Looking at master examples/sayma_masterdac:
   "ref_period": 1/(8*150e6)
Looking at master examples/sayma_master:
    "ref_period": 1/150e6, "ref_multiplier": 1
What should ref_period be? Why is pulse length sometimes wrong?
Looking at master examples/sayma_master:
"ref_period": 1/150e6, "ref_multiplier": 1
Sorry?
https://github.com/m-labs/artiq/blob/master/artiq/examples/sayma_master/device_db.py#L8
Did you mean standalone?
What should ref_period be?
The examples are correct AFAICT.
Why is pulse length sometimes wrong?
Are you sure it's 100ns->86.5ns?
Note that there is no SERDES TTL clocking on Ultrascale yet, so things get rounded to the (coarse) RTIO clock. With DRTIO the ref_period is still *8 since there may be devices downstream which have higher resolution than the Ultrascale.
I'm trying to reconcile that some variants use "ref_period": 1/(8*150e6) and others use "ref_period": 1/150e6.
Note that there is no SERDES TTL clocking on Ultrascale yet
That's news to me. Is there an Issue on this?
Are you sure it's 100ns->86.5ns?
Yes.
#792
I don't know how it can be news after the many emails to Xilinx tech support, on which you were copied, about the mess they made of Ultrascale I/O clocking.
This prints the expected result 120:
What happens if you do pulse_mu(120)?
