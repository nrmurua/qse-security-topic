Hi,
Several qiskit version ago, we were able to create the inverse of circuits from initialize() by issuing a command like this (used here: https://github.com/Qiskit/qiskit-tutorials/blob/master/community/hello_world/string_comparison.ipynb):
But with the latest qiskit it returns error that related to reset() function which is confusing because I cannot see why reset is used in the initialization.
What is  the workaround for this? Noted that because quantum circuits are reversible, there should be a natural way to define a circuit from its inverse and vice versa.
circuit.initialize(...).inverse() produces an error related to reset() which should not be used in the creation of gates.
Run the notebook for string comparison here:
https://github.com/Qiskit/qiskit-tutorials/blob/master/community/hello_world/string_comparison.ipynb
We should be able to create an inverse of circuit based on the description of the circuit.
No idea.
I found out that initialize() use the reset() at the beginning. This makes the resulting circuit is not unitary anymore.  I wonder why using reset() at all?
This commit introduced reset in the initializer. eda45e2
Initialization is not a reversible operation. It is meant to initialize to the desired state from any state, not just the zero state. So a reset is necessary in case you insert the initialize instruction in the middle of a circuit.
The transpiler removes reset if it happens to be in the beginning of the circuit. So if you always use initialize in the beginning, pass it through transpile(circuit, optimization_level=1). (which invokes the RemoveResetInZeroState transpiler pass on it).
I do not agree that initialization is not a reversible operation. There are use cases of using circuits obtained from initialization whose inputs not necessarily all-zero states, but the circuits are generated on the all-zero states, such as those in the quantum-enhanced SVM papers.
