Circuits returned by pec.sample_circuit do not contain idle qubits present in the original circuit, and also have different register names.
The circuit(s) returned by pec.sample_circuit should have the same registers and qubits as the input circuit: here, one register named "Q", the qubit "Q_2" present, and one measurement register named "measure" with two bits.
Use the about() function to summarize information on operating system, python version and dependencies.
Additional Python Environment Details (pip freeze or conda list):
Some additional info about this issue:
other Mitiq techniques such as ZNE and DDD work correctly, since they make use of the following decorator which handles many conversion problems, including qiskit idle qubits: 
The decorator is not used in pec.sample_circuit , and this fact is the origin of the problem.
My suggestion would be to find a way to apply the decorator accept_qprogram_and_validate or a similar new decorator to pec.sample_circuit.
Note that, unfortunately, sample_circuit maps 1 circuit to many circuits, while the existing decorator accept_qprogram_and_validate works with functions mapping 1 circuit to 1 circuit. So one cannot just write @accept_qprogram_and_validate on top of def sample_circuit().
Thanks @andreamari I also identified this as the origin of the issue. I remember going through this process with ZNE and I think PEC just needs to use the fixes we implemented there. Hopefully it's fairly easy to do - perhaps a sample_once function which could be wrapped by the decorator and then is repeatedly called by sample_circuit?
That could work but I am checking if it's possible to have a one-to-many decorator which would make things more efficients. In the past I remember that sampling circuits one-by-one was very slow and so we decided to sample all circuits  in a single batch.
