TensorFlow 2.0 is expected to be released this year. The changes expected include:
Semantic versioning (so should be much easier to maintain against)
An eager-first interface. Eager execution mode will be moved out of tf.contrib and will become the default way of working with TensorFlow.
A focus on keras as the high-level API, as opposed to the Estimator class.
For more details, see
Rather than focus on updating the existing TensorFlow backend to support 1.7+, I suggest a focus on implementing a TF2 compatible backend. This could be a fork of the existing TF backend, and marking the existing TF backend as 'legacy'.
This is a significant change; enough so that we would need to think on whether we want to support TF2.0+, or keep the existing TF backend (with v1+ graph-based approach)
This is a good point; I'm in favor of completely deprecating/dropping the existing TF backend for a TF2.0 compatible one.
In terms of research reproducibility, and existing research repositories, it should be matter of explicitly stating 'this research code requires you pip install strawberryfields==0.9 tensorflow==1.3 in your virtual environment, and does not work with later versions of SF or TF'
