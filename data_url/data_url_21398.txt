Problems initialising stand-alone Urukul AD9910 with SU-Servo in the same kernel call.
Ran the following block of code
Both Urukuls should initialise and output their respective set frequencies.
If the SU Servo code block is swapped with the stand-alone Urukul such that the former is run first , we get the following error message instead:
If the SU Servo block of code and the stand-alone Urukul block of code are wrapped in their own kernel functions and called separately, no error occurs.
#1207
This is because both the suservo code and the normal Urukul code use the AD9910 class, but with different internal types. The ARTIQ compiler can't handle this, but you can just make a subclass for the suservo variant and use it for your suservo device DB entries. We typically do something like this:
(though these days, we have a non-trivial version of this for suservo CPLD readback support)
Thank you for the help, we have now fixed the problem by creating a subclass for the suservo urukuls. We followed the instruction in the following forums:
https://forum.m-labs.hk/d/273-using-su-servo-mode-and-freestanding-urukul-in-the-same-experiment/3
