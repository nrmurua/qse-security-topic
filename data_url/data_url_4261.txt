When you apply:
The engine receives X commands via the or implementation in Tensor.
But if you apply:
Then then the or operation is bypassed and the engine receives a Tensor command instead.
I believe the fix here is to replace generate_command with generate_commands, fix up any existing usage to deal with the multiplicity, and always always have __or__ delegate to generate_commands.
Good catch. I will have a look at it
This is addressed in #53
