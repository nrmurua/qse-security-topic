Currently Interval, Timeslot and TimeslotCollection have the standard python object representation. This should be replaced with an informative implementation of __repr__. As TimeslotCollection contains Timeslots and Timeslots contain Intervals the hierarchal nature of these data structure should be used to derive representations.
A possible representation might look like
Interval:
(t0, tf) eg. (0, 10)
Timeslot: Is an interval on a channel
(channel, repr(interval)): (DriveChannel(0), (0, 10))
TimeslotCollection: Is a dictionary of timeslots. Ie. it groups together intervals on channels.
{channel1: [repr(interval1_c1), repr(interval2_c1), ...]), channel2: [repr(interval1_c2), repr(interval2_c2), ...]}
I can work on making this addition
Currently, my code I'm testing would cause the following code:
to output
Does this seem ok?
This seems on the right track. What I think might communicate that these are objects is an output that looks something like
Yeah, that would be helpful to have printed out as well. I will make that addition, and then open the PR.
Is it possible to have a Timeslot with multiple Intervals? For example, would this be valid:
Or any format of inputting more than one Interval.
Currently, this functionality is handled by the TimeslotCollection
