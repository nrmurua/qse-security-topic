Description of the issue
The deprecated module logic in _compat.py maintains a global state of whether a given deprecated module emitted warnings already or not. If yes, it does not emit deprecation warning again.
This behavior is great in reducing noise for the end user, however, it makes test execution order dependent - earlier, well handled calls to deprecated modules will result in omitted warnings in later tests. These tests should have more deprecation handling.
Requirement:
To avoid missed scenarios and create reproducible testing setup, during testing we should not dedupe, unless explicitly enabled (with an env var, in _compat_test.py for example).
During production usage, we should always dedupe.
How to reproduce the issue
If I comment out these two lines:

And run check/pytest cirq-core/cirq/protocols/json_serialization_test.py all the unhandled DeprecationWarnings will fail a bunch of the backward compatibility tests for cirq.google for example:
Cirq version
master
