See title.
It should decompose.
No response
Looks like there's some questionable logic in the transpiler pass Decompose, which QuantumCircuit.decompose uses internally, that causes the name check to be skipped if the gate has a label.  It happened in #6587, and there doesn't appear to be any further context in that PR, so I think it's just a logic bug that crept in and we can fix.  (tbh, I'm not certain why it uses label at all, or why that attribute exists for Gate, but that's beyond this issue.)
As an immediate work-around, you can either set label=None in the XXPlusYYGate constructor (which will probably mess with the drawing) or you can use "{XX+YY}" as the string in the decompose call.
A couple of thoughts. Using curly brackets around a label can cause some issues for the circuit drawers. They won't display in the latex drawer and can create text overruns in the mpl drawer. I'd suggest either removing them here or replacing with parens.
I think using label in decompose makes some sense. A user might do circuit.draw() and then want to use the name that's displayed to choose which gate to decompose. The problem with the logic can be fixed by removing the has_label checks which will let things fall through to the name check if the label check fails.
If you'd like, I can clean this up and add a test.
That'd be great, thanks Edwin.  I don't think there's any particular problem with changing the label in XXPlusYYGate (and XXMinusYYGate) to use parentheses if braces are likely to cause problems in the drawers, since the label is mostly for the drawers anyway.  My understanding is that these two gates define a label by default just to make the drawing clearer anyway.
