raise error
Code
Result objects are combined without error
None
Note: If I change the backend to qasm_simulator, there is no error.
So I dug into this, the underlying issue is that name in most places is not actually a property/string but instead actually a method. So when result is doing the comparison of the backend_name property it's getting a bound method (which doesn't match for different objects) instead of the string it was expecting.
We can fix this for the statevector simulator case by changing the result code to call result.backend_name() instead of result.backend_name. However there are cases where backend_name is a string and doing this will break those. Ideally I'd like to see everything be a string/property since it's static and calling a function seems unecessary, but it looks like the assumption that it's function is in a bunch of other places throughout the code. I'll unravel the ball of yarn and figure out a way to preserve our interface compatibility while making it behave consistently for all the backends.
so a quick workaround I can check both?
like comparing result_a.backend_name() == result_b.backend_name() or result_a.backend_name == result_b.backend_name
I just pushed up a fix in #1118 for this. The issue was a bit more subtle and I missed it in my first pass through. It turns out it was just a bug in the 2 statevector simulators (python and c++) incorrectly assigning a method to an attribute defined in their parents. Give #1118 and see if that fixes it for you.
@mtreinish The patch at #1118 works, thanks.
In general, we are going to stop supporting adding result objects and make some way to run a larger job.
