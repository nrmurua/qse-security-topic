The barrier on a circuit gets applied to every qubit when transpiled rather than to just those qubits involved.
Transpile the above circuit and draw the output.
The barrier should be applied only to the specified qubits.
No response
Was there any particular set of options to transpile, and how "latest" is your Terra version?  My simplest reproducer on 44f794a didn't show any issues:
and the same held at any value of optimization_level.
Try transpiling to a backend, eg FakeAthens:
{'qiskit-terra': '0.19.2', 'qiskit-aer': '0.10.3', 'qiskit-ignis': '0.7.0', 'qiskit-ibmq-provider': '0.18.3', 'qiskit-aqua': None, 'qiskit': '0.34.2', 'qiskit-nature': None, 'qiskit-finance': None, 'qiskit-optimization': None, 'qiskit-machine-learning': None}
This appears to be entirely deliberate: there's a pass called BarrierBeforeFinalMeasurements added 3 years ago in #1538, due to some issue with hardware at the time (#3273 (comment), which also mentions why it's only run when coupling_map isn't set).
I'd guess those concerns are likely obsolete these days, but you, @kdk or @mtreinish will know better than me.
Yes, that condition no longer exists, and one can do measurements anywhere in the circuit now.
On IBM hardware that's the case, but other backends still have a similar limitation. For example, if you use any of the trapped ion providers (aqt and ionq definitely, not sure about honeywell) they don't support mid circuit measurement and can only measure at the end.
Well luckily the HW mentioned has all-to-all connectivity and would not be swap mapping (the root of the problem).  Honeywell does indeed support mid-measurements.  Agree that others may not.  However, the current pass setting was very much an IBM specific issue that was being addressed at the time.
The problem here is that it makes traversing the circuit looking for active qubits inefficient as it forces one to traverse the circuit twice; once for identifying active qubits, and a second time to see which active qubits the barrier is on.
I am going to close this as there is probably too much friction to change this, and I have worked around it.
