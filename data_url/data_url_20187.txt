When enabling clang's UndefinedBehaviorSanitizer using the build sequence
there are several undefined behaviours in many algorithms, related to the KeccakP-1600-times4-SIMD256 operation.  I can't tell at this point whether the undefined behaviour is present in the Keccak code package or in how code in liboqs/implementations are calling it.  Here's an example:
I thought it might be due to the variable state in indcpa.c/gen_matrix being on the heap, so I tried allocating its contents using aligned_alloc, but to no avail.  I'm at a loss at how to proceed.  Any ideas? @thomwiggers @cryptojedi @baentsch
keccak4x_state is already an array of __m256is, so that should already be aligned.  The same is for the arguments to shake128x4_squeezeblocks in indcpa.c, so that's also not it... I'm not so convinced 0x000001220830 is a stack address though.
There is an upstream fix in Kyber for the keccak code that might have fixed the undefined behavior:
pq-crystals/kyber@8440574
I ran clang's UndefinedBehaviorSanitizer after #891 and it didn't lead to this behavior in Kyber anymore.
Fixed by #891.
