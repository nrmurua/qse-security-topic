Suppose both UGate and u3 are used in a QASM file. During a traversal visit, the former will hit
void visit(ast::UGate& p_item) override
and the latter
void visit(ast::DeclaredGate& p_item) override 
From a UGate, you can get the theta, phi, and lambda; from a DeclaredGate, you cannot.
Is it fair to say the DeclaredGate has missed some features?
By the way, our use case is to display a QASM graphically. Without the rotation information, all the u3 gates are displayed identically. They look a bit dull.
For that matter, all the std lib gates that carry rotation information have the similar problems.
Hi there!
The classical arguments (e.g., rotation angles for u3 gates) are stored in the c_args member of a declared gate and can be accessed individually via the carg method or iterated over with the foreach_carg method. The AST printer for instance uses the foreach_carg method to print each classical argument.
If the rotation angles for declared gates for some reason aren't being stored in c_args, let us know and we'll take a look. Thanks!
You're absolutely right. Thanks for giving the world such a neat API.
