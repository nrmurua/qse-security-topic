Today I was testing the focus! function for qubits, and found that the function started to output wrong results after repeating the operations. Below are the code and results from Julia REPL:
As you can see, when I called focus! for the 3rd time, the result for reg.state was wrong. I think this might be a BUG for a method of focus! function but I'm not sure. Please have a test. Thanks a lot!
This behavior looks a bit strange, but is expected.
A quick fix would be changing to sencond relax!(reg) to relax!(reg, 2)
focus!(reg, 2) will move the focused (i.e. the second) qubit to first.
But, relax!(reg::DefaultRegister; nbit::Int=nqubits(reg)) is not able to roll back this moving forward operation, because location is not remembered in the register. This is by design since we don't want subblocks become address aware and context dependent. To rollback, you need to specify additional parameters addrs like relax!(reg::DefaultRegister, addrs::Ints; nbit::Int=nqubits(reg))
If you are intended to temperary focus on several qubits, the wrapper concentrate(nbit::Int, block::AbstractBlock, locs) is able to focus on locs, apply block and finally rollback.
We will polish this part of documentation for clearly state the side effect, or maybe just remove the dangerous interface that does not take locs. @Roger-luo how do you think?
Thanks you very much for your report!
focus! means to focus the given address based on current address, which will not track the full focus trajectory. We once had a different version that track the address of registers at very early stage of Yao, but in that way, any extended register under AbstractRegister have to store the locations of the qubits, which seems to be too complicated.
So this is actually a feature, not a bug.
But yes, relax!(r) without locs seems to be misleading here, and not explicit enough. Delete this interface should just work.
Thank you for your explicit explanations!
I'll change the title and add this to 0.4 milestone, I think this is a straight forward change, and we can just delete this relax!(r) in the coming release.
