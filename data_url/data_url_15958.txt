Just looking at the parameterization of GaussianSquare in qiskit pulse (https://qiskit.org/documentation/stubs/qiskit.pulse.GaussianSquare.html) ‚Äî it seems to make the ‚Äúnatural‚Äù thing to do when sweeping the duration to leave the width of the square top part constant and vary the width of the rise/fall..
A user might reasonably expect the width of the top part to sweep with duration so longer duration pulses have linearly more power.
This happens to be extremely inefficient with our backend hardware in terms of memory consumption (and is probably not what most people want to do when they sweep a duration anyway.)  Would it make sense to provide a more natural parameterization (possibly as a named risefall argument or something)?
Lauren suggested using a num_sigma parameter instead of width to characterize how long (in units of sigma) the rise/fall sections should be.
Hi, I can work on that.
Thank you @Feigenbaum4669, I've assigned. Please comment if you need clarification or help üòÑ.
Hi, should I modify the existing implementation of GaussianSquare (and function gaussian_square) or rather create the new class, e.g. GaussianSquareNatural (and function, e.g. gaussian_square_natural)? If the former is true then could please specify how you want the class to be overloaded? I assume we want to keep the old functionality anyway. If it is not true then I can, of course, change the original ones.
The question concerns mainly the class since I can adapt the function gaussian_square to support both parametrizations quite easily.
I think you can add argument something like risefall (or similaly ratio of risefall to sigma) and deprecate width, or you can keep width and set default to None. One reason of keeping the original class is dependency on backend compiler. Because we need to guarantee the same parametic pulse is defined in the backend to generate the same waveform, basically you cannot define arbitrary parametric pulse on front end. Eventually risefall should be converted into width to conform to the spec of qobj.
https://github.com/Qiskit/qiskit-terra/blob/656564587a83bc4bb5b409d8123b09696c4b3007/qiskit/qobj/converters/pulse_instruction.py#L386-L393
Here you can find how parametric pulses are defined in the qobj. If you change the parameters field, that will crash the backend compiler.
@nkanazawa1989 Thank you!
Hi, I created the pull request. The tests have passed. Please let me know in case something should be modified.
Hi, I applied your suggestions @taalexander. No other suggestions were made. The pull request is ready.
