Description of the issue
Example: SerializableGateSets
When we have a global singleton such as:
deprecating SerializableGateSet will cause tests to fail because all calls which raise deprecations must be declared in tests (using cirq.testing.assert_deprecated()), and because SYC_GATESET is loaded in init files, it's not possible to declare them within any particular unit test.
Possible solutions:
Relaxing the constraint, if possible, will also reduce the workload for large deprecations. Adding deprecation declarations in tests is a tedious manual process. Large regex-based search & replace helps but only to an extent - the declarations need to be inserted slightly differently depending on how the test code is structured. If there's a looser guarantee that protects against most deprecation errors and has significantly less manual work, that'd be ideal.
Cirq version
Cirq 1.0
Pytest fixtures could potentially help us eliminate the hard requirement of declaring deprecations in tests. @pavoljuhas
