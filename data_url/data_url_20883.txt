In #55 we discovered that Dilithium does not implement crypto_sign_signature and crypto_sign_verify, but only crypto_sign and crypto_sign_open.
Let's make this issue a bit broader, as we also need to implement functional tests for these API functions.
Can we even do meaningful test vector comparison, given that we currently do this by comparing to (a hash of) sm bytestreams? I don't immediately see a way to test for equivalence between crypto_sign and crypto_sign_signature without manually dissecting sm.
There's no guarantee that crypto_sign_signature's output is even a substring of crypto_sign's output, there could be some weird transformation or padding applied.
I think at this point all we can do is demand test vectors for both, and maybe add a unit test that checks the compile library files to make sure the relevant functions are in fact exported (which would have caught the fact that Dilithium was missing these).
Adding a separate check for the symbols is not necessary, these functions should just be included in crypto_sign/functest.c and crypto_sign/testvectors.c, where missing symbols would just turn into a linking error.
