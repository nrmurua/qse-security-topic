[in Codegen._get_arg_str]
Is there any reason that why we don't (shouldn't) declare array type args as memoryviews (for primitive dtypes such as float, complex, int)?
We do for splines.
I am assuming that there may be some increase in efficiency by doing so?
Perhaps @nonhermitian is best placed to answer
The old cdef ndarray syntax can technically be a little faster in some Cython applications because it doesn't involve instantiating a new type; Cython just generates Numpy C-API code.  However, this is legacy behaviour of Cython and using these variables generates very old Numpy C-API code in some instances (e.g. pre-Numpy 1.7 (2013)).  The memory-view syntax does not require holding the GIL and is rather shorter and easier to read - the former makes threaded parallelisation more possible, particularly in dev.major where we are more aggressive about releasing the GIL during heavy computation.
Closing for now because it's not really urgent to update old code, but we'll touch it up (speed permitting) as we modify this sort of file in the future.  dev.major already removed well over half the uses of it.
