Since my PR last week, the regtests have been failing with the Intel compiler at rt_propagation_types.F. I can reproduce the error locally but I still have no idea, I know that commit 5c33d94 caused the crash but I could not tell so far how the crash is caused. I checked the association state of the pointers (apart from rtp%mos%new etc. as they are allocated right before), all of them are found to be associated. I run the calculations with gdb-ia provided by our the intel parallel studio distribution on our cluster without obtaining any further additional information. The Intel inspector even returns an issue on line 141 (right at the function entrance).
Does anyone of you have an idea?
I am just looking into this issue. The Intel compiler detects mos_aux as not associated on entry to rt_prop_create which causes a SIGSEGV in this call to cp_fm_create, finally. Tracing back leads to line 465 in rt_propagation.F in which qs_env%admm_env and thus mos_aux_fit is not associated.
Thank you for the hint, I have found the culprit. The error is related to the INTENT of mos_aux in rt_prop_create. In rt_propagation.F, it provided as a component of admm_env which is not associated in the given tests. GCC apparently ignores this issue because it never accesses mos_aux whereas Intel does (at least for copying the data). Removal of the intent should work. The intent of the argument mos is correct because it is accessed directly at the begin of the routine.
Apparently, my employed Intel compiler+utilitiess is a bit outdated to catch this.
Thank you for your effort and please excuse the inconvenience.
Removing the INTENT(IN) attribute for mos_aux does not help, because its parent admm_env is also not associated. The argument has to become OPTIONAL in addition.
Unfortunately, just making mos_aux optional triggers an abort for the test input QS/regtest-admm-1/H2O-admm-emd.inp because of the newly introduced assertion for mos_aux. It seems that the way how and when admm_env and admm_control are created and initialised requires further checking. Maybe, someone who is more familiar with the ADMM part (in connection with Ehrenfest MD) can have a look.
