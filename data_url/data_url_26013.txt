Currently, the qbraid.devices.DeviceLikeWrapper.run method accepts a single qbraid.QPROGRAM as argument. In this issue, we want to add an addition abstract method run_batch that allows submitting multiple quantum programs at once.
This new abstract method would need to be implemented in the following DeviceLikeWrapper sub-classes:
AwsDevice
IBMBackend
On the surface, this update and these changes seem straightforward. But challenges could come in depending on how each of AWS and IBM manage jobIDs. For example, each of the existing DeviceLikeWrapper.run methods call the qbraid.api.init_job and qbraid.api.get_job_data functions to send and retrieve information to/from the qBraid API about submitted jobs.
Right now, each of these assumes a single Job ID, and looks for info such as circuit depth and number of qubits. For IBM, batched jobs still return an IBMJob type, which I assume uses a single ID, so these circuit data fields in job creation will need to be updated/populated accordingly.
For AWS, batched jobs also seem to be given a single ID, but instead of returning an AwsQuantumTask object, the AwsDevice.run_batch method returns a AwsQuantumTaskBatch. So, this will require an additional wrapper class to be made, and may impact the corresponding result class as well.
