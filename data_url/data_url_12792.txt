Hi @tcNickolas  and all others,
I have big problems in understanding the solution for 2.3 Peres/Wooters Game:


see stackexchange
Thank you very much for enlighten me :)
BR
Markus
I thought I could use Markdown to describe the matrices, I try it an other way....
No, GitHub doesn't support LaTeX, you can do the formulas only using Unicode or screenshots.
This problem (and the explanation) was actually written by @martinquantum, so I'm afraid I can't really enlighten you on it. @martinquantum, could you address this question?
Hi Mariia, thx for the quick response. I thought you would know it as I found this link to a paper where you and martin are named as the authors
contest-editorial.pdf
@martinquantum : maybe you can help me with this?
Hi @tcNickolas , @martinquantum
I have an additional question. Meanwhile I can understand how you constructed M'. And if we use 1/sqrt(3) instead of 1/sqrt(2) the matrix is unitary.
At the end you state:

It should be arccos (1/sqrt(3)) or arcsin(sqrt(2/3)) but the signs don't match anyway
Thx
I finally got the time (and the right tools!) to sit down and dig into this question. Using the new DumpOperation functionality I could just check which parts of the code correspond to which matrices without doing matrix multiplication manually.
The matrix in question is implemented using not a single controlled Ry gate, but rather a controlled Ry gate plus some row/column reordering, which was (rather inconveniently) omitted in the writeup. The following sequence of gates
gives us exactly the matrix we're looking for

The key here is to get the right matrix elements and then the right reordering of them.
(Apologies for taking so long - the answer three months after the question is probably not very helpful!)
I sent a pull request to add this clarification to the workbook - omitting such information is indeed confusing, and we don't yet have a kata that would cover applying row/column permutations, so there is no place to look it up.
It is still helpful, thank you.
