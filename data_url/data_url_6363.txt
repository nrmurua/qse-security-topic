We've attempted this before, but there's still potential optimization opportunity in a QEngine type that hybridizes QEngineCPU and QEngineOCL. Previous attempts at this took a diamond inheritance approach, but it might be simpler just to add the type as a QInterface wrapper over an internal QInterface type that switches out between QEngineCPU and QEngineOCL at qubit limits checked in the constructor and on Compose()/Decompose()/Dispose().
