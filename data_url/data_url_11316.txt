is it possible to provide in the documentation a simple example of using this lib to compute
what is the current state of Schroedinger's cat using various circuits, etc versus random binary 0 or 1?
then if Alice and Bob are separated by a huge distance, 10 million light years.  Alice wants to transport the cat's status to Bob.  the current example uses transport.  how does Alice transmit the information without breaking entanglement?  how would simulate breaking? or creating entanglement?  how do you know  or calculate how long the coherence will last before noise overwhelms the system?
if Bob has to wait 10 million years for an answer, the answer doesn't matter, the cat, Alice and Bob will be dead long before the information arrives.
That's a bit out of scope for this library. This library is for manipulating and compiling representations of chemistry problems to quantum computers.
To answer your question though, one cannot transmit information using entanglement alone. You can read about it here.
Perhaps it might be better to explore these questions using a general purpose quantum circuit framework such as ProjectQ or QISKit.
Since this question is really not about OpenFermion, I will close it now.
of course it is.  the documentation is part of a software package, see repos like ffmpeg, opencv, boost.
example documentation for this software is severely lacking and is more of a 'how to' on python than the actual package.
