Is there any update on the optimization barrier?
@andyliphys do you have a good use case, we haven't encountered many and wanted to understand before implementing.
@dabacon The initial motivation is that when I compile a circuit with measurement gates, it raises an error
and I think that an optimization barrier in front of the measurement gates will solve the problem.
Nonetheless, I solved the problem by optimizing the circuit without measurement gates first and then appending the measurement gates to it.
And I agree with you that the optimization barrier is not an urgent feature.
@andyliphys which optimization was this?
@dabacon cirq.google.optimized_for_xmon(circuit, new_device=cirq.google.Foxtail)
@andyliphys could you provide code that causes that issue? optimized_for_xmon is not supposed to fail like that in the first place. It may have been fixed by #795
@Strilanc Check this. I am on Cirq 0.3.1.35.
cirq.google.optimized_for_xmon(circuit, new_device=cirq.google.Foxtail) works perfectly.
However, cirq.google.optimized_for_xmon(circuit + measure_circuit, new_device=cirq.google.Foxtail) gives an error ValueError: Adjacent Exp11 operations: CZ((0, 1), (0, 2)) and XmonMeasurementGate('0')((0, 0)).
@andyliphys The program you posted currently runs with no errors on the master branch after some minor adjustments.
CC: @Strilanc
@vtomole Thanks. Just check that the bug is fixed in release v0.4.0.
@andyliphys  Nice! Could you please close this or is optimization barrier still not settled?
@vtomole I cannot close the issue since it is created by @Strilanc.
