Some Qiskit gates are not supported (during the internal conversion to Cirq).
It would be good to support more gates.
Since we are relying on Cirq conversion functions, a possible way to do achieve can be via up-streaming these requests to Cirq.
Gates that are currently not supported (please add more if you know more):
Logistically, I suggest closing #558 and using this issue to track to avoid duplicates.
This issue had no activity for 2 months, and will be closed in one week unless there is new activity. Cheers!
This issue had no activity for 4 months, and will be closed in 2 weeks unless there is new activity. Cheers!
Scope of this ticket is twofold:
For milestone 0.25 lets complete point 1, and add support for failing gates that are straightforward to fix.
I can work on this issue
Hi @andreamari  ! I'm working on this issue and I find Qiskit works now with OpenQASM3 and cirq with OpenQASM2, and using less gates than qiskit, so my question is convenient to do a function to converts OpenQASM3 to OpenQASM2 and include the equivalents gates, for example
cu(pi/2, pi/2, pi/2, 0) q[1], q[0];
will be
p(0) q[1];
p((pi/2 + pi/2) / 2) q[1];
p((pi/2 - pi/2) / 2) q[0];
cx q[1], q[0];
u(-pi/2 / 2, 0, -(pi/2 + pi/2) / 2) q[0];
cx q[1], q[0];
u(pi/2 / 2, pi/2, 0) q[0];
Hi @MaldoAlberto,
Thanks for isolating the root of problem so well!
I am not sure about writing from scratch a QASM3<->QASM2 within Mitiq. It would be a complex piece of code to maintain which could solve this bug, but could create 100 new bugs :-)
Two less dangerous solutions are perhaps the following:
Note that the last step is not as easy as it seems, since the pipeline of conversion layers in mitiq.interface is a bit complicated (e.g. nested decorators).
Hi @MaldoAlberto,
Thanks for isolating the root of problem so well! I am not sure about writing from scratch a QASM3<->QASM2 within Mitiq. It would be a complex piece of code to maintain which could solve this bug, but could create 100 new bugs :-)
Two less dangerous solutions are perhaps the following:
Note that the last step is not as easy as it seems, since the pipeline of conversion layers in mitiq.interface is a bit complicated (e.g. nested decorators).
That's true! I can try to do both. Additionally, I'll examine the conversion in 'qiskit.Quantum' to resolve it as soon as possible. Thank you for your suggestions.
