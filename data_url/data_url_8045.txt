This bug is related to the one explained in #1829.
After setting to False the auto_tidyup variable in settings, mesolve still calls tidyup and sets to 0 all values lower than 1e-12.
The following code is from a QuTiP example, but removing the collapse operators and multiplying the constant hamiltonian with a very small value (and changing the time vector accordingly). More specifically, I create two different hamiltonians by multiplying H0 by 1e-12 and 1e-13 respectively. After computing the mesolve for both hamiltonians, one can see that in the second case all values have been set to 0.
The second print should NOT have been all 0s.
No response
mesolve use cython code for speed and there was a strange bug when using sparse matrix with stored 0 so the tidyup is needed. As long as pure 0 are not kept, small values can be used.  For now ..solve will respond to settings.auto_tidyup_atol with #1832 for such cases.
In a future major release (branch dev.major if you are curious), the support is for sparse matrix is improved a lot and those settings are used in the sparse matrices operations directly, so they will apply everywhere.
