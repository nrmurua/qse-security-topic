This used to work. The above is a minimal example taken from real code that used to work with previous cirq versions.
is my hack. I don't know what the "true" fix would be.
I have no better idea than your fix either. If feel like this is a highly special case where numpy is kind of breaking the iterable contract by having __iter__ on a class which can be initialized to be non-iterable...
I say let's special case it to np.ndarray, ndim==0. Alternatively we could catch TypeError, but I prefer the explicit special logic!
We could EAFP and try/catch Type error around the any()
I have mixed feelings about using EAFP (it could lead to hard-to-find performance hits, depending on implementation), but overall agree with the proposed solution. The intent of this code is to locate key-serializable objects (like FrozenCircuit) in iterables; anything that would never contain such an object can be skipped.
