Hi, CP2K developers, sorry to bother you,
Recently I compiled the CP2K version 7.1 use Intel compiler (version 19.0.4.243, which is tested by you).
I compile the package successfully, and get the binary file "cp2k.popt" in ($CP2KHOME)/exe/Linux-x86-64-intel-host/
but when I run cp2k.popt, the program is not run.
For an example, when I using command
cp2k.popt --help
The program should return the usage of CP2K, but I got nothing, and this command is not terminated.
which kind of problem could I have? How can I solve it? Thanks a lot.
All other packages is compiled with intel 2019.04. I do not install CP2K with SPGLIB, PLUMED2.
System: Linux CentOS 7.4
Intel compiler version: 19.0.4.243
Libint version: 2.6.0
Libxc version: 4.3.4
Libxsmm version: 1.14
Elpa version: 2019.05.001
There is the arch file I used. (reversed version of "arch/Linux-x86-64-intel-regtest.popt" in your sourcce code, changing the directory of corresponding libraries and comment the useless linking command)
# Tested with: Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 18.0.5.274 Build 20180823                                                                 #              Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.3.199 Build 20190206                                                                 #              Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.4.243 Build 20190416                                                                 #              Intel MPI, MKL, Libint 2.6.0, Libxc 4.3.4, libxsmm 1.14, ELPA 2019.05.001, PLUMED 2.5.2, SPGLIB 1.12.2                                                                           # Author: Matthias Krack (matthias.krack@psi.ch, PSI, December 2019)                                                                                                                                                                                                                                                                                                                            CC          = mpiicc                                                                                                                                                                            FC          = mpiifort                                                                                                                                                                          LD          = mpiifort                                                                                                                                                                          AR          = ar -r                                                                                                                                                                                                                                                                                                                                                                             #include      $(MPI_PATH)/plumed/2.5.2/lib/plumed/src/lib/Plumed.inc.static                                                                                                                                                                                                                                                                                                                     ELPA_VER    = 2019.05.001                                                                                                                                                                       ELPA_INC    = /opt/cp2k-7.1/other_packages_install/elpa/install/include/elpa-$(ELPA_VER)                                                                                                    ELPA_LIB    = /opt/cp2k-7.1/other_packages_install/elpa/install/lib                                                                                                                                                                                                                                                                                                                         LIBINT_INC  = /opt/cp2k-7.1/other_packages_install/libint_cp2k/install/include                                                                                                              LIBINT_LIB  = /opt/cp2k-7.1/other_packages_install/libint_cp2k/install/lib                                                                                                                                                                                                                                                                                                                  LIBXC_INC   = /opt/cp2k-7.1/other_packages_install/libxc/install/include                                                                                                                    LIBXC_LIB   = /opt/cp2k-7.1/other_packages_install/libxc/install/lib                                                                                                                                                                                                                                                                                                                        LIBXSMM_INC = /opt/cp2k-7.1/other_packages_install/libxsmm/install/include                                                                                                                  LIBXSMM_LIB = /opt/cp2k-7.1/other_packages_install/libxsmm/install/lib                                                                                                                                                                                                                                                                                                                      GCC_LIBRARY_DIR = /opt/gcc494_set/GCC4.9.4/build/lib64                                                                                                                                      #SPGLIB_INC  = $(INTEL_PATH)/spglib/1.12.2/include                                                                                                                                              #SPGLIB_LIB  = $(INTEL_PATH)/spglib/1.12.2/lib                                                                                                                                                                                                                                                                                                                                                  CFLAGS      = -O2 -g -traceback -xHost                                                                                                                                                                                                                                                                                                                                                          DFLAGS      = -D__ELPA -D__FFTW3 -D__LIBINT -D__LIBXC -D__LIBXSMM                                                                                                                               DFLAGS     += -D__MKL -D__MPI_VERSION=3 # -D__PLUMED2 -D__SPGLIB                                                                                                                                DFLAGS     += -D__parallel -D__SCALAPACK                                                                                                                                                        DFLAGS     += -D__CHECK_DIAG                                                                                                                                                                                                                                                                                                                                                                    FCFLAGS     = $(CFLAGS) $(DFLAGS)                                                                                                                                                               FCFLAGS    += -fpp -fp-model precise -free -funroll-loops                                                                                                                                       FCFLAGS    += -I${MKLROOT}/include -I${MKLROOT}/include/fftw                                                                                                                                    FCFLAGS    += -I$(ELPA_INC)/elpa -I$(ELPA_INC)/modules                                                                                                                                          FCFLAGS    += -I$(LIBINT_INC) -I$(LIBXC_INC) -I$(LIBXSMM_INC)                                                                                                                                                                                                                                                                                                                                   LDFLAGS     = $(FCFLAGS) -static-intel -static_mpi                                                                                                                                              LDFLAGS_C   = $(FCFLAGS) -static-intel -nofor_main                                                                                                                                                                                                                                                                                                                                              MKL_LIB     = ${MKLROOT}/lib/intel64                                                                                                                                                                                                                                                                                                                                                            #LIBS        = $(PLUMED_DEPENDENCIES) $(GSL_LIBRARY_DIR)/libgsl.a $(GSL_LIBRARY_DIR)/libgslcblas.a $(LIBPATH)/libz.a       LIBS       += $(ELPA_LIB)/libelpa.a LIBS       += $(LIBXC_LIB)/libxcf03.a $(LIBXC_LIB)/libxc.a LIBS       += $(LIBINT_LIB)/libint2.a LIBS       += $(LIBXSMM_LIB)/libxsmmf.a $(LIBXSMM_LIB)/libxsmm.a #LIBS       += $(SPGLIB_LIB)/libsymspg.a LIBS       += $(MKL_LIB)/libmkl_scalapack_lp64.a LIBS       += -Wl,--start-group LIBS       += $(MKL_LIB)/libmkl_intel_lp64.a LIBS       += ${MKL_LIB}/libmkl_sequential.a LIBS       += $(MKL_LIB)/libmkl_core.a LIBS       += ${MKL_LIB}/libmkl_blacs_intelmpi_lp64.a LIBS       += -Wl,--end-group LIBS       += $(GCC_LIBRARY_DIR)/libstdc++.a mp2_optimize_ri_basis.o: mp2_optimize_ri_basis.F $(FC) -c $(subst O2,O0,$(FCFLAGS)) $<
The arch file looks not good, now I attaching the arch file, see below.
Linux-x86-64-intel-host.popt.txt
Thank you and hope for your reply.
Hi your arch file looks fine. The only major difference to the Intel 19.4 regression test is the underlying gcc compiler version. It seems you are using 4.9.4 whereas the regression tester is based on gcc 7.4 (e.g. the libstdc++). What’s the output of “ldd cp2k.popt”? Can you try to compile cp2k with the minimal Intel arch file “Linux-x86-64-intel-minimal.popt” which does not need any extra library except MKL. Best Matthias From: Dylan Chen notifications@github.com Sent: Donnerstag, 12. März 2020 03:51 To: cp2k/cp2k cp2k@noreply.github.com Cc: Subscribed subscribed@noreply.github.com Subject: [cp2k/cp2k] Verion 7.1 can not run after compilation (#823) Hi, CP2K developers, sorry to bother you, Recently I compiled the CP2K version 7.1 use Intel compiler (version 19.0.4.243, which is tested by you). I compile the package successfully, and get the binary file "cp2k.popt" in ($CP2KHOME)/exe/Linux-x86-64-intel-host/ but when I run cp2k.popt, the program is not run. For an example, when I using command cp2k.popt --help The program should return the usage of CP2K, but I got nothing, and this command is not terminated. which kind of problem could I have? How can I solve it? Thanks a lot. All other packages is compiled with intel 2019.04. I do not install CP2K with SPGLIB, PLUMED2. System: Linux CentOS 7.4 Intel compiler version: 19.0.4.243 Libint version: 2.6.0 Libxc version: 4.3.4 Libxsmm version: 1.14 Elpa version: 2019.05.001 There is the arch file I used. (reversed version of "arch/Linux-x86-64-intel-regtest.popt" in your sourcce code, changing the directory of corresponding libraries and comment the useless linking command) # Tested with: Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 18.0.5.274 Build 20180823 # Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.3.199 Build 20190206 # Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.4.243 Build 20190416 # Intel MPI, MKL, Libint 2.6.0, Libxc 4.3.4, libxsmm 1.14, ELPA 2019.05.001, PLUMED 2.5.2, SPGLIB 1.12.2 # Author: Matthias Krack (matthias.krack@psi.ch<mailto:matthias.krack@psi.ch>, PSI, December 2019) CC = mpiicc FC = mpiifort LD = mpiifort AR = ar -r #include $(MPI_PATH)/plumed/2.5.2/lib/plumed/src/lib/Plumed.inc.static ELPA_VER = 2019.05.001 ELPA_INC = /opt/cp2k-7.1/other_packages_install/elpa/install/include/elpa-$(ELPA_VER) ELPA_LIB = /opt/cp2k-7.1/other_packages_install/elpa/install/lib LIBINT_INC = /opt/cp2k-7.1/other_packages_install/libint_cp2k/install/include LIBINT_LIB = /opt/cp2k-7.1/other_packages_install/libint_cp2k/install/lib LIBXC_INC = /opt/cp2k-7.1/other_packages_install/libxc/install/include LIBXC_LIB = /opt/cp2k-7.1/other_packages_install/libxc/install/lib LIBXSMM_INC = /opt/cp2k-7.1/other_packages_install/libxsmm/install/include LIBXSMM_LIB = /opt/cp2k-7.1/other_packages_install/libxsmm/install/lib GCC_LIBRARY_DIR = /opt/gcc494_set/GCC4.9.4/build/lib64 #SPGLIB_INC = $(INTEL_PATH)/spglib/1.12.2/include #SPGLIB_LIB = $(INTEL_PATH)/spglib/1.12.2/lib CFLAGS = -O2 -g -traceback -xHost DFLAGS = -D__ELPA -D__FFTW3 -D__LIBINT -D__LIBXC -D__LIBXSMM DFLAGS += -D__MKL -D__MPI_VERSION=3 # -D__PLUMED2 -D__SPGLIB DFLAGS += -D__parallel -D__SCALAPACK DFLAGS += -D__CHECK_DIAG FCFLAGS = $(CFLAGS) $(DFLAGS) FCFLAGS += -fpp -fp-model precise -free -funroll-loops FCFLAGS += -I${MKLROOT}/include -I${MKLROOT}/include/fftw FCFLAGS += -I$(ELPA_INC)/elpa -I$(ELPA_INC)/modules FCFLAGS += -I$(LIBINT_INC) -I$(LIBXC_INC) -I$(LIBXSMM_INC) LDFLAGS = $(FCFLAGS) -static-intel -static_mpi LDFLAGS_C = $(FCFLAGS) -static-intel -nofor_main MKL_LIB = ${MKLROOT}/lib/intel64 #LIBS = $(PLUMED_DEPENDENCIES) $(GSL_LIBRARY_DIR)/libgsl.a $(GSL_LIBRARY_DIR)/libgslcblas.a $(LIBPATH)/libz.a LIBS += $(ELPA_LIB)/libelpa.a LIBS += $(LIBXC_LIB)/libxcf03.a $(LIBXC_LIB)/libxc.a LIBS += $(LIBINT_LIB)/libint2.a LIBS += $(LIBXSMM_LIB)/libxsmmf.a $(LIBXSMM_LIB)/libxsmm.a #LIBS += $(SPGLIB_LIB)/libsymspg.a LIBS += $(MKL_LIB)/libmkl_scalapack_lp64.a LIBS += -Wl,--start-group LIBS += $(MKL_LIB)/libmkl_intel_lp64.a LIBS += ${MKL_LIB}/libmkl_sequential.a LIBS += $(MKL_LIB)/libmkl_core.a LIBS += ${MKL_LIB}/libmkl_blacs_intelmpi_lp64.a LIBS += -Wl,--end-group LIBS += $(GCC_LIBRARY_DIR)/libstdc++.a Required due to memory leak that occurs if high optimisations are used mp2_optimize_ri_basis.o: mp2_optimize_ri_basis.F $(FC) -c $(subst O2,O0,$(FCFLAGS)) $< Thank you and hope for your reply. — You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub<#823>, or unsubscribehttps://github.com/notifications/unsubscribe-auth/ACN625OTIMDBY3KNVAKLP43RHBEYDANCNFSM4LGC4DGQ.
Hi, Matthias, thanks for your reply. Based on your suggestions I have some tests.
First of all, the output of "ldd cp2k.popt" is
linux-vdso.so.1 =>  (0x00007fffda7e2000)
libdl.so.2 => /lib64/libdl.so.2 (0x00002ad95b1d4000)
librt.so.1 => /lib64/librt.so.1 (0x00002ad95b3d8000)
libpthread.so.0 => /lib64/libpthread.so.0 (0x00002ad95b5e0000)
libfabric.so.1 => /opt/intel2019/install/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/lib/libfabric.so.1 (0x00002ad95b7fd000)
libm.so.6 => /lib64/libm.so.6 (0x00002ad95ba35000)
libc.so.6 => /lib64/libc.so.6 (0x00002ad95bd37000)
/lib64/ld-linux-x86-64.so.2 (0x0000557d1648d000)
libgcc_s.so.1 => /opt/anaconda/anaconda3/lib/libgcc_s.so.1 (0x00002ad95c0fb000)
Then I tried compiling CP2K with the minimal Intel arch file, CP2K works well.
So I think the question is caused by external packages. I tried to add the external packages one by one. At first I add gcc library(version 4.9.4) and ELPA, it works well. Then gcc lib & ELPA & Libint, works well. Then gcc lib & ELPA & Libint & Libxc, works well. Finally I find that when I add gcc lib & ELPA & Libint & Libxc & LIBXSMM, the CP2K cannot run.
But interestingly, if I only add gcc lib & Libxsmm (with out libint, elpa, libxc), CP2K could work. So maybe the version of gcc library is not a big problem.
Now I will not use libxsmm to compile CP2K. Maybe there are some conficts between libxsmm and gcc lib/ELPA/libint/libxc.
Thanks a lot for replying. It helps me a lot.
Best wishes,
Dylan.
The libgcc_s.so is loaded from an anaconda installation path
and not from a typical gcc installation path. I would make sure that all libs and cp2k itself are built in a consistent environment.
The libgcc_s.so is loaded from an anaconda installation path
and not from a typical gcc installation path. I would make sure that all libs and cp2k itself are built in a consistent environment.
Hi Matthias,
Thanks for giving suggestions to me. libgcc_s.so is not changing the result. I have changed the libgcc_s.so to gcc-4.9.4, consisting with cp2k arch file.
But CP2K still not work. Other all libs look like also consisting with the cp2k arch file.
Hello Dylan, as you mentioned LIBXSMM as potential source of the issue - can you send your binary (cp2k.popt) using some sort of transfer-service or try attaching it to this issue. I think the binary is too large as an e-mail attachment. For the e-mail/transfer, you can use forname.surename @ intel . com (of course replace the name parts and remove the spaces).
The github issues are for CP2K developments. For the questions about the CP2K installation, please report them on the CP2K google forum (https://groups.google.com/forum/?hl=it#!forum/cp2k). Closing the issue here.
