test_func_infer.py:
test_mod.py:
I don't think that should go into 3.5. It's not a bug but an artefact of how imported names are represented (they're basically just locals), and it's not trivial to change.
Ok. But can you explain (3) to me?
It's the same as (2). The compiler can see that the two functions are one and same, and types inferenced for the local name propagate to the non-local name.
And the take home message is that the compiler is unable to infer stuff about attributes of modules?
Do we fix it for 4.0?
And the take home message is that the compiler is unable to infer stuff about attributes of modules?
Only that global type inference interacts badly with the polymorphic integer literals, and these two need hacks to work together.
Do we fix it for 4.0?
We should.
I suggest focusing 4.0 on supporting the new hardware - there are enough issues with it already and this compiler change doesn't seem simple. Let's move it to 5.0?
