It seems like certain methods -- specifically density_matrix and superop -- work by calculating statevectors and then measuring them even for noisy circuits. If so, it would be cool if we could access those instead of the actual measurements -- it may be unphysical, but it's much more efficient for things like time evolution where I'd like to be able to pick up where the last time step left off.
(Unless this is already implemented somewhere I couldn't find, in which case I'd change the type to bug/documentation, heh.)
For future readers: indeed, it is sort of implemented already; it seems that some of this information (raw amplitude data rather than measurements) is available under save_state().
Could you give more explanation about your requirements?
Aer provides densitymatrix method. With this method, measurements are simulated with a density matrix. Also, Aer returns a density matrix to python with save instruction. I'm wondering these features satisfy your requirement.
Yes, I believe they do; I just couldn't find them because I was expecting to see them under the output methods. save_density_matrix does what I want, I believe.
So, yes, updating this to a documentation issue, I think!
