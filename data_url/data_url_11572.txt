When solving a quadratic program using a MinimumEigenOptimizer, the user has access to the samples of the algorithm via the samples property of the returned MinimumEigenOptimizationResult object. However, in case a quadratic program converter has been applied to the quadratic program, these refer to the samples of the converted problem and are never interpreted back to the original problem setting. Currently, the only way to obtain interpreted samples from the available samples object, is to create a new OptimizationResult object for each sample and use the converters of the MinimumEigenOptimizer object to interpret them.
Since the base class OptimizationAlgorithm does not have a samples object, possible workarounds could be adding a samples property to OptimizationAlgorithm and providing some default for results that are not of type MinimumEigenOptimizationResult, or checking for class membership of MinimumEigenOptimizationResult inside QuadraticProgram.interpret and interpreting the samples accordingly if the result is in fact of type MinimumEigenOptimizationResult.
