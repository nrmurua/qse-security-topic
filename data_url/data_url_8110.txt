I am having some trouble with the function mesolve. The situation is the following: I have a collection of Hamiltonians and Jump Operators which includes 69 timesteps each, and I want to evolve a initial state to each of this timesteps. However, Qutip is returning "Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.". I tryied to change nsteps parameter but it just doesnt work for any value of it, no matter how big the number is.
H= Hamiltonian, shape: 69,2,2
list_Jump-op= Jump operators, shape:69,2,2
time= timesteps, shape (69,)
estados_val= the different states that I want to evolve on this dynamics, shape( 6,69,2,2) . Note that I am only taking the 0th element on the axis with lenght of 69
predictions=[mesolve(H,
Qobj(estados_val[i][0]),
time,list_Jump_op,options=Options(nsteps=10000000000000000)) for i in range(len(estados_val))]
Exception                                 Traceback (most recent call last)
 in 
40
41 la=10000000000000000
---> 42 predictions=[mesolve(H,
43         Qobj(estados_val[i][0]),
44         time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]
 in (.0)
40
41 la=10000000000000000
---> 42 predictions=[mesolve(H,
43         Qobj(estados_val[i][0]),
44         time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]
~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode)
270         func(0., v, *ode_args) + v
271
--> 272     res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,
273                              progress_bar, dims=rho0.dims)
274     res.num_collapse = len(c_ops)
~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims)
515
516         if not r.successful():
--> 517             raise Exception("ODE integration error: Try to increase "
518                             "the allowed number of substeps by increasing "
519                             "the nsteps parameter in the Options class.")
Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.
Expected behavior
The time evolution of the 0th states
This is it. Am I doing something wrong with it ?
Yes, this error always comes up when doing something wrong. However, in order to understand what that is, we need to see the actual system being solved.
Which additional information do you need ?
@andriusdc The easiest would be if you supplied a short snippet of Python code that when runs, reproduces this error.
@andriusdc If you are having trouble formatting the code nicely, I suggest reading the GitHub markdown guide -- https://guides.github.com/features/mastering-markdown/.
I made a snipped with dummy arrays that reproduce the error. Is it enough?
This fails because time only contain 0.5.
You probably meant time.append(0.5*i).
The error message is a catch-all for failure in scipy solver and certainly not clear.
@Ericgig Could we check whether tlist is monotonic when _safe_mode is true? It might make the error clearer.
Yes, we should catch any error before the ode solver when we can,
Here is the actual time array:
Hello friends. Any news on that issue ? Is it something coming from Scipy ?
Is the last time a typo? It would work with 10. but going from 7.5 to 1000 is too much work for one step.
If you want the state after the evolution stabilized, you should look at steadystate.
Actualy is a arbitrary large number to simulate the system going through total decoherence. Maybe this was cause of the crash ?
Very probably.  The integrator doesn't know what you're trying to achieve, and you've set it exact tolerance limits (either implicitly or explicitly), so it has to integrate within those limits.  If you want the steady-state solution, you can try qutip.steadystate instead.
I think this issue was fully explained, so closing for now, but please reply if something further is needed.
