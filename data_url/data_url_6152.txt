Certain circuits that I checked returned incorrect results. This does not look like a result of approximation but like a real bug.
The result that I get is around 1/2 00 and 1/2 11.
When I increase the number of qubits, I get all kinds of probability distributions, including positive probabilities to measurement results that are not 0..0 or 1...1.
The correct result is 0.5 + sqrt(2)/4 for 0...0 and 0.5 - sqrt(2)/4 for 1...1.
The state vector simulator and MPS simulator return the correct result.
@padraic-padraic   could you please look, thanks
@padraic-padraic Do you have any insight into what is happen here?
I’ll take a look!
I have some ideas on why this isn’t working, I’ll start on a fix tonight.
Hi all,
So as I suspected and as the commenter pointed out, this isn’t a result of the approximation but is again a deficiency of the Monte Carlo method we do to take samples from the output distribution.
This method simply doesn’t perform well for sparse distributions as the walk is initialised with a random string, and so in this instance it is occasionally not converging to one of the two non-0 probability amplitudes as the number of qubits increases. I’ll add some checks to make sure it’s not returning a sample with zero amplitude.
I will also introduce code for the norm estimation method, as an alternative sampling strategy . Unfortunately this method has an O(n^6) runtime for sampling full ‘n’ bit strings, but will always give more accurate results than random walk in these cases.
Any updates to this @padraic-padraic?
Apologies, thesis and other things got in the way. I have the fix I described implemented, just needs some further testing and to be brought up to date with your ongoing work. I’ll try to open a PR this weekend.
I also ran into this problem for large number of qubits (>15). Is there any update on on the fix?
Additionally I was wondering if we could set "extended_stabilizer_measure_sampling" to True by default. Doing this did not seem to create obvious wrong results for me, and it would give a huge speedup (given the default number of shots is 1024).
Update on this: Happy to report that using the Norm Estimation method all tests pass for the extended stabilizer simulator. There is however a significant impact on the runtime and memory footprint, meaning default paramters have to be chosen carefully.
I will open an PR with some details and request a review.
I also ran into this problem for large number of qubits (>15). Is there any update on on the fix?
Additionally I was wondering if we could set "extended_stabilizer_measure_sampling" to True by default. Doing this did not seem to create obvious wrong results for me, and it would give a huge speedup (given the default number of shots is 1024).
The main reason we set extended_stabilizer_measure_sampling to False by default is related to the origin of this bug, namely that the metropolis method assumes implicitly that there is a non-zero amplitude on all bitstrings in the output distribution. In testing, some circuits in the standard Terra test suite gave wrong results with measuring sampling enabled.
Hi @padraic-padraic, that's great. Looking forward to the PR.
Closed by #677
