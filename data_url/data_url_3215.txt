With the latest update to pyQuil, it seems that the CompilerConnection object has been replaced by QVMCompiler, QPUCompiler, etc. It'd be helpful to update the migration guide to include how to refactor programs accordingly.
The idiomatic thing to do is use qc.compile() to turn a program into a binary executable. This will work whether qc is backed by a qvm or a qpu.
For more control, use qc.compiler.quil_to_native_quil and qc.compiler.native_quil_to_executable. xref #565
also see part three of #575
There's no part of #575 that's written from the precise perspective of 'I used to have a script that just compiled things; what do I do now?', but I'm not sure that needs to be there. The migration described in part 3 does cover this from the perspective of running programs, and a user interested specifically in compilation could just stop reading before the guide actually makes it to execution.
@davecyen or interested observers: can you provide an example script or use case? bonus points if it isn't addressed by the section in #575
