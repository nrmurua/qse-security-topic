Suppose I have created a Qureg on some N qubits.
I entangle every qubit with a cz gate.
Then I  do measure(qureg,0) for my 0th qubit. The resulting quantum state is affected and I have N-1 qubits.
Could I add another new qubit to my register and then entangle it, giving me once again N qubits?
Hi @fieldofnodes!
I'm not sure I'm following your argument. By measuring a single qubit, you collapse your quantum state into one of the possible outcomes, but the qubit is still there. It's just definitely 0 or 1, depending on what you measured. The register still contains N qubits, but half of the amplitudes will be zero. You can re-use the qubit you just measured as you would any other. If you meant something different, please clarify.
Cheers!
Richard
Hi Richard,
Thank you for your response.
If you watch this video at the links time stamp: https://youtu.be/zBjAoOW3xHk?t=960
I am not sure what your state of knowledge for MBQC is (not that I am an expert) -here is my library I am working on:
https://github.com/ediparquantum/MBQC
I want to create a way that I can simulate an endless supply of qubits for a 2D cluster state, as is described in the video.
Say I have a 3x7 lattice (assume in a rectangle of 3 rows and 7 columns) and I have measured columns 1,2 and 3. I want to copy the current unmeasured qureg and paste at say columns 8,9 and 10 more qubits.  This will give me a lattice that is 3x7 of unmeasured qubits. Since MBQC is one way I have transported the entangled state over to columns 4,5,6 and 7. Then I add more CZ gates to the new qubits and keep measuring.
Does this make sense?
Thanks,
Jon
Hi Jon,
if I understand correctly, this is just an indexing problem. You measure columns 1, 2, and 3. They are now in a definite state and no longer entangled. You can use the measurement outcomes to apply an X gate (or not), to return the state of the qubit to |0> (or whatever initial state you need). Now you want to remove columns 1, 2, and 3, but add columns 8, 9, and 10. Since there are already unused, initialised qubits in your state, this is just a renaming of 1 -> 8, 2 -> 9, and 3 -> 10.
There is not really anything at the QuEST level to take care of this, qubits always start at index 0. You have to manage this in your user code.
Hope it helps,
Richard
This makes sense; it's a re-mapping of used qubits. But what if I want to increase my qureg size?
Say I start with 10 qubits, then in a feed-forward fashion I later wish to 20 qubits. Is there a tensor product type function that QuEST uses?
Cheers,
Jon
I'm afraid QuEST does not offer anything like that. You will have to create a new, larger register and manually copy (and possibly manipulate) your amplitudes over to the appropriate indices in the new register.
Ok, that makes sense, that is what I was thinking from the code. For now, I think remapping qubits to be re-used will do.
