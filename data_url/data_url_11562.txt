When we set SPSA class as an optimizer of VQE instance, this implicitly sets set_max_evals_grouped=1. This is not mentioned in the class docstring and we cannot find this without scrutinizing its superclass Optimize. Because SPSA evaluates plus and minus in each iteration, this doubles the number of job to submit.
https://github.com/Qiskit/qiskit-aqua/blob/b45f952e342398156e9ed61a2126a85b4d55effd/qiskit/aqua/components/optimizers/spsa.py#L184-L188
This job separation is basically unnecessary and there is no class or init docstring referring to this behavior. This should be mentioned or set default to 2.
The objective function would normally take a single point (list of floats). Normally an optimizer will evaluate the landscape point by point, which may be a set of very local points to do a gradient.
Now if an optimizer did a gradient say with finite diff then we wanted to allow (some of) these to be grouped together. This allows them to be packed into a single job, and/or run in parallel potentially locally. So when max_evals_grouped is set, if an optimizer supports that, it can call the objective function not just with a single point, but a list of points.
To control this set max_evals_grouped on VQE as per here https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQE.html which will propagate to the optimizer. So if you want to have the plus and minus grouped then set this on VQE (or whatever other variational algo supports similar).
This was answered above, where the algorithms that use SPSA give flexibility to control the behavior, so I am closing this. If you feel there still is some problem then please feel free to re-open in order it can be addressed.
