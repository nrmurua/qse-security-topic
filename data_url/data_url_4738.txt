Expected behavior: Calling reduced_dm with a list of modes with length longer than one should give an output with the correct shape (e.g., for a system with three modes, using modes=[0,1] should return a density matrix with shape (D, D, D, D), where D is the cutoff dimension)
Actual behavior: The output tensors do not have the correct shape, they are missing required axes, or become scalars. I have diagnosed the bug to the following lines in tfbackend/states.py:
The function reduced_density_matrix, according to its docstring, traces out all modes except m. Thus, the loop above always produces a density matrix of shape (D, D) after its first iteration. This is not how one produces reduced density matrices when more than two subsystems are kept
Reproduces how often: occurs when using the TF backend and more than 2 modes, but not the Fock backend
System information:
Minimal (non)working example:
Was this closed here #471 @thisac ?
@nquesada Yes, this should've been closed by #471. Thanks for spotting it!
