Using our execution code introduces a lot of overhead when using qiskit simulator. This can be seen as a large factor increase in runtime, such as 3.5x slower compared to using qiskit.execute(). I believe a lot of this is due to this sleep functionality in the qiskit execute file needed when running on hardware:


A potential solution is to avoid this sleeping when the module detects that we are using the simulator. However, we don't want to break this functionality while we are working on finishing phase 1 of the project, so we can defer this issue until later.
Another factor to consider ... the impact of this is only felt when repeatedly executing the smaller circuits. For larger circuits, the execution time itself overshadows the delay associated with the 'sleep' approach to checking completion.
One concern was introducing version dependencies related to asynch operations in Python.  This may not be an issue, but the intention was to minimize issues related to execution on various environments, especially in early stage of development of these benchmark programs.
Nonetheless, this should be evaluated and the sleep approach modified at some point.
