A github workflow run is not installing the latest versions of the packages if the dependency requirements are not strictly pinned. See this comment for more info.
This project does not use Caches in Github Actions. https://github.com/vprusso/toqito/actions/caches
But there is a cache somewhere. Maybe related to how poetry resolves dependencies because the same issue was observed in a local virtual environment?
https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#managing-caches
https://stackoverflow.com/questions/63521430/clear-cache-in-github-actions
Dependency graph? https://github.com/vprusso/toqito/network/dependencies
Might be related to #216 (or a duplicate). Newer packages were not installed in the linked PR of this issue.
Similar problem with another package.
https://github.com/vprusso/toqito/actions/runs/6800955618/job/18490701348#step:4:174
This is probably because caret version for versioning syntax will not move to a newer version (say version 1 to version 2) but will allow changes from version 1 to version 1.1, 1.2 etc.
Fixing this issue will be equivalent to using an appropriate versioning syntax.

https://stackoverflow.com/a/54720073/10241324
It might be a better idea to instead use exact versions in pyproject.toml. Then use/allow dependabot to create PRs when a new version of a package is released. This way, the bot's PR would give us a better idea of any CI failures due to newer versions of dependencies. Keeping the versions open-ended could cause installation issues. @vprusso What do you think of this solution?
