Currently, the ZZFeatureMap class inherits from PauliFeatureMap but the parameter_prefix cannot be set in the constructor.
https://github.com/Qiskit/qiskit-terra/blob/fe5acd4d15355a566a32ee63fb4a50771e5994d4/qiskit/circuit/library/data_preparation/zz_feature_map.py#L60-L68
Thus, when one wants to include more than one ZZFeatureMaps per quantum circuit, one needs to rebind the parameters by doing:
Circuits with multiple feature maps are often used when employing data reuploading. If parameter_prefix would be exposed to ZZFeatureMap, the user could just initialise the different feature maps with distinct parameter prefixes and append them to the larger circuit without having to define/rebind additional parameter vectors.  Furthermore, parameter_prefix is already exposed to other forms such as TwoLocal, so by adding this feature, the code would become more consistent.
This seems very sensible to me.  Ideally it should take all the same arguments as PauliFeatureMap, since it's really a very thin wrapper around it.  Honestly, I'm not 100% sure why this exists as a class at all, and isn't just a loose function, but now that it exists, it's probably best to leave it as-is.
I guess we had these as separate classes in Aqua and when they came over to the circuit library they were preserved in a parallel structure. We had the Z and ZZ feature maps as these seemed most used, so they were more convenience, but the base class provided the ability to do more. Since its possible to use the base PauliFeatureMap class/circuit here directly, and provide your own parameter customization, one could also argue to keep these simpler. But if its decided to alter ZZFeatureMap to expose such a capability then I guess it should be replicated in the ZFeatureMap too.
