Given a Hermitian matrix H and a time t,
At the moment the only possibility is via qc.unitary((t*MatrixOp(H)).exp_i(),q), but this approach would kill the quantum advantage achieved by algorithms that run in polylog(N), where H is an NxN matrix.
This enhancement is required for the HHL refactoring.
References
[1] Detailed explanation of the method: https://arxiv.org/pdf/quant-ph/0209131.pdf
[2] An implementation of Step 1. from Qiskit Camp Asia 2019: https://github.com/martian17/qiskit-graph-coloring-hamiltonian
Hi @anedumla,
are you working on it? If not, I would like to.
@molar-volume I think you can go ahead and give it a try, but maybe you want to sync with @anedumla before diving into the implementation since this seems to be a little more involved. This enhancement should probably also go into the HamiltonianGate in qiskit-terra (which is also called by MatrixOp.exp_i)
@Cryoris I should probably reimplement HamiltonianGate.to_matrix() in qiskit-terra using the algorithm that @anedumla suggested? Currently it is done via scipy.linalg.expm.
on hold until qiskit-community/qiskit-aqua#1269 is resolved
