QAOA applied to the linear equation: minimize obj(x1 + x2+ x3 + ..x20) returns wrong result: 2
minimum value must be 0, and the solution 00000000000000000000
I replaced the problem in QAOA example https://qiskit.org/textbook/ch-applications/qaoa.html and the result looks good.
n     = 20
V     = np.arange(0,n,1)
E     =[]
QAOA-algorithm.ipynb.zip
QAOA-bug.ipynb.zip
This is related to : #1434
In the above notebook just changing from SLSQP() to COBYLA(), I got the correct results.
Thank you for the hint @manoelmarques !
I have 3 tests for the same scenario in 3 projects. The test I created in qiskit-aqua worked with COBYLA.
Using
I get a solution sample containing multiple values and value 0.

Using
BasicAer.get_backend('qasm_simulator')

In the Jupyter Notebook the solution is not found in the samples at all. It returns a huge amount of samples, but not the right one even if I choose COBYLA.

The same issue into the third project:

Any idea why?
@manoelmarques  when I set the initial point, as you said in email, I didn't get the random result anymore and the result is correct so far.
Thank you!
Closing as solved according to above discussion.
