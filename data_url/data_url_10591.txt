The dwave.system.testing module requires dwave-tabu, see 
This is probably an over-large dependency for a testing module. We should consider other options. To throw out an idea:
See also #282
One downside to dimod.SimulatedAnealingSampler is that is is tentatively scheduled for deprecation, see dwavesystems/dimod#298.
On closer inspection, I'm not sure MockLeapHybridSolver should live in dwave.system.testing. It's not a dimod.Sampler, but rather a dwave.cloud.Solver.
If this class is a one-off for use in the unitttest, I would just include it there. If we want to make a mock hybrid solver accessible across Ocean, probably a better place to include it would be dwave.cloud.testing.
@randomir, excellent point.
I used tabu because of its timeout parameter thinking that some use cases might benefit from having the ability to play with longer/shorter runs. Don't believe I've used that until now though.
I am still in favor of migrating this to the cloud client. In terms of which solver it uses on the backend, I think it should be dimod's RandomSampler. Though since one can implement a random sampler with SampleSet.from_samples_bqm(np.random.randint(low=0, high=2, size=(num_samples, len(bqm)), bqm) I am not sure that the cloud client needs to use dimod's if we want to avoid that dependency.
@randomir also pointed out off-line that we should give the user the ability to use another dimod sampler in place if they wish.
Well, we removed the dependency on dwave-tabu, but now we rely on dwave-samplers (see #484). I think the original intent still stands, so I'll leave this issue open for now.
