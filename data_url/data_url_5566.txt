When running noisy simulations both basis gates and coupling map are important so that a circuit is transpiled in terms of the noisy gates for a hardware. It would be good to add an option to provide a coupling_map in NoiseModel, and then when setting the noise_model option for the simulator it could look for coupling map in noise model using same method it does for basis gates.
If a noisy simulator is initialized via
the noise model, basis gates, and coupling map are both pulled from the backend. However if one is initialized as
then the basis gates are obtained from the noise model, but the coupling map must be supplied separately.
This is particularly important for uses of the IBM Provider simulator, which is an instance of Aer but is not as easy to configure. And IBM provider user cannot do simulator.from_backend to get a fake backend, but must instead do something like
where ideally they should just be able to do:
A related question if we add this is if the NoiseModel should build a coupling map automatically based on the 2Q gates in the model. ie if there is an all-qubit 2Q error the coupling map should be None, otherwise it should be only the directional pairs of 2Q basis gates in the noise model.
Yeah I think building this into NoiseModel makes a ton of sense, and especially autogenerating it from the 2q gates in the model object. That will pair nicely with #1681 because the coupling map object in a BackendV2 is generated based on the target which just has a list of the supported instructions in the backend. So when initializing a Target  for a simulator backend with a noise model there isn't any extra work we'll need to do.
I understand users don't want to pass backend multiple times. But I'm not sure having coupling_map in NoiseModel (just for passing it to AerSimulator) is the best way to avoid that. I'm wondering if we could think of a better way.
AFAIK, AerSimulator.from_backend(backend) does two things:
Just an idea, but how about having simulator.set_options(backend_target=backend) and doing the above things within set_options? (or dedicated function like simulator.set_options_from_backend(backend)?)
What do you think? @chriseclectic @mtreinish
Anyway, I agree we need to sync with #1681.
