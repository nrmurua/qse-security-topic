IonQ has recently developed a quantum error mitigation strategy. There is currently no open-source implementation available. Their paper calls it symmetrization and their online documentation calls it debiasing and sharpening:
Debiasing is a compiler-level error mitigation strategy that works by creating and running many symmetric variations of a given circuit, and then cleverly aggregating the measured outcomes to mitigate noise and improve the performance of quantum computers without incurring any additional qubit or gate overhead. We call this process sharpening.
Sharpening over the symmetrization variants while debiasing reduces the overall impact of stochastic noise on the computed result â€” the deterministic inaccuracies largely cancel out while random noise does not get amplified. This approach effectively mitigates the impact of hardware control errors and qubit decoherence, which are major sources of imperfection in modern quantum technologies. By minimizing the impact of these imperfections, debiasing enables quantum computers to produce results at a much higher level of accuracy.
Implement debiasing/symmetrization and sharpening in Mitiq.
Arxiv paper: https://arxiv.org/abs/2301.07233
Hello @schance995, thank you for your interest in Mitiq!
If this is a bug report, please provide screenshots and/or minimum viable code to reproduce your issue, so we can do our best to help get it fixed. If you have any questions in the meantime, you can also ask us on the Unitary Fund Discord.
Thanks @schance995 ! Looks like an interesting technique especially since it doesn't look too complicated to implement in practice and it fits with the standard Mitiq workflow: compile to different circuits + execute + postprocess.
Thanks for your suggestion!
Is anybody working on this at the moment?
