As far as I understand, a c_if should work on a classical register of arbitrary size. However, a test I performed seems to indicate that
I also noticed that if I run the QASM simulator using BasicAer, c_if works as it should in all the three cases mentioned above.
Here is the test code that I ran
Here is the result I get after running the above code
When I have a classical register with 72 bits, the leftmost bit is set to 0, while it should be 1.
Given that the code fails at 64-bits (crashes at n=64, fails for n>64), I would naively think that the code is not handling big integers (bigger than the system word size) well.
Hello, I was also able to replicate the problem you were having on my Linux machine. The bug also resulted in a crash for register sizes that are multiples of 32 greater than 64 (like 96).
The problem seems to be a combination of a typo in hex2bin and leading zeros in the masked register value when comparing it the target conditional value in apply_bfunc.
I will submit a PR. Please let me know if I should add/change anything.
Thanks
Thanks for the PR @b63. Most of the team has been on vacation over christmas / new years, but we will try and review it soon
