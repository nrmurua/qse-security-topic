For our slower (cirq_ops) ops where we have the potential of going through to engineSampler in Cirq we might have to drastically change certain execution parameters. For example things like:
Need to be defined at the global level. To implement this we should implement a context module in the python directory that allows you to set these parameters globally in a thread safe fashion. We can take pretty closely after this: https://github.com/tensorflow/tensorflow/blob/v2.1.0/tensorflow/python/eager/context.py
Implementing this should roughly involve:
This issue has not had any activity in a month. Is it stale ?
See the discussion here
For further clarification of my questions under #188 , it seems that the goals listed can all be achieved without adding a global state:
I agree that all the things you have listed can be implemented without global state. Thinking more about this, I think the real thing we need to have is a convenient way for users to lock down inter and intra op parallelism in order to not drown the engine service (and also memory in the case of larger simulations). Running on a true chip is a very serial thing and hitting a serial service with huge amounts of parallelism can (and has) lead to big problems. TFQ has already crashed engine a few times now.
Unfortunately modifying / managing / controlling graph level parallelization behaviors in order to save on memory or engine query budget from within a single op just isn't possible in TF, so at the very least we do need something at graph level or higher (basically global at this point) to lock parallelization for us.
You can see this feature here (which is configurable through python) in existing TF (https://github.com/tensorflow/tensorflow/blob/26b4dfa65d360f2793ad75083c797d57f8661b93/tensorflow/core/protobuf/config.proto#L165). By adding quantum_context I'm hoping we can allow users to have this same kind of control over the quantum only ops that at the same time won't affect existing tf ops.
This has now been implemented. More properties and configurations to be added.
