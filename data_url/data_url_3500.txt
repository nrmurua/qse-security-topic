Hello,
I don't want to run a quantum program on the real 8Q-Agave QPU. I just need to compile a quantum program considering 8Q-Agave architecture (connectivity, native-gate set). How can I do that using PyQuil2.0?
Hi, @ashsaki. I don't know off the top of my head what the topology of 8Q-Agave was. Nevertheless, pyQuil gives you the tools specify your own chip topology. Check out the function _get_qvm_with_topology() which allows you to specify qubit connectivity with a graph.
The above will use the default gateset for Rigetti QPUs (CZ and Xhalves). If you're feeling adventurous, you can specify your own instruction set architecture (ISA). See the function isa_from_graph().
I'm going to close this as it is not a bug report or feature request. Feel free to drop by our slack to chat more.
Agave had a ring topology. It looks like its ISA entry is no longer in the Forest database. You can at least build a device with the correct topology (but without the noise characteristics...) by following notmgsk's advice / using the following snippet:
