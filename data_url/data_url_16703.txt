When using BaseOperator or QuantumState derived classes, you can read atol and rtol values using those names in an instance of a class, but not in the class:
To set these values you need to call set_atol or set_rtol class methods. It can be misleading and it is easy to mistakenly do ScalarOp.atol = 3e-4 or so.atol = 3e-4, which will create a new var atol or rtol instead of changing the private class attributes, overriding the restrictions imposed on set_atol and set_rtol.
Besides, due to the way python class attributes are handled, you can manipulate a derived class attributes through base class, until you modify the value through the derived class:
I propose to set and get atol and rtol class members through property style attributes using a metaclass, to avoid the misleading behaviours shown above, and get the following behaviour:
