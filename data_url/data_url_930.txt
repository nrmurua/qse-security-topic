Floquet calibration is a notebook that was designed to use the currently offline QCS to demonstrate how to calibrate a circuit to compensate for the errors that would arise by running it on a (QCS) device.
Without supplying QCS credentials, the notebook defaults to using a 
The notebook later fails because SimulatedLocalProcessor's run_calibration_async function is NotImplemented: 
For reference,  EngineProcessor has an implementation:

It would be useful to be able to run calibrations on simulated engines, for the sake of:
Specifically, let's implement cirq_google.simulated_local_processor.SimulatedLocalProcessor.run_calibration_async  to have the same effective functionality as cirq_google.engine_processor.EngineProcessor.run_calibration_async. It should be able to handle the same input and produce the same output, with the caveat that any circuit executions are instead performed by the simulated processor.
I'm not sure what the scope of this request is, since SimulatedLocalProcessor and EngineProcessor seem to be relatively parallel constructs, and there seems to be a decent amount of complexity in handling protobuf'd requests.
Tentative priority: P2?
@dstrain115 @tanujkhattar
