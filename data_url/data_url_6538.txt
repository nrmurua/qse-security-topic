Identified in #292. Repeated simulation of a circuit is often necessary when that circuit has non-unitary intermediate gates, whether those gates represent measurements or noise. Currently, qsimcirq has no special handling for this behavior; each simulation is entirely ignorant of previous simulations.
By either preserving information in qsimcirq objects (QSimSimulator and QSimCircuit) or providing alternate interfaces for repeated execution, we can reduce the overhead from things like Cirq-to-qsim circuit translation.
I'm bringing this to the Cirq design sync for discussion - a new interface would provide the most benefit here, but it would also require the most effort, both in development and long-term maintenance.
Discussion from Cirq meeting: QSimSimulator should be initialized with some kind of "fidelity" or "repetitions" parameter, which then dictates how many repetitions it uses for noisy simulations (both for expectation values and full state vector). This only requires qsimcirq changes, which should keep things simple.
The general consensus was that the existing "simulate_expectation_values" API already expresses a request for exact (or at least approximate) expectation values, so returning results from a single trajectory (i.e. the current behavior) isn't well-aligned with the API intent.
To consider: how should qsim_sample (returns measurement results) interact with the "repetitions" parameter? I don't see a good way to aggregate across different trajectories - should we treat "sample from noisy circuit" as an invalid request?
