Currently it is not possible to check if a circuit, together with an initial_layout, satisfy a given backend topology without going to DAG [we internally use CheckMap that is a transpiler pass].  For example, you may want to compile to a generic topology (as mentioned in #1828 and #1837) and then simply map to a physical realization of this topology via passing an initial_layout to execute.  This should not require building a DAG, and the qubits should just be mapped to their physical values, and directly converted to a qobj.
Is this something still relevant? It seems like it is outdated from our current view of terra. Can it be closed?
Closing as stale now.  While the actual operation requested is technically possible without going to a DAG, it doesn't fit into the compilation tooling architecture of Terra.  Supporting it would mean a more confused internal architecture, which would hurt us in maintainability in the long term; when we're writing a general-purpose compiler, there's always going to be some operations that could be performed quicker by special-case tooling, but it's not maintainable for us to have Qiskit try and satisfy every access pattern.
