Should be able to do:
and have it add x gates where the bit values are one.
@nonhermitian, I've been playing around with this and came up with this so far,
or
One question is, if the number of bits in the integer exceeds the num_qubits, should we raise or just strip the leading bits off and use num_qubits bits?
You can already to something pretty much like that using the Statevector.from_int classmethod. Right now you'd have to do
but I think if we simplify this marginally we could have
This would require to (1) allow passing Statevectors into initialize, already in progress in #5190, and (2) to omit the dims argument in from_int.
With that I don't think initialize(int) would still be needed.
Statecector method is horribly inefficient as it literally puts a big array into the circuit. For example, try to init from the int 60000.
What is done here is good. I would raise if not enough qubits in circuit.
My feeling is that since we already implemented a more efficient from_label in instruction, it makes sense to complete that with a more efficient from_int. initialize(60000) is less than a second on my machine.
I'll go ahead and add the raise and submit a PR and if there's more discussion we can do it there.
I should clarify my comment. Try transpiling a circuit with an init using Statevector.from_int verses just a collection of X gates.  Or try printing out the qasm.
