Bug occurs with tensorflow backend. It arises in the following program:
The output from N0 and N1 should be equal to sinh(0.8)**2.
Output gives a numeric value of 0.8611656.
Depends on the cutoff_dim. Below 47, it seems to give an approximately correct result. Above 47, the result deviates from expected answer. The result becomes worse for larger cutoff dimensions. Note also that the "Fock" backend gives the correct result even for large cutoff dimensions. This seems to be an issue with the tensorflow backend.
Thanks for the report @ccortes888 . A possible explanation is that the float32 type being used by tf is not enough to give a numerically correct calculation for the cutoff that you are using.
Thanks @nquesada. Would it be possible to change type to float64?
You could change this line 
I tested it and you do get the correct result. Not surprisingly you also get a massive spike in memory usage.
Just tested it. Works for me too. Thanks Nicolas!
@nquesada @josh146 Should we consider making this a user-adjustable setting, e.g., when instantiating the engine?
It does sound like a useful addition.
Agree
Done.
@ccortes888 if you might like to contribute to the library, this would be a relatively straightforward feature to add ðŸ˜ƒ
