This works:
This does not:
 CircuitError: "to_matrix not defined for this <class 'qiskit.circuit.gate.Gate'>"
I would assume that the to_matrix() method could call the Operator class to return the corresponding matrix rather than just being a method that always raises:
https://github.com/Qiskit/qiskit-terra/blob/948671efd960d44597f8fc40094985cccf97e5d8/qiskit/circuit/gate.py#L42
Especially when the docstring says that Gate is a unitary, and thus has a matrix representation.
Also the type hints are incorrect as a NumPy array can never be returned from a method that always raises.
the "bug" label isn't appropriate for these things they are enhancements
I thought this had been discussed and decided against before. The point of doing it as Operator(qc) is because you are intentionally doing a unitary simulation, while with qc.to_gate.to_matrix() it is not obvious this is a simulation . The original point of the to_matrix method for gates was to return the canonical matrix description of standard library gates, not composite gates.
Then I fail to see why this method is there?  Indeed, it just raises.  It is also confusing because things in here: qiskit.circuit.library.standard_gates are gates, but are not instances of Gate (at least not CCXGate).  So we currently have at least two types of "gates" that have the same method to_matrix(), but only one works.  The Gate class also has a power method that uses Operator internally, so I am not sure if using Operator to return a unitary for the method that is supposed to do that is really a burden here.  Perhaps I am missing some key point about how the gates are supposed to work and are partitioned.
Closing from #4453 (comment) .
