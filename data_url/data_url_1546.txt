Is your feature request related to a use case or problem? Please describe.
A general single qubit parameterized gate compiler was proposed as a compilation building block in #3239. This issue is to scope out what would such a compiler look like and discuss whether it'd a useful addition to Cirq.
P3 - I'm not really blocked by it, it is an idea I'd like to discuss / suggestion based on principle
This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 30 days
One use case of this compiler would be to support merging parameterized single qubit rotations into a parameterized PhXZ gate, as suggested by @Wuggins
This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 30 days
This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 30 days
Issue closed due to inactivity.
Reopening the issue since we have another request from internal team members for this compiler.
After a quick discussion with Tanuj, the initial thought was to try and implement the following two conversions:
(1) is fairly trivial, but I couldn't find a simple closed form solution for (2), in which case it may not make much sense to try to compile the parameterized gates into a single PhXZ before the parameters are resolved.
(2) boils down to finding a representation of a', b', c', in terms of a, b, c such that X^a Z^b X^c == Z^a' X^b' X^c', which in general is not so nice.
From cirq sync:
If it's possible to do analytically, let's do it. The result might end up looking very complicated but that's upto users using the analytical compiler.
This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 30 days
This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 30 days
Issue closed due to inactivity.
