When translating a circuit from the cirq library to Qibo via a QASM module, I find this error
and the full message is
The error appears when the code is run on python3.8, but not on python3.6, which surprises me since 3.6 was already deprecated from qibo
Is this a big problem?
Could you provide the cirq circuit? I want to reproduce the error.
HI,
please find the code below. It is self contained, only the openfermion and cirq libraries are needed
I can reproduce the error with Cirq v0.13.1 and OpenFermion v1.3.0.
The problem disappears with Cirq v0.11.1 and OpeFermion v1.1.0.
Let's inspect the openQASM circuits generated by your code snippet:
// Generated from Cirq v0.13.1
OPENQASM 2.0;
include "qelib1.inc";
// Qubits: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
qreg q[12];
x q[0];
x q[1];
x q[2];
x q[3];
x q[4];
x q[5];
// Gate: PhasedISWAP**-0.6256659163780022
rz(pi0.25) q[5];
rz(pi-0.25) q[6];
cx q[5],q[6];
h q[5];
cx q[6],q[5];
rz(pi*-0.3128329582) q[5];
cx q[6],q[5];
rz(pi0.3128329582) q[5];
h q[5];
cx q[5],q[6];
rz(pi-0.25) q[5];
rz(pi*0.25) q[6];
rz(0) q[6];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[4];
rz(pi-0.25) q[5];
cx q[4],q[5];
h q[4];
cx q[5],q[4];
sdg q[4];
cx q[5],q[4];
s q[4];
h q[4];
cx q[4],q[5];
rz(pi*-0.25) q[4];
rz(pi*0.25) q[5];
rz(0) q[5];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[6];
rz(pi-0.25) q[7];
cx q[6],q[7];
h q[6];
cx q[7],q[6];
sdg q[6];
cx q[7],q[6];
s q[6];
h q[6];
cx q[6],q[7];
rz(pi*-0.25) q[6];
rz(pi*0.25) q[7];
// Gate: PhasedISWAP**0.7068022226528557
rz(pi0.25) q[3];
rz(pi-0.25) q[4];
cx q[3],q[4];
h q[3];
cx q[4],q[3];
rz(pi0.3534011113) q[3];
cx q[4],q[3];
rz(pi-0.3534011113) q[3];
h q[3];
cx q[3],q[4];
rz(pi*-0.25) q[3];
rz(pi*0.25) q[4];
rz(0) q[7];
rz(0) q[4];
// Gate: PhasedISWAP**0.6256659163780026
rz(pi0.25) q[5];
rz(pi-0.25) q[6];
cx q[5],q[6];
h q[5];
cx q[6],q[5];
rz(pi0.3128329582) q[5];
cx q[6],q[5];
rz(pi-0.3128329582) q[5];
h q[5];
cx q[5],q[6];
rz(pi*-0.25) q[5];
rz(pi*0.25) q[6];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[2];
rz(pi-0.25) q[3];
cx q[2],q[3];
h q[2];
cx q[3],q[2];
sdg q[2];
cx q[3],q[2];
s q[2];
h q[2];
cx q[2],q[3];
rz(pi*-0.25) q[2];
rz(pi*0.25) q[3];
rz(0) q[6];
// Gate: PhasedISWAP**-0.7068022226528554
rz(pi0.25) q[7];
rz(pi-0.25) q[8];
cx q[7],q[8];
h q[7];
cx q[8],q[7];
rz(pi*-0.3534011113) q[7];
cx q[8],q[7];
rz(pi0.3534011113) q[7];
h q[7];
cx q[7],q[8];
rz(pi-0.25) q[7];
rz(pi*0.25) q[8];
rz(0) q[3];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[4];
rz(pi-0.25) q[5];
cx q[4],q[5];
h q[4];
cx q[5],q[4];
sdg q[4];
cx q[5],q[4];
s q[4];
h q[4];
cx q[4],q[5];
rz(pi*-0.25) q[4];
rz(pi*0.25) q[5];
// Gate: PhasedISWAP**0.7951672353008667
rz(pi0.25) q[1];
rz(pi-0.25) q[2];
cx q[1],q[2];
h q[1];
cx q[2],q[1];
rz(pi0.3975836177) q[1];
cx q[2],q[1];
rz(pi-0.3975836177) q[1];
h q[1];
cx q[1],q[2];
rz(pi*-0.25) q[1];
rz(pi*0.25) q[2];
rz(0) q[8];
rz(0) q[5];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[6];
rz(pi-0.25) q[7];
cx q[6],q[7];
h q[6];
cx q[7],q[6];
sdg q[6];
cx q[7],q[6];
s q[6];
h q[6];
cx q[6],q[7];
rz(pi*-0.25) q[6];
rz(pi*0.25) q[7];
rz(0) q[2];
// Gate: PhasedISWAP**0.7068022226528555
rz(pi0.25) q[3];
rz(pi-0.25) q[4];
cx q[3],q[4];
h q[3];
cx q[4],q[3];
rz(pi0.3534011113) q[3];
cx q[4],q[3];
rz(pi-0.3534011113) q[3];
h q[3];
cx q[3],q[4];
rz(pi*-0.25) q[3];
rz(pi*0.25) q[4];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[0];
rz(pi-0.25) q[1];
cx q[0],q[1];
h q[0];
cx q[1],q[0];
sdg q[0];
cx q[1],q[0];
s q[0];
h q[0];
cx q[0],q[1];
rz(pi*-0.25) q[0];
rz(pi*0.25) q[1];
rz(0) q[7];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[8];
rz(pi-0.25) q[9];
cx q[8],q[9];
h q[8];
cx q[9],q[8];
sdg q[8];
cx q[9],q[8];
s q[8];
h q[8];
cx q[8],q[9];
rz(pi*-0.25) q[8];
rz(pi*0.25) q[9];
rz(0) q[4];
// Gate: PhasedISWAP**-0.5791668483211313
rz(pi0.25) q[5];
rz(pi-0.25) q[6];
cx q[5],q[6];
h q[5];
cx q[6],q[5];
rz(pi*-0.2895834242) q[5];
cx q[6],q[5];
rz(pi0.2895834242) q[5];
h q[5];
cx q[5],q[6];
rz(pi-0.25) q[5];
rz(pi*0.25) q[6];
rz(0) q[1];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[2];
rz(pi-0.25) q[3];
cx q[2],q[3];
h q[2];
cx q[3],q[2];
sdg q[2];
cx q[3],q[2];
s q[2];
h q[2];
cx q[2],q[3];
rz(pi*-0.25) q[2];
rz(pi*0.25) q[3];
rz(0) q[9];
rz(0) q[6];
// Gate: PhasedISWAP**-0.7068022226528555
rz(pi0.25) q[7];
rz(pi-0.25) q[8];
cx q[7],q[8];
h q[7];
cx q[8],q[7];
rz(pi*-0.3534011113) q[7];
cx q[8],q[7];
rz(pi0.3534011113) q[7];
h q[7];
cx q[7],q[8];
rz(pi-0.25) q[7];
rz(pi*0.25) q[8];
rz(0) q[3];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[4];
rz(pi-0.25) q[5];
cx q[4],q[5];
h q[4];
cx q[5],q[4];
sdg q[4];
cx q[5],q[4];
s q[4];
h q[4];
cx q[4],q[5];
rz(pi*-0.25) q[4];
rz(pi*0.25) q[5];
// Gate: PhasedISWAP**0.7951672353008667
rz(pi0.25) q[1];
rz(pi-0.25) q[2];
cx q[1],q[2];
h q[1];
cx q[2],q[1];
rz(pi0.3975836177) q[1];
cx q[2],q[1];
rz(pi-0.3975836177) q[1];
h q[1];
cx q[1],q[2];
rz(pi*-0.25) q[1];
rz(pi*0.25) q[2];
rz(0) q[8];
// Gate: PhasedISWAP**-0.7951672353008663
rz(pi0.25) q[9];
rz(pi-0.25) q[10];
cx q[9],q[10];
h q[9];
cx q[10],q[9];
rz(pi*-0.3975836177) q[9];
cx q[10],q[9];
rz(pi0.3975836177) q[9];
h q[9];
cx q[9],q[10];
rz(pi-0.25) q[9];
rz(pi*0.25) q[10];
rz(0) q[5];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[6];
rz(pi-0.25) q[7];
cx q[6],q[7];
h q[6];
cx q[7],q[6];
sdg q[6];
cx q[7],q[6];
s q[6];
h q[6];
cx q[6],q[7];
rz(pi*-0.25) q[6];
rz(pi*0.25) q[7];
rz(0) q[2];
// Gate: PhasedISWAP**0.5354409456024599
rz(pi0.25) q[3];
rz(pi-0.25) q[4];
cx q[3],q[4];
h q[3];
cx q[4],q[3];
rz(pi0.2677204728) q[3];
cx q[4],q[3];
rz(pi-0.2677204728) q[3];
h q[3];
cx q[3],q[4];
rz(pi*-0.25) q[3];
rz(pi*0.25) q[4];
rz(0) q[10];
rz(0) q[7];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[8];
rz(pi-0.25) q[9];
cx q[8],q[9];
h q[8];
cx q[9],q[8];
sdg q[8];
cx q[9],q[8];
s q[8];
h q[8];
cx q[8],q[9];
rz(pi*-0.25) q[8];
rz(pi*0.25) q[9];
rz(0) q[4];
// Gate: PhasedISWAP**0.5791668483211309
rz(pi0.25) q[5];
rz(pi-0.25) q[6];
cx q[5],q[6];
h q[5];
cx q[6],q[5];
rz(pi0.2895834242) q[5];
cx q[6],q[5];
rz(pi-0.2895834242) q[5];
h q[5];
cx q[5],q[6];
rz(pi*-0.25) q[5];
rz(pi*0.25) q[6];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[2];
rz(pi-0.25) q[3];
cx q[2],q[3];
h q[2];
cx q[3],q[2];
sdg q[2];
cx q[3],q[2];
s q[2];
h q[2];
cx q[2],q[3];
rz(pi*-0.25) q[2];
rz(pi*0.25) q[3];
rz(0) q[9];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[10];
rz(pi-0.25) q[11];
cx q[10],q[11];
h q[10];
cx q[11],q[10];
sdg q[10];
cx q[11],q[10];
s q[10];
h q[10];
cx q[10],q[11];
rz(pi*-0.25) q[10];
rz(pi*0.25) q[11];
rz(0) q[6];
// Gate: PhasedISWAP**-0.5354409456024602
rz(pi0.25) q[7];
rz(pi-0.25) q[8];
cx q[7],q[8];
h q[7];
cx q[8],q[7];
rz(pi*-0.2677204728) q[7];
cx q[8],q[7];
rz(pi0.2677204728) q[7];
h q[7];
cx q[7],q[8];
rz(pi-0.25) q[7];
rz(pi*0.25) q[8];
rz(0) q[3];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[4];
rz(pi-0.25) q[5];
cx q[4],q[5];
h q[4];
cx q[5],q[4];
sdg q[4];
cx q[5],q[4];
s q[4];
h q[4];
cx q[4],q[5];
rz(pi*-0.25) q[4];
rz(pi*0.25) q[5];
rz(0) q[11];
rz(0) q[8];
// Gate: PhasedISWAP**-0.7951672353008665
rz(pi0.25) q[9];
rz(pi-0.25) q[10];
cx q[9],q[10];
h q[9];
cx q[10],q[9];
rz(pi*-0.3975836177) q[9];
cx q[10],q[9];
rz(pi0.3975836177) q[9];
h q[9];
cx q[9],q[10];
rz(pi-0.25) q[9];
rz(pi*0.25) q[10];
rz(0) q[5];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[6];
rz(pi-0.25) q[7];
cx q[6],q[7];
h q[6];
cx q[7],q[6];
sdg q[6];
cx q[7],q[6];
s q[6];
h q[6];
cx q[6],q[7];
rz(pi*-0.25) q[6];
rz(pi*0.25) q[7];
// Gate: PhasedISWAP**0.53544094560246
rz(pi0.25) q[3];
rz(pi-0.25) q[4];
cx q[3],q[4];
h q[3];
cx q[4],q[3];
rz(pi0.2677204728) q[3];
cx q[4],q[3];
rz(pi-0.2677204728) q[3];
h q[3];
cx q[3],q[4];
rz(pi*-0.25) q[3];
rz(pi*0.25) q[4];
rz(0) q[10];
rz(0) q[7];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[8];
rz(pi-0.25) q[9];
cx q[8],q[9];
h q[8];
cx q[9],q[8];
sdg q[8];
cx q[9],q[8];
s q[8];
h q[8];
cx q[8],q[9];
rz(pi*-0.25) q[8];
rz(pi*0.25) q[9];
rz(0) q[4];
// Gate: PhasedISWAP**-0.2951672353008664
rz(pi0.25) q[5];
rz(pi-0.25) q[6];
cx q[5],q[6];
h q[5];
cx q[6],q[5];
rz(pi*-0.1475836177) q[5];
cx q[6],q[5];
rz(pi0.1475836177) q[5];
h q[5];
cx q[5],q[6];
rz(pi-0.25) q[5];
rz(pi*0.25) q[6];
rz(0) q[9];
rz(0) q[6];
// Gate: PhasedISWAP**-0.5354409456024596
rz(pi0.25) q[7];
rz(pi-0.25) q[8];
cx q[7],q[8];
h q[7];
cx q[8],q[7];
rz(pi*-0.2677204728) q[7];
cx q[8],q[7];
rz(pi0.2677204728) q[7];
h q[7];
cx q[7],q[8];
rz(pi-0.25) q[7];
rz(pi*0.25) q[8];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[4];
rz(pi-0.25) q[5];
cx q[4],q[5];
h q[4];
cx q[5],q[4];
sdg q[4];
cx q[5],q[4];
s q[4];
h q[4];
cx q[4],q[5];
rz(pi*-0.25) q[4];
rz(pi*0.25) q[5];
rz(0) q[8];
rz(0) q[5];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[6];
rz(pi-0.25) q[7];
cx q[6],q[7];
h q[6];
cx q[7],q[6];
sdg q[6];
cx q[7],q[6];
s q[6];
h q[6];
cx q[6],q[7];
rz(pi*-0.25) q[6];
rz(pi*0.25) q[7];
rz(0) q[7];
// Gate: PhasedISWAP**0.2951672353008665
rz(pi0.25) q[5];
rz(pi-0.25) q[6];
cx q[5],q[6];
h q[5];
cx q[6],q[5];
rz(pi0.1475836177) q[5];
cx q[6],q[5];
rz(pi-0.1475836177) q[5];
h q[5];
cx q[5],q[6];
rz(pi*-0.25) q[5];
rz(pi*0.25) q[6];
rz(0) q[6];
// Generated from Cirq v0.11.1
OPENQASM 2.0;
include "qelib1.inc";
// Qubits: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
qreg q[12];
x q[0];
x q[1];
x q[2];
x q[3];
x q[4];
x q[5];
// Gate: PhasedISWAP**-0.6256659163780022
rz(pi0.25) q[5];
rz(pi-0.25) q[6];
cx q[5],q[6];
h q[5];
cx q[6],q[5];
rz(pi*-0.3128329582) q[5];
cx q[6],q[5];
rz(pi0.3128329582) q[5];
h q[5];
cx q[5],q[6];
rz(pi-0.25) q[5];
rz(pi*0.25) q[6];
rz(0) q[6];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[4];
rz(pi-0.25) q[5];
cx q[4],q[5];
h q[4];
cx q[5],q[4];
rz(pi*-0.5) q[4];
cx q[5],q[4];
rz(pi0.5) q[4];
h q[4];
cx q[4],q[5];
rz(pi-0.25) q[4];
rz(pi*0.25) q[5];
rz(0) q[5];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[6];
rz(pi-0.25) q[7];
cx q[6],q[7];
h q[6];
cx q[7],q[6];
rz(pi*-0.5) q[6];
cx q[7],q[6];
rz(pi0.5) q[6];
h q[6];
cx q[6],q[7];
rz(pi-0.25) q[6];
rz(pi*0.25) q[7];
// Gate: PhasedISWAP**0.7068022226528557
rz(pi0.25) q[3];
rz(pi-0.25) q[4];
cx q[3],q[4];
h q[3];
cx q[4],q[3];
rz(pi0.3534011113) q[3];
cx q[4],q[3];
rz(pi-0.3534011113) q[3];
h q[3];
cx q[3],q[4];
rz(pi*-0.25) q[3];
rz(pi*0.25) q[4];
rz(0) q[7];
rz(0) q[4];
// Gate: PhasedISWAP**0.6256659163780026
rz(pi0.25) q[5];
rz(pi-0.25) q[6];
cx q[5],q[6];
h q[5];
cx q[6],q[5];
rz(pi0.3128329582) q[5];
cx q[6],q[5];
rz(pi-0.3128329582) q[5];
h q[5];
cx q[5],q[6];
rz(pi*-0.25) q[5];
rz(pi*0.25) q[6];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[2];
rz(pi-0.25) q[3];
cx q[2],q[3];
h q[2];
cx q[3],q[2];
rz(pi*-0.5) q[2];
cx q[3],q[2];
rz(pi0.5) q[2];
h q[2];
cx q[2],q[3];
rz(pi-0.25) q[2];
rz(pi*0.25) q[3];
rz(0) q[6];
// Gate: PhasedISWAP**-0.7068022226528554
rz(pi0.25) q[7];
rz(pi-0.25) q[8];
cx q[7],q[8];
h q[7];
cx q[8],q[7];
rz(pi*-0.3534011113) q[7];
cx q[8],q[7];
rz(pi0.3534011113) q[7];
h q[7];
cx q[7],q[8];
rz(pi-0.25) q[7];
rz(pi*0.25) q[8];
rz(0) q[3];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[4];
rz(pi-0.25) q[5];
cx q[4],q[5];
h q[4];
cx q[5],q[4];
rz(pi*-0.5) q[4];
cx q[5],q[4];
rz(pi0.5) q[4];
h q[4];
cx q[4],q[5];
rz(pi-0.25) q[4];
rz(pi*0.25) q[5];
// Gate: PhasedISWAP**0.7951672353008667
rz(pi0.25) q[1];
rz(pi-0.25) q[2];
cx q[1],q[2];
h q[1];
cx q[2],q[1];
rz(pi0.3975836177) q[1];
cx q[2],q[1];
rz(pi-0.3975836177) q[1];
h q[1];
cx q[1],q[2];
rz(pi*-0.25) q[1];
rz(pi*0.25) q[2];
rz(0) q[8];
rz(0) q[5];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[6];
rz(pi-0.25) q[7];
cx q[6],q[7];
h q[6];
cx q[7],q[6];
rz(pi*-0.5) q[6];
cx q[7],q[6];
rz(pi0.5) q[6];
h q[6];
cx q[6],q[7];
rz(pi-0.25) q[6];
rz(pi*0.25) q[7];
rz(0) q[2];
// Gate: PhasedISWAP**0.7068022226528555
rz(pi0.25) q[3];
rz(pi-0.25) q[4];
cx q[3],q[4];
h q[3];
cx q[4],q[3];
rz(pi0.3534011113) q[3];
cx q[4],q[3];
rz(pi-0.3534011113) q[3];
h q[3];
cx q[3],q[4];
rz(pi*-0.25) q[3];
rz(pi*0.25) q[4];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[0];
rz(pi-0.25) q[1];
cx q[0],q[1];
h q[0];
cx q[1],q[0];
rz(pi*-0.5) q[0];
cx q[1],q[0];
rz(pi0.5) q[0];
h q[0];
cx q[0],q[1];
rz(pi-0.25) q[0];
rz(pi*0.25) q[1];
rz(0) q[7];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[8];
rz(pi-0.25) q[9];
cx q[8],q[9];
h q[8];
cx q[9],q[8];
rz(pi*-0.5) q[8];
cx q[9],q[8];
rz(pi0.5) q[8];
h q[8];
cx q[8],q[9];
rz(pi-0.25) q[8];
rz(pi*0.25) q[9];
rz(0) q[4];
// Gate: PhasedISWAP**-0.5791668483211313
rz(pi0.25) q[5];
rz(pi-0.25) q[6];
cx q[5],q[6];
h q[5];
cx q[6],q[5];
rz(pi*-0.2895834242) q[5];
cx q[6],q[5];
rz(pi0.2895834242) q[5];
h q[5];
cx q[5],q[6];
rz(pi-0.25) q[5];
rz(pi*0.25) q[6];
rz(0) q[1];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[2];
rz(pi-0.25) q[3];
cx q[2],q[3];
h q[2];
cx q[3],q[2];
rz(pi*-0.5) q[2];
cx q[3],q[2];
rz(pi0.5) q[2];
h q[2];
cx q[2],q[3];
rz(pi-0.25) q[2];
rz(pi*0.25) q[3];
rz(0) q[9];
rz(0) q[6];
// Gate: PhasedISWAP**-0.7068022226528555
rz(pi0.25) q[7];
rz(pi-0.25) q[8];
cx q[7],q[8];
h q[7];
cx q[8],q[7];
rz(pi*-0.3534011113) q[7];
cx q[8],q[7];
rz(pi0.3534011113) q[7];
h q[7];
cx q[7],q[8];
rz(pi-0.25) q[7];
rz(pi*0.25) q[8];
rz(0) q[3];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[4];
rz(pi-0.25) q[5];
cx q[4],q[5];
h q[4];
cx q[5],q[4];
rz(pi*-0.5) q[4];
cx q[5],q[4];
rz(pi0.5) q[4];
h q[4];
cx q[4],q[5];
rz(pi-0.25) q[4];
rz(pi*0.25) q[5];
// Gate: PhasedISWAP**0.7951672353008667
rz(pi0.25) q[1];
rz(pi-0.25) q[2];
cx q[1],q[2];
h q[1];
cx q[2],q[1];
rz(pi0.3975836177) q[1];
cx q[2],q[1];
rz(pi-0.3975836177) q[1];
h q[1];
cx q[1],q[2];
rz(pi*-0.25) q[1];
rz(pi*0.25) q[2];
rz(0) q[8];
// Gate: PhasedISWAP**-0.7951672353008663
rz(pi0.25) q[9];
rz(pi-0.25) q[10];
cx q[9],q[10];
h q[9];
cx q[10],q[9];
rz(pi*-0.3975836177) q[9];
cx q[10],q[9];
rz(pi0.3975836177) q[9];
h q[9];
cx q[9],q[10];
rz(pi-0.25) q[9];
rz(pi*0.25) q[10];
rz(0) q[5];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[6];
rz(pi-0.25) q[7];
cx q[6],q[7];
h q[6];
cx q[7],q[6];
rz(pi*-0.5) q[6];
cx q[7],q[6];
rz(pi0.5) q[6];
h q[6];
cx q[6],q[7];
rz(pi-0.25) q[6];
rz(pi*0.25) q[7];
rz(0) q[2];
// Gate: PhasedISWAP**0.5354409456024599
rz(pi0.25) q[3];
rz(pi-0.25) q[4];
cx q[3],q[4];
h q[3];
cx q[4],q[3];
rz(pi0.2677204728) q[3];
cx q[4],q[3];
rz(pi-0.2677204728) q[3];
h q[3];
cx q[3],q[4];
rz(pi*-0.25) q[3];
rz(pi*0.25) q[4];
rz(0) q[10];
rz(0) q[7];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[8];
rz(pi-0.25) q[9];
cx q[8],q[9];
h q[8];
cx q[9],q[8];
rz(pi*-0.5) q[8];
cx q[9],q[8];
rz(pi0.5) q[8];
h q[8];
cx q[8],q[9];
rz(pi-0.25) q[8];
rz(pi*0.25) q[9];
rz(0) q[4];
// Gate: PhasedISWAP**0.5791668483211309
rz(pi0.25) q[5];
rz(pi-0.25) q[6];
cx q[5],q[6];
h q[5];
cx q[6],q[5];
rz(pi0.2895834242) q[5];
cx q[6],q[5];
rz(pi-0.2895834242) q[5];
h q[5];
cx q[5],q[6];
rz(pi*-0.25) q[5];
rz(pi*0.25) q[6];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[2];
rz(pi-0.25) q[3];
cx q[2],q[3];
h q[2];
cx q[3],q[2];
rz(pi*-0.5) q[2];
cx q[3],q[2];
rz(pi0.5) q[2];
h q[2];
cx q[2],q[3];
rz(pi-0.25) q[2];
rz(pi*0.25) q[3];
rz(0) q[9];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[10];
rz(pi-0.25) q[11];
cx q[10],q[11];
h q[10];
cx q[11],q[10];
rz(pi*-0.5) q[10];
cx q[11],q[10];
rz(pi0.5) q[10];
h q[10];
cx q[10],q[11];
rz(pi-0.25) q[10];
rz(pi*0.25) q[11];
rz(0) q[6];
// Gate: PhasedISWAP**-0.5354409456024602
rz(pi0.25) q[7];
rz(pi-0.25) q[8];
cx q[7],q[8];
h q[7];
cx q[8],q[7];
rz(pi*-0.2677204728) q[7];
cx q[8],q[7];
rz(pi0.2677204728) q[7];
h q[7];
cx q[7],q[8];
rz(pi-0.25) q[7];
rz(pi*0.25) q[8];
rz(0) q[3];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[4];
rz(pi-0.25) q[5];
cx q[4],q[5];
h q[4];
cx q[5],q[4];
rz(pi*-0.5) q[4];
cx q[5],q[4];
rz(pi0.5) q[4];
h q[4];
cx q[4],q[5];
rz(pi-0.25) q[4];
rz(pi*0.25) q[5];
rz(0) q[11];
rz(0) q[8];
// Gate: PhasedISWAP**-0.7951672353008665
rz(pi0.25) q[9];
rz(pi-0.25) q[10];
cx q[9],q[10];
h q[9];
cx q[10],q[9];
rz(pi*-0.3975836177) q[9];
cx q[10],q[9];
rz(pi0.3975836177) q[9];
h q[9];
cx q[9],q[10];
rz(pi-0.25) q[9];
rz(pi*0.25) q[10];
rz(0) q[5];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[6];
rz(pi-0.25) q[7];
cx q[6],q[7];
h q[6];
cx q[7],q[6];
rz(pi*-0.5) q[6];
cx q[7],q[6];
rz(pi0.5) q[6];
h q[6];
cx q[6],q[7];
rz(pi-0.25) q[6];
rz(pi*0.25) q[7];
// Gate: PhasedISWAP**0.53544094560246
rz(pi0.25) q[3];
rz(pi-0.25) q[4];
cx q[3],q[4];
h q[3];
cx q[4],q[3];
rz(pi0.2677204728) q[3];
cx q[4],q[3];
rz(pi-0.2677204728) q[3];
h q[3];
cx q[3],q[4];
rz(pi*-0.25) q[3];
rz(pi*0.25) q[4];
rz(0) q[10];
rz(0) q[7];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[8];
rz(pi-0.25) q[9];
cx q[8],q[9];
h q[8];
cx q[9],q[8];
rz(pi*-0.5) q[8];
cx q[9],q[8];
rz(pi0.5) q[8];
h q[8];
cx q[8],q[9];
rz(pi-0.25) q[8];
rz(pi*0.25) q[9];
rz(0) q[4];
// Gate: PhasedISWAP**-0.2951672353008664
rz(pi0.25) q[5];
rz(pi-0.25) q[6];
cx q[5],q[6];
h q[5];
cx q[6],q[5];
rz(pi*-0.1475836177) q[5];
cx q[6],q[5];
rz(pi0.1475836177) q[5];
h q[5];
cx q[5],q[6];
rz(pi-0.25) q[5];
rz(pi*0.25) q[6];
rz(0) q[9];
rz(0) q[6];
// Gate: PhasedISWAP**-0.5354409456024596
rz(pi0.25) q[7];
rz(pi-0.25) q[8];
cx q[7],q[8];
h q[7];
cx q[8],q[7];
rz(pi*-0.2677204728) q[7];
cx q[8],q[7];
rz(pi0.2677204728) q[7];
h q[7];
cx q[7],q[8];
rz(pi-0.25) q[7];
rz(pi*0.25) q[8];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[4];
rz(pi-0.25) q[5];
cx q[4],q[5];
h q[4];
cx q[5],q[4];
rz(pi*-0.5) q[4];
cx q[5],q[4];
rz(pi0.5) q[4];
h q[4];
cx q[4],q[5];
rz(pi-0.25) q[4];
rz(pi*0.25) q[5];
rz(0) q[8];
rz(0) q[5];
// Gate: PhasedISWAP**-1.0
rz(pi0.25) q[6];
rz(pi-0.25) q[7];
cx q[6],q[7];
h q[6];
cx q[7],q[6];
rz(pi*-0.5) q[6];
cx q[7],q[6];
rz(pi0.5) q[6];
h q[6];
cx q[6],q[7];
rz(pi-0.25) q[6];
rz(pi*0.25) q[7];
rz(0) q[7];
// Gate: PhasedISWAP**0.2951672353008665
rz(pi0.25) q[5];
rz(pi-0.25) q[6];
cx q[5],q[6];
h q[5];
cx q[6],q[5];
rz(pi0.1475836177) q[5];
cx q[6],q[5];
rz(pi-0.1475836177) q[5];
h q[5];
cx q[5],q[6];
rz(pi*-0.25) q[5];
rz(pi*0.25) q[6];
rz(0) q[6];
If you take a look at the diff between the two circuits:
You can see that there are different gates, in particular rz(pi*-0.5) becomes sdg, which I guess is S^dagger.
Such gate is not supported by Qibo.
Do you know if sdg is a standard openQASM gate (then we should add it to Qibo, I guess)?
Actually, it seems like sdg is indeed a standard oepnQASM gate
https://github.com/Qiskit/openqasm/blob/2.0/examples/qelib1.inc
@stavros11 shall we add it to Qibo?
