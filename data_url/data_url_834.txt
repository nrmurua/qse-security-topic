Describe the bug
I often want to define a circuit which has N qubits - but not always to perform gate operations on all N qubits. Braket as far as I can tell does not support this. Therefore, in the past I  have used an identity gate on any qubits which do not have gate operations,  so that for instance in measurement bitstrings the state is still measured. This now throws an error.
To reproduce
Submit a circuit to a quantum device via Braket that contains an identity gate.
The error is botocore.errorfactory.ValidationException: An error occurred (ValidationException) when calling the CreateQuantumTask operation: [line 196] uses a gate: i which is not supported by the device or defined via a defcal
Expected behavior
No error. Identity gates should should be removed during compilation.
System information
Hi @epelofske-LANL,
Thank you so much for reporting this issue. Could you clarify which device you experienced the issue with?
For context the error you quote will currently be thrown if you submit a circuit against a device and the circuit contains a non-supported gate. Specifically, the i gate is not supported on IonQ (see here) and you would get an error if you use your method for IonQ.
Following up on your expected behavior you would be able to currently check supported gates with device.properties.action['braket.ir.openqasm.program'].supportedOperations (see also this example).
Yep, IonQ. I know that it is not a supported gate - but there are two problems. One is that it has previously been a supported gate. Second is that it seems to me that identity gates should always basically be a native gate, even if the backend compiles away identity gates.
@epelofske-LANL, Thank you for the fast follow-up and I recognize the problems. You are correct that we removed support for the identity gate in October of last year but that there could be approaches between the Braket SDK and the IonQ backend to "compile away" the identity gate. I will raise your point with the broader Braket team. No immediate action will be taken in the Braket SDK as that would require us to change the logical approach to supported gates at a broader level.
Hey @epelofske-LANL
We are going to explore adding additional gates (such as measure) to help solve the pain-point you've identified. In the interim, @kshitijc will provide an interim solution to your identified issue.
Hi @epelofske-LANL
Sorry for the late answer. You can simply replace the i gate by a rz gate with a zero angle using rz(qubit, 0):
This will be executed as a 2-qubit circuit and the results will return as 2-qubit ensembles.
Feel free to let me know if it does not exactly solve your issue.
Closing this issue per suggested workaround. Please reopen this issue if you have any concerns.
