Hi,
With @sebgrijalva, we are reorganizing the way simulation.py works to make noisy simulations possible (this is related to #151 ). Its run method now returns, for noiseless simulations, a CleanResults object, which is the analog of the previous SimulationResults in v0.2 : it contains a list of Qobj. When adding noise, it will return a NoisyResults object, which contains no Qobj list but a probability distribution of the bitstrings at a given time.
We added a _config field to the object in order to customize the simulation. You may choose the time at which the result is to be returned, the number of times the sequence is run (this is important for noisy simulations where noise is different each run), and the number of samples per run -this is solely to get more data in less computing time, at the cost of accuracy and realism.
Solved with #197 and #199 .
