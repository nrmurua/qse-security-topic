Our concurrency model saves us from having two circuits running at the same time, interfere each other when setting up the random context:
... because we are using ProcessPoolExecutor, hence we are using processes for running every circuit in parallel. But it's a poor design to trust in runtime implementation for this to work, so we want to fix this situation.
Newcomers
As this is not a critical bug, and it has a very simple solution, I think is a good opportunity for people who wants to get their head around the contributing workflow, to take this issue and fix it.
Circuit random context should not change if another circuit is running at the same time.
Don't want to give too many clues for people who want to give a try, but this could be a possible solution:
... we would be more than glad if another elegant and simple solution comes up :)
The point here is to make sure that random numbers generation on every circuit do not interfere each other when multiple circuits are running in parallel.
I'll volunteer for this one.  I guess the first thing is to do a pull request?
Thanks for stepping up @hellmersjl3ds !
Yes, we usually want a prior discussion to see what's the best approach to implement the feature/fix, but in this  is case is an easy one, so go ahead and make a PR. I'll be the reviewer :)
Hi @hellmersjl3ds , if you need some help here, let me know! :)
I was on vacation for Thanksgiving.  I'll try to make some progress on it this week.
Looking at this now.  Is there an use case that is failing for this?
Not really, because the way CPython implements concurrency. Anyway, as stated in the bug description this is a poor design so we want to fix it. You won't be able to test whether your fix actually fixes the problem, fortunately the fix should be pretty, I could review it without testing.
PR Merged!
Thanks @hellmersjl3ds
Happy holidays ;)
