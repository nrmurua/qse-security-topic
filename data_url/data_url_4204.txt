This is a question out of my own curiosity. I may have just not dug in deep enough into the code.
I had a look through the C++ simulator backend and noticed that all the linear algebra code is written in-house. Have you looked at integrating with BLAS/LAPACK instead?
OpenBLAS handles all the parallelisation and contains hand-optimised assembly code for different CPU architectures and if the user wants they could just use a different BLAS backend like Intel's MKL.
However, I haven't entirely decomposed in my head what the simulator backend does so BLAS/LAPACK may simply not apply.
It would be an option in the sense that one could use BLAS subroutines. However, those subroutines are completely general and, thus, many optimization opportunities are left unexploited. See, e.g., https://arxiv.org/abs/1704.01127 for a detailed description on the type of optimizations one can perform.
Thank you for the quick response. I will have a read through the paper you linked.
