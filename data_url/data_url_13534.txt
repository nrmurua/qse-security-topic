Consider PEC with the circuit:
Strictly speaking, there are two operations in this circuit, although they have the same gate. So, if someone wants to do PEC and provides only one representation:
Then execute_with_pec will complain it doesn't know how to represent 1: ───H───:
We should support some notion of "this operation applies to all qubits" in addition to the current "this operation applies only to this qubit/these qubits."
My current guess for the best way to do this is in OperationRepresentation, for example allowing a gate with just a placeholder qubit, or perhaps a method like extend_to(these_qubits). Note the latter already exists in NoisyOperation. But, I haven't thought it through much - other ideas welcome.
Refs:
Alternative option is to skip operations without known representations. (This might be an interesting theoretical pursuit.)
Alternative option is to skip operations without known representations. (This might be an interesting theoretical pursuit.)
Having this feature as default or as optional would be indeed very useful.
E.g  if I don't want to mitigate single-qubit gates I simply don't represent them and Mitiq will just apply single-qubit gates without sampling. With the current setup, for each single-qubit gate, we would need to define a trivial  OperaitonRepresentation with only one term in the basis expansion.
However I think the problem raised by this issue is different: how do we define qubit-dependent and  qubit-independent operations?
My proposal for (optionally) defining qubit independent operations is something like this:
op_rep = OperationRepresentation(ideal_operaiton, basis_expansion, qubit_independent = True)
An then we need to replace the search loop in sample_sequence:
with a something like this:
where the first loop look for a representation with the same qubits and, if it fails, the second loop looks for qubit independent representations.
Alternative option is to skip operations without known representations. (This might be an interesting theoretical pursuit.)
Having this feature as default or as optional would be indeed very useful.
E.g if I don't want to mitigate single-qubit gates I simply don't represent them and Mitiq will just apply single-qubit gates without sampling. With the current setup, for each single-qubit gate, we would need to define a trivial OperaitonRepresentation with only one term in the basis expansion.
However I think the problem raised by this issue is different: how do we define qubit-dependent and qubit-independent operations?
Ah yeah, I'm conflating two separate ideas here. Let me open another issue for skipping operations without known representations.
Rest of proposal seems reasonable to me. You have to be careful with the latter check
to add the operation on the desired qubit(s) in the sampled circuit. Probably all of the PEC types need to support some notion of "placeholder qubit(s)" like we are discussing here.
This issue had no activity for 2 months, and will be closed in one week unless there is new activity. Cheers!
This issue had no activity for 2 months, and will be closed in one week unless there is new activity. Cheers!
This issue had no activity for 2 months, and will be closed in one week unless there is new activity. Cheers!
This issue had no activity for 2 months, and will be closed in one week unless there is new activity. Cheers!
This issue had no activity for 2 months, and will be closed in one week unless there is new activity. Cheers!
This issue had no activity for 4 months, and will be closed in 2 weeks unless there is new activity. Cheers!
