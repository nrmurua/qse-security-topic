I just updated to qutip 4.1.0 on archlinux and now code that ran fine before simply fails. The smallest example I managed to boil it down to is multiplying a daggered state with an operator:
which randomly yields different results, e.g.
I did the same test on two machines and on my old laptop it works fine, so it probably is something architecture dependent. The output of lscpu is:
I'll gladly provide any additional information that might be needed. It's definitely a possibility that I did something wrong in the build process of either qutip itself (this is the archlinux build script: https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=python-qutip) or one of its libraries. Any ideas?
Will take a look.  Obviously something is not right.
I cannot reproduce the error.  I get the answer
which matches the NumPy dense answer:
Why not try using Anaconda?  It is what our build scripts are run against, and you do not have to build things yourself.
Thank you for taking the time to check it. I tested it on yet another PC with a different hardware but also with archlinux +  AUR package and it also fails there. However, using the conda version works fine. Do you think it's worthwhile to further investigate? Otherwise feel free to just close this issue.
I am using Debian and when I build QuTiP with GCC 5 it passes all modules in qutip.tests. But with GCC 6 it gives a lot of errors in the tests. I am not sure if this is related to your problem @bastikr but hope it gives you some insight.
It sounds like a build issue with one of the arch Linux packages.  If conda works, then stick with that.
The main issue is time.  I do not have more than an hour or two to work on QuTiP at night.  As such, I kind of have to focus my time on other stuff.  Figuring out build issues, like those mentioned with GCC 6, are of courseâ€‹ important, but will have to wait their turn.
No worries, I completely understand that time is limited. Keep up the great work!
