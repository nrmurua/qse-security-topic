Originally posted by @ajavadia in #4469 (comment)
We would like to make a distinction between gates that are described efficiently and those that are not. The former will go in the circuit library. The latter will be inserted via the qiskit.quantum_info module (a unitary is in this form). We already have the infrastructure for treating these unitaries and many other types of operators there.
Gates defined via the unitary are the same as quantum_info.Operators, right?
If so, is there another reason to keep UnitaryGate except additional methods like control? If no, is that sufficient evidence to keep it, or should the Operator get the additional methods and UnitaryGate be removed? The latter is nice because there would be just one object that is defined from a unitary matrix rather than multiple ones.
I took a quick look through these classes and found the following methods that seem to be unique to UnitaryGate.
The QASM issue is what was originally identified in #4447. It seems like QASM hasn't been implemented in quantum_info so that should be a consideration if we remove UnitaryGate. Generally I agree with @Cryoris, probably better to have a single class for unitary matrices.
I'll close this now as stale, and largely consumed by other discussions (e.g. #4700).
