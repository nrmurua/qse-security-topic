This is not a bug or enhancement request as such, but seems like an internal inconsistency in Qiskit's gate definitions.
In the gate definitions, U1 is defined as [1,0,0,e^(iλ)], while an Rz is a [e^(-iλ/2),0,0,e^(iλ/2)].
U3 is defined in the docs similarly to U1 - ie. a U3 is a U1RyU1. Therefore, a U3(0,0,a) = U1(a). However, CU3 is defined in the docs in such a way that CU3(0,0,a) != CU1(a). CU3 is instead defined using the Rz definition, rather than the U1.
So:
U3(0,0,a) = U1(a)
CU3(0,0,a) != CU1(a)
This is a confusing set of definitions. I assume that these definitions were a conscious decision, and that you are aware of the inconsistency, but I don't understand why?
I hope this hasn't been asked already - I couldn't find a duplicate.
It seems our current definition of a CU3 gate (using the gate decomposition) is incorrect if we want it to be CU3(a,b,c) = |0X0| ⊗ iden + |1X1| ⊗ U3(a, b, c)
where
U3 = cos(a/2)  |0X0| - exp(ic)sin(a/2) |0X1| + exp(ib) * sin(a/2) |1X0| + exp(i(b+c) cos(a/2)
Currently we define the unrolling for Cu3Gate.definition as
which returns a matrix
|0X0| ⊗ iden + exp(-i(b+c)/2) *  |1X1| ⊗ U3(a, b, c)
If we changed the definition to append an additional U1 gate U1Gate((b+c)/2) we would get the correct matrix:
gives the matrix
|0X0| ⊗ iden + |1X1| ⊗ U3(a, b, c)
