Currently, delay requires an explicit list of qubits. It would be helpful in cases where we want a global delay to be able to specify delay without an explicit qubit list with the meaning that it should be applied across all qubits in scope.
why not do delay register? This is more in the spirit of qasm I believe.
Currently barrier behaves this way: "A barrier can also be invoked without arguments, in which case the argument is assumed to be all qubits." We discussed this at the TSC meeting and there was some confusion as to why barrier got this behavior since OpenQASM 2 didn't have it. I'll investigate the background of that feature.
In any case, barrier and delay should definitely do the same thing.
Also there's a discussion in this PR about only allowing this at the top level: #199 "Why is the no-argument form only allowed outside a box? This PR allows it inside a box as well. If we define the scoping of the barrier to be local to the box, it shouldn't be an issue." If we move forward with this we should either disallow it within boxes, gates, etc or define what they do (local scope vs global)
I agree that we should match behavior between barrier and delay, and therefore we should either support argument-free delay or remove support for argument-free barrier. I'll admit I'm mainly thinking about this in the context of physical qubits, and this is where an argument-free barrier/delay instruction makes the most sense IMO. Perhaps defining a "register" of all physical qubits would help alleviate this if we settle on removing the argument-free forms.
The consensus of the TSC 2022-02-11 seems to be as follows:
Qiskit's implementation is irrelevant for OQ3 design - on Terra, we'll make sure our QASM output is compliant, but that's our problem, not anything for OQ3 designers to worry about (the same is true for really any part of the language - OQ3 drives the spec and Terra will follow when we're outputting to QASM, not the other way round).
I think at this point we're all in "violent agreement" on the essentials and we can close it. Thanks to @PhilReinhold  for raising the matter because if clear in ur-documents, it was not so in Pythonic practice.
