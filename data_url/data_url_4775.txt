Now that #127 is merged, it is possible to use Interferometer to decompose an arbitrary unitary to match the topology of a hardware device using Mach-Zehnder interferometers.
If the device uses squeezed initial states, then GraphEmbed will also now work for such hardware devices, due to its use of Interferometer.
However, if the device uses two-mode squeezed initial states (S2gate), then we cannot support embedding arbitrary graphs using GraphEmbed; we are limited to embedding bipartite graphs.
This is relatively easy to do:
Perform input validation to ensure that (a) the adjacency matrix represents a bipartite graph, and (b) that the number of nodes in the graph is even
We perform the existing strawberryfields.decomposition.graph_embed decomposition to determine the initial squeezing values Sq, and the interferometer U.
We then perform some slight manipulation in order to convert the initial Sgate operations to S2gate operations. This uses the fact that, starting from a vacuum state,
is equivalent to
The additional beamsplitters and rotation gates introduced are then simply subsumed into the original unitary U to provide U2, leading to
Open questions:
Some hardware devices might restrict the allowed values of initial squeezing. How do we scale the adjacency matrix to ensure the singular value decompositions match the allowed squeezing values?
Ideally, we should also be able to manipulate the unitary U2 such that it is block diagonal (U2 = sp.linalg.block_diag(Ua, Ua)), allowing us to decompose the above even further:
