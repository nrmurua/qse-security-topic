Describe the bug
The ASCII-style default plots of waveforms do not render correctly
To Reproduce
Copied from https://queracomputing.github.io/Bloqade.jl/dev/tutorials/5.MIS/main/
Expected behavior
A correctly formatted graph with no misalignments
Screenshots

Version Info
Additional context
Add any other context about the problem here.
I suspect this has to do with this known UnicodePlots issue: https://github.com/JuliaPlots/UnicodePlots.jl#known-issues
Let me try to replicate the problem on my end but in the mean time but I think it would be worth allowing Bloqade to either auto-detect character set support (this would be great for avoiding some issues with plots that have a unicode character) OR letting users explicitly toggle if they want unicode/standard ASCII.
@Roger-luo do you know if auto-detection is possible? If not I can probably just allow the user to set some package-level variable like UNICODE_PLOTS=false
I think this might due to your terminal is not using mono fonts - which will not just cause problem in Unicode plots, but will also making your code not align correctly (at least inside terminal)
do you know if auto-detection is possible? If not I can probably just allow the user to set some package-level variable like UNICODE_PLOTS=false
It's possible but not worth it, and what if there are no mono fonts available? a global option to turn it off could be fine, but this provides much more information even if it's not rendered correctly compared to a naive print of the waveform type. We should advise users to change their font and provide this option as a fallback if they have problem changing fonts.
@Roger-luo apologies on my end, I spoke too hastily. I think my original idea with "Disable Unicode" would probably just:
In the spirit of actually preserving most of what we can do with Unicode but with ASCII:
I see at one point there was an ASCIIPlots package for Julia but it seems to be officially dead (and from personal experimentation shows far less useful detail than a semi-broken Unicode plot).
I think another solution might be to take advantage of tree printing and show at each t what the value is. This would work nicely for linear and piecewise constant waveforms (just show the values at the endpoints or the main time points) but for arbitrary waveforms something else would have to be done.
In any case, I agree it's worth putting a notice somewhere in the documentation for now.
