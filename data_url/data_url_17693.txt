We have defined transpiler passes as producers of a new DAG, not modifiers of the DAG that they read. As such, we need a test to check that for all passes in qiskit.transpiler.passes, the input DAG stays intact.
Is this check really necessary? The passmanager does things like dag = pass.run(dag).
I think this is not an immediate concern. As @1ucian0 points out, the serial structure of the PassManager ensures that each pass terminates before any subsequent pass begins (and passes should not be holding internal state between runs), and there are performance gains to be had for passes which only modify a subset of the DAG (e.g. CXDirection in #3173.) We can revisit in the future if either of these change.
Not doing this actually makes certain performance optimization tricky to implement. I've had patches in the past that tried to optimize our performance by reducing run time overhead by making static gate decomposition definitions actually static and ran into this: #1445 and had to abandon it.
Agree, unfortunately that cat's already out of the bag. Maybe there is design work that can be done in #3146 to find a way to implement that optimization safely?
If I understood the conclusion of the discussion correctly, I'm closing this issue as wont fix. Feel free to reopen if I understood correctly...
