The autoconfig complains that g++ is too old
It used to work until I merge to the latest master.
Is there a bug?
My system shows for g++ --version the following
Let me check this. Most likely we need gcc7 because of -std=c++17, and that's what I'm checking. I'm using a non standard way to check gcc version, so that could be the problem. Thanks!
Just pushed fix in master. Given the different ways a compiler print the output, I cannot rely on a script to check CXX version. Removed that check (but added others to maximize the likelihood the code will compile).
This time cirq crashes.
configure: error: Please install cirq >= '0.5' before configuring (or --disable-cirq).
We should not force users to have a specific version of cirq, because the Python ecosystem is full of strange dependencies. For this reason I created the script that builds a venv with cirq 0.5.0
scripts/construct_cirq_envinronment.sh
Fair enough, I can remove the versions check, but I wonder why it works for me and Orion and not for you. Would you mind to send me the logs? My two cents is that the Python module packaging is missing in your system and then the script exit with an error.
Let me remove the versioning check and let's try again. Thanks!
It did not work, because I do not have Cirq installed globally, but in virtual environments which are project dependent.
Ok, I can remove the versioning but I cannot remove the check at all. I should perhaps explain better in configure --help, README.md and docs/installation.md that cirq during the installation is required only to enable extra tests. Let me change --disable-cirq to --disable-cirq-tests, update the docs, and if you have cirq installed in a venv just run
I guess if the check fails you could suggest to the user to run the script for the venv or install globally.
I guess if the check fails you could suggest to the user to run the script for the venv or install globally.
Agreed. Made few changes .. let me know your opinion!
