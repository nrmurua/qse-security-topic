Basically translate the example presented https://en.wikipedia.org/wiki/Simon%27s_problem to Cirq.
@vtomole This sounds super cool, mind if I give it a try?
@Lucaman99 Go for it!! Try to follow the https://github.com/quantumlib/Cirq/blob/master/examples/bernstein_vazirani.py pattern.
Hey @vtomole @Strilanc! I'm basically done the implementation, but I'm a bit unclear as to where to go from here. Where exactly should I put the code when I submit a pull request?
@Lucaman99 Put it in the examples directory: https://github.com/quantumlib/Cirq/tree/master/examples.
Hey @vtomole - As I was trying to put some finishing touches on my code, I noticed something: I'm not entirely sure how to go about algorithmically solving the system of linear boolean equations outputted at the termination of the algorithm. Would you happen to be familiar with any method to solve such problems?
Actually, I think there is a way to do it pretty easily using Sympy ðŸ˜„
Either that or Gaussian Elimination it would seem
Hello!
I see this example is still missing from the library. I have some code ready, may I do a pull request with it?
@sebgrijalva If you already have one, please go ahead. We've been waiting for a response from #1908.
Yep, I still have to finish fixing my code. I'm really sorry for the delay, I'll let you know when it's done (ASAP).
@Lucaman99 This is the new one #2649. Please focus on the random walk notebook instead.
Got it, almost done with QRW
This was done in #2649
