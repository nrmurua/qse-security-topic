qc.measure_all() creates a new classical register to store measurements even if the circuit already has a classical register. As a consequence, plotting the experiment results also creates redundant x axis labels with extra characters corresponding to the unused classical registers. Refer to image-

measure_all to use an existing classical register (if present) instead of creating a new one.
There can be a boolean argument in measure_all that specifies whether or not to use an existing classical register. An error can be thrown if the existing register is less than the required length.
Using the existing register will also solve the labels generated for the plot.
(Willing to work on this issue if action is required.)
I don't think measure_all should use an existing register. What if your existing register is already used to store some other intermediate information? Then you'd overwrite it by calling measure_all.
You could say: if a classical register of the right size exists that is also empty, use that. But IMO this is going a bit too far and you could just use measure() if you already have a classical register in the circuit ðŸ™‚
Was suggesting it as an added flexibility. To account for intermediate information (which there mostly will be), the default value of the argument, say 'use_existing', can be made False.
I agree that checking used and unused register will be too much ðŸ˜…. Hence suggested a user-facing argument.
If the register already exists it's super straightforward to measure all bits into that register:
which is even shorter ðŸ˜‰
It's definitely a valid suggestion! However we don't want to add too much special functionality to the circuit, to avoid the code being incomprehensible (and harder to maintain). In this particular case I don't think there's a strong enough use-case, since the existing solution seems to work very well ðŸ™‚
Okay! I think we can close this issue then.
