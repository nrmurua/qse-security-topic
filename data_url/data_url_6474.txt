I have been trying lots of options for installing qsimcirq with custatevec support. Currently, I'm trying to build the latest version of cuquantum alongside the latest version of qsim.
The machine I am using runs Ubuntu 20.04 and is equipped with an NVIDIA A2.
CUDA version: 11.7
Driver Version: 515.43.04
Follow the steps for reproduction.
Build the conda environment:
Download packages:
Build the packages:
pip install . fails with the following output:
× python setup.py bdist_wheel did not run successfully.
│ exit code: 1
╰─> [108 lines of output]
running bdist_wheel
running build
running build_py
running build_ext
-- Found pybind11: /home/mars/miniconda3/envs/sevastopol/include (found version "2.10.1")
-- Found PythonLibs: /home/mars/miniconda3/envs/sevastopol/lib/libpython3.8.so (found suitable version "3.8.16", minimum required is "3.7")
-- Looking for C++ include pthread.h
-- Looking for C++ include pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
-- Found Threads: TRUE
-- Found CUDA: /usr/local/cuda-11.7 (found version "11.7")
-- Found pybind11: /home/mars/miniconda3/envs/sevastopol/include (found version "2.10.1")
-- The C compiler identification is GNU 11.3.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Found pybind11: /home/mars/miniconda3/envs/sevastopol/include (found version "2.10.1")
-- Found pybind11: /home/mars/miniconda3/envs/sevastopol/include (found version "2.10.1")
-- Found pybind11: /home/mars/miniconda3/envs/sevastopol/include (found version "2.10.1")
-- Found pybind11: /home/mars/miniconda3/envs/sevastopol/include (found version "2.10.1")
-- Found pybind11: /home/mars/miniconda3/envs/sevastopol/include (found version "2.10.1")
-- Configuring done
CMake Warning (dev) in pybind_interface/cuda/CMakeLists.txt:
Policy CMP0104 is not set: CMAKE_CUDA_ARCHITECTURES now detected for NVCC,
empty CUDA_ARCHITECTURES not allowed.  Run "cmake --help-policy CMP0104"
for policy details.  Use the cmake_policy command to set the policy and
suppress this warning.
note: This error originates from a subprocess, and is likely not a problem with pip.
ERROR: Failed building wheel for qsimcirq
Running setup.py clean for qsimcirq
Failed to build qsimcirq
Installing collected packages: qsimcirq
Running setup.py install for qsimcirq ... error
error: subprocess-exited-with-error
× Running setup.py install for qsimcirq did not run successfully.
│ exit code: 1
╰─> [85 lines of output]
running install
/home/mars/miniconda3/envs/sevastopol/lib/python3.8/site-packages/setuptools/command/install.py:34: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.
warnings.warn(
running build
running build_py
creating build
creating build/lib.linux-x86_64-cpython-38
creating build/lib.linux-x86_64-cpython-38/qsimcirq
copying qsimcirq/_version.py -> build/lib.linux-x86_64-cpython-38/qsimcirq
copying qsimcirq/init.py -> build/lib.linux-x86_64-cpython-38/qsimcirq
copying qsimcirq/qsim_circuit.py -> build/lib.linux-x86_64-cpython-38/qsimcirq
copying qsimcirq/qsimh_simulator.py -> build/lib.linux-x86_64-cpython-38/qsimcirq
copying qsimcirq/qsim_simulator.py -> build/lib.linux-x86_64-cpython-38/qsimcirq
copying qsimcirq/py.typed -> build/lib.linux-x86_64-cpython-38/qsimcirq
running build_ext
-- The CXX compiler identification is GNU 11.3.0
-- The CUDA compiler identification is NVIDIA 11.7.64
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Detecting CUDA compiler ABI info
-- Detecting CUDA compiler ABI info - done
-- Check for working CUDA compiler: /usr/local/cuda-11.7/bin/nvcc - skipped
-- Detecting CUDA compile features
-- Detecting CUDA compile features - done
-- Found PythonInterp: /home/mars/miniconda3/envs/sevastopol/bin/python (found suitable version "3.8.16", minimum required is "3.6")
-- Found PythonLibs: /home/mars/miniconda3/envs/sevastopol/lib/libpython3.8.so
-- Performing Test HAS_FLTO
-- Performing Test HAS_FLTO - Success
-- Found pybind11: /home/mars/miniconda3/envs/sevastopol/include (found version "2.10.1")
CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):
Could NOT find PythonLibs (missing: PYTHON_INCLUDE_DIRS) (Required is at
least version "3.7")
Call Stack (most recent call first):
/usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE)
/usr/share/cmake-3.22/Modules/FindPythonLibs.cmake:310 (FIND_PACKAGE_HANDLE_STANDARD_ARGS)
pybind_interface/cuda/CMakeLists.txt:18 (find_package)
note: This error originates from a subprocess, and is likely not a problem with pip.
error: legacy-install-failure
× Encountered error while trying to install package.
╰─> qsimcirq
note: This is an issue with the package mentioned above, not pip.
hint: See above for output from the failure.`
conda list output:
Moreover, I want to point out that I've not been able to find working/updated guides for installing cuquantum, so if there were to be any, please let me know.
