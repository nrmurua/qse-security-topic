When building the documentation currently thousands of warnings are being emitted. These warnings are going to result in documentation bugs that need to be fixed (normally missing links or other formatting issues). Additionally, it is causing issues for documentation automation in CI for the hosted documentation around size of the log output
Run sphinx-build
The docs build emits no warnings.
Fix the warnings and then run a full docs build in ci with the -W flag.
Our travis contains the command: make html SPHINXOPTS=-W
This in the end runs sphinx-build with the -W flag and we fix doc. errors on our PRs when travis fails.
We wiil investigate it further.
The specific warnings I'm seeing are being emitted by the combined docs build: https://travis-ci.com/github/Qiskit/qiskit/jobs/326146475#L19604 there are a lot of warnings sourced from aqua there.
Many warnings are of form
it seems like the operators and operators.legacy location for the legacy operators is found by  Sphinx.
I believe I found the difference: Aqua doc/conf.py has the following options:
autosummary_generate_overwrite = False
autodoc_default_options = {
'inherited-members': None,
'show-inheritance': None,
}
While Qiskit doc/conf.py:
autodoc_default_options = {
'inherited-members': None,
}
If I remove those options from Aqua doc/conf.py I get the same warnings
Curious - I built the docs many times and never saw that. The only time I would ever see anything like that was if I built with the existing stubs folders when things were moved. I would always delete the _build and stubs folders and doing that I have never seen an issue. Last builds I did, on ML and Finance just before release had no warnings, like before. This is with a make docs in the docs folder in Aqua. Looking at the build log Matthew linked there are way more duplicate warnings.
I recall an issue with the stubs we have created and the new Sphinx. The conf.py I had to stop it overwriting our manual ones since that was a change in behavior in Sphinx 3. Last line in the snippet below
With the conf.py being corrected in qiskit this is no longer an issue right and can be closed?
Yep, this can be closed now since it was fixed by Qiskit/qiskit#914
