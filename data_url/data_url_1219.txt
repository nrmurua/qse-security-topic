I get why we want to support multiple selection registers, as we can often split this up into meaningful names or more clever selection strategies. It seems like all the implementations of SelectOracle have just one target register. Are there cases when we would want to index into the target (aka system) register? @tanujkhattar @ncrubin
Yes, a common case is when can exploit symmetry in different parts of your target register (eg: N/2 qubits each for spin up / spin down) to perform controlled swaps based on selection register and then perform most of the expensive operations on a smaller "working area" of your target register.
Here is an example from our recent bloch orbitals paper (Fig 3, https://arxiv.org/abs/2302.05531)
As you can see, the target register of size N is split into two parts of size N / 2 each. We perform controlled swaps at the beginning and at the end to bring the correct qubits in our "working register" of size N / 2 and then perform other operations only on this working register.
Actually, this is probably not the best example because even though the overall algorithm uses this trick; you can still argue that the SELECT operators still act only the working space; and that's mainly because the circuit gives an expanded representation of SELECT and PREPARE in terms of other primitives.
Another more relevant example is from Guang Hao's double factorization paper (https://arxiv.org/abs/2007.14460 Page 53, Eq 66):
On the left you see a spin-multiplexed product of majorana operators and on the right you see it's decomposition in terms of controlled swaps to bring and then operations only on the working register. The selection register here is the sigma and rest everything is the target register.
thank you!
