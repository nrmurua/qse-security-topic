The original statevector simulator will return decimals as many as possible; however, the new terra clips it to 8-digits by default, which results in many chemistry simulations fails because the returned statevector is not enough.
For example, 8-digits is not accurate enough for me to reach ground state energy of H2 since the optimizer can not build accurate gradient with such precision.
I imagine that some users will result in the same situation and it is not easy to find this issue.
Could we make the default to as many as possible and then if users would like to truncate that they can pass the parameters.
Yes we can do this. Thanks for raising the issue. Will be fixed in #1404.
@chunfuchen do you know what accuracy is needed in your experiments?
I'm debating whether to keep the default as no-rounding, or to round by default and then opt-in for higher accuracy.
I need to do more experiment to get suitable precision.
The issue I get is that when an optimizer is builting the gradient, the step size is used to be very small, like 1e-8; thus, if the precise of delta (f(x) - f(x+step_size) between finite distance is not accurate enought, the gradient is wrong.
here is the common approach to approximate gradient:
gradient = (f(x) - f(x+step_size) / step_size
I think default to no-rounding is better.
What is the advantage to round it? I check the codes that the rounding is happened locally not at remote.
Thanks.
I think the idea was just that printing the statevector results in things like [0.1528e-16 + 1.143e-18*j] which doesn't look nice.
I have done it with default no rounding in #1404.
There could be a tidyup function that sets all terms <1e-15, or whatever other atol calue you want, to zero so that those floating point zeros do not show up like that
