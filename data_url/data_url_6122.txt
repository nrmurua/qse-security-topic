When I run code from Pulse Schedules tutor notebook
a QiskitError: 'qubit_lo_freq must be supplied' is raised
/usr/lib/python3.7/site-packages/qiskit/execute.py in execute(experiments, backend, basis_gates, coupling_map, backend_properties, initial_layout, seed_transpiler, optimization_level, pass_manager, qobj_id, qobj_header, shots, memory, max_credits, seed_simulator, default_qubit_los, default_meas_los, schedule_los, meas_level, meas_return, memory_slots, memory_slot_size, rep_time, parameter_binds, **run_config)
216                     parameter_binds=parameter_binds,
217                     backend=backend,
--> 218                     **run_config
219                     )
220
/usr/lib/python3.7/site-packages/qiskit/compiler/assemble.py in assemble(experiments, backend, qobj_id, qobj_header, shots, memory, max_credits, seed_simulator, qubit_lo_freq, meas_lo_freq, qubit_lo_range, meas_lo_range, schedule_los, meas_level, meas_return, meas_map, memory_slot_size, rep_time, parameter_binds, **run_config)
157
158         return assemble_schedules(schedules=experiments, qobj_id=qobj_id,
--> 159                                   qobj_header=qobj_header, run_config=run_config)
160
161     else:
/usr/lib/python3.7/site-packages/qiskit/assembler/assemble_schedules.py in assemble_schedules(schedules, qobj_id, qobj_header, run_config)
45     qubit_lo_freq = qobj_config.get('qubit_lo_freq', None)
46     if qubit_lo_freq is None:
---> 47         raise QiskitError('qubit_lo_freq must be supplied.')
48
49     meas_lo_freq = qobj_config.get('meas_lo_freq', None)


build and install qiskit-aer from branch openpulse-sim
add following lines to the notebook
Successfull simulation
Somehow specify meas_lo_freq
The simulator is still very much in alpha so you cant use it quite that seamlessly yet.
You need to get a real device backend.configuration() as shown in the  example notebook, which contains missing fields.
Ok, the notebook works, thank you.
Can you please reference some info about Hamiltonian format in it?
I mean these lines
We are still working on the functions to automatically generate hamiltonian strings, when the simulator is released a typical user shouldn't deal with these directly. There is some limited wip documentation here.
Closing this issue for now.
