It takes a non-trivial amount of time to grab the backend.properties which is now done by default.  Looking at the timing, it adds an additional 1-2 sec per call to transpile.  When the legacy swapper is removed in favor of the stochastic swapper, this call to properties becomes a bottleneck.
Can the backend properties be loaded when one does get_backend or backends?  Maybe in another thread so that it is not blocking?
This only happens if you use transpile(circuit, backend). I would argue this is the expected behavior. If you do this, you are implicitly saying go compile my circuit in the best possible way you can for this backend, which inevitably involves querying for backend properties.
If you are interested in transpiling for only the coupling map or basis gates, you should use
transpile(circuit, coupling_map, basis_gates).
The question of caching backend configuration, properties, etc. at the time of authentication is separate. It would involve messing with the Backend object a bit. I'm not sure if it makes authentication slower.
I understand the motivation, and noise aware compiling is pretty much the way to go.  However, I am a bit surprised that the properties are retrieved even if they are not used. Indeed, I think only the NoiseAdaptiveLayout, used in levels 2 and 3, uses the backend properties currently.  I guess I was just surprised when the transpilation process was slower than before for some circuits because of this check.  Will close because expected.
