Qobj header from a job submitted to cloud simulator / local Aer simulator / real quantum system doesn't return the same info passed to qobj_header argument in the execute function, even though the documentation states the following:
qobj_header (QobjHeader or dict) – User input that will be inserted in Qobj header, and will also be copied to the corresponding qiskit.result.Result header. Headers do not affect the run.
What could be the issues?
returns
Same behaviour for Aer QasmSimulator.
The code above should return info passed to the execute function.
This is because qobj_header is no longer an option on those backends. WIth the migration to BackendV1 backend.run(), which is what execute calls internally, on backends only takes explicit options the backends expose. The explicit qobj_header field for execute() only works with legacy backends that are built off of the deprecated BaseBackend class which used qobj as a payload for backend.run(). You no longer need to set this field to attach metadata to a circuit as this is supported natively by QuantumCircuit since 0.17. To accomplish this with you should be running something like:
of course this attaches the metadata to the circuit and will be in the corresponding experiment header (not the job header) under the metadata field in the output result.
We should update the documentation to outline that the qobj_header kwarg along with a bunch of other options for execute() only work with legacy backend objects.
@mtreinish Thanks for the reply! That's really helpful. We will use the circuit metadata.
