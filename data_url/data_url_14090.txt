gives 0.0 rather than 1j
Try the above
should return a complex expectation value
Looking at the Python pathway it does look like it should dispatch to the complex version, so I think the issue might be in the Rust code, but it is difficult to tell.
Actually it is easy to see: https://github.com/Qiskit/qiskit/blob/7a411405ac3b5f2e107eabb8846475c38fdcaa07/crates/accelerate/src/sampled_exp_val.rs#L86C1-L86C15
I think it might have been a fairly long-standing oversight, because the original Python version had the same bug.  Perhaps the original code was only meant for basic Paulis?
Should be an easy fix (it's valid to return Complex64 from Rust), we'll just need to take a little bit of care that we don't break existing code that was expecting the return from that function to be a float, not a complex with zero imaginary component.
Looking quickly now, we might also need to test that the expectation value of things like Pauli("-X") (with an explicit phase in a single Pauli term) are calculated correctly - I can't immediately see any handling for those.
I can work on this one
Sure, thanks @kibrahim757 - I'll assign you as a notice to others, but don't feel pressure. Feel free to ask any questions you need here in this issue, and just let us know if you've not got time in the end.
Thanks , I will start working on it and will post here if I have any questions
Hello I wondered if I could have a go since this issue is now in tagged but unassigned.
I made a draft PR
#11471
@zeb33n: I'm sorry, but as you can see in the comments and the GitHub metadata, it was already assigned to @kibrahim757 (the "tagged but unassigned" project doesn't automatically update). I will offer priority to them, if they are still interested in making a PR, but if not, then I'll look at yours.
@kibrahim757: are you still interested in making a PR for this issue?
@jakelishman, it is fine , if the PR already fixes the issue , i can try working on a different issue.
Ah, thank you!  Sorry that this happened - I'll have to look into seeing if we can get the project automation to update itself more so that this doesn't happen again.
@zeb33n: thanks for the patience - in this case, we can move forwards with your PR.
