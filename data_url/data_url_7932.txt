There seems to be a bug when trying to solve the Schr√∂dinger equation with the sesolve and essolve functions using an initial state vector. The following code reproduces the error:
The Hamiltonian commutes with the operator for which the expectation value is computed as is easily checked. Therefore the expectation value should be time-independent. Using sesolve one obtains a wrong result. There seems to be an error when using state vectors instead of density matrices, as is seen by using the mesolve function instead.
I was not able to pinpoint the error in the code, but I checked the result with essolve and using an initial state vector. This raises an exception:
Exception: Operator and state do not have same tensor structure: [2, 2, 2] and [2]
essolve works as intended by using a density matrix instead, which should again indicate that there is some bug when using state vectors.
Note however that the essolve bug might not be directly related to the sesolve bug, since essolve seems to work correctly when using a different initial state:
psi0 = tensor([(basis(2,0) + 0.5*(-1j)**i *basis(2,1)).unit() for i in range(0,N)])
I am using the newest versions of the necessary libraries:
QuTiP Version:      4.2.0
Numpy Version:      1.11.3
Scipy Version:      1.0.0
Cython Version:     0.27.3
Matplotlib Version: 2.0.2
Python Version:     3.6.4
Number of CPUs:     4
BLAS Info:          OPENBLAS
OPENMP Installed:   False
INTEL MKL Ext:      False
Platform Info:      Linux (x86_64)
