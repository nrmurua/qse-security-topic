I followed the instruction in github to import types of ansatz from openfermioncirq.varional , but it reports the fault:
ModuleNotFoundError: No module named 'openfermion.ops._givens_rotations'
I tried to check the ops package, and it turns out that givens_rotations has been removed.
How can I fix this? Or is there other ways to import ansatz?
Hi Chris,
The file you want can be found in openfermion.linalg now instead of openfermion.ops .
Openfermioncirq has been depreciated, so it's not so surprising that the links are broken. You can find most of what you might be looking for these days in openfermion.circuits .
Cheers,
Tom.
Hi Chris,
The file you want can be found in openfermion.linalg now instead of openfermion.ops .
Openfermioncirq has been depreciated, so it's not so surprising that the links are broken. You can find most of what you might be looking for these days in openfermion.circuits .
Cheers,
Tom.
Hi Tom,
Cool. I was trying to structure ansatz for calculating optimal ground-state-energy, yet it seems all the tutorials or illustrations online are overdue.
Do you updated any available source?
@tanujkhattar , do the tutorials that you were drafting still work on the current version of openfermion? They haven't been added to master yet but perhaps they're still valuable to Chris.
@ChrisW918 , apologies, the openfermion tutorials for VQEs are bit out of date (mainly because most of the workflow is done using cirq these days). For the actual variational loop, you can have a look at https://quantumai.google/cirq/tutorials/variational_algorithm perhaps, or for a real example I'd recommend the hfvqe example in recirq - https://github.com/quantumlib/ReCirq/tree/master/recirq/hfvqe .
Thanks @obriente . I tried to def a cost_function to run iteration, yet the results were not expected.
Could you help me check the code please?
set up the basics of a molecule
initiate molecule's structure
#create the packed_amplitudes for later inputs
#def the cost_function
#run iteration
The function value of my current set up returns
Seems the function does not pass the optimization automatically at all, and the value is not displayed in Angstrom.
There must be things wrong about my cost_function. Is it because the use of sparse_hamiltonian?
Sorry, it seems I didn't join Cirq in the function, yet I wonder for which function's output is an available observable for Cirq to exacute?
@obriente yes, the draft still works with the latest openfermion but the VQE tutorial was supposed to come in part-2, which never happened.
@ChrisW918 To give you a brief example of how to create and optimize an ansatz using Cirq, please see this example: https://colab.research.google.com/drive/1E7kgzBg_uUX58SA5ENHS4A1GVXJh2xtf?usp=sharing
@tanujkhattar Thanks. And I noticed that the optimization used in your example is COBYLA, which accepts imaginary parameters, yet when I tried to apply optimizer like 'SLSQP' or 'Nelder-Mead', the program reports the direct cause of the exception is
TypeError: can't convert complex to float
It seems the generated parameters from ansatz is a list of imaginary numbers. Is imaginary parameter necessary here? Or do you have other options to apply SLSQP and Nelder-Mead?
Since all the coefficients of the pauli terms in our pauli_sum_hamiltonian are real numbers, p.estimated_energy() will always return a complex number with imaginary part == 0.  I've sent a PR in Cirq to ensure that p.estimated_energy returns a float instead of complex. But in the meantime, returning p.estimated_energy().real from the cost function should be sufficient to support other optimizers like SLSQP or Nelder-Mead.
@tanujkhattar Thanks for your expanation! I'm going to close this issue.
