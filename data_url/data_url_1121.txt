For exponentiating gates. np.exp is not appropriate because it means elementwise exponentiation.
There is corresponding method in SciPy
https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.expm.html
Would it make sense to provide Cirq interface for calling that method?
@Strilanc @viathor
Are you suggesting to override the behavior of scipy.linalg.expm? How do you do that?
Sorry, maybe I didn't understand what is the proposal.
If it's about exponentiating square matrix, then scipy.linalg.expm can do that.
But now I see that you suggested to exponentiate a gate. Gate is a unitary matrix. And exponential of unitary matrix is not necessarily a unitary matrix. So result of exponentiating a gate can't be a gate.
Can you please provide an example of what is expected behaviour of cirq.exp, and what is its input and ouput type?
@kevinsung
One example would be to exponentiate a Hermitian PauliString to get a gate, as the user who opened #2710 did with Cirq's current support of np.exp, which will be removed.
Hi all. I am the user who opened #2710. Because I heard that the support of np.exp would be removed, I am trying to removing it. Also, FYI, I've implemented tfq.util.exponential (link) that can exponentiate paulistring. I hope it is helpful.
Hi all,
I've been reading a couple of issues opened about exponentiation of PauliString.
In #2710 it is suggested to stop using numpy.exp, my question is what is the best way to perform this exponentiation? Does cirq.exp exist yet?
Best,
Xavi
cirq.exp does not exist yet.  You might check out the code in pauli_string_phasor for exponentiating PauliStrings.
Thanks @dabacon , I'll use PauliString and PauliStringPhasor functionalities.
