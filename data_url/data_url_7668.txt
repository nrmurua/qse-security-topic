Hi,
I am trying to sample from large circuits with the function quimb.tensor.Circuit.sample(). Since the circuit is large, I need to use slicing with the argument target_size in order to use less memory. However, this process requires the class cotengra.Sliced_Contractor(), which was removed from Cotengra on April 24.
Is there a simple way to fix this issue?
Thank you,
Julien Drapeau
quimb-1.5.1.dev11+gf0c5ea8
Hi @juliendrapeau,
Apologies! I had forgotten that the Circuit class relies on that. The long term answer is that slicing will be encapsulated in the optimize argument. So that if you supply a
then quimb will use it to both find the contraction path and also see that it can use cotengra to contract the network directly using the newer implementation of performing sliced contraction.
This is I think already set-up, but I need to double check.
Hi @jcmgray,
Thank you for your response. This seems to be set-up and working as far as I can tell.
Related to this issue, in the description of the optimize argument for the sample function, it is said that "Contraction path optimizer to use for the marginals, shouldnâ€™t be a reusable path optimizer as called on many different TNs". To be sure, does that implies that we need to include overwrite=True in the ReusableHyperOptimizer?
Thank you,
Julien Drapeau
I would need to double check, but I think that is just a typo, where in fact it should be a reusable optimizer. The overwrite arg is really for advanced usage where you want to ignore any matching tree that is already in the cache.
All right!
Thank you again,
Julien Drapeau
