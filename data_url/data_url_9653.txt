Having the waveform amplitudes in MHz and the time steps in ns is incompatible with an adimensional simulation. Adjustments should be made to one or the other inside the simulation module (I would suggest dividing all samples by 1000, ie going to GHz).
Maybe this can help if it's not an overkill, https://github.com/sbyrnes321/numericalunits.
I knew of a repository used in Oskar Painter's lab for superconducting qubits, but looks like it's in Julia, https://github.com/PainterQubits/Unitful.jl.
Some comments about what is being done at the moment:
This will indeed mean that in a "digital-only" simulation, there should be a factor of 10^-3 for the Hamiltonian.
To fix the coupling constant, we use the estimate that C_6/hbar ~ 2π x 1.5 Mhz at interatomic distance ~9 µm. This gives C_6 ≈ 5 x 10^6 x 10^-3 = 5 x 10^3
Can you please elaborate on how the coupling constant compensates for all the other terms in the Hamiltonian that require the 10^-3 factor?
Maybe "compensate" is not a precise word there.  Since for generating the π pulses I've been dividing by 10^-3 (using a BlackmanWaveform), this means that both the Rabi Frequency and Detuning already have this factor. So the Van der Waals term should take this factor into account as well, I didn't mean that it "cancels" it.
Up to now I had been taking C_6/hbar = 10^6 . In practice this only affects the Rydberg Blockade radius, which changes by a factor of (1000)^(1/6) ≈ 3.16
In the end, we will be working with µsec in the Simulation class, by dividing self._times (which is a np.arangeof the length of the sequence provided) by 1000. This gives dimensionless quantities to sesolve() and actually improves simulation times. These changes have been pushed to the notebooksbranch.
It seems that this issue has been solved.
