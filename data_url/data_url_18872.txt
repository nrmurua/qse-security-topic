In QASM2, the BNF listed a set of buit-in unary functions,sin j cos j tan j exp j ln j sqrt. However, it was not explicit on their meaning.
QASM3 specification does not list (as far as I could check) the built-in functions and their meaning and I think it should.
The notion of "their meaning" may extend beyond these mathematical functions.  With the expanded classical programming constructs and types, there are now several operators whose meanings are not fully defined.  For example it's not defined what happens if + overflows the defined type width (especially important for signed integers), and things like bitshifts and bitwise access are not defined for signed integer types and floats.  Presumably these latter examples should be entirely forbidden, but it might be good to be clear in the spec; the angle type is used with a bitshift in the 3.0 paper (code example at the bottom of p20), presumably because it's essentially an unsigned fixed-point type.
I guess there's definitely some benefit to leaving various things up to the implementation so things can be done in the most hardware-efficient way, but it might be good to fully specificy which things are being left to the implementation.
