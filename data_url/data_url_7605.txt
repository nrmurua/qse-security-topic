To expose the batch loop outside the whole circuit abstraction, we should let batch_view return a subtype of AbstractRegister, which will be SubRegister, it is similar to SubArray. it has similar behavior with Register{M, 1}
Do we still need this? @GiggleLiu I think this was because we want to support batch, but what now? I don't think we need this now.
Only features used in practise should be kept. As far as I know, time evolution requires this interface since 'expmv' can not be apply on a matrix. However! Is it possible to design a more eligant interface like @parallelbatch func reg. This interface can utilize parallelism at the same time.
I see. I agree with this idea, we can actually use @spawn for CPU that use several process to run the batch, with similar syntax to the builtin @parallel, however, simply put func is hard to implement. I'll write a proposal for this later.
I think we should only need view? since we allow to construct a DefaultRegister from view now? closing this in dup of #139
