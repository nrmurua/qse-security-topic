For old/out-of-context problems, referred by ID, enable futures to be recreated and results downloaded. Something like this, but user-friendly:
I'd like to take a crack at this. I gather that the block is that (right now) problem decoding is solver-specific. Some potential approaches:
A) Put the method on the solver
which side-steps the issue of coupled solver/decoding by forcing the user to specify.
EDIT: I see that this is already implemented.
B) Put the method on the client and use Solver.id as a unique identifier
By making the solver id the second argument it will allow easy future deprecation.
I also noticed that Future.id is non-blocking and may be None, it might be good to have a blocking version of that, maybe f.get_id()
Ah, I read the REST-API docs more closely and see that from just the problem_id, it is possible to get the solver name, making both (A) and (B) redundant. Making the best option...
C) Just the problem_id
Still doesn't look like too invasive a change, though obviously much more than the 3-line methods that would support (A) and (B).
