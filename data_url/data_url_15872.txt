The ScipyOptimizers allow two ways to specify settings of an optimizer:
However using the second method via options, does not actually set the options since they are overriden by the default value.
prints
I think it would be cleaner to not have the options in the initializer and let the user just use named arguments. We could still keep _options under the hood in the SciPyOptimizer, just not expose it.
Alternatively we could make sure all named arguments are None by default and then only set the value in the options if they are not none. However that is a bit cumbersome and less nice to read in the docs, so I think just removing options from the initializer would be cleaner.
I would like to contribute to this
Great! How would you like to solve the issue? 🙂
I think the methods mentioned in the issue itself are good paths to solve the given problem:
Ok, sounds good @singhmeet11 let's go with option 2 👍🏻
