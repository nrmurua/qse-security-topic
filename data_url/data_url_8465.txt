Is there a particular reason why QuTiP favoured CSR matrix format?
It seems to me that in some cases CSC works better. For example ket vectors are much better to be stored in CSC. Matrix vector product can be significantly faster in this case. Of course, one can transpose everything and work with bra vectors which are more optimal for CSR format, but it might not be obvious for a user. Density matrices in vector form also fit into CSC much better.
Well, I don't remember the original motivation, but I think it was because that was the preferred SciPy format at the time.  It is true that kets are not optimal in this format, but they are converted to dense arrays for most  things internal anyway.  CSR also plays nice with things like the Intel math library.  Looking at commercial software, the csc vs csr choice is about 50-50.  In the end, it is like the choice between c or Fortran ordered arrays.
For sparse-dense multiplications the CSR is the best of course, but if someone does large systems with sparse states he/she should be aware that there is the following difference.
This is a random state with density 1e-4 multiplied by a Hermitian matrix:

Well, the most ideal thing to do would be to express both ket and bra as sparse row vectors with a flag that distinguishes between the two.  But that would be a lot of recoding at this stage.
