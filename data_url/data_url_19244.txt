Describe the bug
A strange behavior of the function dagger in the rotation gates when the parameter, theta, is set by the function circuit.set_paramaters.
To Reproduce
Expected behavior
The result is
parameters [3.141592653589793]
getparameters [(3.141592653589793,)]
gate ry in circuit with matrix:
[[ 6.123234e-17+0.j -1.000000e+00+0.j]
[ 1.000000e+00+0.j  6.123234e-17+0.j]]
(1+0j)|1>
state  [6.123234e-17+0.j 1.000000e+00+0.j]
I think that the result should be
parameters [3.141592653589793]
getparameters [(-3.141592653589793,)]
gate ry in circuit with matrix:
[[ 6.123234e-17+0.j  1.000000e+00+0.j]
[-1.000000e+00+0.j  6.123234e-17+0.j]]
(-1+0j)|1>
state [ 6.123234e-17+0.j -1.000000e+00+0.j]
Desktop :
Thanks for reporting this @carlos-luque.
With the current implementation this is expected because dagger only acts at the time it is called. If you change the parameters after that, the action of dagger will be overwritten. It is possible to change the behavior and make it persistent, ie. the dagger will be re-applied every time the parameters are changed.
I agree that the current behavior is confusing, however I am not sure what would be the best approach for most users. @scarrazza @igres26 do you have an opinion? Depending on the decision, I can either fix it or update the documentation to make the current behavior more clear.
Thanks @stavros11 for your answer. I think that if the documentation clarifies that, it will be a good idea.
Thanks for picking this up. I think that this is a bit of an unusual interaction. I would rather go for a more detailed documentation that say, keep track if the gate is a dagger() of another and change the sign of the parameter in the background.
