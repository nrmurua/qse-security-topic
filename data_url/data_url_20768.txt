Having an api _pubkey(sk) -> pk would be beneficial IMO!
This would come in handy in the design of safe & sound downstream APIs such as an implementation of post quantum wireguard. In pqwg the peer needs to know both their private key and their public key. Letting both be explicitly specified explicitly opens up the possibility of a sk/pk mismatch; it is unknown to me whether this would lead to any attacks but I would rather like to avoid it. Ensuring that both keys match might also improve key binding properties of protocols.
This is not necessarily possible for all the post-quantum schemes in NIST Round 3.  For example in Kyber and FrodoKEM, the public key is something of the form (a, b = as+e), and the secret key is s; the value e is temporarily generated during key generation, but then discarded and not kept as part of the secret key.  Thus it is not possible to reproduce the same public key given just the secret key.
Thank you for the info. I'll close this then :)
