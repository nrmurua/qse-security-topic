Unless on a detached HEAD, .git/HEAD contains something like ref: refs/heads/master (or a reference to the branch) and does not necessarily get updated on a git pull. So, to make this work one has to also parse the content and add a dependency on the referenced file (see also the changes to tools/regtesting/do_regtest in PR #11)
Maybe this could be solved more elegantly with the ident gitattribute?
I don't think so: by the documentation it replaces it by the hash of the respective blob object which is the file itself, but we want to track the state of the complete tree, don't we?
You're right, my bad. I guess then we indeed need to find a way to dynamically add a Make rule that depends on the correct refs file.
the file .git/HEAD contains usually the following:
e.g. a reference to a branch. Unless one is on a detached head, in which case it is the actual hash.
So: first check if it the string in with a ref, then get the hash from .git/<the-specified-ref>.
Furthermore: we should check (if the git command is available) whether or not the tree is in a dirty state (uncommitted changes) and add this info the version as well.
