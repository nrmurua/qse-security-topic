Describe the bug
When qrl_start is run, it gives an illegal hardware instruction.
To Reproduce
Steps to reproduce the behavior:
Expected behavior
The QRL daemon starts
Desktop (please complete the following information):
Additional context
I will try updating the QRL dependency libraries to see if it helps. "Miskomando" roughly means "bad command" in Esperanto, if you are wondering.
After updating, I still get the same result:
It appears that my kernel has AES support too:

Edit: This also applies to the kernel I am actually using:

Edit 2: cat /proc/crypto appears to show it as loaded too (output truncated because it is very long):
Also:
Okay, this is interesting. I decided to run it through Valgrind, and although it has loads of errors, it does not crash this time:
https://pastebin.com/JFJpttXs
It's not about which ciphers your kernel supports. You need a CPU with AES-NI.
I see you're running a Nehalem! real classic. Unfortunately it doesn't have AES-NI...
Regardless of acceleration, how can I get it to not crash (other than possibly running it with Valgrind)?
Edit: As in, how can I one it to stop running the illegal hardware instruction and ignore hardware acceleration instead? PS: Looking at the log again, it appears that Valgrind has tricked it into using software cryptography as hardware cryptography. The warning message said that hashrates will be slower, not that it will crash altogether!
The error message is misleading. It says "don't expect high hashrates" but the fact is pyqryptonight will always crash if you don't have AES-NI. There is no alternate codepath - a patch would be welcome though!
This is related to theQRL/qryptonight#29
We had some contribution but it was adding some instability at the time. We need to find the time to understand what is the reason the PR was generating these problems. Hopefully someone can contribute to the ticket.
In the meantime, the alternatives are:
