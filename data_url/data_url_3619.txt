As a programmer it should be clear how I can stop the compiler from choosing different qubits than the ones I hand assign instructions too. The documentation should provide an example of how to do this.
The compiler will not rewrite your program onto different qubits unless it has to in order to make sense of the instruction. If you send Acorn CNOT 0 1, it has to rewrite it. If you send Acorn CNOT 0 5, it will only ever rewrite it in terms of CZ 0 5.
(There has been a lot of talk of using the compiler to select collections of qubits and qubit-qubit links with high fidelity. If this happens, we will be sure to make it clear how to disable this behavior. It is not a concern at present.)
@ecp-rigetti it seems that we also have the compiler doing simple moves to match the topology. Here's an example:
gives output
which actually optimized to remap the qubits from 0 and 1 to 0 and 6. Is this what you mean by "has" to?
Yeah, this is what I mean by 'has' to. It doesn't make sense to act by a CZ on qubits 0 and 1 on Acorn; they aren't connected by a qubit-qubit link. If you disable this rewriting, the program will be rejected by the QPU as unactionable. (In particular, I object to the word "optimized".)
@willzeng can we close this?
Yes this is cleared up
