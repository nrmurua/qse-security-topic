OpenQASM supports array references in the specific context of subroutine declarations. In the reference Python AST, the ArrayReferenceType appears to be an ordinary ClassicalType.
Unfortunately, the grammar is very constrained here, so things that you might expect to be able to do with a normal type will be rejected by the parser if you use an array reference. For example
To give a concrete example of why the above would be useful, I work on a compiler that will try to do subroutine inlining. There are several approaches to this, but in the simplest situation one could imagine rewriting something like
might get rewritten as
The above fails for array references because we cannot declare them in normal OpenQASM code.
I realize that there are other ways to handle function inlining, but my point here is just that having a "two-tiered" type system (with non-reference types usable in a general context, but reference types highly constrained) makes systematic manipulation of OpenQASM code tricky.
