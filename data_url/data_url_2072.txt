I am really confused of this exponentiation that I expected as exp(-1j X).
In fact, the definition of cirq.rx(r) is cirq.XPowGate(exponent=r/np.pi, global_shift=-0.5).
Because cirq.XPowGate(exponent=t) is
[[g·c, -i·g·s],
[-i·g·s, g·c]]   = g ( I c - i X s)
where:
c = cos(π·t/2) = cos(r/2)
s = sin(π·t/2) = sin(r/2)
g = exp(i·π·t/2) = exp(i r/2)
since the global_shift = -0.5, exp(i * pi * global_shift * exponent) = exp(i * pi * -0.5 * r/pi) = exp(-i0.5r) = g' = 1/g, so the final equation is g'g ( I c - i X s) = I cos(r/2) - i X sin(r/2)
However, when I remember the Euler formula like identity equation, exp(-1j r X) = I cos(r) - i X sin(r). Could you help me?
In details, the following equations seem to miss coefficient factor 2.
They all should be np.pi/2, not np.pi
Indeed, there is a factor of 2 missing in the line

At Cirq sync we decided to drop this functionality (support for np.exp).
Thank you for the clarification :)
This issue should remain open until we remove the functionality.
Is there an issue to where dropping np.exp is discussed?
No, we discussed it during Cirq sync. The reason we decided to drop it is that np.exp means element-wise exponentiation, which is not what we implemented.
Making this the bug to track removing support for np.exp since it is elementwise exponentiation.  #2741 is issue to define cirq.exp.
We should probably do this in two steps:
There is no longer any exp methods on gates in Cirq, so this is now fixed as far as I can tell.
