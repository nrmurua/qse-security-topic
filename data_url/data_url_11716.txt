{'qiskit-terra': '0.11.1',
'qiskit-aer': '0.3.4',
'qiskit-ignis': '0.2.0',
'qiskit-ibmq-provider': '0.4.5',
'qiskit-aqua': '0.6.2',
'qiskit': '0.14.1'}
Executing on IBM Q Experience Jupyter Notebook Server
Executing on IBM Q Experience Jupyter Notebook Server
When using Deutsch-Jozsa or Grover with certain oracles constructed with LogicalExpressionOracle the execution raises an 'Data for experiment "circuitXX" could not be found.' error
from qiskit import *
from qiskit.aqua import *
from qiskit.aqua.components.oracles import *
from qiskit.aqua.algorithms import *
expression = '(x & y & z & w) | (~x & ~y & ~z & ~w)'
oracle = LogicalExpressionOracle(expression)
g = Grover(oracle, incremental = True)
backend = Aer.get_backend('qasm_simulator')
quantum_instance = QuantumInstance(backend)
result = g.run(quantum_instance)
print(result)
Should run without errors
The problem seems to come from the size of oracle circuit, since the program works when using a shorter expression (expression = '(x & y & z ) | (~x & ~y & ~z)', for instance) or when using optimization in the construction of the oracle (oracle = LogicalExpressionOracle(expression, optimization = True))
The circuit generated from the above requires 35 qubits. If you tried running the above under BasicAer instead of Aer you would have seen an error to the effect that the number of qubits is 35  but BasicAer only supports up to 24. Under Aer it tries, since it can potentially support more, though still results in a failure, but as you indicate it seems to be down to the sheer size. We might be able to indicate a better error but the size may be the fundamental issue here. Using optimization=True on the logical expression reduces the qubits required to 27 which as you say works.
OK, I understand. Thanks!
I made a change so as to raise an exception with the underlying failure instead of having a message about a circuit not being found. Hopefully this improves things but it does not fix the overall problem as such just the exception/message raised.
Please note that in the meanwhile some work was done to improve the logical expression oracle in PR #821 which allows the above example to now in fact work without error.
Thank you!
