NOTE: This is a continuation of #1689. I missed the responses to that issue somehow.
When trying to build qiskit-aer, I encounter the following error (build log):
In #1689 (comment), @hhorii described an attempt to run conda build, but the problem was that the commited version of the recipe was used, which had already disabled the osx build since I could not get it to succeed (this is why in the output it says "Skipped: qiskit-aer from /HOME/staged-recipes/recipes/qiskit-aer defines build/skip for this configuration ({'numpy': '1.16', 'cxx_compiler': 'clangxx', 'python': '3.9', 'target_platform': 'osx-64'})."). Now that the qiskit-aer feedstock exists, I opened a new PR for testing the macOS build. I suggest retrying with the branch for that PR. Note that in the recipe I pinned to Python 3.9 to reduce CI usage, so it should be tested with 3.9 or the =3.9 on the python lines in meta.yaml should be removed.
I am not familiar with using pip install conda-build. It might be able to reproduce the problem. I usually install conda-build with conda. If I were testing, I would do this process:
There is also a build-locally.py script in the qiskit-aer-feedstock repo, so you could do python build-locally.py osx, but that does more setup.
qiskit-aer builds successfully.
Comparing the build environment in the qiskit-aer GitHub Actions CI with the environment from the conda-forge CI (like the one in the build log), what stands out to me is that in the qiskit-aer CI cmake reports the compiler as AppleClang 14.0.0.14000029 while in the conda-forge CI it is reported as Clang 14.0.6. My guess is that _SC_PHYS_PAGES is included in an Apple specific header that the conda build of clang does not include?
Searching for _SC_PHYS_PAGES and osx turns up a few things, mostly related to people trying to compile Linux programs on macOS using gcc. Could qiskit-aer do something like this?
I tried following the suggestion in the last link of my post above by adding this patch to the conda build. That was just the simplest implementation for testing. You may prefer a solution that keeps using _SC_PHYS_PAGES when it is available. That patch allowed the build to succeed. Also, it seemed like all the tests ran, but one of them from the pulse simulator seemed to seg fault according to stestr. I am not sure how worrying that is.
@hhorii Any thoughts on the patch I linked to in my last message? I could make it into a PR, but you may prefer a different solution.
