It seems there are Intel specific codes and compiler options (AVX related things) set without checking the host system.
Intel specific options and codes have to be ignored by cmake or pre-processors on non-Intel systems.
./CMakeLists.txt sets AVX options without checking host system (CMAKE_HOST_SYSTEM_PROCESSOR), so ignore setting if the system is not Intel.
Also ./qiskit/providers/aer/backends/wrappers/CMakeLists.txt has same issue.
And set(SIMD_SOURCE_FILE "${PROJECT_SOURCE_DIR}/src/simulators/statevector/qv_avx2.cpp") should be ignored on non-Intel systems.
In /qiskit/providers/aer/backends/wrappers/bindings.cc, including cpuid.h without setting include path can not find cpuid.h on Power Linux. (also ./src/framework/avx2_detect.hpp has issue on Power)
In ./src/controllers/qasm_controller.hpp using QubitVectorAvx2 class in run_circuit causes error on non-AVX systems.
I centralized the compiler flags setting in this request.  Perhaps there should be the possibility of a Power CI build test?
The detection code could probably just use #ifdef's to falsify AVX2.
