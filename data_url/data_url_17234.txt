The calling TimeslotCollection is being extended when this method is called.
Output
The TimeslotCollection should not be mutated and only True/False should be returned.
This line for interval in self._table[slot.channel] in is_mergeable_with() seems to be what is causing this. Since _table is a deafultdict(), it automatically creates an entry with key= slot.channel and value=[] if the key provided is not found in the dictionary.
I would like to try and work on this issue, I just wanted to confirm what expected behavior of the code inside of is_mergeable_with() is.
My guess is that is retrieves the intervals of the timeslots within the TimeslotCollection given, and checks those against the intervals of the timeslots within the TimeslotCollection that is self by using has_overlap(). But it only looks like the check happens if the timeslot.channel given is the same as the timeslot.channel in self.
I'm not super knowledgeable about this space though, so my assumption could be off.
Thank you for taking this on @Matt-Stypulkoski. Yes, this interpretation makes sense to make. Intervals only overlap if they share a channel.
Ok, just want to make sure I understand. Then an AquireChannel with an arbitrary Interval with begin: 1 and end: 2 would return True for has_overlap() if compared to another AquireChannel with conflicting begin/end times, but would return False if compared to a DriveChannel with an arbitrary Interval with begin: 1 and end: 2?
Two channels will only overlap if they are the same channel, ie., they have the same type (in this case AcquireChannel) and index (AcquireChannel.index). Equality can be checked with ==.
