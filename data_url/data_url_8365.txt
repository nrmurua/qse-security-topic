Hello everyone. I've been trying to use QuTiP to simulate a 2-site Bose-Hubbard model.
It's hamiltonian may be written as:

Where a1,a2 are the "destruction" operators. This hamiltonian should be diagonalized in the
fock state basis: | n1, n2 >, but I don't know how to do it in QuTiP, since the documentation only
has examples with a "single" fock state | n > .
Thank you for your attention!
Alright. In this case, "a" is the new fock state | n1, n2 >, right?
Also, I'll have to explicitly impose that n1 + n2 = n, correct?
Each site has a different mode, such that | n1, n2 >=tensor(|n1>,|n2>).
There are thus two destruction operators, a_1 and a_2.
The total Hamiltonian is constructed with this tensor structure.
nph1 = 10
nph2 = 10
a1 = destroy(nph1)
a2 = destroy(nph2)
h1 = a1.dag()*a1*(a1.dag()*a1-1)
h2 = a2.dag()*a2*(a2.dag()*a2-1)
h0 = tensor(h1,qeye(nph2))+tensor(qeye(nph1),h2)
h12 = tensor(a1.dag(),a2)+tensor(a1,a2.dag())
htot = u*0.5*h0 -t*h12 
For the eigenenergies and eigenvectors:
e,v=htot.eigenstates() .
In this example, the symmetry of interaction makes the choice n1=n2 natural.
Nevertheless, in general, the cutoff on the different sites could be different, for practical purposes.
In an open setting, different losses (pumping) rates at the two sites can introduce dissipation and incoherent drive leading to different steady state occupation numbers; it is possible to adjust the size of the bosonic Hilbert space accordingly for efficiency, being carful not to hit the ceiling of neither one, which is the real critical issue for bosons.
You might want to give a look at the QuSpin library, which is developed to handle exact diagonalization of spin, fermionic and bosonic lattices, http://weinbe58.github.io/QuSpin/.
