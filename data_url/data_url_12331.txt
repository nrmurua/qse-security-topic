I've ran this notebook with no problem. However, if I try to use qsim as a backend by passing the backend backend = qsimcirq.QSimSimulator() explicitly to ReUploadingPQC, then I get the following message
and it gets stuck there indefinitely.
Any idea of what might be going on?
replace
with
and then replace
My guess would be there is something going on with the interface here: https://github.com/tensorflow/quantum/blob/v0.7.2/tensorflow_quantum/core/ops/cirq_ops.py#L125, might be a good place to investigate more. Although I am interested in seeing why you want to use qsim as the backend when TFQ already uses qsim by default.
My guess would be there is something going on with the interface here: https://github.com/tensorflow/quantum/blob/v0.7.2/tensorflow_quantum/core/ops/cirq_ops.py#L125, might be a good place to investigate more.
thank you, ill look into it.
Although I am interested in seeing why you want to use qsim as the backend when TFQ already uses qsim by default.
It was a sanity check. I actually want to benchmark QRL using different backends, including cuQuantum. So for example I want run QRL using different QSimSimulator options like:
Im now trying on a gpu using these images  but now I face other problems that possibly require to compile tensor flow from source.
Another question. Any particular reason TFQ has pinned dependencies (as opposed to a range), could it be used with cirq>0.13?
thank you
GPU support for ops is super nascent (see: #759), I'm not 100% what state it is in so if you encounter errors, be sure to share them. Regarding pinned dependencies, there is a PR to update that (#697) but idk if it will happen.
thank you very much!
I've added the error I get on gpu
regarding the original issue about getting stuck on cpu mode. I've run these tests tensorflow_quantum/python/layers/high_level/controlled_pqc_test.py using the qsimcirq.QSimSimulator() and they all go through with no problem. This means it is able to construct the corresponding operator. But somehow, for the inputs of the qrl model it gets stuck whereas for the inputs of the tests it does not
