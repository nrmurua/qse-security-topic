Even though it is something we absolutely want to avoid there sometimes are instruments that only have set-commands, in this case I want the get command to return the value that was last set.
It is now already possible to extract the last set value by using the snapshot, however that does not make the interface the same when using it like any other parameter in some higher level script.
To give an example I have added a screenshot below of me running into this problem when developing a driver for an instrument where get-functionality has not yet been implemented.

The syntax I would propose would be something along the lines of
where soft get is either a reserved keyword (bad idea IMO), an importable function or code or some other object.
For now I'll just settle for the dirty hack of adding it in by hand.
EDIT: making get return _last_value explicitly
My main concern here is that users know when they're asking for a soft_get instead of a real reading, even if they're not the driver authors.
When do you think this functionality will be useful?
Actually, I bet the only thing a user has to see is .latest, used as a function as in the first case, or without calling it you have an object that can be a Loop action:
Seem reasonable? Any other ideas what to call this thing?
Small change, if I first standardize the names of stored values between StandardParameter and ManualParameter as discussed in #38 and #41 then we can plug this into Parameter rather than StandardParameter - of course in ManualParameter you wouldn't need this (it wouldn't hurt, it's doing exactly what .get() does there anyway...) but it would be nice to allow in other Parameter subclasses people might make.
@alexcjohnson .
I definately like the idea of .latest() or .get_latest(). I think that would be a good addition.
However having .latest does not solve the problem I am having which relates to instruments that have a lacking communications protocol (and there are surprisingly many of them) In that case I would like it to be able to use the standard .get() function.
For the specific problem I am having now it is a VISA instrument so I would like my parameter to still be a visa instrument and just rerout parameter.get() to the proposed parameter.latest().
If we add this feature we should add a note on when to and when not to use this feature in the docstring that explains it, unless you see a better solution. (Maybe .latest() for every parameter?)
However having .latest does not solve the problem I am having which relates to instruments that have a lacking communications protocol on (and there are surprisingly many of them) In that case I would like it to be able to use the standard .get() function.
I'm still not sure I get your point - you want to be able to use .get() exactly, or you just want to make sure there's always something available?
Maybe .latest() for every parameter?
That's what I was proposing above - if you just want to read this value out, you do:
and to put this as data into a loop:
I'm still not sure I get your point - you want to be able to use .get() exactly, or you just want to make sure there's always something available?
Yes, I want to rerout .get() to .latest() in some very specific cased (i.e. if the hardware does not support get-functionality). In all other cases I am very happy with the addition of the .latest() method.
@alexcjohnson
Actually on second thought, let's stick with having only the .latest() and no .get() in the case of soft-parameters. The only addition I propose is to have the NotImplementedError in the .get() refer to the .latest() explicitly so that the user will know immediately how to solve this.
The only addition I propose is to have the NotImplementedError in the .get() refer to the .latest() explicitly so that the user will know immediately how to solve this.
Haha I was about to propose exactly that. Sold, I'll add it to #48
closed by #48
