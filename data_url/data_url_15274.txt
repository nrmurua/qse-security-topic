In trying to see which backends are affected by #8858 I realized that there is no way to grab a list of backends like the IBMQ provider does.  Namely the IBMQ provider allows for grabbing a list of all backends via provider.backends().  However fake_provider.backends() raises: TypeError: 'module' object is not callable.
The fake provider isn't meant to be a drop-in replacement for the IBM-specific provider, especially with regard to providing out-of-API functionality. The Provider API Terra provides has the Provider class define this method, which is what the fake provider does too.
Despite most of the fake backends being based on IBM hardware, especially now we've promoted these objects to being fully supported, we're trying to support the letter of the actual API with them, rather than whatever extra stuff ibm-provider adds on top - that makes this type of object much more useful for people who aren't just using IBM hardware.
Yeah, but then one loses a lot of nice functionality.  E.g. how do I find the fake backend with the smallest cx error rate programmatically?
The function is just attached to a different object - we have the list of backends as FakeProvider().backends() or something like that. ibm-provider provides extra functionality on top of that, which Terra isn't going to replicate, because it's out of scope for us - we're not going to mirror ibm-provider. Aer can (missing V2 support aside) produce simulators from "real" backends, so if you're looking for up-to-date and full use of the ibm-provider API, the solution is to use the ibm-provider API.
Ahh I didn't know about FakeProvider as it is at the same level as the backends themselves, which is odd, but does solve my issue!
