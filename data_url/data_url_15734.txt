Parsing qasm is quite slow at the moment. Profiling shows that a large part of the time is used in constructing the lexer/parser. When processing a list of qasm files this is inefficient.
Can the qiskit.qasm.qasm.Qasm object be refactored so that the parser becomes an element of the base class so it can be re-used?
Unfortunately for QASM 2, this is a low priority right now - we're putting most of our effort in getting QASM 3 support going, which will have a completely different parsing method (we're moving a lot of parsing out of Terra), and is much more complicated.  There is some vague hope that we may be able to re-use some of that for QASM 2 as well, though, so it's not completely out-of-mind.
The new QASM 3 structures will most likely use a pre-built parser from a separate package, and will be in a more modular structure (possibly) with Importer and Exporter classes, which can be re-used to avoid costly operations.  You can see some of the progress of the exporter in #6565 (the new exporter), the new AST for QASM 3 just merged at openqasm/openqasm#269, and efforts on QASM 3 imports to Terra are just kicking off now (nothing public yet).
