It seems like a common pattern to want to do
circuit = Circuit().append(o1).append([o2, o3])
?
err well
circuit = Circuit().append(op tree)
(easy to combine first and second for op trees)
Making it chainable makes sense to me, but I find chainable APIs in python to be somewhat non-idiomatic because you have to use explicit line-continuation or an ugly brace style if your chain goes longer than a single line.
I think the "give any iterable and its fine" is sufficient to cover this use case, and I agree with Matthew that chaining is kind of ugly in python.
I vote close.
I agree about chainable in python ugh.
Maybe a static method
circuit = Circuit.from_op_tree(...)?
+1 for static method. Factory functions like that are very useful.
I would call it from_operations. OP_TREE is a concept we want to avoid explaining if possible, and instead say "look it just works!".
