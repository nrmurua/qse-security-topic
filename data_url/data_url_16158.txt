When I transpile a circuit at optimization_level = 2 on all those backends :
ibmqx2, imbq_16_melbourne, ibmq_athens, ibmq_santiago, ibmq_rome, ibmq_manhattan, ibmq_toronto, ibmq_bogota, ibmq_montreal, ibmq_sydney
that all have now the new set of basis_gates ['id', 'rz', 'sx', 'x', 'cx'], there is u1 gates appearing on the new transpiled circuit, which should not be here because the basis_gates come from the backends, which have all the new set, without u2.
I have the error on all the backends listed above, example for Melbourne :
We get this result :
The depth of the transpiled circuit is :  25
Optim = 2 :  OrderedDict([('cx', 17), ('rz', 12), ('sx', 7), ('measure', 5), ('u1', 2), ('x', 2), ('id', 1), ('barrier', 1)])
There should not be this u1 here.
So I took a quick look to dig into this issue this morning. The issue is the CommutativeCancellation transpiler pass isn't basis gate aware and only knows how to use the U1 gates for z rotations: https://github.com/Qiskit/qiskit-terra/blob/master/qiskit/transpiler/passes/optimization/commutative_cancellation.py
To fix this we probably either need to update the pass to basis aware, or update the default level2 pass manager to run basis translation in the fixed point loop after we run commutative cancellation.
This is a duplicate of #5644 (missed that before) so I'm going to close this and we'll track this in #5644
