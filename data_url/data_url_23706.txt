If you encounter a bug use the following template.
If you have a feature request feel free to freestyle.
no error
I get the error (see below):
from which it is apparent it uses  _valmapping_get_parser for which the docstring says:
So it seems to me that it ignores my get_parser
error traceback:
operating system
win7
qcodes branch
local, related to driver/AMI_430
qcodes commit
latest merge with master
de88c36
@damazter  quick comment of which I am not sure about: isn't the val mapping supposed to be the other way around ?  {'0':False,'1':True }
@giulioungaretti I think it's right how it is now.
@damazter For some reason it acts as if the get_parser is None and then skips it
@Rubenknex
It is also running through  _valmapping_with_preparser so maybe I am fundamentally misunderstanding how this part of parameter works
@alexcjohnson  can explain you ðŸ¦„
@giulioungaretti
from the docstring
also from the docs:
So yeah, it should work. Seems like for whatever reason the value it's getting is something that will cast to 0 but isn't '0'... perhaps it's getting '0\n' or something? If that's it, you can either:
To make it easier to debug in the future, we should keep track of the original value passed into _valmapping_get_parser and report that instead of after attempting to cast it to integer.
Anyway get_parser=str, while I don't think it's the problem here, isn't going to do anything if you already have a string that you read from the instrument.
@alexcjohnson  thanks!
@giulioungaretti
@Rubenknex
@alexcjohnson
Comparing integers fixes all my problems, I made a pr to the relevant driver. For me this closes the issue, but if you want to solve the underlying problem as well 'giulio' you can keep this open, otherwise, just close it
Ah I see, your AMI430 driver is an IPInstrument - and it looks like we don't strip terminators on read for IPInstruments, even though you have one defined. Perhaps another thing we should fix...
@damazter  I think I will  close this. The get_parser is indeed working as expected!
For posterity sake:
in this case the instrument was returning something like:
which is not equal to  "0"
but  casting to int:
which is equal to  0 
