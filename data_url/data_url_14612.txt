Quantum state circle visualization
The circle visualization allows to visualize the superposition of states of the qubits in the quantum system. Each state in the superposition is represented with a circle where the magnitud of the coefficient is depicted with the size of the radius and the relative phase with the arrow and the color using the QISKit color wheel.

The following code as an example:
from qiskit import *
from qiskit_textbook.tools import array_to_latex
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.patches as patches
import cmath
import colorsys
def print_circles(state):
sfigure, axes = plt.subplots(figsize=(60, 60))
q = QuantumRegister(4)
circ = QuantumCircuit(q)
circ.h(q)
circ.t(q[0])
circ.s(q[1])
circ.z(q[2])
stvBackend = Aer.get_backend('statevector_simulator')
job = execute (circ, stvBackend)
state = job.result().get_statevector()
array_to_latex(state, pretext = "\text{Statevector} = ", precision=1)
print_circles(state)
