Add Jens Koch key formulas for Transmon analytics add to analysis toolbox (Koch 2007 Charge Offset Insensitive Qubit...)
[ ] Port my mathematica code over to python
[ ] Create a notebook to reproduce these plots



Heres my code in mathematica to do this, just port over to python



For the plots

This can be done easily in my analytic modelling of the transmon I have done in python. I can do a notebook to reproduce the plots to show how the code is used.
This can be done easily in my analytic modelling of the transmon I have done in python. I can do a notebook to reproduce the plots to show how the code is used.
Do you think you are still able to do this, @warrench ? It looks like the calculation of the mathieu characteristic values in scipy is problematic (apparently a documented problem: scipy/scipy#3075) so another approach seems to be necessary.
The way that the Mathieu functions are implemented are by solving the Mathieu equations. Whatever program you are using is solving it numerically in some way. Likely some variation of https://dl.acm.org/doi/10.1145/155743.155796
I do not use scipy to use their version of the Mathieu equation. The problem directly maps onto diagonalizing a tridiagonal matrix. This is already committed in the analysis section and it is working.
https://github.com/Qiskit/qiskit-metal/blob/main/qiskit_metal/analyses/hamiltonian/transmon_charge_basis.py
This is also easily implemented with Jens Koch's scqubit package
https://scqubits.readthedocs.io/en/latest/
I guess the issue is to create a notebook for it. Of which I can do it when I have time, but I don't know if it needs to be included in a tutorial or not or where this would be placed.
