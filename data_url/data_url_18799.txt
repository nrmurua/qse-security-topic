From the paper:
"At compile-time, specialized defcal declarations are greedily matched with qubit specializations selected before instruction arguments. If not all parameters are specialized, the declaration with the largest number of specialized parameters is matched first. In the event of a tie the compiler will choose the defcal block that appeared first in the circuit."
The tie language is not in the spec, so we should add it. Also with our approach to backend.inc from #184 we should switch to prioritizing the last block that appeared in the circuit. That way users can override definitions provided by the backend.
üëç
