Hello,
I've tried to understand the "Grover algorithm". So I built my own example for 4 QBits (0011).
The first 3 rounds are fine, but at the 4'th round the probalilty is lower than before.
For the last step (sqrt(16)) of the algorithm I would have thought it is near 1.0.
I'm not sure if this is a bug of the engine or, anyhow, my fault.
Any ideas?
https://algassert.com/quirk#circuit={%22cols%22:[[%22X%22,%22X%22,%22X%22,%22X%22],[%22H%22,%22H%22,%22H%22,%22H%22],[%22Chance4%22],[%22~vuu1%22],[%22X%22,%22%E2%8A%96%22,%22%E2%8A%96%22,%22%E2%8A%96%22],[%22Chance4%22],[%22~vuu1%22],[%22X%22,%22%E2%8A%96%22,%22%E2%8A%96%22,%22%E2%8A%96%22],[%22Chance4%22],[%22~vuu1%22],[%22X%22,%22%E2%8A%96%22,%22%E2%8A%96%22,%22%E2%8A%96%22],[%22Chance4%22],[%22~vuu1%22],[%22X%22,%22%E2%8A%96%22,%22%E2%8A%96%22,%22%E2%8A%96%22],[%22Chance4%22]],%22gates%22:[{%22id%22:%22~vuu1%22,%22name%22:%22Oracle%20A%22,%22circuit%22:{%22cols%22:[[%22Z%22,%22%E2%80%A2%22,%22%E2%97%A6%22,%22%E2%97%A6%22]]}},{%22id%22:%22~tfb3%22,%22name%22:%22Oracle%20B%22,%22circuit%22:{%22cols%22:[[%22%E2%97%A6%22,%22%E2%97%A6%22,%22Z%22,%22%E2%97%A6%22]]}}]}
Er ... if I take the original example and add some rounds the same thing happens - it kind of overflows.
Which seems possible as I understand the QBits and the operations on it.
Is the Grover algorithm defined like that? One MUST stop after "sqrt(n)" steps?
Edit:
The answer is yes (see https://en.wikipedia.org/wiki/Grover%27s_algorithm).
