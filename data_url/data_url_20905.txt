Hi,
A while ago I started on a similar project to support the NIST post-quantum crypto algorithms in Python: https://github.com/HarryR/Pypqc
I think it has similar goals to this project, but I was aiming to be able to import algorithms without having to modify them.
Any ideas on collaborations that would be worth while?
As @cryptojedi stated, the intention of this project is not to be a (user-aimed) library of post-quantum software, we want to provide clean, portable code such that other projects can build their own nice, user-friendly wrappers around it (e.g. liboqs or your lib) use it as a starting point for projects such as efficient platform-specific implementations (e.g. AVX2 or pqm4).
We're currently working on setting up the infrastructure; we want to build and run some basic tests on various targets, including Linux, OS X, Windows, ARM, 32-bit machines, big- and little-endian machines, etc.  We also want to do some integration sanity checking, such as making sure all the symbols are namespaced.
We're also probably open to contributions of C implementations, but that would currently involve some manual checking labour until all the automatic checks are in place (and the current implementations don't even meet our rules yet!). I'd wait a short while until this stabilizes.
The title of this issue, "Support for other languages", is however out of scope, I think, so I'll close this issue ‚Äì don't let this discourage you from providing your thoughts on the things related to integrating implementations sourced from this project into python that would be within scope.
No problem, you've raised some interesting points and it's good to have a better idea of the goals for your project.
I will have a think about it and see what comes to mind üëç
