When trying to resolve this issue, copy_from_upstream.py failed to function correctly, as it has an (apparently) incorrect constant baked in here: This "27" seems to stem from the non-PQClean-originating algorithms and apparently now is wrong (probably since #1013). @bhess: Do you agree? @xvzcf @dstebila : Do you have suggestions how to resolve this? Should we somewhere have a counter of non-PQClean algs that breaks when the algorithm count changes? Or shall we simply manually adapt it at each import run? The currently correct number seems to be "29"... But that's not really robust...
This "27" seems to stem from the non-PQClean-originating algorithms and apparently now is wrong (probably since #1013)
Yes, it's the number of algorithms not pulled automatically by copy_from_upstream (pqclean and pqcrystals). Perhaps it's better to keep track of this number outside the copy_from_upstream templates.
Perhaps it's better to keep track of this number outside the copy_from_upstream templates.
Fully agree. @xvzcf Mirroring your thought on the NIST levels, could we maybe pull that number (of non-PQClean algs) from the coming-soon™ YML docs, too?
Fully agree. @xvzcf Mirroring your thought on the NIST levels, could we maybe pull that number (of non-PQClean algs) from the coming-soon™ YML docs, too?
Yes I think that might be a better place since we should have a full view of all the liboqs algorithms there.
Yes I think that might be a better place since we should have a full view of all the liboqs algorithms there.
OK, created #1039 to make progress on this issue and created #1040 to resolve the non-PQClean alg inclusion as per the above.
