The documentation and/or the behavior could be cleaned up.
The doc string says
https://github.com/Qiskit/qiskit-terra/blob/9f5f8fba5145cdfb521a0ed650e2273b8830b158/qiskit/result/counts.py#L39-L48
This might be better:
All keys must be in exactly one of the following formats. The format will be determined by examining the first key.
I make the recommendations first and give examples of problems later. I'll mention one main issue, however: A stored key 100010 may be generated from either dit or binary input. That information is lost.
I suspect that these have been discussed, but not implemented yet for lack of resources (time).
It's not really validation, but an error in parsing that enforces the same format. (Is this "Parse, don't validate"?)
But, if the first string is not binary or hex it is considered a dit and no further validation is done
Finally, this error message for invalid input neglects to mention dit input.
https://github.com/Qiskit/qiskit-terra/blob/9f5f8fba5145cdfb521a0ed650e2273b8830b158/qiskit/result/counts.py#L103-L104
Counts({'1001': 3}) is interpreted as having dits for keys. ('0b1001' would be necessary for it to be recognized as binary.) But the base is not stored so subsequent method calls implicitly assume the former is binary.
Looking at the logic in the constructor, it seems that an input format of bitstrings with no leading 0b and no spaces is intended to be supported.
