I don't know when this started but Vivado reports congestion level 5. This looks to increase build time and Vivado says it can "impact timing closure."
Yes, we know about this. Did it not meet timing?
#951
Vivado is working very hard to achieve closure and seems on the edge of not finding a solution. If the Xilinx model for Kintex UltraScale were slightly off, Vivado may claim timing closure but produce a .bit that is borderline. Do you have reason to suspect this?
I'm uncomfortable with Sayma's reliance on a gateware design that's so brittle. What are the prospects for reducing congestion in Sayma with SAWG? What steps have you taken to improve the situation? @hartytp or others have suggestions for other things to check. Is a larger FPGA needed?
Kintex-7 doesn't seem to have this problem; at least we did not observe it (though the SAWG on KC705 has fewer channels).
If the Xilinx model for Kintex UltraScale were slightly off, Vivado may claim timing closure but produce a .bit that is borderline. Do you have reason to suspect this?
Shouldn't do if everything is correctly constrained. Vivado is supposed to perform a conservative timing analysis that provides a complete guarantee over PVT. There is always the possibility of a Vivado bug, but we have used a few different versions.
Is a larger FPGA needed?
I still suspect we're missing something obvious and that there is a relatively simple gateware solution.
Bigger FPGA probably not the way to go (the compile time is already long enough). Simplifying the SAWG in the way @jordens suggested elsewhere could help quite a bit and is probably worth doing in general.
