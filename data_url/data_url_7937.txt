Currently, Qobj has several attributes which are somewhat expensive to compute:
Of these, type and isherm are cached by Qobj._type and Qobj._isherm, respectively. These should be unified, so that the other three are also cached properly. Moreover, we should add unit tests to make sure that this caching is properly invalidated under at least some reasonably common manipulations. For instance, with the caching of type, it can sometimes fail in unexpected ways to build an object up then redefine its dims:
The first of these two snippets correctly prints super, while the extra print(J.type) in the second snippet causes it to cache type and print oper twice. An experienced user can of course invalidate the cache with J._type = None, but that is somewhat counter-intuitive.
Hello, I would like to be assigned this if possible. I've been working on it and think I have some form of preliminary solution
Hi @CaineArdayfio, thanks for your interest. You are very welcome to open a Pull Request if you have some solution, even if it's not a perfect one. @Ericgig, is this still an unsolved problem?
Yes there is nothing in the code for this right now, feel free to propose your solution.
@CaineArdayfio, there is no official assignment. If, as a user, you see something that is missing, you can just propose a solution. In general, parts of Qutip that need some attention and nobody is working on:
