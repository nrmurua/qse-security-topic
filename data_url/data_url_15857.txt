When a QuantumCircuit is initialized as QuantumCircuit([Qubit(), Qubit()]), the draw() method has some errors
returns
It would be better if the qubit labelling is done similar to that in the registerless circuits.
Using _0: for the text drawer was an attempt to mirror the existing convention of {reg_name}_{reg_index} with _{circ_index}, but I agree it's not clear that this is drawing a registerless bit and not just a bug. Suggestions welcome! (Maybe __{circ_index}?)
@kdk __{circ_index} does look like a good idea. But then I think we might also need a way to distinguish between registerless qubits and registerless clbits (or do we?). For instance,
draws
which I feel might be confusing.
@kdk @TharrmashasthaPV The _ probably doesn't work as well in mpl and latex drawers, since the numbers there are subscripts. I think it would be best to have a solution common to the 3 drawers. I kind of like the raw numbers and maybe a * for classical. Like,
Any other non-alphanumeric character could be used. If we can get a consensus on this, I can make the change for all 3 drawers.
@TharrmashasthaPV @enavarro51 I don't think we need to distinguish between classical and quantum bits in the labels, since they are distinguished by their line type (- vs =) for all three drawers (except empty circuits, but that seems okay to me.)
I do like the suggestion of using raw numbers better than using _N or __N, so let's try that way.
Thanks, Kevin. I started looking at this and realized the 3 circuit drawers approach getting the bit names and numbers somewhat differently even though the displayed output is the same. This means for something like this, fixing the problem 3 ways. So I'd like to take a stab at putting the acquisition of bit names and numbers for display into a function in utils.py, that can be called by the 3 drawers, which will fix this and hopefully make maintenance easier in the future.
