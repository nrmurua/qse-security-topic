Using qiskit.Aer.get_backend('qasm_simulator') when the cpp backend is not installed yields the warning
The 'qasm_simulator' backend is not installed in your system. Consider using a slower backend alternative: 'qasm_simulator_py'
Previously, the qasm simulator would default to the python version if the cpp wasn't installed.
If this change was made on purpose, then fair enough. But it means we'll probably have to change the tutorial to consistently use the py version, so that it works for all users and so that it works with the binder.
Yeah this was done intentionally (#1303) because there were numerous questions of "why is my simulation running slow" and users didn't know they don't have the fast simulator installed. And the cpp vs. python simulators have diverged enough (e.g. noise models) that it didn't make sense to fallback.
Yes I think the solution would be to use the _py simulator or at least a try.. except statement.
The good news is that after #1469, the python simulators will be much faster.
Thanks.
Personally, I'd prefer it to throw a warning but run anyway. That would tell people why it's slow, but not break anything. In any case, I'll close this down.
After #1484, we should review these strings (I've open #1489 to keep track of this). Although I agree with @quantumjim in that we should use the Python provider version (which now lives as qiskit.Simulators), it seems tutorials will recommend installing the new Aer element. As a compromise, we could use qiskit.Simulators until 0.8, when Aer is stabilized enough to get rid of the previous C++ simulators (now on qiskit.LegacySimulators).
