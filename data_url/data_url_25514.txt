Implementation sans alembic migration script is in the branch 942-implement-db-v11.
@santoshkumarradha @mshkanth
@santoshkumarradha @mshkanth
Hi @cjao - Thanks for the FYI. Without the alembic migrations, I am guessing the DB schema wouldn't update itself to v11. We will be able to tie in v11 with our web app only after the DB schema has changed. Can you let us know when this is expected to be done?
Hi @cjao @FyzHsn - Clarification reg the v11 schema below
We notice 2 sets of executor & workflow executor related fields in the lattices table. Going by the description available in code below, we should use the workflow executor fields to display executor name & executor attributes for a lattice to a user on the GUI?
Hi @mshkanth , executor and workflow_executor play different roles.
The Lattice-level executor is the default electron executor if an electron doesn't explicitly specify an executor.
The workflow_executor is a new property of lattices. It currently serves two purposes:
Neither of these procedures can be safely performed in the main Covalent server process. They are delegated to the workflow_executor whose environment satisfies the requirements of the main and sublattice workflow functions.
@mshkanth from Ui perspective, postprocessong is a workflow level attribute while other executers are electron level. By defaults going forward workflow will be post processed on "client side" which would mean that the executer is essentially client's laptop. But in near future postprocessong will be removed as we think we can take care of what postprocessong is doing in preprocessing, but we are still making sure of the side effects.
Alembic migration script has been uploaded.
Hey @cjao One thing we found out when we were implementing v11 of db was that executor_data_filename and workflow_executor_data_filename seems to be empty for all the workflows we executed. Is this the expected behaviour or is there any workflows from the tutorial that will popluate these file. We had tried out a few tutorials that was present in the codebase and it seems to return empty data for these files.
Hi @Prasy12 , are the filenames themselves empty or just the file contents? The former would be a bug, but the latter is expected behavior unless the user specifies an executor plugin object instance (like DaskExecutor()) instead of just a short name like "dask").
See this example.
The contents of the file are empty. Will check this example and get back to you @cjao
@mshkanth from Ui perspective, postprocessong is a workflow level attribute while other executers are electron level. By defaults going forward workflow will be post processed on "client side" which would mean that the executer is essentially client's laptop. But in near future postprocessong will be removed as we think we can take care of what postprocessong is doing in preprocessing, but we are still making sure of the side effects.
Thanks @cjao & @santoshkumarradha - If my understanding is right, looks like executor & executor_data_filename continue to be the relevant fields in lattices to be shown on the GUI. Let me know if it is the opposite.

Hi @Prasy12 , are the filenames themselves empty or just the file contents? The former would be a bug, but the latter is expected behavior unless the user specifies an executor plugin object instance (like DaskExecutor()) instead of just a short name like "dask").
@santoshkumarradha Here is the reference, only if executor is mentioned like above ,executor details will be present.
cc : @mshkanth
