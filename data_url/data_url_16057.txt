The typical (and all the preset) pass managers have fixed stages, typically something like:
We should formalize these stages, we can expand the set over time (but probably not remove) and some are obviously optional depending on runtime conditions and options  and enable people to compose pass managers by constructing the phases individually and not have to worry about control flow.
This also provides us the option of including hook points for backends to add customization which are backend specific before and after each transpile stage (which is something I'd like to include in #5885 ). For example, if we have a backend with all custom gate definitions our 1q optimization pass will not be able to simplify anything. But, the provider/backend author can write their own pass that runs a custom post optimization loop to do this and we update transpile().
I'm not sure if Basis Translation and Optimization Loop can be easily decoupled. Optimizations usually take advantage of some level of abstraction that might get lost after the translation.
