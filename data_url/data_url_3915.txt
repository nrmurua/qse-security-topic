This is not important at the moment, but it would be nice to have the ability to create hardware agnostic kernels. Sometimes, for high-level quantum program studies, it might not be required to take a platform into consideration.
Currently, when creating a kernel, it is necessary to provide a platform. This is redundant with the requirement to provide the platform in the program to which a kernel is added.
These are two issues, when I read this right:
Ad 1: the platform is also used to collect the platform configuration file; that is used to create gates; without all this, the hardware agnostic program can only use default gates; is this what you propose; default gates are (as I see it) deprecated; when generating code for QX, it is also hardware agnostic (except for knowledge of the primitive gate set), and that would suggest using a default platform instead of no platform, with a default platform configuration file
Ad 2. yes, the kernel creation parameters are all redundant (except for the name), in my opinion, so including the numbers of registers which can also be taken from the program; I agree with revising the kernel creation interface
The json config file can be conditioned on the platform. So for "platform_none" option, it should be possible to define the platform without a config file. Or better still, if a program/kernel definition doesn't specific a platform argument, it can default to "platform_none" with some default json file internally.
Platform handling was redesigned in 0.10.0
