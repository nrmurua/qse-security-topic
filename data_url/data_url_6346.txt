"Computational basis" is typically defined as equivalent to Pauli Z basis, by convention, and QUnit already has optimizations that commute other gates around H and therefore optimize Pauli X basis. Like stabilizer simulation, and completing the 3 spatial axes of the Pauli operators, QUnit should be able to optimize for Pauli Y basis, as well. I'm already tinkering with this.
I'm thinking about how to possibly get around QUnit H gate commutation limitations, and it might be useful to decompose the H gate with the square root of Y or other Pauli gates. To do so, we'd benefit from a basis transformation that treats single-qubit Y basis vectors as {1,0} or {0,1}, i.e. this Pauli Y basis feature. I have a good amount of work on this, and I think it's worth completing, even if the efficiency benefits are not immediately manifest. I'll start on it, again, tonight.
