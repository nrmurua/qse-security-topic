Something like
Pro:
Con:
Makes it slightly easier to do inefficient things with ConstrainedQuadraticModel like cqm.add_constraint((x + y + z)**2 == 4) rather than cqm.add_constraint(x+y+z==2)
That is a good point. I am not experienced with how users make mistakes like that. I think having **2 is nice, and it's your call if the users may use it inefficiently.
I think that restrictive behavior is okay. We can always come back to this and make it less restrictive.
