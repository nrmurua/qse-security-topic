Using a Kasli v1.1 with a derivative of DRTIO satellite gateware from 2edf65f, I see the following error every 1 in ~10 resets:
I've did some investigation. Reinitializing Si5324 in a loop never results in stuck SDA. Neither does rebooting the board in a loop when done at safe points, i.e. when there is no I2C communication. As far as I can tell, what's happening is, when the I2C bus is not properly reset, such as if abruptly resetting the core device, the slave doesn't see any SCL pulses and holds SDA low.
PCA9548 has a feature to deal specifically with this:
An active LOW reset input allows the PCA9548A to recover from a situation where one of
the downstream I2C-buses is stuck in a LOW state.
Unfortunately, the PCA9548 reset is only wired to the FTDI chip on Kasli and not to the FPGA.
@sbourdeauducq, what is the process for getting a hardware change on Kasli?
Try doing a bunch of SCL cycles (with SDA deasserted) as initialization. Unless there is a hardware issue pulling SDA/SCL this will recover it.
@jordens that's the obvious workaround (I haven't tried it yet), but I think PCA9548 reset should still be wired to the FPGA in the next revision...
We have those boards out there right now, so whatever technique is implemented has to work without the hardware reset. Are there any ill effects from using SCL pulses when SDA is stuck instead of a dedicated reset anyway? We are initializing the I2C switches and resetting the Si5324 afterwards.
The dedicated hardware reset would also be partial anyway unless we connect a reset line to every I2C slave.
That's a good point, there's no room on the extension connectors for that anyway.
There are pin-compatible MAXIM chips that have bus lock-up detection which causes disconnection of problematic branch
