When I simulate the HHL algorithm provided by the teach_me_qiskit (link) locally, I had a same result with the tutorial. The ratio (the variable 'p' in the code) of the probability of getting '1000' and '1100' is around 0.25.
But when I run the same quantum circuit on a remote quantum chip, I found the ratio is very different from the simulation result, which can take the value between 0.5 to 0.8.
The number of slots for both cases are set to
The probability ration, p, is expected to be around 0.25 on both local simulator and the quantum chips.
I'm just wondering why the result on the quantum chip is so different to that on a local simulator, but don't have any suggestion. Thank you!
Hi,
Quantum Chips that exist now are noisy and discrepancies between simulators and real devices are expected. Have you tried to run your circuits on other real device backends? And on other set of qubits within the same backend to see how the results change (being better or worse)?
Hi, thank you for your reply. I find out that the result on quantum chip QX2 (5-quibit) has the best result, which is around 0.5. But for QX4 (5-qubit) and the 16-qubit quantum chip, the result is even worse, which sometimes can be more than 1. If I take the connections between qubits into consideration and try QX2 again (I modified the quantum circuit, making controlled gates only exist on the connections, and this process makes the circuit deeper), I will get a worse result. Does the depth of quantum circuit affect the result?
Yes, the deeper the circuit the more error we get as gates are very noisy and decoherence time is limited. qiskit-ignis is the package that is used for easing the error mitigation.
I am relieved that your circuit runs well and it is not really a bug. Instead, it is a limitation of NISQ devices. I am closing this issue, but feel free to reopen if necessary.
OK! Thank you for your suggestion.
