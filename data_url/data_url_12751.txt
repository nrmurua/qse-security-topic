Context
Currently we implement the tests for the tasks that restrict the number of qubits the solution can allocate using a custom simulator CounterSimulator, which offers several counting operations, in particular ResetQubitCount and GetMaxQubitCount.
Improvement
We should be able to use the recently introduced library operation AllowAtMostNQubits instead, and use the regular QuantumSimulator instead. The affected katas are:
This needs some careful testing to make sure the correct solutions passe and allocating extra qubits fails.
Example
In GraphColoring task, for example, task 1.5 check should look something like this:
Feel free to target one test at a time!
I Would like to work on these!
Note: no need to read my edits, i had issues with my tests but it was only because i couldnt pull the latest version of the repo! it is fixed now.  I am currently working on the 3 changes!
I was literally just typing the message to ask whether you got the latest version :-)
haha yeah, my fault for writting comment at midnight :-) thanks for the quick answer tho!
Also it seems that PhaseEstimation, task 2.2 is also using the CounterSimulator. Should we add it to the list?
Good catch, I missed the second task in PhaseEstimation - yes, please!
on it!
A little note on what im doing right now: the first 2 were pretty straightfoward, howerver im having issues with:  AllowAtMostNCallsCA. Right now im debuging without even considering the maxqubit constraint.
My test are failing at : Test1BitPEOnOnePair(X, BoundCA([X, H]), -1);
The framework output saysthat X is called more than once. It seems that for AllowAtMostNCallsCA(1, Controlled U, "You are allowed to call Controlled U exactly once"), ---- AllowAtMostNCallsCA does not see a difference between U and Controlled U. I might be doing something wrong on my side so i'll keep digging, but this is my conclusion as of right now.
@cgranade Do you know whether AllowAtMostNCallsCA allows to differentiate between controlled and not-controlled variants of a unitary in this scenario?
@JimmyHamel If AllowAtMostNCallsCA doesn't work in this scenario, I would switch just the qubit counting to AllowAtMostNQubits and leave operation counting as is, and probably file an issue on the libraries repo describing the behavior, similar to microsoft/QuantumLibraries#343. We won't be doing a mass switch to AllowAtMostNCallsCA until that one is resolved, so it's ok to keep CounterSimulator here for now.
Sounds good! I'll keep the CounterSimulator for PhaseEstimation, tasks 2.1 only and change only the qubit counter part.
I created an issue in the QuantumLibraries repo, you can find it here: microsoft/QuantumLibraries#367
thank you!
Related pull request: #560
