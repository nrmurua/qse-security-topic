The circuit, transpilation and circuit assembly modules are well benchmarked. There should be associated benchmarks for the pulse path and an associated integration benchmark from the construction of a relatively sophisticated quantum circuit, default backend transpilation and scheduling.
Benchmarks:
how about adding error mitigation as a potential target? it requires stretching of pulses and may have a different aspect from others.
We don't currently have an error mitigation module so this would be infeasible to add as a benchmark. All of the benchmarks above already have code for circuit generation.
Yes. This is why I said potential, just for future plan. I agree the list you have is enough to cover many practical situations.
Discussing with @kdk and @mtreinish it appears the current benchmarks are already taking a significant fraction of a day to run, we may wish to pare down the list. Any suggestions for what to cut @nkanazawa1989?
In that sense, benchmarks that has less dependency on circuit transpiler, ie benchmarks that don't intend to evaluate connectivity, are good candidate. There are two reasons:
For example, QV and random hex may insert many SWAP operations, depending on topology, and end to end performance depends on the result of qubit routing and basis gates (if swap exists) rather than scheduling algorithm. If the purpose of pulse benchmark is to evaluate the performance of scheduling algorithm, I think 2q RB is good candidate.
I think it is still important to have some end to end benchmarks that have interdependency. This is valuable to show realistic performance numbers. QV is a great example I think.
@mtreinish, I don't think this should have been closed as this is an epic with follow up issues coming.
It automatically got closed because, in that PR, I added the summary as "partially fixes" this issue.
@nkanazawa1989: I've moved this from the metapackage to Terra, since after #10546 it'll be here.  Could you see if this is still something you'll be wanting to do, or close the issue if not?
