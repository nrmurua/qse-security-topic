As of now, when submitting to artiq_master, AFAIK the typical development workflow is limited to print-debugging. Although debugging using breakpoints is problematic in ARTIQ due to eating up slack inbetween kernel executions, being able to inspect the state might nevertheless be quite useful and the former is not an issue anywhere before break_realtime() or outside run() anyway.
It would be nice to have a supported and documented method of debugging the host side of the experiment, ideally including the required IDE setup.
There seem to be two approaches worth investigation:
where the first one seems to be preferable in multi-user environment, as it could provide at least some isolation between the users such that the IDE will not stop the whole master with a single click of the stop button, but I am not sure if this can be implemented with debugpy this way. In both cases, setting up the IDE to call artiq_client at execution and attaching to the IP of interest should not be an issue.
In an ideal world, there would be a way to stop the rtio counter when a breakpoint is encountered on the host...
