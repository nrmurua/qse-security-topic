See title.
It should work.
The circuit transpiles successfully if passed a backend from IBMProvider:
These backends need to be updated, possibly with the code here - Qiskit/qiskit-ibm-provider#443
You can temporarily work around this by running:
I see, so the runtime backend issue needs to be fixed in the runtime repository. I'll open an issue there.
Hmm, ultimately I think this is a problem with Terra embedding the jsons that are meant to be interpreted by the Provider. This means the provider logic should be replicated in terra...
IMO, since Terra is backend independent the mock backends for IBM shouldn't even be in this package but rather the Provider package.
I'm going to close this issue because Qiskit/qiskit-ibm-runtime#738 was opened. For more specifics the underlying issue is that the target for the ibm_lagos backend is not reporting that it supports an operation named "if_else" so when the transpiler is trying to compile the circuit it doesn't know what to do with the IfElseOp in the circuit since it can't convert that to something the backend says it supports.
As for the fake backend this also fails but that's correct behavior in my opinion. The snapshot configuration used for FakeLagos doesn't list if_else as a supported operation (since it was made long before the backend could support it). This would be the same error if you tried to compile for FakeTokyo or a similar old fake backend. I expect the bug parsing the json to build the target that @taalexander  is mentioning is there if we were to add a fake backend which did say it supported if_else (although it is trivial to fix). But, the consensus is that fake backends will be part of the ibm provider package moving forward (see #9553) so this won't come up.
But, please feel free to reopen this if I'm missing something or there is more to discuss here.
