For some completely positive channels, it seems that CompletelyPositiveQ fails to correctly return True. In particular, for a qubit amplitude damping channel, CompletelyPositiveQ returns False if the strength is left as a symbol, even if enough $Assumptions are provided such that FullSimplify and Reduce give that all eigenvalues are nonnegative.
It appears that the problem goes back to the builtin function PositiveSemidefiniteMatrixQ:
I looked through the documentation for PositiveSemidefiniteMatrixQ, including scope and possible issues, and it seems like there is no (documented) way to make it think that symbols are anything but complex. We might have to revert to a manual method. I have asked on this SE question:
http://mathematica.stackexchange.com/questions/80002/checking-if-a-symbolic-matrix-is-positive-semi-definite
It should work correctly with assumptions now. I set it to use PositiveSemidefiniteMatrixQ for numeric channels, and to manually check non-negativity of eigenvalues, using FullSimplify with any given assumptions, for non-numeric channels. It will now return an error if it can't deduce the non-negativity of any eigenvalues with the given assumptions:
Of course using Eigenvalues and FullSimplify might make it very slow, or not finish evaluating, for complicated channels.
