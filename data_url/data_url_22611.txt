There's no reason they should, and this avoids dependencies. Currently the build fails because gateware requires numpy (?)
Note that installation instructions assume that they do.
What does "avoids dependencies" mean? Build dependencies or runtime dependencies? The bitstreams are of little use without artiq (only in some hypothetical "comissioning" installation but even that would usually want to run tests).
We should probably not try to have artiq runtime-depend on bitstreams. "All bitstreams" for mere installation convenience would be problematic because of failing builds even if the bitstreams don't use much space. "Any bitstream" will likely break with conda. The reverse should be done however. Each bitstream should depend on the matching artiq version (if that does not kill conda's dependency resolver) and it should be obvious that a bitstream needs to be installed when installing artiq.
Build dependencies. Runtime dependencies are already handled as you say.
The gateware "requires" numpy because importing things in artiq.gateware executes artiq/__init__.py, which in turn imports things that require numpy. This is the same problem that I mentioned in #181.
I've revisited this to triage. The crux of the issue is:
I'm not sure where to break the chain, or if it makes sense at all. Do we still want to address this? If yes how?
We might want to have experiments do from artiq.language import * and not have artiq/__init__.py do that. artiq encompasses so much more than the language.
Agreed. But this breaks a user API (even if the change is simple), so we should probably do that in version 2.0 and keep version 1.0 compatible with the current code.
I would argue the opposite. This is a tightly contained change where we know very well what the fallout is. Regressions or follow-up changes are unlikely. The earlier we push this change, the less work it will be.
