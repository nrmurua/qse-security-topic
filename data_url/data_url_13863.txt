Hi,
I'm trying to employ PyZX FullReduce pass to optimize quantum circuits corresponding to Trotterized evolution of a quantum system. The target circuit corresponds to a Trotterization of  evolution operator of 1D transversal field Ising model with nearest neighbor interactions. The circuit was build using QiskitAqua (PauliTrotterEvolution).
I'm observing a somewhat strange behavior of PyZX FullReduce pass. For small number of qubits (N=4) PyZX was able to reduce CX count substantially (~20%). However, when increasing number of qubits in the target circuit (# of spins in TFIM, N=16), PyZX increases final CX count. It inserts dense blocks of CZ gates and it looks like that the CZ overhead grows with the number of qubits.
Is this behavior expected? Is there any way to (maybe by using a specific combination of PyZX passes) to overcome this problem?
I'm attaching screenshots of fragments of the circuit before/after PyZX FullReduce.
I'm also attaching QASM files before/after optimization.
Thanks!
Before:

After:

CX count before 1200
CZ count after 3666
CX count after 180
trotter_16q.zip
I haven't looked at your circuits in detail, but in general the "simplification" passes of PyZX can indeed increase CNOT count. There is unfortunately no way to know a priori when it is beneficial to use a ZX-diagrammatic rewrite and when it is better to do something simpler.
