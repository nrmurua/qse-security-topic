Application
When using index labels, it would be nice if the samples in response.record.sample where column-ordered by index. This would save needing to do things like response.record.sample[label_to_idx[0]]. There is a small performance benefit (skipping the dict look up), and it results in cleaner code. I also think that this might be the less unexpected behaviour, though I do like the consistency of the current approach.
Proposed Solution/Alternatives Considered
Three options occur to me:
@caja-matematica @sploiber
@arcondello IMO, it seems that the last option could be the most seamless. The processing step to perform the remapping would be minimal, on the order of a line of code. Option 1, checking for integer labels [0,n) seems like a more in-depth change that isn't justified since the last option can solve the problem. Just my $0.02.
On the balance I am also leaning towards option 3. My only concern with the last option is that we might train people to expect index labels to be sorted, but rely on each sampler author to maintain that behaviour.
If I understand you correctly, is it possible to combine option 3 with a toggle akin to option 2? That way if a sampler author creates Response objects that doe not need/can't handle sorted labels then the behavior can be turned off (defaulting to True in this case).
From a customer/user perspective, I would definitely welcome this change. The way it is now, it is too easy to end up with seemingly incorrect results from the D-Wave (when you don't know about the inconsistent ordering). Here is a small example that looks reasonable but produces unexpected results:
The output is energy=-1.0 sample=[0 1 1], the expected result would be energy=-1.0 sample=[1 0 1]
I think it's confusing if you already label the qubits 0, 1, 2 but BinaryQuadraticModel changes the variable order to 1, 0, 2.
@dixr , thanks for the comment. So I better understand the use case, would
satisfy your needs for now?
@arcondello thanks for your reply; yes personally I'm fine with something like
But I was also thinking about improving the interface so that it is easier to get good results. I know at least two people who thought the results were simply wrong until they looked at the code of BinaryQuadraticModel to find the change in variable order, and there are probably some who just discard the results.
