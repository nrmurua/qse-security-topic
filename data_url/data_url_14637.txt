When working with circuit data it is always the case where something works for flat registers, but then requires a huge amount of effort to code for the myriad of possibilities of quantum and classical register partitioning of the circuit's qubits and classical bits, respectively.  Despite not playing any role in an actual computation, registers are hard-coded all the way down in Qiskit.   Qubits are defined over registers, the DAG uses registers, scheduling a circuit requires knowing register structures, swap mapping requires registers etc....  And again, there is no actual computation that cannot be done assuming something as simple as a flat register where things are indexed by integers.
It should be possible to completely remove the notion of register from Qiskit save for the user facing routines such as QuantumCircuit and Counts where the users request of a virtual register partitioning can be honored.  However, this can be done by having a "view" onto the underlying flat register that gets applied for things like visualizations, and accessing elements, but is not a property of anything internal to Qiskit.
