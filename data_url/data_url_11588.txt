from qiskit import QuantumCircuit, QuantumRegister, ClassicalRegister
from qiskit import Aer, BasicAer, execute
from qiskit.providers.aer import QasmSimulator
from qiskit.visualization import plot_histogram, plot_state_city
%matplotlib inline
simulator_mps = Aer.get_backend('qasm_simulator');
backend_opts_mps = {"method":"matrix_product_state"}
when I input these program,python tell me that ImportError: DLL load failed
Please write down information about your environment following the issue template as follows.
Qiskit Software	Version
Qiskit	0.19.3
Terra	0.14.1
Aer	0.5.2
Ignis	0.3.0
Aqua	0.7.1
IBM Q Provider	0.7.2
System information
Python	3.7.6 (default, Jan 8 2020, 20:23:39) [MSC v.1916 64 bit (AMD64)]
OS	Windows
CPUs	4
Memory (Gb)	7.818538665771484
Wed Aug 05 09:57:15 2020 ¢Dx¢D_?D¡PCRE?!
Could you paste the full error message? What is your Python environment, anaconda or anything else?
ImportError: DLL load failed often appears with cvxopt, e.g., cvxopt/cvxopt#171
We have replaced cvxopt with cvxpy. So If you make a new environment with the latest qiskit, you perhaps don't have the problem.
How to make a new  environment?
It's up to your python environment, conda, venv, pyenv, etc. Check the documentation of what you installed.
I will point out that the visualization aspects of Qiskit Terra are not installed if you simply did a pip install qiskit - if you want to assure the relevant dependencies are installed do pip install qiskit-terra[visualization] See also here https://qiskit.org/documentation/install.html which explains this aspect, as well as setting up an environment etc. for the install. I am not sure if the DLL import issue is related so say matplotlib, which is one of these dependencies. You can see the list of extra installs here https://github.com/Qiskit/qiskit-terra/blob/251930a7b5d83af121ea0f3aafb33a54a1860e14/setup.py#L111-L116
Since you are only importing Terra and Aer aspects in your above example it does not really seem like this would be an issue around Aqua.
We need more detailed error message around ImportError: DLL load failed to identify the root cause.
ImportError                               Traceback (most recent call last)
 in 
3 from qiskit.providers.aer import QasmSimulator
4 from qiskit.visualization import plot_histogram, plot_state_city
----> 5 get_ipython().run_line_magic('matplotlib', 'inline')
6 simulator_mps = Aer.get_backend('qasm_simulator');
7 backend_opts_mps = {"method":"matrix_product_state"}
~\anaconda3\lib\site-packages\IPython\core\interactiveshell.py in run_line_magic(self, magic_name, line, _stack_depth)
2315                 kwargs['local_ns'] = sys._getframe(stack_depth).f_locals
2316             with self.builtin_trap:
-> 2317                 result = fn(*args, **kwargs)
2318             return result
2319
<C:\Users\ASUS\anaconda3\lib\site-packages\decorator.py:decorator-gen-109> in matplotlib(self, line)
~\anaconda3\lib\site-packages\IPython\core\magic.py in (f, *a, **k)
185     # but it's overkill for just that one bit of state.
186     def magic_deco(arg):
--> 187         call = lambda f, *a, **k: f(*a, **k)
188
189         if callable(arg):
~\anaconda3\lib\site-packages\IPython\core\magics\pylab.py in matplotlib(self, line)
97             print("Available matplotlib backends: %s" % backends_list)
98         else:
---> 99             gui, backend = self.shell.enable_matplotlib(args.gui.lower() if isinstance(args.gui, str) else args.gui)
100             self._show_matplotlib_backend(args.gui, backend)
101
~\anaconda3\lib\site-packages\IPython\core\interactiveshell.py in enable_matplotlib(self, gui)
3405         """
3406         from IPython.core import pylabtools as pt
-> 3407         gui, backend = pt.find_gui_and_backend(gui, self.pylab_gui_select)
3408
3409         if gui != 'inline':
~\anaconda3\lib\site-packages\IPython\core\pylabtools.py in find_gui_and_backend(gui, gui_select)
278     """
279
--> 280     import matplotlib
281
282     if gui and gui != 'auto':
~\anaconda3\lib\site-packages\matplotlib_init_.py in 
172
173
--> 174 _check_versions()
175
176
~\anaconda3\lib\site-packages\matplotlib_init_.py in _check_versions()
157     # Quickfix to ensure Microsoft Visual C++ redistributable
158     # DLLs are loaded before importing kiwisolver
--> 159     from . import ft2font
160
161     for modname, minver in [
ImportError: DLL load failed: 找不到指定的模組。
this is all the information
Maybe this might help https://stackoverflow.com/questions/24251102/from-matplotlib-import-ft2font-importerror-dll-load-failed-the-specified-pro since the error seems to point to the ft2font line. Also this too perhaps https://stackoverflow.com/questions/47126186/matplotlib-cant-load-ft2font-on-windows-10
It seems related to matplotlib/matplotlib#18292
@leo07010 Did the above help you to solve your problem?
well,I think these don't help me well
My backend still can't work
@leo07010 Did you try looking at them - all the indications from your error messages seem to indicate a problem with ft2font. What version of matplotlib do you have? Is it 3.3.1 that the issue that @t-imamichi linked to - in which case try installing version 3.3.0 - pip install matplotlib==3.3.0 which according to the person raising the issue said it only occurred when they upgraded. If you read the issue a solution around installing the latest Visual C++ redistributable was given, which you could do as an alternative if you want to keep the latest 3.3.1 version. They also explain why the problem occurred. The version of Python in that issue is exactly what you use etc.
Think you!!! I had already dealed my problem
Hello @leo07010
Alternatively you could install the missing DLL from https://support.microsoft.com/en-nz/help/2977003/the-latest-supported-visual-c-downloads
As mentioned in matplotlib/matplotlib#18292, we noticed some newly installed Windows computer has VCRUNTIME140_1.DLL already installed. Hope this could help.
@leo07010 Great, glad you have the problem solved. I will therefore close this issue.
