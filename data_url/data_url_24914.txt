To initialize one of my qubit types, I pass an array of values. In this example, I want to study the current mirror, and so I need to pass an array of offset charge values. I would like to vary one or more values in this array, and observe the spectrum. The plot_evals_vs_paramvals function is not suited to this task, because I need to perform a variable transformation on the offset charge values. One way to solve this problem is to use the ParameterSweep class which lets you define an update_hilbertspace function, in which I can perform my transformation. However, attempting to initialize a ParameterSweep object with no interaction_list list results in an error. Here is a simple example illustrating the issue.
`import scqubits as qubit
qbt = qubit.Fluxonium(EJ=2.55, EC=0.72, EL=0.12, flux=0.0,  cutoff=110, truncated_dim=9)
hilbertspace = qubit.HilbertSpace([qbt])
param_name = r'$\Phi_{ext}/\Phi_0$'
param_vals = np.linspace(-0.5, 0.5, 100)
subsys_update_list = [qbt]
def update_hilbertspace(param_val):
qbt.flux = param_val
sweep = ParameterSweep(
param_name=param_name,
param_vals=param_vals,
evals_count=10,
hilbertspace=hilbertspace,
subsys_update_list=subsys_update_list,
update_hilbertspace=update_hilbertspace,
)`
I am using scqubits version 1.2.1, python 3.7.7
This is not ideal, I agree. For the time being, there should be a very simple workaround, I believe. Namely, before calling ParameterSweep, set:
hilbertspace.interaction_list = []
(Note: there is a small bug in the example code above: since truncated_dim=9, it is not sensible to ask for evals_count=10 leading to an error. Decrease evals_count to fix that problem.)
A fix for this is introduced in 67becb2. I will leave this issue open until the fix is included in the next release. Until then the above workaround or cloning the current master branch should take care of it.
Closing: this is addressed with release of v1.2.3
