Hi,
I need to work a bit more on the Julia side, but through some Julia packages I have made a QuEST.jl package.
https://github.com/fieldofnodes/QuEST.jl
It uses the latest master branch from this repo, is then built across multiple architectures with BinaryBuilder.j, then automatically wrapped with clang.jl
I used the default cmake options, so it should be multithreaded with gpu acceleration off.
There are a few wrappers that I add, namely an index shift so Julia users can keep the 1 based index over the C 0 index.
I know it's not really an issue, just wanted to share.
Hi there,
That's very cool to hear! Admittedly hearing the indices are being shifted frightens me - one will have to be very diligent to avoid introducing bugs!
Feel free to reach out when/if the package is in a polished stage, and I'll happily link it from the QuEST README.
Thanks,
Tyson
I will surely keep you posted.
I was thinking of adding an index shift function inside the functions that use thu Julia c call functions. Then anyone on the Julia side only uses the Julia index.
@TysonRayJones I wanted to ask, about GPU and distributed mode.
Can I enable them all at the same time?
Meaning, is QuEST "smart" enough to automagically use single thread over multithreaded if that is what the algorithm calls for, or do I tell it?
Along with this, I'd like to run on distributed mode, but I have not done this yet. How does QuEST decide how to allocate resources over multiple nodes?
Can I enable [GPU and distribution] all at the same time?
Currently, no. You can either parallelise your code via a single GPU, or by distribution over multiple CPU nodes (where each can be multithreaded). However, so-called "multi-GPU simulation" is a facility in our TODO list, and actually why we recently integrated a cuQuantum backend! The timeline for this is yet unconfirmed.
is QuEST "smart" enough to automagically use single thread over multithreaded if that is what the algorithm calls for, or do I tell it?
By default, QuEST will be compiled for multithreading, but you still need to specify how many threads to deploy before you run your program. As we use OpenMP, you can do this via setting the OMP_NUM_THREADS environment variable in advance. E.g.
I'd like to run on distributed mode, but I have not done this yet. How does QuEST decide how to allocate resources over multiple nodes?
You must choose how many nodes to deploy when you launch your code. This  must be a power-of-2, e.g. 2, 4, 8, 16, 32, etc.
See here for doc on how to deploy QuEST distributed.
