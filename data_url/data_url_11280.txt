As discussed at #322 , it would be very desirable to be able to compute the action of a QubitOperator on a vector represented by a numpy array without instantiating a Scipy sparse matrix instance. There are several ways one could implement this; I propose that we simply have a function get_linear_operator which takes as input a QubitOperator and outputs an instance of LinearOperator (see https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.linalg.LinearOperator.html) which has the method matvec implemented. Another possibility could be to have a method dot of the QubitOperator class so that one could do qubit_operator.dot(v) which returns a numpy array; @jarrodmcc might have more thoughts on this.
Also, @jarrodmcc mentioned that it would probably be best to implement this using the Numpy C API or Cython or something like that, for the sake of speed.
Note that @Spaceenter (Wei) and another Google 20%er (Sheila) whose GitHub name I don't know yet, are interested in working on this.
Sheila's github name is sheilaliuxl -- @babbush Could you add her as collaborator?
Done
