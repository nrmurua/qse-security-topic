at least by decomposition (so as to be backend agnostic)
Detect 3 cases to minimise elementary ops:
unitary is diagonal (<= 5 gates)
https://arxiv.org/pdf/quant-ph/0211002.pdf
unitary is real (<= 14 gates)
https://journals.aps.org/pra/pdf/10.1103/PhysRevA.69.032315
general unitary (<= 18 gates)
[ as above ]
However, these reduce to single-qubit general unitaries and controlled-NOTs.
A reduction allowing (and not necessarily minimising) controlled-general-single-qubit-unitaries will be presumably shorter and thus faster to effect.
Advice from Niel: interface for specifying the gate should involve default values being 0, since hardcoded 2-qubit unitaries (e.g. SWAP) are more likely to be sparse
This could be done using the cosine-sine decomp into multiplexors.
The multiplexors could be trivially natively implemented (when controlqubit=0, apply other unitary) but may need many new distrib functions.
Otherwise, each multiplexor can be one control gate and one not-control gate (trivially implemented; when controlqubit=0, apply unitary, which may have less code change).
Otherwise using no additional backend functions, the not-controls can be implemented with a single control and two NOTs, and adjacent NOTs from the 3 multiplexors can cancel.
Added on new_gates by instead swapping target qubit amplitudes to be on the same node
