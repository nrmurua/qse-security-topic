dear friends,
The Master equation solvers in QuTip like mesolve, admit collapse operators which act on the same site. But i have a master equation in which a part of Liuvillian, contains collapse operators, acting on different sites :
for example : sigmap(n) * rho * sigman(n+1)
Does anybody have an idea to implement such a master equation? Thanks for your attention.
Hi,
for such systems you might need to define a tensor product for your state and operators as
The c_ops argument to mesolve expects operators in Lindblad form, but you can also construct your own Liouvillian and pass that as the first argument.  To construct the non-Lindblad components you want, you may find spre and spost useful, which respectively turn an operator into a superoperator which multiplies from the left and from the right.  There is also sprepost, which is a more efficient way to combine spre and spost.  To construct the operators (if you only work on qubits - if not, you need to do it manually as @quantshah showed), you can use expand_operator.  So you can do something like
I've not seen equations in that form myself, but that's how you could go about if that's what you've got.
The c_ops argument to mesolve expects operators in Lindblad form, but you can also construct your own Liouvillian and pass that as the first argument. To construct the non-Lindblad components you want, you may find spre and spost useful, which respectively turn an operator into a superoperator which multiplies from the left and from the right. There is also sprepost, which is a more efficient way to combine spre and spost. To construct the operators (if you only work on qubits - if not, you need to do it manually as @quantshah showed), you can use expand_operator. So you can do something like
I've not seen equations in that form myself, but that's how you could go about if that's what you've got.
Thank you very very much for your help. As you know, the Liuvillian contains a term like [H,rho]. So if i put my operators in Hamiltonian, as you say, Does not contribute to the commutator?
qutip.liouvillian takes a Hamiltonian H and transforms it into the Liouvillian superoperator, which if no Lindbladian c_ops are supplied liouvillian is simply the [H, .] term you want.  This is what mesolve does internally, if its first argument is an operator.  The subsequent additions I made to the Liouvillian afterwards in that loop add on your non-Lindbladian collapse operators - mesolve will recognise that you have passed a superoperator and the only further processing it will to is to add any further Lindblad-form collapse operators found in the c_ops list.
So beside that if i have also normal collapse operators, i just need to define and put them at the fourth argument of mesolve. I thank you very much dear Jakelishman. Be safe.
