Simulating the unitary circuit with locally-defined unitary matrix is not allowed.
Concretely, we get the following error:
AerError: 'ERROR: Failed to load qobj: "unitary" params must be a single matrix.'
Returning unitary matrix corresponding to the quantum circuit
Do you have any idea why the error points out that > Failed to load qobj ?
@NnktYoshioka This is due to you naming the circuit with the same name as a basis gate for the simulator. The name "unitary" is reserved for unitary circuit instructions, so the assembler isn't unrolling it into the component gates. If you change to Y_half = QuantumCircuit(1) it should work.
Thank you for your quick reply. I see, we did not have to name it "unitary".
Actually I also want to visualize the circuit with many self-defined unitary gates (e.g. control Ry) using qc.draw(outtput="mpl") .
It would be nice if gates could be discriminated by giving names individually, but I found this is not possible.
Is there any other option?
Found out that you can get around this problem, enabling both simulation and drawing, by
instead of unitary_gate = QuantumCircuit(1, name = "gate_name").
Maybe there is some bug in the constructor of the circuit.
When I run unitary_gate = QuantumCircuit(1, name = "gate_name") I am able to run the circuit and get the output

What version of qiskit terra are you using?
@NnktYoshioka You could open an issue about circuit drawer labels in Qiskit Terra if you like and the people that know that part of the code can help you.
You could also consider using the terra Operator class for constructing custom unitary gates to add to circuits, see here.
@maddy-tod I think the simulator raises an exception if the circuit is empty.
