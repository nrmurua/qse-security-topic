@author: denis vion
"""
from numpy import *
from qutip import*
from matplotlib.pyplot import *

Sorry for the slow reply...  Yes, spectrum_correlation_fft  just does the one-sided FFT, but then takes 2*Real() part of the result, which should give the correct Lorentzian behavior.
As for the large difference in the tails in your result, I think its an issue of the sensitivity of the FFT to the number of points in the taus list.  if you increase it by a factor of 100 or so  and also multiply spec2 by 0.5, to compensate for the factor of 2 multiplication in spectrum_correlation_fft, the difference between the tails of the two results diminishes.
Your question does show that even accounting for the doubling of the time-steps in the spec2 result, it "converges", relatively speaking, much more quickly than just taking the positive FFT and doing 2*Real(), which is interesting...  maybe someone with better knowledge of FFT  than me can say whether its worth updating  spectrum_correlation_fft() to do it this way?
