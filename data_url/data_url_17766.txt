Circuits with user-defined gates will be visualized properly if user wants.
I've faced the following problem: when I define a custom gate using CompositeGate, the circuit_drawer fails to visualize a circuit with the defined gate.
As far as I understood, the reason is as follows: the generate_latex_source calls the fromQuantumCircuit member of DAGCircuit with the flag expand_gates set to False. This makes fromQuantumCircuit to fail during iterating over circuit.data since it doesn't expand custom gate to basis operations sequence, and, obviously, newly defined gate doesn't belong to the list of basis operations.
Consequently, when I manually change expand_gate flag to True, everything is visualized normally.
Thus, I found rather useful to include a choice whether to expand custom gates to the circuit_drawer. Probably, it could be done with additional flag or with extension of style possibilities.
Finally, I have a suspicion that such a behavior could be caused with unclear future of CompositeGate. If it is so, please don't be severe, I just tried to fix what concerns me at the moment.
Do you mind posting here your code? If I understand the problem correctly, it could it be because, currently, the drawers run the unroller before.
Luciano, I don't mind at all, sorry for not doing this in advance. Hope this will help!
Qiskit 0.6.1
Python 3.6.5
MacOS Mojave 10.14.1
circuit_drawer fails to visualize a circuit containing a custom gate created with help of CompositeGate
Here is a code for a custom gate:
And here is a simplest script which fails:
The last error message says that DAGCircuitError: 'gh is not in the list of basis operations'
A quantum circuit shall be visualized (the custom gate should be decomposed to the sequence of basic gates)
Allow user to set expand_gates flag at the calling of circuit_drawer
This is the same issue as #946. Closing and tracking there.
