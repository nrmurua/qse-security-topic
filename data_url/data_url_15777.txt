transpiler CouplingMap method fails to recognize that the graph with edges (0, 1), (1, 4) is connected.
The CouplingMap is_connected() method returns False, while the networkx  method returns True.
One option is to use the networkx is_connected() method instead of the retworkx method.
This isn't an issue with the underlying graph library being used, networkx would return the same result as retworkx if you were using the same graph (they use basically the same algorithm for determining weakly connected directed graphs anyway). The issue you're hitting here is that you're making a coupling map with 5 qubits/nodes, 2 of which aren't connected to anything. The coupling map object requires that all nodes are contiguously indexed starting at 0. So when you pass the constructor 0, 1, and 4 as indices it fills the gaps. For example drawing you above example:

this is a documentation bug in the coupling map class because https://qiskit.org/documentation/stubs/qiskit.transpiler.CouplingMap.html?highlight=couplingmap#qiskit.transpiler.CouplingMap doesn't explain this at all which we should fix.
Hi! Would it be possible to be assigned to this issue?
Also, as the name says, we should check when coupling map is created, if the coupling map has contiguous qubit ids.
Sure I'll assign you it now, it's actually just missing documentation on the CouplingMap class the constructor already identifies holes in the qubit ids passed in the edge list and fills them (see my earlier comment with the example). But, this behavior and the general requirement that the indices are contiguous starting at 0 is completely undocumented and not mentioned in the class documentation.
