Hello,
As far as we know the qBraid transpiler relies on a hub-and-spokes architecture around CIRQ. This allows it to be very accurate compared to other transpiler but it is also very slow and the time scales exponentially with the number of gates in the circuit (according to some tests that we carried). We thought it would be a good idea to add a one-to-one hardcoded transpilation between the different SDKs, i.e a one-to-one map between gates of the different SDKs (as it is the case for other transpilers like pytket). This would involve attempting the transformation using the one-to-one mapping first. If successful, the process would complete more rapidly, providing users with quicker results. However, in cases where the one-to-one mapping isn't feasible, the transpiler could fall back to the reliable hub-and-spokes architecture to ensure accuracy. Implementing this dual strategy could offer the best of both worlds: speed and accuracy.
No response
Thanks @mmlouamri, I think this is a great idea! There are definitely many performance benefits to attempting a one-to-one mapping first. I'm all for it. We could also do something similar for qasm conversions, and only fall-back to our pre-processing functions if a package's native conversion fails.
@mmlouamri if you're interested we can work together on this
@TheGupta2012 @mmlouamri It might be best to split this into multiple sub-issues, e.g. one-to-one transpilation for braket $\rightarrow$ cirq, etc.
Following up on this, should give user option to specify transpile method e.g.
