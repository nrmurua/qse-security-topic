Here's a small Target. The Operation names differ from the string by which they are keyed in the Target.
So if I want to know the gates I have available on (0,1), I could do, target.operations_for_qargs((0,1)), which gives:
But to look up the error for any of these, it seems like I need to know the associated key in the Target which is difficult.
If I try to get that via, target.operation_names_for_qargs((0,1)) I get a set which is not ordered like the above Instructions.
{'rzz_30', 'rzz_45'}
It would be helpful to be able to go directly from an Instruction to its error rate, and not have to go via the Target key, which may be some arbitrary string even.
So you can do:
there is also the target.instructions property which returns a list of tuples of the operation objects and the qargs it applies to. That can be paired with the instruction_properties() method to get the properties of a particular index
https://qiskit.org/documentation/stubs/qiskit.transpiler.Target.instruction_properties.html#qiskit.transpiler.Target.instruction_properties
which I think we added because you requested it for a similar use case in #5885.
The one constraint in general is that the name is the canonical reference to operations in the target, and each operation defined in the target needs a unique name accordingly. So if we work with anything other than the name it will be an O(n) lookup cost to find the operation we need.
That being said we should support the use case of lookup needed here, can you describe what you want the lookup method to look like and what the return is I think we can easily add this for 0.23.0.
there is also the target.instructions property which returns a list of tuples of the operation objects and the qargs it applies to. That can be paired with the instruction_properties() method to get the properties of a particular index
https://qiskit.org/documentation/stubs/qiskit.transpiler.Target.instruction_properties.html#qiskit.transpiler.Target.instruction_properties
which I think we added because you requested it for a similar use case in #5885.
I think I'm realizing now that instruction_properties() would be more useful if it took an Instruction.  Because as it stands, you have to know the global index for that instruction, which in my case at least I'm first filtering some instructions then trying to look up their error.
I agree the lookup will be O(n) and we should document that. But I think having the option is useful. For now I'll use the first solution you proposed.
Just thinking out loud would the interface for instruction_supported: https://qiskit.org/documentation/stubs/qiskit.transpiler.Target.instruction_supported.html#qiskit.transpiler.Target.instruction_supported
but instead of returning a boolean to indicate the target supports that instruction we had it return the properties?
So it would be something like target.lookup_instruction_properties(operation_class=RZZGate, qargs=(0, 1), parameters=[pi / 6]) and have it return the InstructionProperties
yeah that works too. and raise KeyError if not available.
