I have been informed (by Chris Wood) that my use of SDP in solving the convex optimisation problems that crop up in tomography may be a valuable contribution to the IBM SDK. As things currently stand the relevant section of my codebase is loosely structured as the following.
Does any of that functionality sound useful?
Hi,
That will be very cool. I'd be glad to help if possible. I have some questions:
Is it possible to use open source SDP solvers, say, cvxopt or sdpa?
Do you have a technical note describing your method? Perhaps we can just build a special solver
Anyway, even using matlab the use of sdp will be a good functionality.
Hello rraymondhp,
In regards to your questions:
I see no reason why this wouldn't be the case though I believe cvxopt has some implementation issues that would make working with it a bit more difficult; it won't deal with complex numbers* if memory serves. While this can of course be worked around it would add to development time. I chose Matlab CVX over SDPA(-P) only because a colleague of mine had previous success with it. I would be interested in building a custom SDP solver as it is an area I find interesting however that may involve quite a lot of work. I have no issues working on this over a long period of time but the same may not be true for you.
I do not, though I can make my code public if you wish (after I work out a bug, should not be more than a day or two). It doesn't do anything new its just an IBM specific implementation of process tomography.
Agreed, though for a release like QISKit I would prefer to have as little reliance on paid software as possible. This is all opensource after all.
* I stand corrected, it appears to now support complex convex optimisation. That is probably the way to go then.
Hello QCMonk,
Thanks for the reply. I agree that you can go fast by simply use Matlab CVX. We can work later to port cvxopt or other SDP solvers later. I have once used SDPA for quantum state optimization about 10 years ago. Need to refresh my skill, but I think it will be straightforward to do so (though might be time consuming).
Looking forward to your codes.
Hi @QCmonk,
Thanks for posting here. Ideally what we would like is to extend the functionality of the current framework to add additional reconstruction methods so everything can be done within qiskit and a jupyter notebook. Currently tomography results are stored as a list of dictionaries, where each dict records the projector of the input state, the observed counts, and the corresponding projectors for each measurement outcomes. The fitter methods should be able to process this data and do the reconstruction (though the internal format of this likely to change slightly in the next release... you can have a peak at my qiskit fork if you like to see where this is going)
Internally we have code that does the SDP reconstruction using CVX and matlab (as do most research groups) but we would like to move to open source python implementations with QISKit. @rraymondhp we shouldn't need to design our own solver (that is a rather huge undertaking!), rather make an interface to one of the standard convex solvers. Part of the reason Matlab CVX is so popular is because you can phrase the problem as a more 'natural' mathematical representation and it converts it to a standard form for solving behind the scenes. I'm not sure if there is something similar in Python or if you need to convert the problem to a standard form manually. Last I checked cvxopt didn't support complex numbers, so if this has changed that would make life a little easier!
Cheers,
Chris
Hi @chriseclectic @QCmonk
Many thanks. I do not mean to create a SDP solve. I agree with you that we should not work on it cause it will be too complicated.
Hello @chriseclectic ,
It seems like what is needed is a library that takes as input the tomography results in dictionary form (though I will aim for the new format style) and converts it into an opensource SDP solver compatible form. The most recent release of cvxopt does appear to allow for complex numbers (at last!) so my vote would be to use this package as the solver. It does not frame problems in the language of SDP though that is not such a big deal - just a bit less obvious what is going on in a proposed problem without reading the docs for cvxopt whereas matlab CVX scripts are in one-to-one correspondence with the mathematical description.
In terms of future proofing and the like, what sort of constraints/options would you like such an interface to have? I have found the ability to compute the Kraus operators/Choi matrix particularly useful.
@QCmonk I think the best way is to do the reconstruction of the Choi-matrix (i'd do col-vec convention: ref for terminology). That way the same function can be used for state and process tomography with only the constraints changing if you want to additionally enforce the trace preserving condition for the channel. This is whats done for the maximum likelihood reconstruction currently in QISKit, though it only enforces positivity for states and complete positivity for channels, but not TP.
As for the specific formulation, the supplemental material of this paper is how I've implemented it in the past. Though it was for a more general form of tomography then process tomography the formulation is the same. Sec 3.4 and 3.5 in my thesis might also be a good starting point.
@chriseclectic I'll have to take a look at QISKit then. Why not enforce the trace condition in state reconstruction?
I believe I have a fairly good grasp of state and process tomography however it is always good to make sure. I'll get to reading. What sort of time frame are you hoping for i.e. when is the next version of QISKit (with the new measurement statistics format) being released?
@rraymondhp,
Apologies for the delay but I have uploaded the relevant code for my SDP attempt. It was only ever meant for my eyes so you might find the documentation style....creative. Nevertheless if you want me to explain something you need only ask/send me an email. @chriseclectic  you may be interested as well though I think I have done quite well in violating the QISKit style guides.
Hello @QCmonk
Thank you very much for the quick work! I really look forward to it. Will be back to you.
Hi @chriseclectic, is this still something you would be interested in?
@QCmonk and @chriseclectic i am going to close this as it is not part of the qiskit-core. @QCmonk we will make a repo for qcvv soon and i suggest if you are interested that you add to that.
Thanks and sorry it took long to get back to this as we needed to work out how it would fit.
@jaygambetta No worries. I shall await news of qcvv and contribute to that when the time comes. Thanks for letting me know.
