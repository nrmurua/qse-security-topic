I'm a bit confused with the support of "boolean-vs-Ising variables", together with the -q and --values=bool options:
Does the -q flag mean that the input QMASM file defines a boolean (0/1) optimization problem (instead of a spin (-1/+1) problem), as is possible e.g. with the BQPJSON tool, or does it indicate that the input has a different syntax (maybe the QUBO syntax of qbsolve)? I get an error when running a *.qmasm file (with qbsolv) with that flag.
does the --values have any effect when we use qmasm without a DWave (such as in qbsolv mode)? I don't see any difference (but I'm no so sure what I'm doing is correct).
Thanks in advance.
[don't hesitate to tell if such questions should preferably be asked by email]
Does the -q flag mean that the input QMASM file defines a boolean (0/1) optimization problem (instead of a spin (-1/+1) problem), as is possible e.g. with the BQPJSON tool, or does it indicate that the input has a different syntax (maybe the QUBO syntax of qbsolve)?
The former.
I get an error when running a *.qmasm file (with qbsolv) with that flag.
What error do you get?  Could you please post a sample .qmasm file and command line I can run to try to reproduce the error?
does the --values have any effect when we use qmasm without a DWave (such as in qbsolv mode)?
It's supposed to, and as of half an hour ago (commits 9e5be93 and a896291), I believe it now does.  Thanks for reporting the problem.
â€” Scott
Thanks a lot for the fast answer and bug fix.
My own files are too ugly to show here, but I also get errors with four of the seven instances in the /examples folder: circsat, comparator, gates, sort4. Here are some traces:
circsat and sort4 should work; comparator and gates should not.  The latter two define macros (to be used by the former two) but no top-level code.  They're like a C++ program with no main() function.
That said, QMASM is supposed to issue a Nothing to do error message, not crash.  (It does in fact issue a proper error message when QMASM finds D-Wave's libraries.)  I believe you should now get a proper error message with 0592f76, but please confirm.
Another case in which QMASM has nothing to do is when -O1 or -O2 is specified and you give QMASM too simple of a problem.  With optimizations enabled, QMASM eliminates variables whose final value can be determined a priori using roof duality.  If this step eliminates all variables, QMASM also issues a Nothing to do message and aborts.
Thanks! Ok, now circsat & sort4 run correctly with -q, and the comparator & gates correctly outputs the right message (sorry for having blindly tried to run them!). So perfect for everything in /examples.
Now I still get an error with my own sample files, but I've just seen it's my mistake: I give coupler strengths about variables that have no weight.  Yet it's worth mentioning that it runs fine without the -q flag, and perhaps you'll want to improve the coherence between the two modes. Here is a small example, with the error message:
Now I still get an error with my own sample files, but I've just seen it's my mistake: I give coupler strengths about variables that have no weight. Yet it's worth mentioning that it runs fine without the -q flag, and perhaps you'll want to improve the coherence between the two modes.
That's not your mistake; QMASM is supposed to let you to apply coupler strengths to variables that have no weight, in both Ising and QUBO modes.  See if 47535ce corrects the problem.
Yes, it's now fine. Thanks a lot, and congrats again for this nice tool!
