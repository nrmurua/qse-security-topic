Current Problem
Yes. I have a problem where I am struggling to find the right way to program my question to the quantum computer.
Proposed Solution
I have a 32-bit output generated from an unknown 4-bit binary input. For example:
IN:
abcd
OUT:
01234567
I need to ask the quantum computer: for a specific given output, for example,76543210, what was the input?
Alternatives Considered
There are at least two ways to solve this problem. The first is with a sampling problem, where the quantum computer samples every possible arrangement of the 4-bit input until it arrives at the proper output. The second is as a constraint satisfaction problem, where the quantum computer samples 4-bit input arrangements to find the input that satisfies the output constraints.
Approach 1.
One problem with Approach 1 is the qubits need to each be a random sample that return a binary, Boolean, format. It would be great if the computer could solve the problem in parallel, where it could test -1, 0, and 1 for each qubit simultaneously.
Approach 2.
One issue with Approach 2 is adding logical constraints to the problem.  The problem is purely mathematical, but a graph architecture may be the best way to solve it because there are clear output constraints.
Additional context
I am working on finding the right Python Documentation to solve this problem. I found the documentation on Stating the Problem and Reformulating the Problem. I will continue updating this feature request as I make progress toward the solution, a proper question for the quantum computer.
In the meantime, I would be grateful for any advice, suggestions or guidance; thank you!
Definitions from the D-Wave Docs.




I am still working through this problem. I wrote out some math that needs reformulated as a QUBO or ISING problme.

The objective function is a minimization problem. Any given variable x is a binary variable. I need to find the value of x at which y takes its minimum value. Then, the issue is solving for f. So I will need to formulate f as a series of QUBOs.
One solution is Grover's Algorithm. I was able to run Grover's algorithm on the D-wave machine. I'm not sure if this has been done before, but I am worried I still need a logical breakthrough for full convergence.
In:
Out:

Hello,
We would like to ask you to please post these questions in the Leap Community forums:
https://support.dwavesys.com/hc/en-us/community/topics
This is a great way to connect with other users, browse available information, and get help from our Support team.
The Practical Applications or Coding Tips and Tricks sections might be good spots to ask some of these questions.
The GitHub Issues section is more geared towards code changes and bugs.
Thank you for your understanding and interest!
How do I include code blocks in the Leap Community forum? @djohnson-dwavesys
Link to the problem in the community forum.
