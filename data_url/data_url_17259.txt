Often when working with schedules come across objects like (1, SamplePulse(p0, duration=5)), a Tuple[int, ScheduleComponent]. This happens when looking at instructions or children of a schedule, for instance.
The request is to use a named tuple, so instead of doing sched_pair[0] and [1] I could use sched_pair.time and sched_pair.schedule
Hello! Is this issue getting worked on? I'm a newcomer and would be glad to tackle this good first issue.
No one is working on it afaik ðŸ˜„ I think it will be fine to keep the entire implementation in the file qiskit-terra/qiskit/pulse/schedule.py. After implementation, I think there are some tests that would be easier to understand if we made use of the names. If you have any questions, or if you need some resources and pointers for getting started, just let me know in this thread!
Thank you for making yourself available to guide me! ðŸ˜ƒ
I noticed two things:
In the file schedule.py, I found no cases of accessing tuple fields, such as sched_pair[0]. How would I test the behaviour of the named tuple? A possibly solution is to replace insert_time, sched = sched_pair with insert_time, sched = sched_pair.time, sched_pair.schedule (line 54), just for testing purposes. I would like to get pointers and insights about this question.
However, I found that there is another tuple who would also probably benefit from becoming a named tuple: time_inst_pair or time_inst (e.g. lines 106 and 256), which is a Tuple[int, Instruction]. What do you think?
Another question:
I think there are some tests that would be easier to understand if we made use of the names.
Would the improvement on the readability of those tests also be included in this fix?
Bump - Tagging you (@lcapelluto) as I think you stopped getting notifications once unassigned.
Hello @TofuLynx, Lauren is out for a couple of days so I can help you out.
In the file schedule.py, I found no cases of accessing tuple fields, such as sched_pair[0]. How would I test the behaviour of the named tuple? A possibly solution is to replace insert_time, sched = sched_pair with insert_time, sched = sched_pair.time, sched_pair.schedule (line 54), just for testing purposes. I would like to get pointers and insights about this question.
In __init__ the schedule pair two-tuple gets unpacked which you wouldn't have to do with a Namedtuple.
However, I found that there is another tuple who would also probably benefit from becoming a named tuple: time_inst_pair or time_inst (e.g. lines 106 and 256), which is a Tuple[int, Instruction]. What do you think?
This should be an instance of TimeTuple (or whatever you wish to call it). Note that both Instruction and Schedule implement ScheduleComponent so this is what the TimeTuple should accept.
Would the improvement on the readability of those tests also be included in this fix?
I think that would be great. It would be twofold, it would help with test readability, and also test your implementation.
Once again thank you very much for your contribution ðŸ˜„!
I'm considering this stale, as we will likely replace explicitly timed instructions with relatively timed instructions removing the need for tuples in the first place. Feel free to reopen if you disagree.
