I wonder if currently possible to set ql::options that allow for an unlimited set of possibilities?
Because the app->add_set_ignore_case does appear to require a vector of possible options.
Allowing unlimited sets of options would be useful for, for example, providing numerical-type parameters (such as double) for certain compiler functionalities, such as the mapping heuristics.
My suggestion then, would be to allow rule-based unlimited sets of options.
Examples of rules could then be 'is_floating_point', or range constraints, etc.
(The options could still be receive as a string, which would then be cast to the appropriate type).
Another possibility, would be to allow certain options to have undefined sets, and let the part of the compiler that requires them handle their validation.
I wonder if there are any plans to add this?
@jvansomeren
The option support was redesigned in 0.10.0
