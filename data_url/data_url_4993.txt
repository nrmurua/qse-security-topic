Same in master or develop
Hi Jack,
Sorry that this slipped my radar!
Looks like GCC 9.2.0 doesn't recognise the AVX flag -mavx. Thanks for letting us know this!
If you're familar with CMake, it should be trivial to disable strip out this flag.
Looks like GCC 9.2.0 doesn't recognise the AVX flag -mavx. Thanks for letting us know this!
If you're familar with CMake, it should be trivial to disable strip out this flag.
Thanks @TysonRayJones I'll give that a shot.
Hi Jack,
I've since realised that POWER does not support AVX, hence with any compiler, the flag -mavx will not compile. Since CMake doesn't have support for detecting the architecture, there's not much to do on our end - POWER users can simply comment out the -mavx line in QuEST/CMakeLists.txt.
I let this slide for a few months but I'll go back and look, thanks!
No problem! I've verified the unit-tests on develop pass on POWER8. Note though, as also see in #218, I had to disable the exceptions thrown by the unit-tests when checking input validation, via:
Hmm, erasing -mavx from the generated build files worked well enough but now a new error:
... etc.
I forget where we left this, maybe I should be on the develop branch ...
Ah yes, unluckily you've also hit another problem by using gcc-9 (issue #173) - this appears to be a problem with OpenMP! If possible, try using gcc-8 or earlier. We can patch this, though this really ought to be fixed higher up
eh, same in develop branch ...
Oops, missed your comment. Let me try ...
Whee! Built under GCC 6.3.0 (with -mavx removed, and had no #pragma problems)
Glad to hear :) I'd run the unit tests to be on the same side!
What's the trick to building and running the tests?
I cd'ed to tests and mkdir build; cd build; cmake .. and make
Do I have to install Quest? Or should I add the headers to my include path?
Nope, no need to install QuEST - can't see why CMake didn't link QuEST.h correctly.
Are you able to paste the full commands you execute?
Got it to compile the tests by playing with CPLUS_INCLUDE_PATH etc.
But I can't get it to link no matter what I do with the LIBRARY paths:
builds, doesn't link, as I noted.
Does not find libQuEST.so even if I put it in the current directory and add . to the paths
Your issue is your initial
To run the tests, you use the same build folder as you would to build the tutorial example. That is, do not enter the tests dir; make your build folder one level up.
I guess I don't understand cmake enough.
If I go to the build folder I used to make everything + the demo and do make test there's no target
If I go to the build folder I used to make everything + the demo do cmake ../tests that fails
What's the sequence to build the tests?
Since you're putting the build direc in the wrong spot, and passing incorrect args to cmake, of course it will fail.
Here's a complete set of commands, starting from making the repo:
Now remove -mavx as per before, to support POWER. Then:
The last command replaces the normal running of make test, to work on POWER.
-DTESTING=ON ... oh ... oops ... left that out. ðŸ˜Š
well, that compiles now but tests are failing.
Killed it with ^C after a while:
That's very surprising - can you give me more info about your system? You're not running GPU mode, right? Reopening this as failing tests on POWER9
Yes running GPU. Should I switch just for sanity check?
Ah you hadn't mentioned. Make sure you choose the right GPU_COMPUTE_CAPABILITY for your GPU, and pass it to cmake.
Ok, looking into finding that number ... I know the default is "30" ...
Much better ... capability number is 70. And now:
Thanks for your help!
