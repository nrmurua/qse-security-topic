It seems minimax_to_fortran_source.py stopped working. That script was used to generate minimax_exp_k53.F.
As input the script takes a database from http://www.mis.mpg.de/scicomp/EXP_SUM/1_x. Ideally, we should keep a copy of it at cp2k.org, but unfortunately I couldn't find any associated license.
Once we have it working again, we should add a test.
it runs a bit deeper than that: the data also changed (now k=63 of just 53), not only the layout (now contained in the zip file). @pseewald any hints on how to verify the new data?
This would be the diff to make it run again:
I initially assumed we don't need the script and source data anymore since minimax/minimax_exp_k53.F is a 1:1 translation. If the data has changed it may be worthwhile to update our Fortran source file to see what has changed, also to get the minimax approximations with k>53. @dev-zero so the script is working with the new data or do you need my help adapting it?
For verification of the new data: The script should generate the CP2K source file minimax/minimax_exp_k53.F. There is a unit test for minimax tests/LIBTEST/test_minimax.inp that checks the error of the minimax approximations numerically and compares with the tabulated error. Possibly the maximum k (53 so far) is hard coded in CP2K and needs to be adapted manually.
I initially assumed we don't need the script and source data anymore since minimax/minimax_exp_k53.F is a 1:1 translation. If the data has changed it may be worthwhile to update our Fortran source file to see what has changed, also to get the minimax approximations with k>53. @dev-zero so the script is working with the new data or do you need my help adapting it?
The script is working with the new data after the changes posted above, I think. At least it runs without an error and generates similar data.
For verification of the new data: The script should generate the CP2K source file minimax/minimax_exp_k53.F. There is a unit test for minimax tests/LIBTEST/test_minimax.inp that checks the error of the minimax approximations numerically and compares with the tabulated error. Possibly the maximum k (53 so far) is hard coded in CP2K and needs to be adapted manually.
OK, I didn't look for the maximum k yet.
