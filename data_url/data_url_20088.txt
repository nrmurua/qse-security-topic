Log: https://people.freebsd.org/~yuri/liboqs-test-failures.txt
Version: 0.7.0
OS: FreeBSD 13
Most errors indicate a FileNotFound error: 'build/include/oqs/oqsconfig.h' which is highly unusual after a successful build (lots depends on this file). Thus, can you please confirm the build done did complete successfully before you executed the tests? Did you run the build with the exact same parameters as in the README, or did the liboqs build maybe generate the object files in a folder other than 'build'?
The build succeeded.
The potential difference is that I do out-of-source build. Here are cmake arguments:
They are mostly set by the FreeBSD ports framework.
If the build directory (where all generated code, objects and headers--such as those not found-- are winding up) is at a different location than the tests (expect it), these errors are a logical consequence.
So, before starting the test you may want to set the environment variable "OQS_BUILD_DIR" to the location that is correct in your case: See the relevant code. If the assumptions stated there don't work for your case, please let us know (what your specific setup is: Where is the build directory? Where is the source/tests directory?) so we can improve this logic.
We'd obviously also be grateful for a PR from you changing suitably the liboqs "build-finding logic" to make it work also for your setup.
Edit/Add: Just saw freebsd/freebsd-ports@c168a0d: Thanks very much for this integration!
So, before starting the test you may want to set the environment variable "OQS_BUILD_DIR" to the location that is correct in your case: See the relevant code. If the assumptions stated there don't work for your case, please let us know (what your specific setup is: Where is the build directory? Where is the source/tests directory?) so we can improve this logic.
Thanks for a great hint. By the way, build is hard-coded in tests/test_spdx.sh, it would be great if this test script would also pay attention to OQS_BUILD_DIR environment variable.
it would be great if this test script would also pay attention to OQS_BUILD_DIR environment variable
So done & Thanks for this suggestion/pointer to the omission: A fix for this is part of #1091. After that has landed, it'd be nice if you could confirm this resolves all issues in your build environment so we can close this issue.
Thanks for the fix! This indeed resolves all issues in my (Debian) build environment. @yurivict how about you?
@yurivict : OK to close?
Closing assuming #1091 (comment) applies.
