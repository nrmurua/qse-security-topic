Currently MatrixGate plots an entire matrix when displayed in a circuit.  For single qubit gates this is usually OK, but for two qubit gates the gates end up being pretty monstorous.  I've taken to hacking circuit_diagram_info in this case, but I think it would be nice if there was a way to do this at construction time, i.e.
cirq.MatrixGate(u, circuit_diagram_info=lambda or diagram info)
This sounds like a job for tags.
@cduck what is your thinking around tags here? Use tags as a mechanism to override the circuit_diagram_info for any operation?
Anyway - I marked this as a good first issue - it should be easy for anyone to implement whichever the decision. But please discuss the design first here before opening the PR.
Previously, @dstrain115 listed "gate color in a diagram" as one of the use cases of tags.  One option could be to define a tag that means "use a compact gate representation".
In terms of design, this would require:
For @dabacon's use case, instead of applying the formatting to each MatrixGate, it might make more sense for Circuit.to_circuit_diagram to have a compact parameter that it passes to gates through the CircuitDiagramInfoArgs to make this easy to use on the entire circuit.
A related note if anyone takes this on: currently in the SVG circuit code, I hack anything with a newline in it to just display as a ? :)
I agree that this makes sense. For example, when converting from a circuit specified in another system (e.g. U3 in qiskit) this would be a fast way to convert the gate while preserving some debugging information like the name.
How about this.  Add an optional name variable to MatrixGate.  If name is specified, show the name like other gates. If it is not specified, then show the matrix like before.
I'm not against it - I like the simplicity of it, but it requires the user to specify the tag. I think that might solve it for some users. If someone wants an automated solution instead (e.g. with a compact flag) - please comment here or open a new issue.
