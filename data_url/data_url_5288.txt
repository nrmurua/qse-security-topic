chi_matrix.hpp is a template class completely implemented in a header file.
It includes "Dense" which brings an external dependency only to the header files of external project .
This can be solved by moving the implementation part into a cpp file, and leave the header file only with the declaration of this class.
I already made this change on a branch, but I cannot push it to your repo to create a pull request.
Hi BR,
I just commented on issue #53 (summary: please pull-request into development branch).
Looking forward to seeing your suggestions.
I am not sure if you plan to include code from Eigen to the cpp file.
In this case one has to verify the requirements of Eigen license.
G
Hi @giangiac
thx for the answer.
I moved all implementation from chi_matrix.hpp into chi_matrix.cpp, and kept only the declarations in the header chi_matrix.hpp.
Are you saying that this might be an issue with the license of chi_matrix?
If yes, we could leave chi_matrix.hpp as it is, and create a new header chi_matrix_public.hpp and just use the delarations in that, and include this one in the intel-qs headers?? would that help?
BR
Markus
I thought that you included code from Dense into chi_matrix.cpp.
If this is not the case (i.e. you moved content from .hpp to a new .cpp), no worries about licensing.
Without looking at the code it is easy to misunderstand.
Yes, correct. I only splitted up chi_matrix.hpp into chi_matrix.hpp and .cpp to separate declaration and implementation.
I didn't modify anything, but this removes the dependency between qureg.hpp and Dense.
I forked your repo and this way I could create a pull request #55
Please have a look.
The pull request has been merged.
