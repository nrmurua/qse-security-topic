Hello. I am currently running a simulation with mesolve (yet the same error occurs with sesolve) with a slow perturbation, such that close to zero the Hamiltonian is very close to zero (the perturbation is a thin Gaussian distribution). When I run mesolve, instead of running my time-dependent coefficients for the values in tlist (where in this case I had 250 times in tlist), QuTiP uses about 20 seemingly random time values, some of which are not even in tlist.
I believe this error is stemming from the Hamiltonian changing extremely slowly and being close to zero for a long period of time. This is because QuTiP began working normally when I added the constant 0.00001 to my time-dependent coefficient. Is there a bug here, or is there something I am missing about small-frame limits of the software?
An example piece of code that reproduces this error is below.
The function gm was used to generate matrices. These matrices come from:
The code above has the following output.
Without even looking at the output of mesolve, there is an issue. Note that the values being printed are generated from the time dependent coefficient coeff_1, where I am just printing out the values of time that it has been given. Clearly, there are not 250 values, here, and in addition, values like 60.1 are not even in tlist, which ranges from 0 to 40.
My about() is below; thank you in advance for any help.
Hello. After doing some more searching, I have found that the solution to this issue is to increase the atol value in the qutip.solver.Options class.
@naahiv It's expected that the coefficient function will be evaluated at times not in tlist. The tlist specifies the times at which the QuTiP solver should record results, but the numeric solver underlying this may evaluate the operators at many other times too.
