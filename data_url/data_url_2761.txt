Line is in cirq core but then it depends on contrib code.  This seems like a bad practice?
Ah, good catch. It also depends on google, and those parts will be moved into google as part of #751
The dependency is a custom simulated annealing implementation (I did not find any good library which could do this optimization for us).
Do we restrict usage of contrib from within cirq core? What is the purpose of contrib then? Aside from that, the simulated annealing code is more like utility, maybe I should move it to something like cirq.util, or cirq.line.placement.util?
Is that already fixed by #834 ?
No, the dependency is still present. It's just restricted to the types instead of causing an error at runtime.
THis can be resolved either by keeping line in cirq. and not referencing google, or else by moving line into cirq.google.
I would suggest to proceed with moving line into cirq.google, which would unblock the remaining work on placement.
We can move it outside of cirq.google once all the device and calibration abstraction are defined and agreed upon; @dabacon shout if you disagree, otherwise I'll do it like that tomorrow.
