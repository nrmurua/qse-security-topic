Qiskit should follow the order of gates applied to qiskit when drawing it.
For example, I created a circuit and applied several gates to it:
When I draw a visualization with circuit.draw() I got the following diagram:

It draws III step before II step.
I use qiskit version=0.8.2
This question was first raised on QCSE. Thanks @kenenbek for filing the issue.
The reason the order is apparently not respected here is because 'left' justify is the default, so all the gates are drawn as far to the left as possible. The layers things are drawn into are decided based on if the gates share any qubits, which the 2 ccx gates do, and so they must be in two separate layers. The cx shares no qubits with the first ccx and so can be in the same layer, which then happens to have to be drawn over two columns.
This behaviour may be changed with #3061.
In the meantime you can ensure gates are drawn in the order they were input by doing circuit.draw(justify='none'). This will draw every gate in its own column in the order it was input.
Assigning order to gates that are in the same layer is not well defined. Consider:
vs
Inherently no gate has more precedence than the other. When drawing, one order could be to draw the one I added first, first. Or it could be draw gates on q0 first, and so on. This gets more complicated as a circuit gets transpiled and the transpiler merges, adds, removes some gates. For this reason, we do not include information about gate precedence in the circuit.
So I'm closing this as "won't fix".
For this particular example, @maddy-tod's suggestion above achieves the circuit you want. But in general, if you really care about which gate is drawn first, you can put a barrier between the gates. This ensures the order that you want is respected. In the visualization you can choose to not plot the barrier by doing circuit.draw(plot_barriers=False).
