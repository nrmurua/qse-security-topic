When building the inverse gate of all gates in a circuit, the gates are not fused but applied one by one, meaning they are not fused.
This is problematic for simulating noise for example.
Right now, the single fused inverse gate has to be build by hand.
Thanks for opening this. Fused gates hold the collection of gates to be fused, but the actual matrix (=fusion of gates) is calculated only if you execute the circuit containing the fused gates. Also circuit.add accepts iterators, for example you can do things like:
If you add the fused gate in a circuit it will be treated as an iterator instead of a single gate, that's why you are getting this.
Using the Unitary approach is not necessarily bad, because you are explicitly saying that you want to add a single gate. However, if you would prefer to add the FusedGate directly, I think the easiest way to fix it would be to modify circuit.add to treat it as single gate instead of iterators.
By the way, another way to invert the whole circuit is to construct its unitary using circuit.unitary() and then add the dagger of this as a Unitary gate. This will be more robust if you have more than one qubit because gate fusion uses max_qubits=2 by default. In practice, something like:
