Currently we can append QuantumCircuits, which appends/extends those circuits.
It has been pointed out that we may want to do this for compiled circuits, i.e. Qobjs, too.
An example use case is when many circuits are created by adding small number of gates to a base circuit: [base + c1, base + c2, base + c3, ..., base + cn]. It would be more efficient (though TBD by how much) to compile the base separately from the other small circuits, then combine their Qobjs.
I think this should not be part of the Qobj API but I completely understand and value the utility of this feature. Qobj is a container format, I would not extend it to support operations but I would try to figure out how to enhance the compilation pipeline. It might be interesting to support some kind of module definition at the QuantumCircuit API level.
@ajavadia  i don't want to do this for qobj. as @delapuente says it should be part of the compile. I am not convinced we want to do it yet or wait until we bring the program back and know the relations between the circuits. The other option i would like to have is elements in the circuits that are just a parameter that is not touched by the transpiler.
Similar to #696, closing this after in-person discussions. We are going to push any modifications to the QuantumCircuit to DAGCircuit. The additions described here can be done on the dag.
