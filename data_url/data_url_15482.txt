Assigning an Integer value 1 to the argument label of cx gate will cause abnormal behavior.
If I assign an Integer value 1 to the argument label, Qiskit fails to draw the circuit and throws an AttributeError. It can be reproduced by running the following test case:
The error message is shown below:
The code snippet to trigger this error is in the Bullet class of text.py as follows:
If the argument label is set to be more than 1, it will assign the value of label to self.top_connect, but if label is set to be 0, it will not do this.After this assignment, once the program try to visit the attribute 'center' in an 'int' type, it will wrong.
In addition, when running the compiled circuit as shown the following test case, Qiskit outputs an empty result.
A QiskitError is thrown as below:
Simulation failed and returned the following error message:
ERROR: Failed to load qobj: Unable to cast Python instance to C++ type (compile in debug mode for details)
Traceback (most recent call last):
File "test.py", line 12, in 
print(result.get_counts(compiled_circuit))
File "D:\Anaconda3\lib\site-packages\qiskit\result\result.py", line 280, in get_counts
exp = self._get_experiment(key)
File "D:\Anaconda3\lib\site-packages\qiskit\result\result.py", line 391, in _get_experiment
raise QiskitError('Data for experiment "%s" could not be found.' % key)
qiskit.exceptions.QiskitError: 'Data for experiment "circuit-2" could not be found.'
After I debugged the whole process, I find that it may be occurred when calling an extra cyphon code, which try to execute the cx gate.
Maybe a type check for argument label will be helpful.
Thanks for the report!  By coincidence, we've actually merged the type checking you've suggested in #7671, which will be released as part of Qiskit Terra 0.21 in around a couple of months.
The output of your example now is:
Thanks for your reply!I still have no idea about why it failed in simulation step,can you give me some advice?
The simulation likely succeeded, except you asked for the counts and there's no measure instructions in your circuit.  There's only counts if you measure something into the classical bits.  If you do something like
and then do your transpilation and simulator.run call, I think you'll get back what you expect.
I'm very sorry that I gave the wrong program,the real program that will cause QiskitError is as follows:
You should remove the incorrect 1 label from your cx call - the cx should be raw_circuit.cx(0, 1); the second 1 is becoming the label, but as you said at the top, that should be a string (or just absent - it's not really used).  With that fixed, I don't get any errors from your code.
