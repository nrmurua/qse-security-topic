The Kraus map {{1,0,0,0},{0,0,1,0},{0,1,0,0},{0,0,0,1}} (i.e. the SWAP matrix) is passing validation but breaks density matrix normalisation, such that the probabilities of qubit measurement outcomes are wrong (e.g. 2.3)
(This is at least occurring in QuEST-MMA which wraps twoQubitKrausMap - I can make a MWE later)
MWE:
outputs:
(instead of the before-Kraus prob of 1).
This is the same incorrect result on all hardware backends (single CPU, distributed, GPU)
(This is unique to 2qb, and not seen in the 1qb map. I don't believe it's due to a dangling pointer problem etc, since the answer is consistently 15)
Fixed this bug in 2e70585.
It is quite tedious to manipulate ComplexMatrixN and the other matrix
structs currently. The ComplexMatrixN superoperator was previously initialised
as:
Replacing it with
solved the issue.
This issue relates to #161 as well.
This was intentional to avoid having to call malloc during the call. Are you sure it is not possible to attach an array (in the stack, not malloc'd in the heap) to the struct here to pass on?
I think I'd like to work out whether this is possible before conceding to malloc. I'd probably opt to refactor to avoid it
(also note of course this patched introduced a memory leak; the superOp needs to be freed)
Got a stack-based method (no malloc) working in 42b2de0
