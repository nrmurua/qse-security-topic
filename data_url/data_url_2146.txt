Hi all,
I wonder if it is intended or not that cirq.FSimGate has no _eigen_components(). I need it to get the eigenvalues of given gates even if unitary can't be obtained because the gates are parameterized. (In fact, I am only working on parameterized gates)
Or is it ok for me to implement it?
Resolved. I've decided decomposing the gate (cirq.decompose), and every gate in the decomposed result has _eigen_components(). Thanks.
Beware calling methods that begin with an underscore. They are considered private. We may remove them without notice.
Oh Thanks. Then how can I get the eigenvalues of given gates? There is also _eigen_shifts() but it is private too..
You can get them in a more guaranteed way by using np.linalg eigendecomposition methods.
You could contribute this as a more generally supported feature for the library. I would not be opposed to adding top-level methods along the lines of cirq.eigen_projectors/vectors/values that were fast for EigenGate but fell back to numpy's linear algebra methods in the general case.
Thanks for the idea. Yes then I will try my best to support EigenGate first, and then numpy linalg method later.
