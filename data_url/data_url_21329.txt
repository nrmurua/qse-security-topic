Are there any plans to improve the coverage of documentation for ARTIQ/misoc/migen?
The ARTIQ user-facing documentation is generally pretty good. But, as soon as one wants to look at how things are implemented, the documentation becomes sparse to nonexistent. Currently, understanding how things are implemented in ARTIQ means reading and properly understanding the sources of large chunks of ARTIQ+migen+misoc.  Short (often single-letter) function and variable names also don't help users to get up to speed!
It would be great to have both high-level docs explaining how things fit together, as well as brief explanations of how/when to use common components (e.g. misoc.interconect.stream.Endpoint).
I agree. The level of documentation of misoc and migen was a hurdle when Arpit was working on a hardware driver for Zotino. Some ad hoc breadcrumb trails I found helpful including the following.
https://www.wdj-consulting.com/blog/migen-port.html
https://lab.whitequark.org/notes/2016-10-18/implementing-an-uart-in-verilog-and-migen/
Zotino example code   #842
Short (often single-letter) function and variable names
Where?
@sbourdeauducq All over the place. Lots of variable names like i, o, a, b, c, m, j, k etc and functions with names like spline.tri.
My general feeling is that once one understands the code, what it does, how it fits in with other code, and how it's intended to be used then it's all clean and makes sense. But, to get to that point from scratch one has to read the code a few times and then search through various M-Labs repositories to find instances of it being used.
e.g. the misoc stream stuff is a really nice solution to a common problem. But, to understand it, one has to understand what problem it's solving and, without any docstrings, that requires some detective work.
A lot of those single letter variables follow just follow signal names that are as old as the flip flop itself. You have to address that critique to the inventors of the flip-flop and everybody else after them. I see no reason to comment that.
Ijk have been indices in programming languages and math for how long? That's not going to change and the don't need comments.
Migen and misoc do need more documentation. I think we already have issues filed there.
Artiq could profit from documentation in a few areas. E.g. writing an rtio driver. I think there is an issue about that as well.
It would also be useful to have documentation covering the architecture, both in overview and medium level detail, of how all the various processes are spawned, communicate, etc within ARTIQ -- workers, master, applets, compiler, etc.  This is not something most users should touch or care about, but there are instances when I definitely wish I knew a bit more of what was going on under the hood when trying to optimize how something is done, or hack on a feature I want.  Writing up this kind of documentation would be a line item in a new contract, clearly.
Some of this would also hopefully make its way into the paper someday...  Maybe I'll churn out some of that over the holidays.
