Several times now I have wanted to implement code which performs a BCH expansion on operator data structures in OpenFermion such as QubitOperator, FermionOperator, and sparse matrices. I started to write some code for this:
But I am thinking that what we really want to do is to  implement the form derived by Dynkin in 1947 which would enable us to compute the series to arbitrary order without hard coding expression. Coding this up is a little involved but it is a good starter project for somebody. Some thought should also go into optimizing the performance of such code and also making good tests.
@babbush Face is overrated.
Give vanity a chance.
I would love to contribute, can you assign it to me ^
Sure, we'd love to have you contribute! I can only use GitHub's "assign" on you if you accept the invitation I just sent to be an official collaborator of the project. But consider yourself assigned!
Some quick updates on the implementation: I've worked with my theorist friend to find out an efficient implementation for Dynkin's formula. I'm in the process of writing up the procedure in a short paper on arxiv and will refer to it in the implementation.
That's sounds awesome! I'm looking forward to it!
Hi, our code is finished, however it seems I don't have the permission to push my local branch to remote, please check and I'll push it tomorrow, thanks!
Indeed, nobody (not even me) has permission to push directly to the remote. Instead, you should open a pull request. See https://help.github.com/articles/about-pull-requests/ for details about doing this. Also, you will need to make sure you've sign the Google CLA (https://cla.developers.google.com/clas).
Closed by #114
