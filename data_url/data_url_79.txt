Once #741 gets pushed to main, targeting Quantinuum (i.e. calling cudaq.set_target('quantinuum') in Python) will cause both Python and C++ to target the Adaptive Profile, which allows for __quantum__qis__read_result__body function calls to be injected into the resulting QIR code. As part of that PR, that function was added to runtime/nvqir/NVQIR.cpp as a stub in order to allow the pre-existing python/tests/backends/test_Quantinuum.py tests to pass. Those pre-existing tests were discarding the result returned from that function call, so they didn't actually need that function to be implemented.
The issue captures the desire to read arbitrary measurements in the Python mock servers by flushing out a more complete implementation of __quantum__qis__read_result__body in NVQIR. Use cases will have to be defined as part of addressing this issue.
