This issue may be related to the staq Issue 34, but I am not sure. So, I open this one to track the problem.
On qpp:
The final state:
That can be compiled to run on the Rigetti simulator:
The final state:
Thanks! That's definitely related. The amplitudes of the states are the same, so there's a phase difference and also a 01->10 flip. We will fix this once we unify the definitions in both staq and qpp.
I can confirm that if I remove the phase std::exp(1_i * args[0] / 2.0) from 
@DevelopDaily Can you please run a simple CNOT example on Rigetti? Like
This should produce the state |10>, which is displayed as [0 0 1 0]^T in qpp.
I believe this is the correct Rigetti code because, unlike qpp, Rigetti uses q[1] as the most significant bit in this 2-bit circuit. Your prediction is correct.
The Rigetti result:
The staq and some other compliers will translate the QASM to this code without adjusting the endianness.
The Rigetti result:
Please also note that my original QASM does not match the Rigetti basis ordering. So, I flip the q[0] and q[1] to match it. Now, I give it another run on qpp. The qpp result still does not match that of the Rigetti, as expected. I just put the result here for the record.
@DevelopDaily Will be fixed soon, see #107 for more details
Fixed
