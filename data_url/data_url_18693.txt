Classical logic gates, a/k/a permutation matrices, are an extremely common gate family that gets immediately inspected by users who are just starting out with our hardware. quilc is notoriously bad at handling these, essentially because they are always specified as DEFGATEs, and quilc uniformly treats DEFGATEs as dense matrices.
Either the Quil language should be extended to allow something like a truth table representation of a logical function, or quilc should be educated about permutation matrices, and then in this setting we should apply specialized techniques from classical logic to do the compilation.
This is low hanging fruit: other OSS libraries provide good decomposition techniques (e.g.: Tweedledum).
