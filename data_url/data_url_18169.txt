The possible length of a program is shorter if you create less registers, for example this code gives an error (error code 400) if you create only 1 register, but works fine with 16:
What could be causing this?
Hi @akosbudai, nice catch! I looked around a bit but couldn't find the cause of this bug. I am guessing that it is caused by the backends converting the json-format "quantum object" code into qasm before running. I am hoping that PR #326 will fix this, by executing from the json directly. But let's keep this issue open until after that PR is merged, and revisit.
@akosbudai actually I found the source of the problem. It will definitely be fixed with the introduction of qobj (quantum object code), where we won't send QASM to the backends anymore.
If you want to fix it now, call your registers "q" and "c" instead of "qr" and "cr". :-)
ha, that's a convenient fix! :D thanks
@ajavadia how is it possible that the names of the registers would have an effect on this?
This should be fixed once we stop sending QASM as part of Qobj.
It seems to be related to the total length of the payload accepted by the backend. Keeping the names short make the final payload shorter and so, it works.
We need to check the implication to remove QASM from the QObj to reduce the size of the payload.
With the transition to qobj this issue is no longer needed.
