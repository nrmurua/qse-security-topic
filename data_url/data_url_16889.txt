There is an error in the way the transpiler pass NoiseAdaptiveLayout handles cx gates with 0 reliability. More specifically, if the reliability is 0, it sets the weight of the corresponding edge in the swap_graph to -math.inf.
The underliyng algortihm used to compute the most reliable swap paths in the graph, nx.algorithms.shortest_paths.dense.floyd_warshall_predecessor_and_distance, aims at minimizing the sum of the edges weights, hence it will always choose edges with a weight set to -math.inf.
As unlikely as it may be that a cx has 0 reliability, it would be handled in the wrong way.
To reproduce the problem, I modified the props_yorktown.json used by the FakeYorktown backend so that the gate_error for the cx between qubits 2 and 3 is 1.0 and printed out the self.swap_paths of the NoiseAdaptiveLayout object.
As you can see the algorithm has chosen 0-2-3 as th best path between qubits 0 and 3, although I set the cx error between qubits 2 and 3 to 1.0.
In this very unlikely scenario, the algorithm should avoid using the cx between qubits 2 and 3, like this:
Changing from -math.inf to math.inf should solve the problem.
