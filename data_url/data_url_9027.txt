Hello!
Consider the following example. If you run
you get at the end of the output,
The M 0 2 4 6 8 10 12 14 16 18 20 22 24 corresponds to measurement of data qubits 0 2 4 6...... and
the observable rec[-11] rec[-12] rec[-13] comes from data qubits 4, 2 and 0 respectively.
For rec[#], instead of using the indices which seem to be inspired by looking back at the table, each entry at a time, will it be better to use a pair of indices, one corresponding to the qubit and the other corresponding to the round? Right now, it seems one has to look at the order of measurements of qubits and then figure out from the record, which round and qubit a particular measurement corresponds to. This is an easy task to do on our own but just thought I will bring this up if it clarifies the notation for future users.
Also, some terminology in the documentation may be confusing (or could be made more clear) like referring to rec[-1] as the most recent measurement record. It is most recent only in the code implementation, right? while in an actual circuit design, you could do a bunch of measurements in parallel. In an older documentation, I found a more clear line i.e. the "end of the growing measurement record"
Overall, thanks. This package is very useful!
instead of using the indices which seem to be inspired by looking back at the table, each entry at a time, will it be better to use a pair of indices, one corresponding to the qubit and the other corresponding to the round?
This was actually originally how Stim was written to work, before it was released.
There are a few reasons I made the change:
A lot more work has to happen to execute an instruction if it's a 2d coordinate system instead of a 1d coordinate system. Instead of just adding an offset to a base pointer and then reading there, you have to first convert the 2d coordinate into the offset. This could involve reading from a hash table or various other things, all of which are 10x slower than "I add and I read".
Stim circuits don't really contain a concept of a "round", and in fact not all error correcting codes have this exact concept of a round. For example, in the color code, you keep reusing the same measurement qubit to measure 6 body X then Y then Z stabilizers. Is a round 3 uses of the measurement qubit or 1? You could also do X then Z then X then Z, so now it's two measurements per round? Where is the 2 or 3 coming from, from the simulator's perspective? Anyways this means in practice you need to use some slightly different concept of round compared to what the user might intend, or you need add extra machinery to the circuit format for making it explicit. What Stim used to do was basically just say "tell me the qubit and how many measurements back on that qubit", so every time you measured a qubit you incremented its round. This completely breaks if you're doing transversal swaps on the state so that it drifts around, but it's simple to specify.
When I was writing example circuits, I found that the amount of work required on the user side wasn't actually lower. Yes the 1d indexing is annoying, but it turns out the 2d indexing is also annoying! In the simple cases where you were always comparing one qubit to its previous measurement it was better, but for harder cases it was just as hard. For example, the planar honeycomb code involves varying the ordering in which you measure certain edges and you need to keep straight how far back you're comparing. Or, when you're doing a surface code S gate, you can easily get confused by the fact that some measurements have predecessors and some don't due to the grid shifting as part of the twist.
So, basically, it was slow and complex and it didn't actually help much.
some terminology in the documentation may be confusing (or could be made more clear) like referring to rec[-1] as the most recent measurement record. It is most recent only in the code implementation, right?
Do you have a better word to use than 'recent'? As you know I'm just breaking ties via the ordering of the measurement targets given to the measurement instruction. "end of the growing measurement record" is a lot of words to replace it with..
Anyways, I'm going to close the "better measurement coords" issue as WON'T-FIX, for the reason outlined above. Updating the documentation is kinda getting closed along with it but that's kinda accidental; it could be a separate issue.
Thanks for stating those reasons. Makes sense. Yes, your comment (2) was what I was thinking more generally i.e. a qubit index and the "round" of measuring that particular qubit
For better wording for rec[-1], I like "the last measurement target according to the measurement instruction." much better but this is also much more words than just "most recent"
