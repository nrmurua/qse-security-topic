TL;DR
I'm not against custom_pm.run(circuit, ...), but I think that transpiler(circuit, ..., pass_manager=custom_pm) (and execute(circuit, ..., pass_manager=custom_pm) should also be allowed.
In #2689 I reproduce the idea from @ajavadia that pass_manager should be deprecated as a transpiler parameter. If I understand him correctly,  @ajavadia seems to want to remove the pass manager parameter from all the "high level" functions (transpile and execute).
Before starting with that task, I would like to clarify what's the expected workflow when a user has a custom pass manager.
In #2688, @nonhermitian suggested that transpiler should support custom pass manager.  In the same issue @ajavadia is pushing the idea that custom pass managers can be used by passmanager.run(). I think both ways should be allowed.
This is, I think, the @ajavadia idea:
In my opinion, also this should be valid for the custom pass manager situation:
This approach looks very close to the preset scenario and to the following.
Currently with a preset pass manager:
For the custom pass manager, our current way is brokenish. In my opinion, it should be like:
This looks very much like transpiler(circuit, ..., pass_manager=custom_pm).
The pass_manager argument to transpile was removed in #7679 after deprecation in #4090, and consequently I don't think this issue is relevant any more; we settled on PassManager.run being the only interface for running custom pass managers, and transpile being an entry point to preset pass managers only.
execute currently still allows a pass_manager argument, but since that abstracts both compilation and submission to a backend, it makes marginally more sense there.  At any rate, execute is more likely to be deprecated and removed than to be the catalyst for large-scale changes to Terra's interface now.
I'll close this as completed/stale, but feel free to re-open if there's more to discuss.
