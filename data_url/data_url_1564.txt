To support creating minified json representations of cirq objects it would be useful to be able to change the separators argument that is passed to json.dumps inside the to_json function, in the same way as the indent argument.
By passing a value of (',', ':') along with indent=None whitespace can be significantly reduced in long serializations.
The separators argument could either be exposed to the to_json method, or another argument like a bool along the lines of compact could be passed to do this for the user.
I am happy to submit a PR.
My gut reaction is that this should be a boolean (e.g. minified=true) instead of allowing arbitrary separators, to ensure the result is still able to be parsed by read_json. Worth discussing, though, since I'm not deeply familiar with how JSON parsing works.
Yeah that seems reasonable. Because the indent argument is already exposed, and minified implies no indent, I would propose adding a compact=True argument that passes (',', ':') as separators to to_json and when passed with indent=None results in a minified json output.
@95-martin-orion don't you think we should just follow the existing python API? I would be in favor of just plumbing through relevant parameters from json.dump
Is there a case for slightly compacting json at the expense of readability when you could just use to_json_gzip and get full compression?
@mpharrigan it would definitely be helpful to able to generate json that can be embedded in larger json objects and be easily rendered for human reading, which also does not contain any unnecessary whitespace.
Do you want to open a PR?
Yeah I'll send on over.
@95-martin-orion don't you think we should just follow the existing python API? I would be in favor of just plumbing through relevant parameters from json.dump
I just don't see a use case for arbitrary separators. IIUC, the purpose of cirq.to_json is to write a JSON file that can be deserialized by cirq.read_json. If a user provides anything except separators=(', ', ': ') (modulo whitespace), that purpose is no longer fulfilled, since json.loads has no equivalent separators argument.
If you feel strongly about matching the python API, we should add clear warnings in the docstrings noting this restriction.
I think I tend to agree with @95-martin-orion that arbitrary separators may just leave room for accidental mistakes, but am happy to go either way.
If it's good enough for Python, I'd think it's good enough for Cirq. It's also helpful to be able to say "all the other arguments are passed to json.dump". Note that they have a default argument that depends on the indent parameter, so we'd have to account for that if we do something other than plumb through exactly.
SGTM Matt - let's go ahead with plumbing directly through to json.dumps as you've described, with warnings in the docstrings regarding nonstandard separators.
This is done by #4537.
Here's a snippet ran from Master Cirq:
