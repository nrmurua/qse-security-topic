Is your feature request related to a use case or problem? Please describe.
During parameter resolution, we use the (sympy_pass_through)[https://github.com/quantumlib/Cirq/blob/09bb8ebca6322386316938494281b8f151803a5a/cirq/study/resolver.py#L238] function to detect values that should be considered as "atomic" for purposes of parameter resolution. The list of types that are considered "atomic" in this sense is hard-coded in the function and not extensible.
Describe the solution you'd like
We'd like to be able to resolve to custom "value" types beyond just those included in _sympy_pass_through (builtin numeric types or sympy constants). One way to do this, for example, would be to define a protocol method that custom types could implement to mark themselves for pass-through. This protocol would be checked in _sympy_pass_through instead of just comparing against a fixed list of types and special symbolic values. It's possible there's another way to do this; just glancing at ParamResolver.value_of I find it quite hard to follow :-)
What is the urgency from your perspective for this issue? Is it blocking important work?
P2 - we should do it in the next couple of quarters
