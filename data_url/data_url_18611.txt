e.g.
There is no applicable method for the generic function
#<STANDARD-GENERIC-FUNCTION CL-QUIL::PRINT-INSTRUCTION-GENERIC (31)>
when called with arguments
(0 #<SB-IMPL::STRING-OUTPUT-STREAM {10036FA803}>).
Tangentially related: #313
I thought this might be a simple matter of updating %capture-param to make any number a constant, but that blows up later on the test from #313:
The debugger has this:
The stack looks like:
What should happen here instead?
Based on @stylewarning's last comment in #313, it seems like there was consensus that restricting gate parameters to real and just raising a clearer error for complex values was reasonable.
For other numeric types, I guess we could either coerce to double-float, or else raise a more helpful error. Not sure which is preferable. Coercing seems more convenient for REPL hacking, raising an error "safer" in the sense of avoiding rounding errors in the coercion (no clue if those are significant enough to matter). Pretty sure this only affects explicit calls to build-gate by the programmer, since the quil parser automatically parses float parameters as double-float.
I guess my vote would be to error for complex and maybe cerror for real. Something like:
There are some comments by ecp in #313 that mention Quilt maybe wanting complex-valued params. Worth getting @kilimanjaro's opinion on whether this change to %capture-param would cause problems for Quilt.
