In the style of QStabilizerHybrid, binary decision trees could likely benefit from gate fusion "shards." Similarly to stabilizer, single qubit gate fusion buffers could be maintained until measurement or until the gate fusion buffer is a phase or inversion gate.
QStabilizerHybrid proactively flushes buffers when Clifford group gates arise, but QBinaryDecisionTree doesn't include a generally efficient Clifford algebra. Hence, there might be relatively little in common between these two to abstract as a common single qubit fusion layer, besides the small gate fusion shard class, but the QBinaryDecisionTree gate fusion layer will at least be simpler.
QStabilizerHybrid specifically anticipates non-Clifford phase and inversion gates, and commutes them around control qubits; QBinaryDecisionTree treats Clifford and non-Clifford phase and inversion gates efficiently, and these will always be flushed before further gates with control bits are applied, so the same optimization opportunity isn't there. Therefore, this part of the QStabilizerHybrid gate fusion implementation can be skipped.
Closed by a16e0ce.
