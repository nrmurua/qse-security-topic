I was trying to test out the TTLs on the transport code so I created a separate file in the same subdirectory repository/examples which contains transport.py and transport_ttl_test.py.
transport.py is from the examples folder, transport_ttl_test.py looks like this,
In the gui, I get an error saying that there is a duplicate experiment to transport, I see two entries in the GUI called Transport and Transport1. Strangely Transport1 calls all the variables from transport like wait_at_stop, speed, repeats and bins even though I haven't set those arguments in ttl_test.
I get the same problem if I call it,
but if I call it,
with the space it's fine and I don't see the arguments from Transport. Changing that comment and scanning the repository head in the gui results in the GUI crashing as in issue #388.
This is using gateware and software I've installed from the main channel today, 04-15.
I would generally consider it a bad idea to use the docstring to identify experiments.
Yes, I wasn't aware that artiq took it as the experiment name until today. I thought it just from the name of the subclass.
Strangely Transport1 calls all the variables from transport like wait_at_stop, speed, repeats and bins even though I haven't set those arguments in ttl_test.
I'm not sure what you mean. Are you saying that the GUI kept the arguments from Transport1 after you had removed them and scanned the repository? Yes, it is supposed to do that: after you open an experiment for the first time, it memorizes the values from the user and does not reset them when the repository is rescanned. This has nothing to do with the resolution of experiment name conflicts. Click the "Recompute all arguments" button if you want to reset arguments to the repository.
If you don't like experiment names in docstrings, don't use them, then ARTIQ will take the class names instead.
The rest is also normal behavior AFAICT. There has been no release that fixes the crash yet.
I mean if I call it Transport1, it loads all the arguments from
transport.py not this experiment that is just a bunch of TTL experiments.
It seems to treat it as another instance of the transport.py experiment.
On Apr 16, 2016 07:28, "Sébastien Bourdeauducq" notifications@github.com
wrote:
Strangely Transport1 calls all the variables from transport like
wait_at_stop, speed, repeats and bins even though I haven't set those
arguments in ttl_test.
I'm not sure what you mean. Are you saying that the GUI kept the arguments
from Transport1 after you had removed them and scanned the repository?
Yes, it is supposed to do that: after you open an experiment for the first
time, it memorizes the values from the user and does not reset them when
the repository is rescanned. This has nothing to do with the resolution of
experiment name conflicts. Click the "Recompute all arguments" button if
you want to reset arguments to the repository.
If you don't like experiment names in docstrings, don't use them, then
ARTIQ will take the class names instead.
The rest is also normal behavior AFAICT. There has been no release that
fixes the crash yet.
—
You are receiving this because you authored the thread.
Reply to this email directly or view it on GitHub
#395 (comment)
The GUI takes all the arguments from anything that has been called Transport1 before, yes. And it does so until you click "Recompute all arguments".
Okay, that seems fine then.
On Apr 16, 2016 07:34, "Sébastien Bourdeauducq" notifications@github.com
wrote:
The GUI takes all the arguments from anything that has been called
Transport1 before, yes. And it does so until you click "Recompute all
arguments".
—
You are receiving this because you authored the thread.
Reply to this email directly or view it on GitHub
#395 (comment)
Obviously, the GUI has to show a copy of the arguments, so it can be edited by the user. So you need to tell it when you want to reset it to the defaults retrieved by running the experiment's build.
