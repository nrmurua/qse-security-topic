Custom multiqubit gates can overlap other gates.

I think this is because the width of a layer has to be an integer, and this is what happens when the layer is given a width of 2. The result for a width of 3 below is obviously still not desirable but at least there is not overlap.

The custom gate is drawn a suitable distance away from the previous gate
Look at how to modify where the gate is plotted, maybe by taking more into consideration in Anchor.plot_coord()
Would it be possible to adjust the way in which the layer_width is calculated? I looked into the _draw_ops() function, specifically the part that gets executed when drawing a custom gate with a name longer than 4 chars.
The way it currently is now, I see a few possible scenarios:
The problem lies in scenario 2, where box_width and layer_width are the same causing the overlap. The overlap does not happen for larger box_widths, but the spacing between the custom gate and the adjacent gates can get pretty large depending on the box_width.
My suggestion was to replace this block of code:
with this:
I've tested drawing the circuit with this code and the gates seem to be fairly close together without any gate overlap. There is some text overlap, but I currently see that without my changes as well. From what I can see, the code being replaced by this should not affect anything else, but if you see anything I might have missed, please let me know.
Here are some examples of the circuit.draw(output='mpl') with this change:
box_width == 1

box_width == 2

box_width == 3

box_width == 4

@Matt-Stypulkoski This looks like a good start! Are you able to fix the text overlap too? As this will mean that the boxes need to be slightly bigger to allow for it. Maybe this could be done by adjusting your factor 1.5
I've been working on trying to fix the text overlap. For the most part I know what I need to adjust and have been able to get it to stop the overlap for the most part. It just depends on how much space we are willing to have left over in the gate's rectangle.
The longer the text, the more space is generated on the sides. This sometimes causes some issues, as you can have a long string of text that doesn't take up much space, as well as a shorter string of text that takes up a larger amount of space (W's and numbers are larger). I'll attach some images of different length text. I can adjust things if it looks like there is too much space. I tried to focus on the smaller gates looking cleaner, as I felt a user would be more likely to have their gate name text be smaller rather than larger




These really display how much larger some letters/numbers compared to others
Numbers have a little less space than the "small" gate above, and can blend in with the numbers representing input qubits on the left side

Capital letters can be troublesome. This string of W's has the same amount of characters as the "small" gate above, but has overlap.

@maddy-tod I have been digging a little more into this issue, but cannot seem to improve on what I had in my previous post.  It seems to work well for smaller and slightly larger gate names, but for much larger ones the margin tends to be more than what might be needed. The string of W's example also has overlap, but could not replicate that with many other short string of capital letters.
Do you have any suggestions? Or do you think these flaws are not that impactful?
