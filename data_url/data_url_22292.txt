When I flash the nist_clock gateware to the kc705, I get a memory initialization failure. This does not happen when I flash the nist_qc1 gateware. Here are the details:
I built the clock gateware using:
$ python3.5 -m artiq.gateware.targets.kc705 -H clock
Then I flashed from a directory with the binaries using:
$ artiq_flash -d . -t kc705
I then looked at startup using flterm, and got:
This is somewhat intermittent -- occasionally it would pass memtest, and I couldn't figure out the pattern. But it would fail much more often than it would succeed. Also, not surprisingly, I am unable to communicate with the kc705 over ethernet.
I tried switching to the release-1 branch, re-built the gateware and got the same results.
When I repeated all of the above with the qc1 gateware, these problems go away -- the memory test is fine and the ethernet communication works.
Occasionally, Xilinx ISE miscompiles and this results in problems like that. Vivado is less prone to this sort of bug; add --toolchain vivado to your bitstream build command.
That worked, thanks!
Perhaps Vivado should be the default toolchain?
Not sure; ISE can compile for both Spartan-6 and 7-series while Vivado only supports 7-series. Maybe when S6 becomes more obsolete.
Occasionally, ISE miscompiles and this results in problems like that.
Vivado seems less prone to this sort of bug; add --toolchain vivado to
your bitstream build command.
​Please update documentation to read something like "If targeting Xilinx
devices other that Spartan6 add --toolchain vivado​ to bitstream build
command."
—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub
#525 (comment), or mute
the thread
https://github.com/notifications/unsubscribe-auth/ATl51tUyEpX0YKYwZGpcJs6YmIz44gHBks5qYCVPgaJpZM4JSOVc
.
That's Xilinx's problem, not ours.
And Vivado also miscompiles from time to time, just less frequently than ISE in my experience.
That's Xilinx's problem, not ours.
​I'm not suggesting we fix bugs in the Xilinx tool chain. Rather, tell
users how to configure the build system to maximize success. ​
Joe (is this another of your accounts?), sprinkling the documentation with ad-hoc and out-of-context notes is shortsighted because nobody does the necessary job of regularly verifying that the information is still the best advice and worse, eventually nobody will remember why it was added in the first place. There is often a much better technical solution than asking for something to be added to the documentation and hoping to be done with it.
We might choose a better default in this case.
"There is often a much better technical solution than asking for something
to be added to the documentation and hoping to be done with it."
A compiler flag is a technical solution to ensure that the correct compiler
version is used. ARTIQ already uses meta.yaml to ensure that build
dependencies are versioned correctly. Do you recommend a different
technical solution? -Joe
Joe Britton
Sensors and Electron Devices
Army Research Lab
2800 Powder Mill Rd
Adelphi, MD 20783
301-394-3130
joseph.w.britton5.civ@mail.mil
On Fri, Jul 22, 2016 at 5:36 PM, Robert Jördens notifications@github.com
wrote:
Joe (is this another of your accounts?), sprinkling the documentation with
ad-hoc and out-of-context notes is shortsighted because nobody does the
necessary job of regularly verifying that the information is still the best
advice and worse, eventually nobody will remember why it was added in the
first place. There is often a much better technical solution than asking
for something to be added to the documentation and hoping to be done with
it.
We might choose a better default in this case.
—
You are receiving this because you commented.
Reply to this email directly, view it on GitHub
#525 (comment), or mute
the thread
https://github.com/notifications/unsubscribe-auth/ATl51iVUepYQdC6uZOcWpEF3C3vHRIBgks5qYTfAgaJpZM4JSOVc
.
Everyone who has done medium-sized FPGA projects had to deal with Xilinx toolchain bugs like that. The ARTIQ documentation should not be about writing gateware.
If we change the default, we should do that in MiSoC and not ARTIQ.
If we change the default, we should do that in MiSoC and not ARTIQ.
That's a technical solution that would prevent recurrence of the specific
error that Jonathan encountered and satisfies Robert's desire to not modify
the documentation. And it reflects the evolution of Xilinx build tools to
Vivado. -Joe
