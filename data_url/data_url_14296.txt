Equality checks fail in EstimatorResult objects because values attr is np.array and == is not well behaved for those.
Outputs:
Equality should return True or False appropriately.
We should move to using tuple (i.e. immutable, core python types) instead or np.array.
It's not a good idea to check equality of floating-point values with ==.
There is a simple example in the official documentation https://docs.python.org/3.11/tutorial/floatingpoint.html.
I suggest np.allclose for the comparison of EstimatorResult.values.
https://numpy.org/doc/stable/reference/generated/numpy.allclose.html
So, it might be an option to set dataclass(eq=False) to clarify that == of EstimatorRestult is not recommended.
That is a good point @t-imamichi.
It might be even better to provide a custom __eq__ method in the class, overriding the default one for dataclass.
Nonetheless, I have to insist in moving away from numpy types though. The values field is not even a vector per-se, but a collection of floats, and issues like this will keep coming up.
I prefer introducing a utility function of the equality check based on np.allclose.
assert result_1 == result_2 easily fails due to the floating-point numbers even if values is tuple.
I think we need to allow end users configure atol and/or rtol for the equality check.
I don't have a strong opinion of the type of values itself. I'm fine to change it from ndarray to tuple.
My recommendation is eq=False in dataclass.
custom __eq__ method in the class
I prefer introducing a utility function of the equality check based on np.allclose.
Do these even compare metadata content?
