I've got this code which uses a rotating frame approximation. I got it to work when the Hamiltonian was time independent, but now I'm trying to implement a time dependent Hamiltonian and nothing happens to the graph. I understand how to do this, but I'm not sure how it differs when using a rotating frame approximation.
This is the same as #1247
QuTiP uses sparse matrices, so a matrix element smaller than a certain threshold (by default 1e-7) will be discarded. This can be changed in the settings.
Consider changing your unit to avoid very small values, for instance, by writing the formula with h=1` and in nanosecond time unit.
This is the same as #1247
QuTiP uses sparse matrices, so a matrix element smaller than a certain threshold (by default 1e-7) will be discarded. This can be changed in the settings.
Consider changing your unit to avoid very small values, for instance, by writing the formula with h=1` and in nanosecond time unit.
Sorry which formula are you referring to when you say h=1'?
After a second look, I realize that small numbers might not be the problem here. I was thinking that the coeffs you computed is too small so that it gets discarded. It turned out that your Delta is around 10^6, which is not small at all. Apologies for the rush.
Still, I would suggest changing the unit so that Delta is close to 1 to avoid this kind of pitfalls.
Then, there could be the following reasons:
I tried your suggestions but unfortunately nothing changes. I think my issue is with the way the rotating frame approximation is being implemented. Prior to this, my issue was that the graph couldn't be plotted over a large time scale because w0 is so high, so I added (w-w0) to H0. That fixed it, but I'm not sure how that affects the H1_coeff function. Is it as simple as including a (w-w0) term there as well, or do I need to adjust it some other way? As you can see, the pulse does exist, but for some reason nothing I change in the code causes the pulse to affect the graphs in any way.
Also, I realized that the heaviside function may not actually be appropriate for this situation. My goal is to create a pulse that spikes up and dies down, but the heaviside function is a step function so it spikes up and stays there. Do you know if qutip has any functions for such pulses?

About the simulation, the frequency of your H0 is at the level of 10^12 (with w0=0), while your control amplitude Delta is only 10^6! This is a huge difference. I feel like there might be an error in the unit somewhere. The number of time steps sampled needs to be hundreds of millions. Simulate this whole process is not practical. By setting w-w0=0 you discard the fast process and what remains is only Delta. With w-w0=0, I get reasonable oscillation with the following code
If you want to observe the effect of RWA, you could set w-w0 to be about 10 times Delta. That is, the frequency of your system's dynamics is about ten times larger than your driving. Discarding the system dynamics by RWA will lead to some visible error in the plot, but not significantly enough to destroy the driving dynamics.
(Edited) About pulse that spikes up and dies down, a spike at one single time point is not well defined. Mathematically the integral will be 0 (in measures that makes sense here at least). If you want a pulse that is turned on for a certain duration and then off, you can use two Heaviside. But much easier: you can just shift your time scale and define your tlist times to be that time duration from 0 to t_end, which matches the duration of your pulse.
Sorry if this is a silly question, but are you basically saying to replace w-w0 with 0? Wouldn't H0 be 0 then? Wouldn't that make the sine term multiplying the pulse irrelevant?
No, I'm using w-w0 just to show that the code works fine with my suggested changes in pulse(t0,t). It is just the numbers that are wrong.
First, please check the equation you are using again because (I guess) H0 should be (w-w0)/2 * sz and not the one you give in the code above. In your definition, w-w0 and epsilon is the same thing. The drive frequency (in sinus function) should match with H0.
Second, it not clear to me what you want to achieve with this. If the drive frequency matches the system frequency (both w-w0 here), H0 is exactly 0 in the rotating frame.
Thank you for your feedback. I was able to get the results I wanted. Just to provide some closure, I'm sending a photo

