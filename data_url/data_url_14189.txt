The documentation of QuantumCircuit.if_else has a note that uses if_test instead. It's very easy to misinterpret that block as an example of using if_else. This means that if the user confused the two methods and was actually looking for the documentation of if_test, it makes it even harder for them to find the correct documentation.
I mean, the lead in to that example literally says
This method does not have an associated context-manager form, because it is already handled by the if_test() method. You can use the else part of that with something such as:
which includes the link to if_test.  I'm not certain how much clearer we can make that.
That line is extremely easy to skip. I believe it's a common scenario for a user to search the documentation for a function and then move their eyes straight to the code block example. This particular case has tripped up not only me, but other users too. The possible sequence of events is:
I actually think it's preferable to just remove the entire code block and instead, only link to the documentation of if_test.
We strongly want to encourage users to use the context-manager form of if_test only.  I'm not sure I totally agree with the argument that a user might skip clearly highlighted parts of the documentation, be confused, and not go back and read it properly.  There really is only so much we can do if people aren't going to read what we write when it's only a single sentence that's in a big blue box.  That code block pretty clearly explains how we want people to add if/else constructs to circuits.
The part I'd agree with is that there could be an example of how to manually construct circuit bodies and add them, but I wouldn't agree with removing that note, and we'd definitely still say "don't do this, use the context-manager form of if_test".
Oh, I see. Okay, what do you think of deprecating QuantumCircuit.if_else and removing the method?
The documentation if_else shows the if_test and not if_else,  is necessary the method QuantumCircuit.if_else ?
