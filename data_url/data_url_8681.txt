Currently e_ops argument is a list of expectation values to be calculated, and the result is stored as a list of ndarray in result.expect (where result is the Odedata instance returned by the solver).
If expectation values for a lot of different operators are requested it becomes a bit tedious to keep track of which order the operators appear in e_ops, and which index show be used in result.expect.
A solution could be to make all evolution solvers support that e_ops is given as a dictionary, for example:
If e_ops is a dictionary, result.expect should also be a dictionary with the same keys, which would make it easy and less error prone to retrieve the results from result.expect.
This seems like a pretty good idea.
