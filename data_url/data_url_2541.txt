Sometimes running a circuit optimizer leaves Moments empty. What reason is there to keep them around? They add some overhead when iterating through the circuit and also make text diagrams take up more space. I'm not too familiar with the code of the optimizers and it could be the case that removing empty Moments doesn't fit nicely into the logic there.
There's already a DropEmptyMoments optimizer that does this, which is called as a follow-up by some of the other optimizers. The quick fix would be to do the same to whichever optimizers you're running that don't already do that. A more involved approach would be to define an optimizer protocol with a follow-up optimizer parameter that includes dropping empty moments by default. This would also allow cycling through optimizers until a fixed point or iteration bound is reached.
I can take a look at this, it would give me a good opportunity to learn about the optimizers.
After discussion, we decided not to do this. It's finnicky to add it to all the optimizers, and it creates redundant work. Thanks @balopat for trying to fix it and pointing out how awkward it was.
