And use this in zne.BatchedFactory.run (see inline TODO).
Right now Executor.run accepts keyword args and passes them to the executor. However, the same keyword args are passed each time.
Ability to call Executor.run with a sequence of (different) keyword args.
If len(kwargs_list) == len(circuits), I think you'd have to run all circuits serially (see question below). If len(kwargs_list) == 1, batching can be done (this is the current behavior).
Should a set of kwargs for each batch be allowed? Something like circuits = [circuit1, circuit2, circuit3, circuit4] with max_batch_size = 2 so that the first batch is batch1 = [circuit1, circuit2] and the second is batch2 = [circuit3, circuit4]. If kwargs_list [kwargs1, kwargs2], should this
Origin: #948 (comment)
Related: #484
I think I am in favor of just supporting a fixed set of options kwargs to be used for the execution of all the circuits.
If we need to use different kwargs we can make multiple independent calls to Executor.run().
There wouldn't be a loss of efficiency since, in a typical setting, circuits with different options cannot be batched together.
I agree with this. Closing and will update #948 appropriately.
