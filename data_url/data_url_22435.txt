Is this possible?  Does anyone have example code?
Can you give more details? What are you trying to do in the end?
I have several types of laser pulses, which each require different values of the same arguments.
Example class is below.  I'd like name to be an argument of the build method, so that I can instantiate several of these in one EnvExperiment, with different names for the different types of pulses.
In the top-level experiment:
In DopplerLaserPulse.build:
Arguments passed as keywords when instantiating experiments fully override the regular mechanism that goes through the GUI etc.
There may be some conflict with the argument names though (t, f_397pi, etc.)
Thanks.  That's just what I was looking for.
You're right about about the argument name conflict.  Here is my hack solution:
Is there a better way to avoid the argument name conflict?
Also, what are your thoughts on my use of self._HasEnvironment__parent to get the devices that I need to make the pulses?  Is there a better way to do this?
Is there a better way to avoid the argument name conflict?
Instead of setattr_argument, use get_argument directly, e.g.:
Better than that - that's not developed at the moment, but would be nice to have.
Also, what are your thoughts on my use of self._HasEnvironment__parent to get the devices that I need to make the pulses? Is there a better way to do this?
Requesting the same device twice is no problem (you get the previous driver on the second call), and setattr_device calls are automatically forwarded to the parent. So just use e.g. self.setattr_device("dds_397pi") in DopplerLaserPulse.build as if it were a standalone experiment. You should not use self._HasEnvironment__parent in your code.
Both of the above suggestions work.  Thanks.
