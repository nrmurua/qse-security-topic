Doing some further testing of type='super' Qobjs, I ran into a simple test case in which operator multiplication fails to be associative.
I'm not sure why this is happening yet, but I'll keep looking.
Poking around a little further, it seems as though E_psi * S has one less dimension than it should,
and that the shape doesn't match the data.
Notably, multiplication on the left by S seems to work, although the type='operator-vector' attribute is not preserved.
Thanks for reporting this bug. I'm working on refactoring the Qobj class in PR #95, and I have tried to fix this problem there. The PR is still work in progress though, and not quite ready for merging yet, but I think the problems you describe are fixed now. If you are interested you are very welcome to try  it with the cleanup-qobj branch which that PR is based on. Code reviewing and general comments on the changes would also be very welcome of course :-)
Glad to be of service! I've been using a MATLAB-based library for most of my open-systems work, and I'm really excited to be able to move more things over to Python, thanks to QuTiP.
Anyway, I can confirm that the test cases above now work as expected, and that E_psi correctly is identified as an operator-bra. As for code review, I'd be happy to help. It's a little late here, but I'll get to it soon.
Glad to hear that qutip is useful for you! Code reviewing would be a great help, and there is no hurry at all.
Yes, I think there is need for distinguishing column and row representations of operators so I have experimentally introduced types operator-ket and operator-bra. The terminology might not be perfect but for now I'm working with that.
I've marked out a few things that I noticed, though I'm still learning about the internals, so I'm not sure I caught anything of great importance.
As for terminology for type, I don't see anything wrong with operator-ket or operator-bra, nor am I sure that there's any particularly standard terminology. Especially given that your terminology choice is clearly marked in Qobj's docstring, I think it works quite well.
Thanks for great comments! I'll work on fixes for these issues in the coming days. I'll keep the current terminology unless some alternative comes along.
