When trying to use QuantumComputer.run many times in a loop for a 1Q program, I was noticing about a 50% increase in average job time (50ms vs 75ms) when compared to using the bare rpcq calls. It seems clear that the repeated serialization of the program binaries is the culprit here.
@ecp-rigetti I think a potential solution would be to have the record call decorator do nothing by default, and allow users to globally toggle this additional debugging functionality. I took a stab at this idea of a global debug toggle but was unsuccessful (it seems decorators are evaluated at load time for their associated functions/methods rather than at runtime).
This sounds do-able to me. Decorators do get evaluated at load time, but the wrappers they install get evaluated at run time, and those can check for a toggle set up by pyquil_protect.
