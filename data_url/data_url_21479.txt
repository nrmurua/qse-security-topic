Tuple size calculation for RPC is wrong and can lead to invalid memory access.
The error case would not finish, as it is accessing an incorrect memory address.
Affects artiq-zynq and riscv. Not tested for or1k but I expect the same issue.

The size calculation does not take into account of padding and alignment requirements. The case I use is specifically tailored to trigger this bug, as the alignment of TBool should be 1 byte and the alignment of TFloat should be 4/8 bytes, there should be padding in between.
As a note aside, verifying the two sides of the RPC protocol implementation seems like a problem perfectly suited to fuzzing.
Alignment should also be wrong, as the tuple should have the same alignment as its largest element, and we do not calculate alignment for tuples in the current RPC code.
See https://git.m-labs.hk/M-Labs/artiq-zynq/pulls/160 for a fix on zynq.
