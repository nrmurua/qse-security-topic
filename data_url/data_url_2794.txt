Sometimes there is a smart way to combine two operations of the same type. The one example I have of this is the Bogoliubov transformation. It can be specified by an n x n (little n) matrix u, and the unitary of the circuit is U(u). In OpenFermion-Cirq there's a function that calculates U. But the thing is if there are two of them, then U(u) U(v) = U(uv). See quantumlib/OpenFermion-Cirq#161 and Eq. (B4) of https://arxiv.org/pdf/1711.04789.pdf.
Not sure ComposableEffect is the right name.
I would call this MergeableEffect, since composable sounds too much like composite.
I think this is an important point.  Sometimes gates have a group structure and this allows for gates to be composed via this group operation.  In general I think we want this to be the responsibility of the gate type itself.  There is another great example of this which is Clifford gates and Pauli gates.
I think there is a good question whether Cirq should be responsible for this or whether creators of the gates should be.
I'm going to relabel this issue to try to capture this issue.
Are there specific gates we want to do this to? For example, PauliString implements this kind of group action.
This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 30 days
Issue closed due to inactivity.
