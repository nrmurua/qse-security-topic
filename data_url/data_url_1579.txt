Description of the issue
When simulating a CircuitOperation, simulators preemptively entangle all the qubits there and leave them entangled afterwards. So even if a circuit operation does not have any entangling operations inside it, the simulators will leave the whole thing in an entangled state.
How to fix the issue
I think this can be fixed by adding a CircuitOperation._act_on_ that runs the protocols.act_on for each op in the decomposition. Additionally protocols.act_on should accept an OperationTarget instead of just ActOnArgs, and ActOnArgsContainer should implement _act_on_fallback_ that calls apply_operation. Finally, _core_iterator should call protocols.act_on(op, sim_state) instead of sim_state.apply_op(op).
The resulting order of how the engine will attempt to operate will look like:
I am currently working on a fix for this. It's not a high-priority bug, but soundness here will make thinking about classical control easier, as we'll want entanglement smartness in our classical control ops as well.
