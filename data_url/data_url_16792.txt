If a qubit or cbit has two underscores in the name, matplotlib gives an exception. This is especially problematic as RepetitionCode outputs circuits with multiple underscores.
from qiskit import *
qc = QuantumCircuit(1,1)
qc.qregs[0].name = "a_b_c"
qc.draw(output='mpl')
Circuit is drawn.
The issue is caused by mpl interpreting this as a double subscript. Secondary underscores could be removed, I don't know if this is a good solution. Maybe this isn't fixable / is intended behaviour, in which case I think the repetition code function should change it's naming scheme.
I have just had a look at fixing this here:
https://github.com/JamesSeaward/qiskit-terra/tree/3807
with the following helper function in /qiskit/visualization/matplotlib.py just before the q and c registers are labelled.
In my tests this avoids an exception by replacing underscores in words with the escaped version \_ that isn't read as a subscript instruction iff there is more than one underscore in the word.
Not sure what the intended behaviour should be as there might be cases where this could cause confusion.
The other problem is that this presumably applies to all formatting characters, I just checked and it is the same for ^ when used like qc.qregs[0].name = "a^b^c".
What other characters could cause these exceptions?
I'm probably about as far from an expert on this kind of thing you could find on github, but I think that seems like a reasonable solution. I think underscores are the main offender since they're used so much in names, but avoiding other future problems would be a good idea.
From a very quick look at the matplotlib source, it does look like it's only _ and ^ we'd have to worry about.
I am new to the qiskit repo, does/should this sort of change require new tests?
I would also expect this exception to appear all over the place like in titles and block labels.
