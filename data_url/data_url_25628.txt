Lattices are a fundamental building block of the Covalent workflow. Currently, there are several integration tests for the lattice.py module in tests/covalent_tests/workflow/lattice_test.py. The purpose of this issue is to stimulate the addition of unit tests. Considering the size of this file, we expect several contributors to help add unit tests for the untested methods/functions. Even small additions here are impactful and greatly appreciated.
Within the unit test file, we would like to have at least one test method corresponding to each source method. In cases where source code has branches or other logic, all logical conditions in the source should ideally be covered during unit test execution.
Below, we list possible parts of the lattice module (Lattice object) for you to write a test.
Covalent uses pytest to run unit tests.  The pre-requisite requirements can be installed with pip install -r tests/requirements.txt and then run using pytest as follows:
Note that pull requests will generate a code coverage report on Codecov.  This report is then posted as a comment so that coverage may be inspected line-by-line.
I would like to look into this issue / write these unit tests. Kindly assign this issue to me. @wjcunningham7
I would like to look into this issue / write these unit tests. Kindly assign this issue to me. @wjcunningham7
Hi @mpvgithub, thanks for looking into this! Let us know if you have any questions.
@wjcunningham7
I tried some test cases with the lattice wrapper function. When I came across the DepsBash test case, I pointed some basic file write bash commands to the lattice decorator
But when I tried to get the result ( read text from path.txt )
I get this following error :- No such file or directory: /tmp/path.txt
is DepsBash expected behavior for lattice or can also be used for both lattice and electron?
Reference : https://covalent.readthedocs.io/en/stable/concepts/concepts.html?highlight=DepsBash#depsbash
CC: @scottwn
