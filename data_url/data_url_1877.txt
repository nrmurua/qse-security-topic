Currently, each and every cirq.Circuit has a device attribute which defaults to UnconstrainedDevice. I think the original idea was that validation of device constraints would happen during circuit construction.
xref #3244
I agree that the only good reason for this attribute is as a marker for what device was targeted when the circuit was compiled. Perhaps we should rename it to targetedDevice, default it to None and modify compilers to actually set it. That said, I could support outright deprecation, too.
I wonder why it was introduced in the first place - maybe @dabacon or @Strilanc can provide some color?
Discussed on Cirq Cynque: it sounds like this is ready to be deprecated, especially if it causes confusion to users when creating optimizers.
ping @dabacon please chime in!
The problems with keeping it are
It was originally designed to do validation, i.e. to enforce that your circuit could run on the given device.
I think I'm the one who advocated the mistaken pattern of using it during circuit construction.  There was a nice use case where you could use it to gracefully handle the "not parallel ops" in the old Bristlecone architecture.
I think it should be deprecated as well.  (I suspect there is a major problem in that we didn't separate construction from use in the Circuit object and so it might be natural to have specific constructor patterns for circuits, they shouldn't live in circuit.)
This has now been deprecated. Closing.
