In shadows/classical_postprocessing.py the expectation_estimation_shadow code includes a section that uses pauli_twirling_calibration. If the f_val returned however is None, then the value, 0.0, is added to the means List. However, the code will continue to execute and a second (invalid) value, np.sum(product) / len(idxes), is added to the means List. Only a single mean should be added to the means List object per split (each loop of the for loop.)
for idxes in group_idxes:
if len(
np.nonzero(np.all(u_lists_shadow[idxes] == target_obs, axis=1))[0]
):
product = (-1) ** np.sum(
b_lists_shadow[
np.nonzero(
np.all(u_lists_shadow[idxes] == target_obs, axis=1)
)
].astype(int),
axis=1,
)
The solution would be to add "continue" after "means.append(0.0) to have the code properly move on to the next split.
@natestemen please assign to me and I will get this included for Milestone 0.32.0
