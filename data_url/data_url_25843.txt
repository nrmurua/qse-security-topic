Need tests for each of the following
No response
Iceboxing this awaiting design changes per @kessler-frost and @AlejandroEsquivel
The changes that we made were around the endpoints of the Data Component / Service, namely we're assuming the Data component will "own" the results object db.
As a result of this, other components / services will need to query the Data Service to fetch ("download") the Result object,  POST ("upload") the Result object or PUT ("update") the Result object. Hence this is a restful approach to the Results resource.
This is essentially the same as the diagram just with the explicit mention of all CRUD operations on the result object (POST, PUT).
I'm not totally sure if the /download and /upload endpoints will be deprecated as a result or if they are meant to be general purpose to store other objects besides just the Result object, will need to defer that to @wjcunningham7  for confirmation.
The 307-os-skeleton branch on the covalent repo has the most up-to-date api specs (wip) under the refactor folder.
Summarizing the current state of the tests;
DONE
IN PROGRESS
TODO
Does StorageBackend need tests as an abstract class?
Does StorageBackend need tests as an abstract class?
I'm gonna say no
Some notes on the failing POST /workflow/results test:
Uploading the results pickle file fails at this line, which unpickles the file to extract the dispatch_id from the result object. Unfortunately, this requires the results service to satisfy the module dependencies of Result.lattice. In the test, the lattice depends on sklearn, which is not installed in the results service's environment.
Some ideas:
Resolution: use a different test result pickle file. @kessler-frost explained during the Apr 5 SW meeting that when the results service handles a pickle file in production, the lattice part won't be deserialized.
@cjao how is this going? do you want me to keep going on it or should I reassign it to you?
I can finish the remaining tests.
