As discussed in #365, I think notebooks are the best way to show how literature results can be reproduced with Mitiq. If there is a consensus on this, we need to decide where to host them. The only current notebook is in mitiq-internal which is UF exclusive.
I'm fine with notebooks, but if they could be visualized uniformly in the docs like Cirq that would be best for me. Was there any specific outcome from the discussion on converting ipnb <---> py/rst with some tool for better CI?  We could add a section for this in the docs.
A quick, easy thing to do (I hope) is create a examples/ directory in Mitiq and include the notebooks there. They can be tested with nbsphinx https://nbsphinx.readthedocs.io/en/0.8.0/
A quick, easy thing to do (I hope) is create a examples/ directory in Mitiq and include the notebooks there. They can be tested with nbsphinx https://nbsphinx.readthedocs.io/en/0.8.0/
Plan is to do this after meeting with @nathanshammah. Others please raise concerns about this approach if you have them.
@rmlarose I got this working, but it looks like nbsphinx requires pandoc. Only that pandoc is not distributed on pypi. I installed it locally on conda, but I am not sure how to edit the requirements.txt file accordingly. I have always edited conda instructions in .yml files.
It looks like there's a Docker image for pandoc: https://pandoc.org/installing.html  Does this help?
It looks that notebooks can be tested with nbval, also arXiv paper (https://arxiv.org/pdf/2001.04808.pdf).
The extension looks through every cell that contains code in an IPython notebook and then the py.test system compares the outputs stored in the notebook with the outputs of the cells when they are executed.
Cc @rmlarose @willzeng @andreamari @crazy4pi314. I would do the final edit to #461, and move the remaining issues to new tracking / testing notebooks issues.
Another option for thumbnails is to do as they seem to do in pennylaneai's qml and use sphinx-gallery, which would use .py files, asking beforehand contributors to convert all .ipynb to .py files beforehand (maybe @josh146 has some suggestion).
By the way @rmlarose, looking at qml, I found the existence of pypandoc, which could be the simplest solution to the pandoc CI issue.
@nathanshammah I'm a fan of Sphinx-Gallery, I find it integrates with Sphinx and git better than nbsphinx.
We originally used nbsphinx in the early days, and we ported to Sphinx-Gallery for two reasons:
Made the code review process a lot simpler, we always struggled with code review of Jupyter notebooks on GitHub.
ReST is used rather than markdown, which integrated better with the rest of our documentation.
There is also a script available which autoconverts Jupyter notebooks to Python files (with ReST comments).
There are some downsides though:
The (auto-generated) downloadable Jupyter notebook doesn't look as good as the rendered HTML site
If you don't want Sphinx to execute the tutorial to render it, you need to hardcode in the outputs
By the way @rmlarose, looking at qml, I found the existence of pypandoc, which could be the simplest solution to the pandoc CI issue.
I'm in favor of not adding a dependency for this. I think either sudo apt-install pandoc or this is the simplest solution.
For the former, I had some trouble pinning to a specific version, but I'm sure this could be resolved. The latter pins to a specific version. Neither introduces a new dependency.
