I cloned the repo with latest commit and followed the instruction in https://ddsim.readthedocs.io/en/latest/simulators/NoiseAwareSimulator.html to build the noise simulator.
The process failed to link the program at the final step.  I have searched for solutions, but couldn't find useful suggestions.
The machine runs Ubuntu 20.04.5 LTS (GNU/Linux 5.15.0-50-generic x86_64).
I have built and executed the program successfully on WSL Ubuntu 18.04 weeks ago, so I wonder anything has changed or what I should check on the machine.
[ 16%] Built target zx
[ 69%] Built target qfr
[ 95%] Built target ddsim
[ 97%] Linking CXX executable ddsim_noise_aware
/usr/bin/ld: ../src/libddsim.a: error adding symbols: file format not recognized
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make[3]: *** [apps/CMakeFiles/ddsim_noise_aware.dir/build.make:102: apps/ddsim_noise_aware] Error 1
make[2]: *** [CMakeFiles/Makefile2:1197: apps/CMakeFiles/ddsim_noise_aware.dir/all] Error 2
make[1]: *** [CMakeFiles/Makefile2:1204: apps/CMakeFiles/ddsim_noise_aware.dir/rule] Error 2
make: *** [Makefile:598: ddsim_noise_aware] Error 2
Hey 👋🏻
If I remember correctly, no major changes happened over the last couple of weeks.
The error message seems to indicate that this build was not from a fresh build folder. Could it be that the error is due to some caching?
Maybe try to remove your build folder and build from scratch.
If that does not help, maybe you could also post the full output of the CMake configure command.
I rm -rf the whole ddsim folder and tried to build again, but still got the same error.
The followings are the commands I executed and their corresponding outputs.
git clone --recurse-submodules https://github.com/cda-tum/ddsim
install_ddsim.txt
cmake -DCMAKE_BUILD_TYPE=Release -S . -B build
cmake_configure.txt
cmake --build build --config Release --target ddsim_noise_aware
build_noise_aware.txt
Hm. That truly seems strange. To me, it seems that your compiler setup might be messed up.
What caught my eye is that you c++ compiler defaults to clang. Typically, Ubuntu systems ship with gcc. Have you tried with gcc? (You can set that explicitly via passing "-DCMAKE_CXX_COMPILER=g++")
Another workaround that worked for us to circumvent compilation errors was to set "-DBINDINGS=ON" during configuration.
Hope that helps. Compiler errors can be really annoying.
I ran you're exact commands on my Ubuntu machine (which also selects g++ as compiler) and it worked.
Could you try with GCC?
I tried with gcc, but it seems that it couldn't find c++17.
I tried with and without the CXX_FLAGS and bindings, but the error persists.
cmake -DCMAKE_BUILD_TYPE=Release -S . -B build -DCMAKE_CXX_COMPILER=g++ -DCMAKE_CXX_FLAGS=-std=c++17 -DBINDINGS=ON
new_config_3.txt
cmake --build build --config Release --target ddsim_noise_aware
new_build_3.txt
By the way, my cmake version is 3.22.3
That gcc version is too old to compile the code (see, e.g., https://codeforces.com/blog/entry/94457)
GCC >= 9.3 seems to work.
If you use the latest LTS version of Ubuntu (22.04) you get gcc 11.x by running sudo apt install build-essential .
Even under 20.04 (the last LTS release) you get 9.3 via the above command.
After I reinstalled gcc on the machine, the build worked just fine.
Thank you for all the help 👍
I'll provide some details here, though it's not related to ddsim itself.
I couldn't just update gcc with the usual command sudo apt-get install gcc , since it would try to touch things related to nvidia-driver.
Detailed messages: install_gcc.txt
I followed the instructions in https://askubuntu.com/questions/1343953/resolve-kept-back-packages-on-ubuntu20-04.
apt-cache madison gcc-9-base returns
sudo apt-get install gcc-9-base=9.4.0-1ubuntu1~20.04.1 had the same behavior and failed to change gcc.
Then sudo apt-get install gcc-9-base=9.3.0-10ubuntu2 worked.
Next I ran the following commands to restore gcc and g++.
The build process worked fine with
Great to hear that you got it to work 👍🏻
And thanks for the additional details. That might help other people who experience the same issues.
