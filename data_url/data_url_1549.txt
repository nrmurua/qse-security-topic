Is your feature request related to a use case or problem? Please describe.
MergeSingleQubitGates and MergeInteractions are currently implemented using PointOptimizers. The first step of both these optimizers is to find a maximal connected component containing a particular single qubit / two qubit operation. Once the connected component is found, all operations in the connected component are merged and the resulting unitary is then decomposed into the target gateset using analytical techniques.
However, PointOptimizer is not the right abstraction for this task because it first finds the necessary operation and then merges the operations that lie to the right of it. This results in bugs like #3144 (for MergeSingleQubitGates) and the example given below (for MergeInteractions).
Describe the solution you'd like
Instead of using PointOptimizer for finding connected component to merge, we should use CircuitDag. An example diagram, borrowed from Qiskit's compiler's presentation (link) is given below:

This would have multiple sub tasks:
What is the urgency from your perspective for this issue? Is it blocking important work?
P2 - we should do it in the next couple of quarters
Part of the roadmap item: #3239
I would like to work on this please. Could you assign it to me?
I think I know how to go about this one, but I am confused as to why the current design exists?
So can I just go about completely removing the old structure and writing the whole thing including tests from scratch. Just get rid of the old api. Remove functions like append and stuff.
@AnimeshSinha1309  If two operations commute, then they can be reordered and we don't necessarily need to have an edge between them. This property is used in pauli_string_optimize. See the predicate pauli_string_reorder_pred.
Discussed in Cirq Sync:
Related #3816
Another issue with Merge* optimizers: The merge happens only if all operations in a moment are act on a subset of qubits of the original operation. This is unnecessary and leads to inefficiencies. For example:
Merge* optimizers have now been improved / fixed using the new merge_operations and  merge_moments primitives. See #4722 for details.
We should now deprecate and remove CircuitDag class, which is being tracked in #3816
