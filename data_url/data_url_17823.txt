The command
job.result().get_ran_qasm(circuit_name)
returns noting . It was working for qiskit ver '0.5.7'
The same full code as in ticket:#1030, except I changed how backend defined using  IBMQ.get_backend(backendName)
Here is the relevant portion of the code which was run against backed= ibmq_qasm_simulator
`print('job done, :')
jobRes=job.result()
jobData=jobRes.get_data()
pprint(jobData)
print('Get circuit as executed on backend=%s'%(backendName))
assert len( jobRes.get_names()) ==1
circuit_name = jobRes.get_names()[0]
ran_qc=jobRes.get_ran_qasm(circuit_name)
print('ran_qc name=',circuit_name)
print(ran_qc)
print('---end---')
`
The output is:
`job done, :
{'additionalData': {'seed': 77},
'counts': {'01010': 1024},
'creg_labels': 'c[5]',
'date': '2018-10-16T17:56:31.777Z',
'time': 0.00269534,
'versionSimulationRun': 'IBM_Q_Simulator:CPU-v0.1.b5cdd73\n'}
Get circuit as executed on backend=ibmq_qasm_simulator
ran_qc name= circuit1
---end---
`
The full circuit should be contained in ran_qc variable as text.
Hi @balewski, thanks. There are a few things going on here:
We are going to deprecate result.get_ran_qasm() soon, because otherwise the qasm has to be copied in every qobj and result sent over network. Instead, we are going to have a new endpoint on the API so for a given job, you can query both job.result() and job.qobj(), where the latter has information about the circuits that were executed.
On the other hand, this is a bug at the moment because the qasm info does exist in the header of all qobj and result at the moment. I will open a separate issue about this (#1114).
Since both of the items above are tracked separately, I'll close this issue.
Hi @ajavadia,
thanks for clarification - it makes sense. When can I start to use job.qobj() ?
At the moment it produces this error:
jobObj=job.qobj()
AttributeError: 'IBMQJobPreQobj' object has no attribute 'qobj'
Jan
