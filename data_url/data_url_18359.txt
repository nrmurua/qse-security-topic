The rewiring metadata returned by the compiler appears to be incorrect in some cases. The metadata are stored in the metadata.final_rewiring field of the response from the gRPC call:
response = self._compiler_client.compile_to_native_quil(request)
in function quil_to_native_quil in file pyquil.api.abstractcompiler.py.
The test codes and output below demonstrate three cases:
Case 1. The metadata are correct and the mapping between logical and physical qubit IDs is given by:
physical qubit ID = final_rewiring[local_qubit_ID]. This interpretation appears to agree with the documentation.
Code:
Output:
For example, logical qubit 22 (see the original program above) has been mapped to physical qubit 5:
final_rewiring[22] = 5
Case 2. The metadata returned by the compiler needs to be remapped as follows: physical qubit ID = final_rewiring[ID], where ID is the index of the logical qubit in an array containing all qubits, arranged in order of qubit ID.
Note: the mapping shown below can be used when: (i) all lattice qubits are used; or (ii) the device (and compiler ISA) are reduced to a subset of the full qubit lattice, and the the user program uses all qubits in the selected sub-lattice.
Code:
Output:
The remapped metadata appear to be correct.
Case 3. I cannot see how to interpret or remap the metadata.
Code:
Output:
It is not clear how the rewiring metadata can be interpreted.
