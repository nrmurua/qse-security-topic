The conversion needs to calculate each of the 2^n amplitudes. For example, the computation of the amplitude of 000 is given by Gamma_0^0 Lambda_0 Gamma_1^0 Lambda_1 Gamma_2^0, and the computation of the amplitude of 001 is given by Gamma_0^0 Lambda_0 Gamma_1^0 Lambda_1 Gamma_2^1. For this example, the current implementation calculates twice the prefix Gamma_0^0 Lambda_0 Gamma_1^0 Lambda_1. Namely, it starts from scratch for each amplitude. This should be replaced by a recursive algorithm that calculates each prefix of each length exactly once. Note however that the recursion may cause issues with parallelization and memory consumption.
Note that sample measure of MPS sometimes involves conversion to statevector.
In theory you are correct. To compute a specific amplitude, we  need to multiply all the matrices that 'belong' to its basis vector. However, in practice, we don't compute each amplitude separately. We always compute the full statevector (can be on a subset of the qubits). We compute all amplitudes at once by contracting all the tensors from left to right. So we don't start from scratch for each amplitude. I believe this issue can be closed.
