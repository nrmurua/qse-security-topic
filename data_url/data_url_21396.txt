Applet dashboard.datasets.CreateEditDialog misrepresents dataset types and is inconsistent with dashboard.datasets.DatasetsDock
Applet dashboard.datasets.CreateEditDialog misrepresents dataset types and is inconsistent with dashboard.datasets.DatasetsDock. Int is recast as float and this is reproducible. Float is occasionally recast as float64 wihtout being decoded, which makes them not human readable. I have not been able to find a way to always reproduce a float being recast as float64. I suspect this has to do with implementation of metadata in the dataset, but I have not been able to find a consistent workaround by catching different types.
It is important to note that the datatype in the underlying dataset_db.mdb is correct; if you create a new dataset as an int, it will be written as an int there.
Int should be represented by an int in both applets (and the underlying dataset)
Int is cast to float in dashboard.datasets.CreateEditDialog, but appears as an int in dashboard.datasets.DatasetsDock
Pushed a PR to resolve the reproducible bug. Please note that if a scaling factor other than 1 is used (either through units or explicitly) the dashboard will cast to float in our current implementation.
In terms of the float to float64 cast, it should only occur if the scale param is set to a float64 type AFAIK. Please let us know if you are able to reproduce this bug so we may address it. Will do more investigation into it myself, as well.
Thank you!
Float is occasionally recast as float64 wihtout being decoded, which makes them not human readable.
Do you mean that the GUI is unable to display datasets of the numpy.float64 type, but should?
Note that checking for all those float types is tricky:
https://stackoverflow.com/questions/28292542/how-to-check-if-a-number-is-a-np-float64-or-np-float32-or-np-float16
We may want to make sure we use the code in that SO entry.
Thanks all.
Re: float64. I'm out of the lab until Wednesday, but I'll try and get my colleague to post a screenshot. It seems to mainly be an issue for datasets that were converted from .pyon to the original .mdb format (sans metadata), and then to the new format. New datasets in an empty repo haven't shown this behavior yet.
Other than that, I haven't found a pattern, but I'll let you know. For example, 315e6 Hz was float, but 426e6 Hz and 90e6 Hz were float64. The CreateEditDialog would show the raw pyon decoded string of "npscalar(<many characters>)", but the DatasetsDock would decode it fine.  It's also worth noting that we have empty metadata for now until we update the rest of our codebase, so it's using the default_scale for everything.
Alright, finally found an entry that was consistently getting displayed as a float64 bytestring despite being (nominally) an int in the dataset.

Reentering the key's value as '315000000' and saving it causes the key to follow the main unexpected behavior above.

