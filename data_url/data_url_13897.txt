Is there a way to get the depth of a circuit? I could use len(self.gates) from Circuit, but is there some gate parallelism being performed somewhere in the code?
There is currently no direct way to get the circuit depth, but you could do something slightly hacky by
g = circ.to_graph(compress_rows=True); g.depth()
I haven't tested how accurate this exactly is, and it will probably have at least some off-by-one errors. It also doesn't do anything smart with commuting gates.
Thank you. I will use your suggestion as an approximation. I need it for the resource estimation.
After simplification the circuit seems to be a graph (I noticed there is a similar issue closed).
I used only depth() on the simplified circuit, and could extract a number. I do not know how correct this number is. I used it only to have some value in an object.
An iodide example of integrating pyZX with resource estimation (where depth is extracted from circuit) is here.
That depth number you get there after simplification is meaningless since the graph does not look like a circuit. It does not correspond to any kind of circuit depth.
How can I generate a circuit from that graph? For the res estimation, the wrong depth is currently not an issue, because the tool was configured to prefer t count instead of depth.
Since PyZX isn't very good at depth optimization, taking the depth of the original circuit probably gives a good estimate. Probably your best bet if you do want to optimize is doing something like this:
g = zx.simplify.teleport_reduce(circ) c = zx.Circuit.from_graph(g) c = zx.optimize.basic_optimization(c.to_basic_gates()) depth = c.to_graph().depth()
Thank you. Can you please help with the following? Please have a look at https://alpha.iodide.io/notebooks/2847/
I get TypeError: Unknown gate XPhase(9,phase=1/2)
when calling compute_circuit_depth(g) 
