Hi for the src whether getting the zip or the cloning i don't see an includes dir.
It makes it so that i have to mess with cmake which i shy away from because i am not familiar.
here is the command i run.
$ cmake -GNinja -S "c:/Program Files (x86)/liboqs/src" -B  "c:/Program Files (x86)/liboqs/build"
after i had mkdir build cd build
then
ninja
but it doenst find headers thanks
$  git clone -b main https://github.com/open-quantum-safe/liboqs.git
release 0.9.0
here is an example in  a strack trace of running ninja where it cant find the headers
[10/17] Building C object common/CMakeFiles/common.dir/sha3/xkcp_sha3.c.obj
FAILED: common/CMakeFiles/common.dir/sha3/xkcp_sha3.c.obj
C:\msys64\mingw64\bin\cc.exe   -Wbad-function-cast -MD -MT common/CMakeFiles/common.dir/sha3/xkcp_sha3.c.obj -MF common\CMakeFiles\common.dir\sha3\xkcp_sha3.c.obj.d -o common/CMakeFiles/common.dir/sha3/xkcp_sha3.c.obj -c "C:/Program Files (x86)/liboqs/src/common/sha3/xkcp_sha3.c"
C:/Program Files (x86)/liboqs/src/common/sha3/xkcp_sha3.c:14:10: fatal error: oqs/common.h: No such file or directory
14 | #include <oqs/common.h>
|          ^~~~~~~~~~~~~~
compilation terminated.
Hi all-
I think it is easier if you put a link to the install instructions to the other project for liboqs-cpp. I am really new at trying to install and they gave more steps and tips to try to complete it. Id advise sticking anything in c:\Program Files (x86) directories with that space in it and liboqs-cpp shows you how to not specify that directory if you so choose.  Thanks for all your cool work. jim
Hey Jim,
Sorry I'm only just responding now. So the problem ended up being that ninja was looking in the wrong place for the oqs headers? If so that sounds like a bug in our default cmake scripts behaviour on windows, and we should probably probably address the issue. :)
Hm... But our build instructions should work on windows. @baentsch @SWilson4 @praveksharma, do we have a windows machine that we can use to attempt to reproduce this? Seems odd that our build instructions don't work on windows.
Seems odd that our build instructions don't work on windows.
Particularly given we have Windows CI checking this. My first hunch looking at the original error message is that the path setting is not quite right:
cmake -GNinja -S "c:/Program Files (x86)/liboqs/src" -B "c:/Program Files (x86)/liboqs/build"
If this is Windows, why no backslashes? Why no use of cmake -GNinja .. within a build directory? Why referencing src? This is not where the main cmake files reside. Then: Is liboqs/src really at this path? It doesn't make any sense to copy the github repo to "Program Files (x86)". Then, is this really x64 or truly x86? The former works, the latter doesn't.
We have a Bug Report template that would provide much more information.
Seems odd that our build instructions don't work on windows.
Particularly given we have Windows CI checking this. My first hunch looking at the original error message is that the path setting is not quite right:
cmake -GNinja -S "c:/Program Files (x86)/liboqs/src" -B "c:/Program Files (x86)/liboqs/build"
If this is Windows, why no backslashes?
I'm going to go out on a limb and guess that @jmcnamara10001 was running Git Bash for Windows, which (if I recall correctly) uses UNIX-style syntax for file paths.
That said, I think that figuring out (a) what was going on 3 weeks ago and (b) if this is indeed an issue is a wild goose chase. Given that @jmcnamara10001 seems to have gotten things working as desired and our Windows CI is passing, I'm going to close this issue.
