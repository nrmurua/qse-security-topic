@alexcjohnson while trying to save a snapshot with my data, I realize that in GNUPlotFormat in write other data that is not connected to the measurement, just in the same folder can be deleted.
You do this:
basically you do
To me, this is really dangerous, and should not be there.
You're right - not quite sure what issue I had in mind by making this but it's dangerous.
Can you make a PR to axe it?
I think it is due to the assumption that GNUPlotFormat kind of assumes that all files belong to the dataset.
Thus when I add my snapshot.json, and prevent deleting it, the gnuplot-loader will complain. Not sure how to fix that part.
ideally the snapshot (and  snapshot.json) should be part of the dataset anyway... so that when you load an old dataset you automatically get its snapshot too (and then you can update it, like with extra notes or fixed settings, and resave...). But that can come later, there will be plenty of other reasons to add other files into the folder.
I made a distinction between the base class Formatter.read and the subclass GNUPlotFormat.read_one_file... thinking that the act of listing all the files, and preparing the DataSet if necessary, would be shared between most Formatter implementations and the implementation would just want to be handed files one by one to read in. Regular files have a name attribute, and we could just quit read_one_file if the name has the wrong extension:
Then we would just need to make sure that any alternate IO manager gives its file objects name attributes too - might not automatically be the case for cloud "files" but we could make it so. Alternatively we could pass the name to read_one_file explicitly.
