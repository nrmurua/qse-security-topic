I have been made aware of problems regarding the parsing of reference trajectories in MOTION%MD%REFTRAJ. I had a look hoping for a quick fix but the issue is actually quite complex.
In *.xyz files, the second line of each frame is reserved for a description. In principle anything could be written there, in any format. As we can see at line 1538 of motion/integrator.F (development version of CP2K), the program expects a well defined format, FMT="(T6,I8,T23,F12.3,T41,F20.10)", from which it extracts frame index, time and potential energy. If this returns an error, then the frame index is read from the md_env and time and energy are set to zero.
This may fail in different ways:
This can be problematic for users analyzing trajectories coming from different programs or homemade scripts.
I am not sure how this should be tackled. Issuing a warning in the manual could be a start.
I played around with tests/QS/regtest-sparsity/Ar-ref-1.inp to produce these errors.
I expect a lot more and similar problems in all our file parsers since they are usually not unittested and we have almost no negative tests (tests which are supposed to fail).
One way to tackle this systematically would be to factor out facility routines (like parsers) into well designed objects and start unittesting them (similar to my parallel_rng_types refactoring).
This probably requires untying the parsing functions from our internal objects since those are usually difficult to setup without the rest of the CP2K environment/facilities.
For parsers reading large data blocks it might be beneficial to use an "emitting parser" scheme (for example call a user-supplied callback after successfully parsing a single MD frame and/or coordinate lines) since Fortran is missing coroutines, to avoid allocating big chunks of memory just to copy them between structures.
