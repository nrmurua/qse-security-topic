Sometimes ./check/format-incremental --apply removes an empty line that wasn't in the original diff.  This causes a second call to ./check/format-incremental --apply to make more changes even though the first call succeeded (exit code 0).
Step to reproduce:
Anecdotally, I've run into similar issues typically with the formatting of the imports in the various __init__.pys
For anyone who wants to investigate this, probably you need to understand this perl gem
perl -ne 'chomp(); if (/@@ -\d+(,\d+)? \+(\d+)(,)?(\d+)? @@/) {$end=$2+($4 or 1)-1; print "--lines=$2-$end "}' \
in format-incremental.  A good test file is grover.py following @cduck s instructions.
Has this been solved? I haven't been able to reproduce the issue. Following @cduck s instructions:
Step to reproduce:
To test, I added the following functions just above the if __name___ statement (in this case in grover.py) and committed the changes:
Next, I deleted test_func_for_removal(): and left an extra trailing newline:
Then, I ran ./check/format-incremental --apply, and got the correctly formatted (and output 1 file reformatted):
If I run ./check/format-incremental --apply again, I get no additional changes as the output 1 file left unchanged.
Am I missing something? Thanks
This was reported before we switched to using black for formatting instead of the previous yapf (#3516). The older formatter had idempotency problems like this, but we haven't seen them with black. Will close this issue.
