It might be a good idea to check the files in data (basis sets, pseudo potentials, ...) for the correct format. Some of them might be erroneous (cf. https://groups.google.com/g/cp2k/c/uXl-ispjSYQ).
For common basis sets we could regenerate them using the CP2K converter from the https://www.basissetexchange.org/, or what did you have in mind?
Yes, I was surprised that our tests didn't catch #1341, because that basis set is used e.g. by QS/regtest-gapw-4/Ne-BP.inp.
@dev-zero Regeneration might be an idea. I had something in mind like checking the format of the file. For instance, each block we should check whether it starts with element + name of basis set/pseudo and the format of the data.
@oschuett The specific basis sets are not used by the regtests. I assume that the parser for the basis sets is looking for a line starting with the correct element symbol+basis set/pseudo name. So, we could even assume a bug in the parser.
... the other thing which would prevent this exact issue (at least for the missing set number) would be to make our parser more robust (factor them out such that they can be unittested).
@fstein93 there's a Python-based parser for our format in here: https://github.com/dev-zero/aiida-gaussian-datatypes/blob/develop/aiida_gaussian_datatypes/basisset/utils.py
I think, we should make our Fortran parser more restrictive, ie. it should always validate the entire file. Of course, adding unit tests is always a good idea.
