Description of the issue
We still support Python 3.7 and that prohibits us from using many convenient features in everyday implementation (see https://docs.python.org/3/whatsnew/3.8.html for a list). Python 3.7 is also soooo old now (3.8 was released in 2019!).
Should we drop support for Python 3.7? If not, till when do we continue to support Python 3.7?
Cirq version
1.2.0.dev
Related #6148 (comment)
Ah, #6148 (comment) is a much stronger argument than my inconvenience rant (coincidentally at the same time).
I'll change my default stance now -- Let's drop support for Python 3.7 unless anyone comes and complaints. I'll wait for a week and then mark this as accepted so we can send a PR and drop support :)
The question seems to have come up before - https://github.com/quantumlib/Cirq/blob/master/docs/start/install.md#python-version-support
Per https://numpy.org/neps/nep-0029-deprecation_policy.html we should be dropping 3.8 as well.
They also suggest
Minimum Python and NumPy version support should be adjusted upward on every major and minor release, but never on a patch release.
So I guess we can drop 3.7 (and maybe 3.8) in the next minor release.
extending support for older python versions if they are needed by Colab or internal Google systems
@pavoljuhas Do you know if colab / internal google systems need support for 3.7 or 3.8 ?
@pavoljuhas Do you know if colab / internal google systems need support for 3.7 or 3.8 ?
@maffoo and I have verified they use Python 3.10.
So I guess we can drop 3.7 (and maybe 3.8) in the next minor release.
Technically we don't do patch releases, our daily wheels are pre-releases of the next minor version 1.2.0.
I think that means we can drop the support for Python 3.7, 3.8 any time, it would just get officially out with the regular release for 1.2.0.
Looks like there are no blockers so I'll mark this issue as accepted and we can work on a PR to drop support for 3.7 and 3.8
I can take this.
Fixed by #6167.  For a complete update to Python >= 3.9 we also need #6175.
