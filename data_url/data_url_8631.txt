I built latest cython, which happens to be version 0.21a1.
Running any qutip code throws a warning:
QuTiP warning: Cython setup failed: invalid literal for int() with base 10: '21a1'
This is due to _version2int() not properly parsing the version info in init.py. commenting it out, works (and qutip code runs).
Is this on purpose (so say only certain, non-dev, versions are supported)? or should _version2int() be more robust?
.
Thanks for reporting this. The function should be more robust... We have had this problem several times before, especially with Cython which seem to come up with new version postfix every once in a while... There are a list of special cases in the version2int function. A new special case for version numbers ending with 'a...' should be added.
no need to thank me!... thank YOU for writing qutip ;)
I think distutils.version handles this issue out-of-the-box.
If distutils.version have this kind of parser (which seems reasonable) we should probably switch to using that. I will look into that. In the mean time I've added a special case handing for version numbers ending with "aX" to our version2int in PR #208
There's a StackOverflow response that explains the different distutils.version parsers. PEP 440 may also be of interest, as it gives a simple grammar for allowable Python version strings.
Thanks for the links. LooseVersion looks suitable for our purposes.
Hmm, this would add a run-time dependency on distutils... which probably in normal cases would not be an issue, but we would have to add it as a dependency in the deb package and perhaps also in macports etc.
