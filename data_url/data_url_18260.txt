Currently, when running on a backend which is down the job submits but times out; furthermore, if the backend does not exist at all, the program throws an uncaught error and stops. It would be nice to have the API relay information about nodes which are down, and to have the SDK use that to detect if a job is submitted to a down or non-existent backend. This could easily be addressed by adding a check into qiskit/_jobprocessor.py here:
Particularly given that, at the moment, credits do not regenerate after a timed out job, it would be great especially to know if a node is down. I found this error when trying to run on the new ibmqx5 backend, which I do not believe is returned by the API as available.
Here's the full error text
Traceback (most recent call last):
File "asdf.py", line 15, in 
result = Q_program.execute(["superposition"], backend='ibmqx5', shots=1024)
File "/Users/sabreitweiser/qiskit-sdk-py/qiskit/_quantumprogram.py", line 1144, in execute
result = self.run(qobj, wait=wait, timeout=timeout, silent=silent)
File "/Users/sabreitweiser/qiskit-sdk-py/qiskit/_quantumprogram.py", line 965, in run
self._run_internal([qobj], wait, timeout, silent)
File "/Users/sabreitweiser/qiskit-sdk-py/qiskit/_quantumprogram.py", line 1055, in _run_internal
jp.submit()
File "/Users/sabreitweiser/qiskit-sdk-py/qiskit/_jobprocessor.py", line 359, in submit
future.silent = silent
UnboundLocalError: local variable 'future' referenced before assignment
And the minimal program to reproduce (which is just a slightly modified version of the README example)
Thanks for the report @sabreitweiser!
Yeah, we have already noticed this issue.
I'll be working on it and fix it asap.
Closed via #85!
