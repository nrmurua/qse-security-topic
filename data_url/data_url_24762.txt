In reality, qubits are often controlled via multiple channels such that pulses must somehow be defined for more than a signel channel. Investigate options and prototypical solution.
We also need to think about how to integrate markers into the sequencing. The Tektronix AWG we use has two marker channels per analog output, so for this device it would make sense to include them with the analog waveform. I am going to include this in the "multichannel hack" for now.
As far as I remember, markers can be seen as pulses that only take boolean values (0 or 1), is that correct? I'd suggest that, during definition, markers are simply added as an additional channel definition to the templates and the mapping to AWG marker channels is performed during the final hardware mapping stage, which maps logical channels in the defintions to the actual channels present on the hardware setup for a given experiment (but which is not formally modelled and implemented yet).
I thought a bit about how to implement multi-channel pulses and here are my thoughts:
We want to model pulses that result in simultaneous output of waveforms on several channels. These waveforms are typically not unrelated but depend on each other to have meaningful semantics in manipulation qubit states.
In this approach, pulses for each channel are modelled independently of the other channels with separate PulseTemplate instances. Sequencing is invoked for separately for each. Only playback is synchronized.
Pro
Contra
The atomic pulse templates (TablePulseTemplate and FunctionPulseTemplate) and Waveform objects define waveforms for an arbitrary number of pulses. The higher order templates allow only combination of subtemplates with identical numbers of channels, i.e., each modelled pulse is only valid for a certain channel number. Sequencing produces a single instruction sequence valid for all channels.
Pro
Contra
An additional class (e.g., MultiChannelPulseTemplate) combines an arbitrary number of single-channel atomic pulse templates to a multi-channel atomic pulse template. As above, higher order templates allow only combination of subtemplates with identical numbers and sequencing produces a single instruction sequence.
Pro
Additional Remark
I think, a hybrid approach of II and III would serve us well, i.e., allowing to define multiple channels in the atomic templates but also introducing a MultiChannel class. This allows the user to choose the more appropriate way of modelling his multi-channel pulses. I will evaluate this by trying.
