It should be possible for a circuit to return its own qiskit code:

For example, often I want to use circuits returned by a generating function or the transpiler in a different notebook or context and must rewrite them by hand (I do not want to use qasm code anywhere).  I think this functionality would be extremely handy, mainly because I have had many instances where this would have saved me tons of time.
Hello! I needed the same thing, so I did it earlier. It is based on the implementation of the circuit.qasm() method, and does essentially the same thing, but with qiskit. I based the tests on the test for circuit.qasm(), so I hope no case was forgotten. Should I do a pull request?
That would be cool. The one thing that is tricky is that you can append unitaries to circuits, thus the unitary matrix would also need to be defined in the output text. That is not in qasm. But it seems like you might have a good starting point.
Ah yes, you're right, I forgot that. I will add this.
Why can't this just be pickle / unpickle?
An example:
On the other side:
It is a shame that the relevant PR for this was closed.  This is a useful feature for working with circuits that have been transpiled, but that I want to modify or use in different contexts.  For example, this is quite handy when writing tutorials where having pickle in the tutorials is a bit odd looking.  It is also nice for making slides, where one wants the actual code for a circuit from transpilation and not just the graph.
If this is not desired in Terra, perhaps I can move this to the IQX only qiskit tools that are being developed.
Paul this is a very hard feature to implement and maintain. For basic circuits you can just use the qasm string. But this gets very complicated if you want to emit the code that recreates a circuit that was originally created let's say by creating a custom subcircuit, raising it to some floating-point power, and added it to another circuit which was created by controlling a custom unitary operator with two control qubits. It requires a huge amount of time investment to do this where pickle is created for portability of Python objects.
Closing this for now.  However I still think this is handy to have.  Not really looking to recreate the sequence of events that lead to a quantum circuit, but just the final result.  I think this is doable, but will develop elsewhere.
