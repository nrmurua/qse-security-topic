We should add other optional arguments to run/startAll.sh such that settings can be set more easily.
Would the project benefit from replacing the bash scripts with a CLI written in Click? This would make it very easy to add flags/arguments/sub-commands, as well as enabling testing the interface using python.
I can work on this if it would be helpful (will open another issue).
Hi @cgmcintyr !
I'm currently using argparse for some of these things. What benefits would we get from Click? I've never used it.
Click has a nice page which explains the core points better than I could :) http://click.palletsprojects.com/en/7.x/why/
From my view it allows you to easily create nested commands, which is hugely useful as a CLI grows. Furthermore it has a number of commons patterns (i.e. for a path argument check if the path exists and print a sensible error).
However I guess my question before does not require Click. It was more a question of whether replacing the bash scripts with a python CLI would be useful?
@cgmcintyr
I think it would definitely be useful to improve how we configure the backend and choose settings. Currently this is not actually done by the bash script but past along to the python script configFiles.py, which in turn configures the nodes, ips, port numbers and other settings. But this could be made nicer and it would also be great to include/merge the functionality from the 'cabler` which Daniel added in #86
