Description
Usually if the embedding doesn't fit on the QPU, an error is returned.
To Reproduce
Running the following code returns an empty embedding with no error:
Expected behavior
I am not exactly sure how this should behave, but presumably the input ends up being too large to be embedded on the provided adjacency.
I was able to get an embedding back quick which I used m=6 and n=5 as in the following:
Environment:
Additional context
This came up as a problem a community user was facing.
This is the documented signature of minorminer.find_embedding; not a bug.  Moreover, I don't think minorminer is the right tool for this particular task; do you just need a coordinate transformation?
It's easier to work with Chimera graphs of different sizes by using coordinate-based node labels
otherwise,
My mistake; this is in fact a documentation bug; that behavior is not clearly documented.
