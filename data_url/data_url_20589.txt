Hi,
I am wondering how signing takes place in oqs?
These are 2 possible ways that I came up with but I am unsure whether it is the correct idea ?
Method A
Step 1) Data m -> SHA2(m) -> PQSign(SHA2(m)) = S1
Step 2) Data m -> SHAX(m) -> RSASign(SHAX(m)) = S2, where X = 256 / 384 / 512
Method B
Step 1) Data m -> SHA2(m) -> PQSign(SHA2(m)) = S1
Step 2) SHA2(m) -> SHAX(SHA2(m)) -> RSASign(SHAX(SHA2(m))) = S3, where X = 256 / 384 / 512
Do correct me if I am wrong.
Thank you in advance!
(Note, I'm not one of the OQS folks). Do you mean a signature in a certificate or as part of authentication in a TLS connection? This part of the wiki talks about how they integrated things in more detail, but it looks like if you sign things with just a straight PQ algorithm (not hybrid), there is no hashing done to the message before passing to the signature algorithm.
I've been playing around with Falcon signatures and it looks like there is some hashing done with SHA3 internally, so maybe that's why no hashing is done prior to calling the signing API.
@friedrichsenm's explanation is right for PQ-only signing.  "Hybrid" signing, where both PQ and non-PQ (e.g., RSA) are used, takes the form of
The signature algorithm itself is responsible for hashing long messages to short digests internally.
@friedrichsenm @dstebila Thanks for the help! Just a follow-up question: Is the way of hybrid signing you mentioned above the SAME for both generating hybrid signature in a certificate and hybrid signing messages for authentication?  I guess so but would like to get your confirmation.
Thanks in advance!
It is. Code is here.
