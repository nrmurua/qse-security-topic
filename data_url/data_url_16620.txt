Currently GaussianSquare in ParametricPulse set zero_ends disabled, but when I tried to fit the backend calibrated CR pulse with this analytic function I couldn't get good fit result without zero_ends. I guess it is required parameter.
Is it possible to add zero_ends in parametric pulse qobj?
If backend analytical function plans to apply zero_ends, there is discrepancy between actual pulse shape and one we get from pulse drawer (because drawer internally call get_sample_pulse method to visualize with zero_ends=False). In this case we just need to make zero_ends to True in the frontend.
I think this indicates potential problem of pulse validation across platform. Can backend provide a set of input parameter/output data array to test ParametricPulse defined in the frontend?
I agree with you (and always have). I think we need to convince @lcapelluto and @eggerdj that this is necessary. While the behavior will be consistent for any parametric pulse sent from the backend and returned to the backend as it interprets its own samples if at any point the pulse is converted to samples this will lead to discrepancies in performance. I believe we should design this system with our backends in mind and this is the behavior they take. This is related to #3742. I still think the zeroed gaussian pulse is the most natural default as in practice it would be rare to use an unzeroed pulse.
Fixed by #4640
